/*
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.

	The Initial Developer of the Original Code was adri1.

*/

#include <a_samp>
#include <a_http>
#include <crashdetect>
#include <streamer>
#include <sscanf2-linux>
#include <zcmd>

#pragma dynamic 15000
#define SERVER_VERSION	"1.15"
#define VERSION_DATE	"10/08/2017"

#define VERSION_BUILD	"04"
#define BUILD_DATE		"14/08/2017 13:01"

/* LIMITES JUGADOR */
#define MAX_NU_VEHICLES		2
#define MAX_NU_PROPERTIES	1
#define MAX_NU_WORKS		1
#define MAX_NU_TOYS			1
#define MAX_NU_VOBJECTS		1

#define MAX_SU_VEHICLES		6
#define MAX_SU_PROPERTIES	4
#define MAX_SU_WORKS		3
//#define MAX_SU_TOYS			MAX_PLAYER_ATTACHED_OBJECTS
#define MAX_SU_VOBJECTS		10

new // Valores por defecto (si no se carga de ECO.txt)
	Float:MULTIPLIER_PROPERITES =	1.00,
	Float:MULTIPLIER_VEHICLES 	=	1.00,
	Float:MULTIPLIER_TOYS		=	1.00,
	Float:MULTIPLIER_SKINS		=	1.00,
	Float:MULTIPLIER_WEAPONS	=	1.00,
	SD_VALUE					=	100000,
	SU_SD_PRICE					=	18,
	SU_WORK_EXTRA_PAY			=	300;

new DB:Database, Float:New_User_Pos[4] = {1751.402343, -1949.231689, 13.549071, 270.0},
	SERVER_TIME[2], SERVER_WEATHER = 11,
	Mechanic_Area,
	Lumberjack_Area,
	Farmer_Area,
	Harvest_Area,
	Jail_Areas[3];

#undef MAX_PLAYERS
#define MAX_PLAYERS	100


#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

/* Colores */
#define COLOR_FADE1 	0xE6E6E6E6
#define COLOR_FADE2 	0xC8C8C8C8
#define COLOR_FADE3 	0xAAAAAAAA
#define COLOR_FADE4 	0x8C8C8C8C
#define COLOR_FADE5 	0x6E6E6E6E
#define PLAYER_COLOR	0xCCCCCC00
#define SPECIAL_ACTION_PISSING 68

main()
{
	print("--- > Super RolePlay < --- ");
}

enum
{
	CHEAT_WEAPON,
	CHEAT_AMMO,
	CHEAT_CAR_MOD,
	CHEAT_VEHICLE_SPEED_HACK,
	CHEAT_POS,
	CHEAT_TEXT_SPAMMER,
	CHEAT_COMMAND_SPAMMER,
	CHEAT_DEATH_SPAMMER,
	CHEAT_STATE_SPAMMER,
	CHEAT_VEHICLE_ENTER_SPAMMER,
	CHEAT_JETPACK,
	CHEAT_PLAYER_SPEED,
	CHEAT_PLAYER_HEALTH,
	CHEAT_PLAYER_ARMOUR,
	CHEAT_VEHICLE_HEALTH,
	CHEAT_PLAYER_VEHICLE_WORK, //Entra a un vehiculo que no es de su trabajo
	CHEAT_PLAYER_VEHICLE_DOORS,
	CHEAT_VEHICLE_NOFUEL,
	CHEAT_SPECTATE,
	CHEAT_UNDETECTED_WEAPON,
	CHEAT_DRIVE_BY,
	CHEAT_UNOCCUPIED_VEHICLE,
	CHEAT_HIGH_POS,
	CHEAT_OCCUPIED_VEHICLE_ENTER
};

enum e_ac_Info
{
	ac_Name[24],
	bool:ac_Enabled,
	bool:ac_Kick, // 1 = kickea, 0 = avisa a admins
	ac_Detections, //enviar aviso cuando llege a este num en los seg de abajo
	ac_Interval
};
new ac_Info[][e_ac_Info] = /* Valores por defecto si no se carga de AC.txt */
{
	{"armas",					true, true,		1, 0},
	{"municion",				true, true,		1, 0},
	{"mod car",					true, true,		1, 0},
	{"vehicle speed",			true, true,		1, 0},
	{"pos",						true, false,	3, 10},
	{"text spammer",			true, true,		10, 5},
	{"command spammer",			true, true,		5, 5},
	{"death spammer",			true, false,	1, 0},
	{"state change spammer",	true, false,	1, 0},
	{"vehicle enter spammer",	true, false,	1, 0},
	{"jetpack",					true, true,		1, 0},
	{"player speed",			true, true,		1, 0},
	{"player health",			true, true,		1, 0},
	{"player armour",			true, true,		1, 0},
	{"vehicle health",			true, true,		1, 0},
	{"pwork != vwork",			true, true,		1, 0},
	{"enter closed vehicle",	true, false,	1, 0},
	{"vehicle nofuel cs",		true, false,	50, 10},
	{"player spectate",			true, false,	1, 0},
	{"pweapon != sweapon",		true, false,	1, 0},
	{"drive by",				true, false,	1, 0},
	{"unoccupied veh",			true, true,		1, 0},
	{"high pos",				true, true,		1, 0},
	{"enter occupied veh",		true, true,		1, 0}
};

enum e_PLAYER_AC_INFO
{
	p_ac_info_DETECTIONS,
	p_ac_info_LAST_DETECTION,
	p_ac_info_IMMUNITY //gettime + seconds
};
new PLAYER_AC_INFO[MAX_PLAYERS][sizeof(ac_Info)][e_PLAYER_AC_INFO];

enum
{
	TYPE_LEGAL,
	TYPE_ILLEGAL
};

enum
{
	DIALOG_REGISTER,
	DIALOG_REGISTER_EMAIL,
	DIALOG_LOGIN,
	DIALOG_INFO,
	DIALOG_DOUBT_CHANNEL_POST,
	DIALOG_FOOD_PIZZA,
	DIALOG_FOOD_CLUCKIN,
	DIALOG_FOOD_BURGER,
	DIALOG_PLAYER_TOYS,
	DIALOG_PLAYER_TOY_MENU,
	DIALOG_PLAYER_TOY_EDIT_NAME,
	DIALOG_PLAYER_TOY_CONFIRMDELETE,
	DIALOG_PLAYER_TOY_EDIT_BONE,
	DIALOG_PLAYER_TOY_SELECT_BONE,
	DIALOG_PLAYER_TOY_COLOR_1,
	DIALOG_PLAYER_TOY_COLOR_2,
	DIALOG_PLAYER_TOY_DELETE_ALL,
	DIALOG_BANK,
	DIALOG_BANK_WITHDRAW,
	DIALOG_BANK_DEPOSIT,
	DIALOG_BANK_TRANSFER,
	DIALOG_BANK_TRANSFER_SEND,
	DIALOG_BANK_TRANSACTIONS,
	DIALOG_CREATE_BANK_ACCOUNT,
	DIALOG_247_LIST,
	DIALOG_PLAYER_POCKET,
	DIALOG_PLAYER_POCKET_OPTIONS,
	DIALOG_PLAYER_POCKET_DELETE_ALL,
	DIALOG_PHONE,
	DIALOG_PHONE_BOOK,
	DIALOG_PHONE_BOOK_ADD_NUMBER,
	DIALOG_PHONE_BOOK_ADD_NAME,
	DIALOG_PHONE_BOOK_OPTIONS,
	DIALOG_PHONE_BOOK_CHANGE_NAME,
	DIALOG_PHONE_BOOK_CONFIRM_DELET,
	DIALOG_PHONE_BOOK_DELETE_ALL,
	DIALOG_PHONE_CALL_NUMBER,
	DIALOG_PHONE_SMS_NUMBER,
	DIALOG_PHONE_SMS_MESSAGE,
	DIALOG_PHONE_BOOK_SEND_MESSAGE,
	DIALOG_PHONE_SENT_MESSAGES,
	DIALOG_PHONE_RECEIVED_MESSAGES,
	DIALOG_CONFIRM_BUY_PROPERTY,
	DIALOG_PLAYER_GPS,
	DIALOG_PLAYER_GPS_PLAYER,
	DIALOG_PLAYER_GPS_PLAYER_ADD,
	DIALOG_PLAYER_GPS_PLAYER_OPTION,
	DIALOG_PLAYER_GPS_CHANGE_NAME,
	DIALOG_PLAYER_GPS_CONFIRM_DELET,
	DIALOG_PLAYER_GPS_SITES,
	DIALOG_PLAYER_GPS_WORKS,
	DIALOG_PLAYER_GPS_DELETE_ALL,
	DIALOG_PLAYER_GPS_SITE_0,
	DIALOG_PLAYER_GPS_SITE_1,
	DIALOG_PLAYER_GPS_SITE_2,
	DIALOG_PLAYER_GPS_SITE_3,
	DIALOG_PLAYER_GPS_SITE_4,
	DIALOG_PLAYER_GPS_SITE_5,
	DIALOG_PLAYER_GPS_SITE_6,
	DIALOG_PLAYER_GPS_SITE_7,
	DIALOG_PLAYER_GPS_SITE_8,
	DIALOG_PLAYER_GPS_PROPERTIES,
	DIALOG_PLAYER_GPS_VEHICLES,
	DIALOG_PROPERTY_OPTIONS,
	DIALOG_PROPERTY_NAME,
	DIALOG_PROPERTY_BANK_SELL,
	DIALOG_PLAYER_MP3,
	DIALOG_PLAYER_MP3_RESULTS,
	DIALOG_BUY_VEHICLE,
	DIALOG_NOTARY,
	DIALOG_NOTARY_SELECT_PROPERTY,
	DIALOG_PROPERTY_SELL_PRICE,
	DIALOG_PROPERTY_SELL_TO_PLAYER,
	DIALOG_SELL_CONFIRM_PROPERTY,
	DIALOG_NOTARY_SELECT_VEHICLE,
	DIALOG_VEHICLE_BANK_SELL,
	DIALOG_VEHICLE_SELL_PRICE,
	DIALOG_VEHICLE_SELL_TO_PLAYER,
	DIALOG_SELL_CONFIRM_VEHICLE,
	DIALOG_SELECT_TRUCK_TYPE,
	DIALOG_TUNING_MENU_PART,
	DIALOG_TUNING_MENU_COMPONENT,
	DIALOG_MECHANIC_MENU,
	DIALOG_MECHANIC_REPAIR_PRICE,
	DIALOG_MECHANIC_COLOR_PRICE,
	DIALOG_MECHANIC_TUNING_PRICE,
	DIALOG_MECHANIC_PAINTJOB_PRICE,
	DIALOG_MECHANIC_ACCEPT,
	DIALOG_MECHANIC_SELECT_COL_SLOT,
	DIALOG_MECHANIC_SELECT_COLOR,
	DIALOG_MECHANIC_REMOVE_COMPONEN,
	DIALOG_TUNING_PAINTJOB,
	DIALOG_SELECT_TRASH_ROUTE,
	DIALOG_SEED_LIST,
	DIALOG_SEED_BUY,
	DIALOG_PLANT_PLANTS,
	DIALOG_BLACK_MARKET,
	DIALOG_BLACK_MARKET_WEAPONS,
	DIALOG_BLACK_MARKET_SELECT_WEA,
	DIALOG_BLACK_MARKET_AMMO,
	DIALOG_PLAYER_WEAPONS,
	DIALOG_PLAYER_WEAPONS_DELETE_A,
	DIALOG_PLAYER_WEAPONS_DELETE,
	DIALOG_ANIMS,
	DIALOG_TRICKS_FOOD,
	DIALOG_TRICKS_MEDICINE,
	DIALOG_TRICKS_CANNABIS,
	DIALOG_TRICKS_CRACK,
	DIALOG_TRICKS_WEAPON,
	DIALOG_VEHICLE_BOOT,
	DIALOG_VEHICLE_BOOT_DELETE_ALL,
	DIALOG_VEHICLE_BOOT_OPTIONS,
	DIALOG_VEHICLE_BOOT_DELETE,
	DIALOG_SELECT_POLICE_SKIN,
	DIALOG_POLICE_RADIOS,
	DIALOG_POLICE_LIST,
	DIALOG_POLICE_MODIFY,
	DIALOG_POLICE_SHOP,
	DIALOG_POLICE_SELECT_WEAPON,
	DIALOG_POLICE_AMMO,
	DIALOG_POLICE_ARMOUR,
	DIALOG_POLICE_WEAPONS,
	DIALOG_HELP,
	DIALOG_HELP_GENERAL,
	DIALOG_HELP_INFO,
	DIALOG_HELP_CHARACTER,
	DIALOG_HELP_PROPERTIES,
	DIALOG_HELP_REPORT,
	DIALOG_HELP_VEHICLES,
	DIALOG_HELP_WORKS,
	DIALOG_HELP_CREWS,
	DIALOG_HELP_SU,
	DIALOG_ADMIN_LIST,
	DIALOG_ADMIN_MODIFY,
	DIALOG_CHANGE_PASSWORD,
	DIALOG_CHANGE_PASSWORD_PASS,
	DIALOG_ANTI_CHEAT,
	DIALOG_ANTI_CHEAT_MODIFY,
	DIALOG_ANTI_CHEAT_MODIFY_DETECT,
	DIALOG_SHOP_ARTICLE_MODIFY,
	DIALOG_SHOP_ARTICLE_REMOVE,
	DIALOG_SHOP_ADD,
	DIALOG_SHOP_ADD_TEXT,
	DIALOG_SHOP_ADD_PRICE,
	DIALOG_CRANE_SELECT_VEHICLE,
	DIALOG_CREATE_CREW,
	DIALOG_CREATE_CREW_NAME,
	DIALOG_CREATE_CREW_COLOR,
	DIALOG_CREATE_CREW_CONFIRM,
	DIALOG_CREW_MENU,
	DIALOG_CREW_MEMBER_LIST,
	DIALOG_CREW_CHANGE_NAME,
	DIALOG_CREW_MEMBER_LIST_DELETE,
	DIALOG_CREW_CAST_MEMBER_CONFIRM,
	DIALOG_CREW_INVITE_RANK,
	DIALOG_CREW_INVITE_ACCEPT,
	DIALOG_CREW_RANKS,
	DIALOG_CREW_RANK_MODIFY,
	DIALOG_CREW_RANK_MODIFY_NAME,
	DIALOG_CREW_RANK_MODIFY_PERMISS,
	DIALOG_CREW_RANK_DELETE,
	DIALOG_CREW_RANK_DELETE_CONFIRM,
	DIALOG_CREW_RANK_CREATE,
	DIALOG_CREW_MODIFY_COLOR,
	DIALOG_CREW_DELETE,
	DIALOG_CREW_LEAVE,
	DIALOG_CREW_MODIFY_MEMBERS,
	DIALOG_CREW_MODIFY_MEMBER,
	DIALOG_CREW_PROPERTY_CONFIRM,
	DIALOG_CREW_LEAVE_TERRITORY,
	DIALOG_CREW_LEAVE_PROPERTY,
	DIALOG_POLICE_PENALTY,
	DIALOG_SERVER_ECO,
	DIALOG_SERVER_ECO_MODIFY,
	DIALOG_SU_BUY,
	DIALOG_SU,
	DIALOG_SD,
	DIALOG_VOBJECT_MENU,
	DIALOG_VOBJECT_OBJECTS,
	DIALOG_VOBJECT_OBJECT,
	DIALOG_VOBJECT_OBJECT_CNAME,
	DIALOG_VOBJECT_OBJECT_COLORS,
	DIALOG_VOBJECT_OBJECT_COLOR,
	DIALOG_VOBJECT_OBJECT_COLOR_HEX,
	DIALOG_VOBJECT_OBJECT_CDELETE,
	DIALOG_VOBJECT_DELETE_ALL,
	DIALOG_VOBJECT_TEXT_MENU,
	DIALOG_VOBJECT_TEXT_TEXT,
	DIALOG_VOBJECT_TEXT_FONT,
	DIALOG_VOBJECT_TEXT_FONT_SIZE,
	DIALOG_VOBJECT_TEXT_FONT_COLOR,
	DIALOG_VOBJECT_COUNTRY
};

enum
{
	ROLEPLAY_STATE_NORMAL,
	ROLEPLAY_STATE_HOSPITAL,
	ROLEPLAY_STATE_INTERIOR,
	ROLEPLAY_STATE_OWN_PROPERTY,
	ROLEPLAY_STATE_GUEST_PROPERTY,
	ROLEPLAY_STATE_ARRESTED,
	ROLEPLAY_STATE_JAIL,
	ROLEPLAY_STATE_CRACK
};

enum
{
	GAME_STATE_NONE,
	GAME_STATE_CONNECTED,
	GAME_STATE_OCCUPIED,
	GAME_STATE_DEAD, // Pantalla de la muerte solo (wasted)
	GAME_STATE_NORMAL
};

#define MAX_BAD_LOGIN_ATTEMPS 3
#define MAX_TIMERS_PER_PLAYER 20
#define TIME_FOR_REP 1500000 // 25 minutos para obtener reputacion
#define REP_FOR_PAYDAY 3

/* Timers
0 = Kick
1 = Gangzone daño Rojo
2 = Añadir reputacion
3 = un/freeze player
4 = recuperar vida
5 = restart hambre sed
6 = esperando llamada
7 = esperar arrancar veh
8 = speedo
9 = cargando camion
10 = reciclando
11 = talando
12 = plantando
13 = gps mapa
14 = esposar
15 = jail time
16 = health down
*/


/* TUNING SYSTEM */
#define TOTAL_TUNING_PARTS	14
#define MAX_TUNING_PARTS_COMPONENTS	20
enum PLAYER_TUNING_MENU_Info
{
	tuning_menu_NAME[24], // o part
	tuning_menu_ID,
	tuning_menu_PIECES
};
new PLAYER_TUNING_MENU[MAX_PLAYERS][MAX_TUNING_PARTS_COMPONENTS][PLAYER_TUNING_MENU_Info];

/* GLOBAL_VEHICLES */
#define MAX_VEHICLE_COMPONENTS	14
#define MIN_VEHICLE_HEALTH		350.0
forward Float:GetDistanceBetweenPoints3D(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2);
forward Float:GetVehicleSpeed(vehicleid);
forward Float:frandom(Float:max, Float:min, dp);

new VEHICLE_COLORS[256] = //SA-MP Wiki
{
	// The existing colours from San Andreas
	0x000000FF, 0xF5F5F5FF, 0x2A77A1FF, 0x840410FF, 0x263739FF, 0x86446EFF, 0xD78E10FF, 0x4C75B7FF, 0xBDBEC6FF, 0x5E7072FF,
	0x46597AFF, 0x656A79FF, 0x5D7E8DFF, 0x58595AFF, 0xD6DAD6FF, 0x9CA1A3FF, 0x335F3FFF, 0x730E1AFF, 0x7B0A2AFF, 0x9F9D94FF,
	0x3B4E78FF, 0x732E3EFF, 0x691E3BFF, 0x96918CFF, 0x515459FF, 0x3F3E45FF, 0xA5A9A7FF, 0x635C5AFF, 0x3D4A68FF, 0x979592FF,
	0x421F21FF, 0x5F272BFF, 0x8494ABFF, 0x767B7CFF, 0x646464FF, 0x5A5752FF, 0x252527FF, 0x2D3A35FF, 0x93A396FF, 0x6D7A88FF,
	0x221918FF, 0x6F675FFF, 0x7C1C2AFF, 0x5F0A15FF, 0x193826FF, 0x5D1B20FF, 0x9D9872FF, 0x7A7560FF, 0x989586FF, 0xADB0B0FF,
	0x848988FF, 0x304F45FF, 0x4D6268FF, 0x162248FF, 0x272F4BFF, 0x7D6256FF, 0x9EA4ABFF, 0x9C8D71FF, 0x6D1822FF, 0x4E6881FF,
	0x9C9C98FF, 0x917347FF, 0x661C26FF, 0x949D9FFF, 0xA4A7A5FF, 0x8E8C46FF, 0x341A1EFF, 0x6A7A8CFF, 0xAAAD8EFF, 0xAB988FFF,
	0x851F2EFF, 0x6F8297FF, 0x585853FF, 0x9AA790FF, 0x601A23FF, 0x20202CFF, 0xA4A096FF, 0xAA9D84FF, 0x78222BFF, 0x0E316DFF,
	0x722A3FFF, 0x7B715EFF, 0x741D28FF, 0x1E2E32FF, 0x4D322FFF, 0x7C1B44FF, 0x2E5B20FF, 0x395A83FF, 0x6D2837FF, 0xA7A28FFF,
	0xAFB1B1FF, 0x364155FF, 0x6D6C6EFF, 0x0F6A89FF, 0x204B6BFF, 0x2B3E57FF, 0x9B9F9DFF, 0x6C8495FF, 0x4D8495FF, 0xAE9B7FFF,
	0x406C8FFF, 0x1F253BFF, 0xAB9276FF, 0x134573FF, 0x96816CFF, 0x64686AFF, 0x105082FF, 0xA19983FF, 0x385694FF, 0x525661FF,
	0x7F6956FF, 0x8C929AFF, 0x596E87FF, 0x473532FF, 0x44624FFF, 0x730A27FF, 0x223457FF, 0x640D1BFF, 0xA3ADC6FF, 0x695853FF,
	0x9B8B80FF, 0x620B1CFF, 0x5B5D5EFF, 0x624428FF, 0x731827FF, 0x1B376DFF, 0xEC6AAEFF, 0x000000FF,
	// SA-MP extended colours (0.3x)
	0x177517FF, 0x210606FF, 0x125478FF, 0x452A0DFF, 0x571E1EFF, 0x010701FF, 0x25225AFF, 0x2C89AAFF, 0x8A4DBDFF, 0x35963AFF,
	0xB7B7B7FF, 0x464C8DFF, 0x84888CFF, 0x817867FF, 0x817A26FF, 0x6A506FFF, 0x583E6FFF, 0x8CB972FF, 0x824F78FF, 0x6D276AFF,
	0x1E1D13FF, 0x1E1306FF, 0x1F2518FF, 0x2C4531FF, 0x1E4C99FF, 0x2E5F43FF, 0x1E9948FF, 0x1E9999FF, 0x999976FF, 0x7C8499FF,
	0x992E1EFF, 0x2C1E08FF, 0x142407FF, 0x993E4DFF, 0x1E4C99FF, 0x198181FF, 0x1A292AFF, 0x16616FFF, 0x1B6687FF, 0x6C3F99FF,
	0x481A0EFF, 0x7A7399FF, 0x746D99FF, 0x53387EFF, 0x222407FF, 0x3E190CFF, 0x46210EFF, 0x991E1EFF, 0x8D4C8DFF, 0x805B80FF,
	0x7B3E7EFF, 0x3C1737FF, 0x733517FF, 0x781818FF, 0x83341AFF, 0x8E2F1CFF, 0x7E3E53FF, 0x7C6D7CFF, 0x020C02FF, 0x072407FF,
	0x163012FF, 0x16301BFF, 0x642B4FFF, 0x368452FF, 0x999590FF, 0x818D96FF, 0x99991EFF, 0x7F994CFF, 0x839292FF, 0x788222FF,
	0x2B3C99FF, 0x3A3A0BFF, 0x8A794EFF, 0x0E1F49FF, 0x15371CFF, 0x15273AFF, 0x375775FF, 0x060820FF, 0x071326FF, 0x20394BFF,
	0x2C5089FF, 0x15426CFF, 0x103250FF, 0x241663FF, 0x692015FF, 0x8C8D94FF, 0x516013FF, 0x090F02FF, 0x8C573AFF, 0x52888EFF,
	0x995C52FF, 0x99581EFF, 0x993A63FF, 0x998F4EFF, 0x99311EFF, 0x0D1842FF, 0x521E1EFF, 0x42420DFF, 0x4C991EFF, 0x082A1DFF,
	0x96821DFF, 0x197F19FF, 0x3B141FFF, 0x745217FF, 0x893F8DFF, 0x7E1A6CFF, 0x0B370BFF, 0x27450DFF, 0x071F24FF, 0x784573FF,
	0x8A653AFF, 0x732617FF, 0x319490FF, 0x56941DFF, 0x59163DFF, 0x1B8A2FFF, 0x38160BFF, 0x041804FF, 0x355D8EFF, 0x2E3F5BFF,
	0x561A28FF, 0x4E0E27FF, 0x706C67FF, 0x3B3E42FF, 0x2E2D33FF, 0x7B7E7DFF, 0x4A4442FF, 0x28344EFF
};

new Float:HARVEST_CHECKPOINTS[][] =
{
	{-328.332305, -1546.391357, 16.15409},
	{-250.803207, -1553.425415, 4.534295},
	{-224.260910, -1485.022827, 8.041003},
	{-308.437896, -1476.776977, 11.40934},
	{-283.487731, -1553.320068, 7.445997},
	{-258.756164, -1426.692993, 9.493670},
	{-178.887649, -1406.682250, 3.996473},
	{-177.676818, -1322.970581, 6.885325},
	{-305.899322, -1318.196533, 10.12089},
	{-325.471008, -1412.821777, 15.12606},
	{-191.962982, -1384.020019, 6.075732},
	{-214.637603, -1321.270507, 10.79362},
	{-263.975738, -1375.987426, 11.41642},
	{-308.705474, -1424.302001, 15.52844},
	{-287.710388, -1497.158325, 8.503927},
	{-387.908111, -1532.118774, 23.47214}
};

new Float:FUMIGATOR_CHECKPOINTS[][] =
{
	{-1308.387573, -2168.723632, 22.671110},
	{-1307.323974, -2024.588623, 43.277305},
	{-1377.214965, -1801.599121, 65.306808},
	{-1567.830932, -1792.607299, 75.021827},
	{-1827.273315, -1838.340209, 91.367256},
	{-2028.804809, -1925.853393, 96.918655},
	{-2059.277832, -2109.719482, 68.355422},
	{-2022.684570, -2289.475097, 61.323108},
	{-1947.646972, -2468.936279, 48.919281},
	{-1651.936279, -2738.057373, 72.155830},
	{-1482.577392, -2778.567871, 71.213356},
	{-1339.633544, -2822.785400, 68.011917},
	{-1154.241455, -2703.070068, 42.500530},
	{-1259.402343, -2415.022216, 30.288431},
	{-1296.651489, -2098.415283, 24.366895}
};

enum
{
	VEHICLE_TYPE_NONE,
	VEHICLE_TYPE_TEST,
	VEHICLE_TYPE_SELL,
	VEHICLE_TYPE_PERSONAL,
	VEHICLE_TYPE_WORK
};

enum
{
	VEHICLE_STATE_NORMAL,
	VEHICLE_STATE_DAMAGED
};

enum Global_Vehicles_Info
{
	bool:gb_vehicle_VALID,
	bool:gb_vehicle_OCCUPIED,
	gb_vehicle_TYPE,
	gb_vehicle_MODELID,
	gb_vehicle_NUMBER_PLATE[32],
	Float:gb_vehicle_POS[3],
	Float:gb_vehicle_SPAWN_X,
	Float:gb_vehicle_SPAWN_Y,
	Float:gb_vehicle_SPAWN_Z,
	Float:gb_vehicle_SPAWN_ANGLE,
	Float:gb_vehicle_HEALTH,
	gb_vehicle_DAMAGE_PANELS,
	gb_vehicle_DAMAGE_DOORS,
	gb_vehicle_DAMAGE_LIGHTS,
	gb_vehicle_DAMAGE_TIRES,
	gb_vehicle_COLOR_1,
	gb_vehicle_COLOR_2,
	gb_vehicle_PAINTJOB,
	Float:gb_vehicle_GAS,
	Float:gb_vehicle_MAX_GAS,
	gb_vehicle_COMPONENTS[MAX_VEHICLE_COMPONENTS],
	gb_vehicle_STATE,
	gb_vehicle_INTERIOR,
	gb_vehicle_WORLD,
	gb_vehicle_PARAMS_ENGINE,
	gb_vehicle_PARAMS_LIGHTS,
	gb_vehicle_PARAMS_ALARM,
	gb_vehicle_PARAMS_DOORS,
	gb_vehicle_PARAMS_BONNET,
	gb_vehicle_PARAMS_BOOT,
	gb_vehicle_PARAMS_OBJECTIVE,
	gb_vehicle_DRIVER,
	gb_vehicle_LAST_DRIVER,
	gb_vehicle_LAST_CLOSED_TIME,
	gb_vehicle_LAST_REPAIR_TIME,
	gb_vehicle_OBJECT,
	
	bool:gb_vehicle_SPAWNED,
	gb_vehicle_TP_IMMUNITY
};
new GLOBAL_VEHICLES[MAX_VEHICLES][Global_Vehicles_Info];

enum Player_Vehicles_Info
{
	bool:player_vehicle_VALID,
	player_vehicle_ID,
	player_vehicle_OWNER_ID,
	bool:player_vehicle_ACCESSIBLE
};
new PLAYER_VEHICLES[MAX_VEHICLES][Player_Vehicles_Info];

#define MAX_VEHICLE_OBJECTS_INDEXS	5
enum
{
	VOBJECT_TYPE_OBJECT,
	VOBJECT_TYPE_TEXT,
	VOBJECT_TYPE_COUNTRY_FLAG,
	VOBJECT_TYPE_COUNTRY_PANEL
};
enum e_VEHICLE_OBJECTS
{
	bool:vobject_VALID,
	vobject_TYPE,
	vobject_NAME[32],
	vobject_ID,
	vobject_OBJECT_ID,
	vobject_MODELID,
	Float:vobject_OFFSET[3],
	Float:vobject_ROT[3],
	vobject_ATTACHED,
	vobject_COLORS[MAX_VEHICLE_OBJECTS_INDEXS],
	
	vobject_text_TEXT[32],
	vobject_text_FONT[24],
	vobject_text_FONT_SIZE,
	vobject_text_BOLD,
	vobject_text_FONT_COLOR
};
new VEHICLE_OBJECTS[MAX_VEHICLES][MAX_SU_VOBJECTS][e_VEHICLE_OBJECTS];

new male_medic_skins[] = {274, 275, 276};

enum
{
	WORK_TYPE_NONE,
	WORK_TYPE_NORMAL,
	WORK_TYPE_FAMILY
};
enum
{
	WORK_NONE,
	WORK_TAXI,
	WORK_TRUCK,
	WORK_MECHANIC,
	WORK_HARVESTER,
	WORK_FUMIGATOR,
	WORK_TRASH,
	WORK_LUMBERJACK,
	WORK_FARMER,
	WORK_POLICE,
	WORK_PIZZA,
	WORK_MEDIC
};
enum work_info_info
{
	work_info_TYPE,
	work_info_LEVEL,
	work_info_NAME[24],
	bool:work_info_NEED_DUTY, 	//si este trabajo es normal y tiene vehiculos indica si es necesario que el jugador este de servicio para subirse
	work_info_EXTRA_PAY,		//dejar en 0 para no paga extra.......Paga extra de 'work_info_EXTRA_PAY' cada 'work_info_EXTRA_PAY_EXP' con un limite de 'work_info_EXTRA_PAY_LIMIT'
	work_info_EXTRA_PAY_EXP,
	work_info_EXTRA_PAY_LIMIT	// dejar en 0 para sin limites
};
new work_info[][work_info_info] =
{
	{WORK_TYPE_NONE, 0, "ninguno",					false, 0, 0, 0},
	{WORK_TYPE_NORMAL, 1, "taxista",				false, 0, 0, 0},
	{WORK_TYPE_NORMAL, 2, "camionero",				false, 60, 50, 2000},
	{WORK_TYPE_NORMAL, 10, "mecánico",				true, 0, 0, 0},
	{WORK_TYPE_NORMAL, 1, "cosechador",				false, 20, 30, 800},
	{WORK_TYPE_NORMAL, 4, "fumigador",				false, 20, 30, 800},
	{WORK_TYPE_NORMAL, 2, "basurero", 				true, 60, 50, 2000},
	{WORK_TYPE_NORMAL, 1, "leñador",				false, 20, 30, 800},
	{WORK_TYPE_NORMAL, 5, "agricultor",				false, 0, 0, 0},
	{WORK_TYPE_NORMAL, 10, "policía",				true, 2500, 1, 0},
	{WORK_TYPE_NORMAL, 1, "pizzero",				true, 60, 20, 800},
	{WORK_TYPE_NORMAL, 6, "médico",					true, 60, 50, 2000}
};

new PLAYER_WORKS[MAX_PLAYERS][sizeof(work_info)];
new PLAYER_SKILLS[MAX_PLAYERS][sizeof(work_info)];


/* Tuning Object System */

enum e_Tuning_Shop_Objects
{
	tuning_object_MODELID,
	tuning_object_NAME[24],
	tuning_object_PRICE
};
new Tuning_Shop_Objects[][e_Tuning_Shop_Objects] =
{
	{1000, "spl_b_mar_m", 3000},
    {1001, "spl_b_bab_m", 3000},
    {1002, "spl_b_bar_m", 3000},
    {1003, "spl_b_mab_m", 3000},
    {1004, "bnt_b_sc_m", 9000},
    {1005, "bnt_b_sc_l", 3000},
    {1007, "wg_l_b_ssk", 2000},
    {1018, "exh_b_ts", 3500},
    {1019, "exh_b_t", 3500},
    {1021, "exh_b_m", 3500},
    {1024, "lgt_b_sspt", 2000},
    {1029, "exh_c_s", 3000},
    {1043, "exh_lr_br2", 3500},
    {1044, "exh_lr_br1", 3000},
    {1047, "wg_l_a_f", 2500},
    {1048, "wg_l_c_f", 2500},
    {1049, "spl_a_f_r", 3000},
    {1050, "spl_c_f_r", 3000},
    {1056, "wg_l_a_st", 2500},
    {1090, "wg_l_a_u", 2500},
    {19078, "TheParrot1", 8000},
    {19917, "CutsceneEngine1", 10500},
    {19893, "LaptopSAMP1", 6000},
    {2768, "CJ_CB_BURG", 1000},
    {19838, "CoffeeCup1", 1000},
    {11736, "MedicCase1", 3000},
    {1247, "bribe", 8000},
    {19147, "PinSpotLight5", 5000},
    {19148, "PinSpotLight6", 5000},
    {19149, "PinSpotLight7", 5000},
    {19151, "PinSpotLight9", 5000},
    {19153, "PinSpotLight11", 5000},
    {19580, "Pizza1", 1000},
    {2690, "CJ_FIRE_EXT", 5000},
    {19308, "taxi01", 3000},
    {1550, "CJ_MONEY_BAG", 4000},
    {19306, "kmb_goflag2", 5000},
    {19307, "kmb_goflag3", 5000},
    {18647, "RedNeonTube1", 6000},
    {18648, "BlueNeonTube1", 6000},
    {18649, "GreenNeonTube1", 6000},
    {18650, "YellowNeonTube1", 6000},
    {18651, "PinkNeonTube1", 6000},
    {18652, "WhiteNeonTube1", 6000},
    {18749, "SAMPLogoSmall", 5000},
    {19054, "XmasBox1", 3000},
    {19133, "ArrowType4", 5000},
    {19471, "forsale02", 3000},
    {19878, "Skateboard1", 2000},
    {19314, "bullhorns01", 5000},
    {2404, "CJ_SURF_BOARD", 3000},
    {2405, "CJ_SURF_BOARD2", 3000},
    {2406, "CJ_SURF_BOARD3", 3000},
    {19317, "bassguitar01", 2000},
    {19318, "flyingv01", 2000},
    {2232, "MED_SPEAKER_4", 3000},
    {1840, "speaker_2", 2000},
    {2229, "SWANK_SPEAKER", 4000},
	{1025, "wheel_or1", 2500},
	{1073, "wheel_sr6", 2500},
	{1074, "wheel_sr3", 2500},
	{1075, "wheel_sr2", 2500},
	{1076, "wheel_lr4", 2500},
	{1077, "wheel_lr1", 2500},
	{1078, "wheel_lr3", 2500},
	{1079, "wheel_sr1", 2500},
	{1080, "wheel_sr5", 2500},
	{1081, "wheel_sr4", 2500},
	{1082, "wheel_gn1", 2500},
	{1083, "wheel_lr2", 2500},
	{1084, "wheel_lr5", 2500},
	{1085, "wheel_gn2", 2500},
	{1096, "wheel_gn3", 2500},
	{1097, "wheel_gn4", 2500},
	{1098, "wheel_gn5", 2500},
	{19894, "laptop", 4500},
	{19873, "toiletpaperroll1", 200},
	{19874, "soapbar1", 200},
	{19624, "case1", 600},
	{19621, "obj1", 1500},
	{19620, "police", 10500}
};

//ZONAS
enum
{
	AREA_TYPE_NONE,
	AREA_TYPE_GANGZONE
};

#define MAX_TERRITORIES	100
enum enum_TERRITORIES
{
	bool:territory_VALID,
	territory_ID,
	territory_NAME[32],
	bool:territory_OCCUPIED,
	territory_CREW_ID,
	territory_CREW_INDEX,
	territory_COLOR,
	Float:territory_MIN_X,
	Float:territory_MIN_Y,
	Float:territory_MIN_Z,
	Float:territory_MAX_X,
	Float:territory_MAX_Y,
	Float:territory_MAX_Z,
	
	territory_AREA,
	territory_GANG_ZONE,
	
	bool:territory_WAR,
	territory_ATTACKER_CREW_INDEX,
	territory_WAR_TIME_LEFT,
	Text:territory_TEXTDRAW,
	territory_TIMER,
	territory_LAST_ATTACK
};
new TERRITORIES[MAX_TERRITORIES][enum_TERRITORIES];

// Crews
#define MAX_CREWS		50
#define MAX_CREW_RANKS	10

enum enum_CREW_INFO
{
	bool:crew_VALID,
	crew_ID,
	crew_NAME[32],
	crew_COLOR,
	
	bool:crew_FIGHTING,
	crew_LAST_ATTACK,
	
	crew_MEMBERS,
	crew_ONLINE_MEMBERS
};
new CREW_INFO[MAX_CREWS][enum_CREW_INFO];


new RandomColors[] =
{
	0xFFFFFFFF,
	0x000000FF,
    0x99CC00FF,
    0xFF9900FF,
	0x6699CCFF,
	0x0099FFFF,
	0xCCCC99FF,
	
	0xFF8C13FF,	0xC715FFFF,	0x20B2AAFF,	0xDC143CFF,	0x6495EDFF,	0xf0e68cFF,	0x778899FF,	0xFF1493FF,	0xF4A460FF,
	0xEE82EEFF,	0xFFD720FF,	0x8b4513FF,	0x4949A0FF,	0x148b8bFF,	0x14ff7fFF,	0x556b2fFF,	0x0FD9FAFF,	0x10DC29FF,
	0x534081FF,	0x0495CDFF,	0xEF6CE8FF,	0xBD34DAFF,	0x247C1BFF,	0x0C8E5DFF,	0x635B03FF,	0xCB7ED3FF,	0x65ADEBFF,
	0x5C1ACCFF,	0xF2F853FF,	0x11F891FF,	0x7B39AAFF,	0x53EB10FF,	0x54137DFF,	0x275222FF,	0xF09F5BFF,	0x3D0A4FFF,
	0x22F767FF,	0xD63034FF,	0x9A6980FF,	0xDFB935FF,	0x3793FAFF,	0x90239DFF,	0xE9AB2FFF,	0xAF2FF3FF,	0x057F94FF,
	0xB98519FF,	0x388EEAFF,	0x028151FF,	0xA55043FF,	0x0DE018FF,	0x93AB1CFF,	0x95BAF0FF,	0x369976FF,	0x18F71FFF,
	0x4B8987FF,	0x491B9EFF,	0x829DC7FF,	0xBCE635FF,	0xCEA6DFFF,	0x20D4ADFF,	0x2D74FDFF,	0x3C1C0DFF,	0x12D6D4FF,
	0x48C000FF,	0x2A51E2FF,	0xE3AC12FF,	0xFC42A8FF,	0x2FC827FF,	0x1A30BFFF,	0xB740C2FF,	0x42ACF5FF,	0x2FD9DEFF,
	0xFAFB71FF,	0x05D1CDFF,	0xC471BDFF,	0x94436EFF,	0xC1F7ECFF,	0xCE79EEFF,	0xBD1EF2FF,	0x93B7E4FF,	0x3214AAFF,
	0x184D3BFF,	0xAE4B99FF,	0x7E49D7FF,	0x4C436EFF,	0xFA24CCFF,	0xCE76BEFF,	0xA04E0AFF,	0x9F945CFF,	0xDCDE3DFF,
	0x10C9C5FF,	0x70524DFF,	0x0BE472FF,	0x8A2CD7FF,	0x6152C2FF,	0xCF72A9FF,	0xE59338FF,	0xEEDC2DFF,	0xD8C762FF,
	0xD8C762FF,	0xFF8C13FF,	0xC715FFFF,	0x20B2AAFF,	0xDC143CFF,	0x6495EDFF,	0xf0e68cFF,	0x778899FF,	0xFF1493FF,
	0xF4A460FF,	0xEE82EEFF,	0xFFD720FF,	0x8b4513FF,	0x4949A0FF,	0x148b8bFF,	0x14ff7fFF,	0x556b2fFF,	0x0FD9FAFF,
	0x10DC29FF,	0x534081FF,	0x0495CDFF,	0xEF6CE8FF,	0xBD34DAFF,	0x247C1BFF,	0x0C8E5DFF,	0x635B03FF,	0xCB7ED3FF,
	0x65ADEBFF,	0x5C1ACCFF,	0xF2F853FF,	0x11F891FF,	0x7B39AAFF,	0x53EB10FF,	0x54137DFF,	0x275222FF,	0xF09F5BFF,
	0x3D0A4FFF,	0x22F767FF,	0xD63034FF,	0x9A6980FF,	0xDFB935FF,	0x3793FAFF,	0x90239DFF,	0xE9AB2FFF,	0xAF2FF3FF,
	0x057F94FF,	0xB98519FF,	0x388EEAFF,	0x028151FF,	0xA55043FF,	0x0DE018FF,	0x93AB1CFF,	0x95BAF0FF,	0x369976FF,
	0x18F71FFF,	0x4B8987FF,	0x491B9EFF,	0x829DC7FF,	0xBCE635FF,	0xCEA6DFFF,	0x20D4ADFF,	0x2D74FDFF,	0x3C1C0DFF,
	0x12D6D4FF,	0x48C000FF,	0x2A51E2FF,	0xE3AC12FF,	0xFC42A8FF,	0x2FC827FF,	0x1A30BFFF,	0xB740C2FF,	0x42ACF5FF,
	0x2FD9DEFF,	0xFAFB71FF,	0x05D1CDFF,	0xC471BDFF,	0x94436EFF,	0xC1F7ECFF,	0xCE79EEFF,	0xBD1EF2FF,	0x93B7E4FF,
	0x3214AAFF,	0x184D3BFF,	0xAE4B99FF,	0x7E49D7FF,	0x4C436EFF,	0xFA24CCFF,	0xCE76BEFF,	0xA04E0AFF,	0x9F945CFF,
	0xDCDE3DFF,	0x10C9C5FF,	0x70524DFF,	0x0BE472FF,	0x8A2CD7FF,	0x6152C2FF,	0xCF72A9FF,	0xE59338FF,	0xEEDC2DFF,
	0xD8C762FF,	0xD8C762FF
};


/* 
Permisos de rangos

0 - cambiar nombre
1 - invitar
2 - echar
3 - cambiar rango de miembros
4 - crear rangos y modificar rangos
5 - poner casas personales a casas de banda
6 - vender casas de banda
7 - cambiar color de la banda
8 - abandonar territorio
9 - destruir cbanda
*/

//permisos
enum
{
	CREW_RANK_CHANGE_NAME,
	CREW_RANK_INVITE,
	CREW_RANK_CAST_MEMBERS,
	CREW_RANK_MODIFY_MEMBERS,
	CREW_RANK_MODIFY_RANKS,
	CREW_RANK_ADD_PROPERTIES,
	CREW_RANK_DELETE_PROPERTIES,
	CREW_RANK_CHANGE_COLOR,
	CREW_RANK_LEAVE_TERRITORY,
	CREW_RANK_DELETE,
	
	CREW_RANK_SIZE // dejar siempre el ultimo
};

new CREW_RANKS_PERMISSIONS[][] =
{
	"cambiar nombre de la banda",
	"invitar jugadores",
	"echar miembros",
	"cambiar rangos de miembros",
	"crear rangos o modificarlos",
	"poner propiedades de banda",
	"liberar propiedades de banda",
	"cambiar color de la banda",
	"abandonar territorios",
	"eliminar banda"
};

enum enum_CREW_RANK_INFO
{
	bool:crew_rank_VALID,
	crew_rank_ID,
	crew_rank_NAME[32],
	crew_rank_PERMISSION[CREW_RANK_SIZE]
};
new CREW_RANK_INFO[MAX_CREWS][MAX_CREW_RANKS][enum_CREW_RANK_INFO];

enum enum_PLAYER_CREW
{
	bool:player_crew_VALID,
	player_crew_ID,
	player_crew_RANK,
	player_crew_INDEX
};
new PLAYER_CREW[MAX_PLAYERS][enum_PLAYER_CREW];




enum
{
	MISC_MECHANIC_PIECES,
	MISC_FUEL_DRUM,
	MISC_SEED_MEDICINE,
	MISC_SEED_CANNABIS,
	MISC_SEED_CRACK,
	MISC_MEDICINE,
	MISC_CANNABIS,
	MISC_CRACK,
	
	MISC_SIZE //Dejar siempre este al final
};
new PLAYER_MISC[MAX_PLAYERS][MISC_SIZE];

enum obtain_work_coords_info
{
	Float:obtain_work_X,
	Float:obtain_work_Y,
	Float:obtain_work_Z,
	obtain_work_INTERIOR,
	bool:obtain_work_MAP_ICON,
	obtain_work_MAP_ICON_ID,
	Float:obtain_work_MAP_ICON_X,
	Float:obtain_work_MAP_ICON_Y,
	Float:obtain_work_MAP_ICON_Z,
};
new Float:obtain_work_coords[][obtain_work_coords_info] =
{
	{0.0, 0.0, 0.0, 0,	false, 0, 0.0, 0.0, 0.0},
	{1490.285766, 1305.699340, 1093.296386, 3,	true, 61, 1752.603881, -1894.155883, 13.557376},
	{1297.107543, -65.027748, 1002.498046, 18, true, 61, -510.699890, -539.409118, 25.523437},
	{-86.235771, -1183.517822, 2.940625, 0, true, 27, -86.235771, -1183.517822, 2.940625},
	{-372.126922, -1435.706298, 25.726562, 0,	true, 61, -372.126922, -1435.706298, 25.726562}, //Cosechador
	{-1342.295898, -2195.076660, 23.591030, 0, true, 61, -1342.295898, -2195.076660, 23.591030}, //Fumigador
	{-1884.997314, -1636.733642, 21.750000, 0, true, 61, -1884.997314, -1636.733642, 21.750000}, //Basurero
	{-532.029846, -97.514228, 63.296875, 0, true, 61, -532.029846, -97.514228, 63.296875},
	{1564.864257, 23.255302, 24.164062, 0, true, 61, 1564.864257, 23.255302, 24.164062},
	{-510.972015, 324.242736, 2004.585937, 20,	false, 0, 1480.966918, -1772.065673, 18.795755}, // policia
	{377.902313, -119.416114, 1001.492187, 5, false, 0, 2105.485107, -1806.400878, 13.554687},
	{-2033.237304, -117.411125, 1035.171875, 3,	false, 0, 0.0, 0.0, 0.0}
};

enum Work_Vehicles_Info
{
	bool:work_vehicle_VALID,
	work_vehicle_WORK,
	work_vehicle_EXP,
	bool:work_vehicle_NEED_DUTY
};
new WORK_VEHICLES[MAX_VEHICLES][Work_Vehicles_Info];

new valid_work_vehicle_colors[] = {84, 63, 91, 63, 102, 65, 105, 72, 110, 93, 121, 93, 12, 95, 23, 1};
enum San_Andreas_Vehicles_Info
{
	san_andreas_vehicle_TYPE,
	san_andreas_vehicle_TYPE_IN,
	san_andreas_vehicle_TYPE_IN_EXP,
	san_andreas_vehicle_MODELID,
	Float:san_andreas_vehicle_SPAWN_X,
	Float:san_andreas_vehicle_SPAWN_Y,
	Float:san_andreas_vehicle_SPAWN_Z,
	Float:san_andreas_vehicle_SPAWN_ANGLE,
	san_andreas_vehicle_COLOR_1,
	san_andreas_vehicle_COLOR_2
};
new San_Andreas_Vehicles[][San_Andreas_Vehicles_Info] =
{
	//taxi ls
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1804.7098, -1931.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1800.2098, -1931.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1795.2098, -1931.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1790.2098, -1931.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1785.2098, -1931.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1780.7098, -1931.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1776.2098, -1931.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1804.7098, -1922.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1804.7098, -1915.2841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1804.7098, -1907.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1776.2098, -1922.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1776.2098, -1914.7841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1776.2098, -1907.2841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1776.2098, -1900.2841, 13.0901, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1776.2098, -1893.2841, 13.0901, 0.0000, 6, 1},
	// taxi sf
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, -1986.7380, 106.9412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, -1986.7380, 114.9412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, -1986.7380, 125.9412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, -1986.7380, 138.4412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, -1986.7380, 145.4412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, -1986.7380, 155.9412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, -1986.7380, 171.4412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, -1986.7380, 178.4412, 27.2298, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, -1986.7380, 185.4412, 27.2298, 0.0000, 6, 1},
	// taxi lv
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1687.2935, 1297.4829, 10.5616, 180.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1695.2935, 1297.4829, 10.5616, 180.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1695.7935, 1305.9829, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1691.7935, 1305.9829, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1688.2935, 1305.9829, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1681.7935, 1305.9829, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1688.3271, 1287.1450, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1693.8271, 1287.1450, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1699.3271, 1287.1450, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1703.3271, 1287.1450, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1706.8271, 1287.1450, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1711.8271, 1287.1450, 10.5616, 0.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1709.3271, 1316.1450, 10.5616, 180.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1703.3271, 1316.1450, 10.5616, 180.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1698.3271, 1316.1450, 10.5616, 180.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 420, 1694.8271, 1316.1450, 10.5616, 180.0000, 6, 1},
	{VEHICLE_TYPE_WORK, WORK_TAXI, 0, 438, 1691.3271, 1316.1450, 10.5616, 180.0000, 6, 1},

	//Camionero
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -494.4160, -472.8649, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -499.3518, -473.3605, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -504.5551, -473.4075, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -510.0538, -473.4275, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -529.0538, -473.4275, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -544.5538, -473.4275, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -559.5538, -473.4275, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -572.5538, -473.4275, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -589.0538, -473.4275, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -514.8518, -473.3605, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -533.8518, -473.3605, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -564.8518, -473.3605, 25.5408, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -577.3518, -473.3605, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -583.3518, -473.3605, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -519.4160, -472.8649, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -550.4160, -472.8649, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -489.3518, -473.3605, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -483.3518, -473.3605, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -478.4160, -472.8649, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -473.4160, -472.8649, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -469.7829, -488.2091, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -489.7829, -488.2091, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -540.2829, -488.2091, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -564.7829, -488.2091, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 414, -589.2829, -488.2091, 25.5098, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -579.6942, -488.2058, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -549.6942, -488.2058, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 456, -510.6942, -488.2058, 25.5404, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -500.5240, -488.8626, 25.4323, 180.0000, -1, -1},
	{VEHICLE_TYPE_WORK, WORK_TRUCK, 0, 498, -556.0240, -488.8626, 25.4323, 180.0000, -1, -1},
	//Mecanico
	{VEHICLE_TYPE_WORK, WORK_MECHANIC, 0, 525, -64.1689, -1160.0291, 3.0971, 150.8192, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_MECHANIC, 0, 525, -70.7204, -1156.8854, 2.7596, 150.8192, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_MECHANIC, 0, 525, -76.7969, -1153.1581, 2.6658, 150.8192, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_MECHANIC, 0, 525, -82.2357, -1150.2081, 2.8056, 150.8192, 1, 1},
	//Cosechador
	{VEHICLE_TYPE_WORK, WORK_HARVESTER, 0, 532, -390.604370, -1476.015747, 26.704042, 259.474060, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_HARVESTER, 0, 532, -385.473022, -1464.722900, 26.711814, 227.251434, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_HARVESTER, 0, 532, -372.544342, -1462.451293, 26.736181, 224.972244, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_HARVESTER, 0, 532, -375.785583, -1473.692260, 26.720621, 224.966537, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_HARVESTER, 0, 532, -379.832061, -1484.033203, 26.696950, 223.968917, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_HARVESTER, 0, 532, -389.124328, -1491.877197, 26.187450, 314.527038, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_HARVESTER, 0, 532, -382.092529, -1499.563842, 25.449359, 314.704895, 1, 1},
	//Fumigador
	{VEHICLE_TYPE_WORK, WORK_FUMIGATOR, 0, 512, -1349.9589, -2185.4946, 23.5282, 250.3750, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_FUMIGATOR, 0, 512, -1346.2903, -2172.7837, 23.5282, 258.3622, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_FUMIGATOR, 0, 512, -1363.1548, -2182.3293, 23.5282, 250.3750, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_FUMIGATOR, 0, 512, -1358.7863, -2169.9529, 23.5282, 258.3622, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_FUMIGATOR, 0, 512, -1374.2833, -2178.7600, 23.5282, 250.3750, 1, 1},
	{VEHICLE_TYPE_WORK, WORK_FUMIGATOR, 0, 512, -1370.8667, -2167.2510, 23.5282, 261.9992, 1, 1},
	//Basurero
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1913.5554, -1702.3322, 22.5969, 270.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1913.5554, -1707.8322, 22.5969, 270.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1914.0554, -1713.8322, 22.5969, 270.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1913.5554, -1719.8322, 22.5969, 270.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1913.5554, -1726.3322, 22.5969, 270.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1913.5554, -1732.8322, 22.5969, 270.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1901.7543, -1702.9012, 22.5969, 180.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1896.7543, -1702.9012, 22.5969, 180.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1892.2543, -1702.9012, 22.5969, 180.0000, 26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1879.0313, -1739.9550, 22.5969, 33.7282,  26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1884.2616, -1743.0443, 22.5969, 33.7282,  26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1889.2466, -1746.0833, 22.5969, 33.7282,  26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1894.2480, -1748.9353, 22.5969, 33.7282,  26, 26},
	{VEHICLE_TYPE_WORK, WORK_TRASH, 0, 408, -1898.6696, -1751.6755, 22.5969, 33.7282,  26, 26},
	//policia ls
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1601.9473, -1696.1240, 5.6107, 89.0810, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1602.1748, -1691.9042, 5.6110, 88.4362, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1602.0411, -1700.2920, 5.6110, 88.6648, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1601.8983, -1704.0681, 5.6115, 89.3552, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1587.3389, -1710.4362, 5.6118, 1.0410, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1583.4728, -1710.5020, 5.6120, 359.4709, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 402, 1545.2308, -1680.1783, 5.7223, 89.2245, 0, 0},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 5, 411, 1544.4467, -1676.0834, 5.6177, 89.6164, 0, 0},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, 1570.1743, -1710.9041, 6.0789, 0.5127, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, 1574.3672, -1710.9801, 6.0787, 0.3933, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, 1583.7402, -1668.5023, 5.4657, 88.7599, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, 1583.7308, -1671.5286, 5.4637, 87.6115, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, 1583.8281, -1674.2369, 5.4653, 89.9781, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, 1538.5195, -1645.3208, 6.0224, 178.7787, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, 1534.8190, -1645.2932, 6.0222, 178.9228, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 601, 1526.7194, -1644.9723, 5.6494, 179.5714, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1601.9880, -1687.8237, 5.6110, 89.6723, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1602.2769, -1684.0154, 5.6119, 89.6658, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1591.4995, -1710.3190, 5.6105, 359.6988, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 596, 1595.5188, -1710.3881, 5.6109, 358.7049, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 528, 1546.5891, -1654.8442, 5.9344, 90.4177, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 528, 1546.4629, -1650.9556, 5.9348, 90.2691, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 601, 1530.5052, -1644.9598, 5.6494, 179.5481, 0, 1},
	//policia sf
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1588.1722, 749.2943, -5.5779, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1592.2081, 749.1027, -5.5779, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1596.2935, 749.4324, -5.5779, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1600.3527, 749.0949, -5.5779, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1604.2867, 749.3167, -5.5779, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1575.0361, 742.6935, -5.5779, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1574.9946, 738.4707, -5.5779, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1575.1072, 735.0409, -5.5779, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1575.0322, 730.9659, -5.5779, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1575.1212, 722.3821, -5.5779, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1575.0864, 718.5404, -5.5779, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, -1574.7537, 714.1426, -5.1303, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, -1574.6227, 710.4202, -5.1303, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, -1574.6934, 706.5904, -5.1303, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1599.5576, 693.3072, -5.5779, 180.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1608.8636, 693.0085, -5.5779, 180.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 597, -1612.5468, 692.6500, -5.5779, 180.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 5, 411, -1639.4524, 662.1886, -5.5417, -90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 415, -1639.3489, 666.1519, -5.5417, -90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 413, -1639.1108, 669.9014, -5.2635, -90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 601, -1638.7815, 678.3526, -5.4683, -90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 601, -1638.8115, 682.3326, -5.4683, -90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, -1628.3209, 691.4453, -5.0293, 180.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, -1624.6458, 691.1703, -5.0293, 180.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, -1621.0149, 691.4860, -5.0293, 180.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 426, -1639.1274, 658.2158, -5.5682, -90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, -1617.3679, 731.1095, -5.6017, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, -1615.6661, 731.2083, -5.6017, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, -1613.6464, 731.1612, -5.6017, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, -1611.4475, 731.4107, -5.6017, 0.0000, 0, 1},
	//Policia lvpd
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2314.1758, 2475.5225, 3.0620, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2313.4473, 2480.4548, 3.0620, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2313.9863, 2470.4392, 3.0620, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2313.3777, 2466.1509, 3.0620, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2313.2185, 2460.8066, 3.0620, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2285.6572, 2474.5803, 3.0066, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2281.5867, 2475.2078, 3.0066, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2277.3740, 2475.5874, 3.0066, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2272.8518, 2475.8105, 3.0066, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2307.3750, 2431.3274, 2.9947, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 598, 2298.9263, 2431.8225, 2.9947, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, 2272.4565, 2431.9678, 3.3194, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, 2267.9832, 2431.6877, 3.3194, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1, 599, 2263.6194, 2431.6626, 3.3194, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 601, 2246.5898, 2431.7930, 3.0092, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, 2250.7744, 2431.9976, 3.2946, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, 2258.8242, 2431.7910, 3.2946, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 3, 427, 2254.3489, 2432.4753, 3.2946, 0.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 415, 2297.8123, 2451.5508, 3.0484, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 4, 415, 2298.2183, 2455.7683, 3.0484, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, 2299.6643, 2459.1206, 2.8170, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, 2299.8755, 2460.9136, 2.8170, 90.0000, 0, 1},
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2, 523, 2299.8306, 2463.0632, 2.8170, 90.0000, 0, 1},
	//pizzero
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2094.2339, -1813.4716, 12.9325, 90.0000, 3, 6},
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2094.2139, -1814.9722, 12.9325, 90.0000, 3, 6},
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2094.2139, -1816.4722, 12.9325, 90.0000, 3, 6},
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2094.2139, -1817.9722, 12.9325, 90.0000, 3, 6},
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2094.2139, -1819.4722, 12.9325, 90.0000, 3, 6},
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2094.2139, -1820.9722, 12.9325, 90.0000, 3, 6},
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2098.2712, -1812.8209, 12.9325, 0.0000,  3, 6},
	{VEHICLE_TYPE_WORK, WORK_PIZZA, 0, 448, 2096.7712, -1812.8209, 12.9325, 0.0000,  3, 6},
	//ambulancias
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 2036.2555, -1429.4966, 17.0571, 180.00, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 2036.4742, -1439.7246, 17.0571, 180.00, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 2016.8370, -1411.2896, 17.0571, 90.000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 2017.1022, -1416.2045, 17.0571, 90.000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1180.2153, -1308.2330, 13.8244, -90.00, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1180.4480, -1338.4403, 13.8244, -90.00, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1226.9530, 302.3792, 19.7678, 66.10860, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -2202.2329, -2294.7314, 30.7048, 320.0, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -2544.5457, 610.1262, 14.4484, 90.0000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -2544.9500, 604.4023, 14.4484, 90.0000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -2545.0088, 598.3672, 14.4484, 90.0000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -2544.8770, 593.1545, 14.4484, 90.0000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -2545.2927, 587.3546, 14.4484, 90.0000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -330.0057, 1062.9534, 19.7507, -90.000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -1508.8683, 2526.5510, 55.9118, 0.0000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, -1504.4027, 2526.4734, 55.9118, 0.0000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1617.1790, 1841.2314, 10.6855, 0.00000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1612.3330, 1841.6625, 10.6855, 0.00000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1607.3164, 1841.8850, 10.6855, 0.00000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1602.5084, 1841.9370, 10.6855, 0.00000, 1, 3},
	{VEHICLE_TYPE_WORK, WORK_MEDIC, 0, 416, 1597.7699, 1841.7919, 10.6855, 0.00000, 1, 3}

};

enum San_Andreas_Barriers_Info
{
	barrier_VEHICLE_TYPE,
	barrier_VEHICLE_TYPE_IN,
	Float:barrier_X,
	Float:barrier_Y,
	Float:barrier_Z,
	Float:barrier_ROTATION,
	barrier_INTERIOR,
	barrier_WORLD,
	barrier_OBJECT_ID,
	barrier_TIMER,
	bool:barrier_CLOSING
};
new San_Andreas_Barriers[][San_Andreas_Barriers_Info] = // usar VEHICLE_TYPE_NONE para que puedan pasar todos
{
	{VEHICLE_TYPE_WORK, WORK_TAXI, 1811.32373, -1886.26331, 12.36843, 90.00000, 0, 0, INVALID_STREAMER_ID, -1, false}, // barrera taxi ls
	{VEHICLE_TYPE_WORK, WORK_TAXI, 1717.0457, 1308.0387, 9.7157, 90.0, 0, 0, INVALID_STREAMER_ID, -1, false}, // barrera taxi lv
	{VEHICLE_TYPE_WORK, WORK_TRUCK, -495.0410, -562.1307, 24.4932, 180.0, 0, 0, INVALID_STREAMER_ID, -1, false}, // barrera camioneros
	{VEHICLE_TYPE_WORK, WORK_POLICE, 1544.69629, -1630.79651, 12.31840, -90.0, 0, 0, INVALID_STREAMER_ID, -1, false}, // barrera POLICIA LS
	{VEHICLE_TYPE_WORK, WORK_POLICE, 2238.19897, 2450.41797, 9.80680, -90.0, 0, 0, INVALID_STREAMER_ID, -1, false}, // barrera POLICIA LV
	{VEHICLE_TYPE_WORK, WORK_POLICE, -1572.20313, 658.83588, 6.07810, -90.0, 0, 0, INVALID_STREAMER_ID, -1, false}, // barrera POLICIA SF 1
	{VEHICLE_TYPE_WORK, WORK_POLICE, -1701.42969, 687.59381, 23.88280, 90.0, 0, 0, INVALID_STREAMER_ID, -1, false}, // barrera POLICIA SF 2
	{VEHICLE_TYPE_NONE, WORK_NONE, -1526.39063, 481.38281, 6.17970, 0.0, 0, 0, INVALID_STREAMER_ID, -1, false}, // ejercito??
	{VEHICLE_TYPE_NONE, WORK_NONE, -82.1645, -1123.0260, 0.0373, 67.1102, 0, 0, INVALID_STREAMER_ID, -1, false} // grua
};

enum VEHICLE_INFO_enum
{
	bool:vehicle_info_VALID,
	vehicle_info_NAME[24],
	Float:vehicle_info_MAX_GAS, // Por defecto
	Float:vehicle_info_MAX_VEL,
	vehicle_info_PRICE,
	vehicle_info_LEVEL,
	vehicle_info_EXTRA,
	vehicle_info_BOOT_SLOTS,
	vehicle_info_SEATS,
	bool:vehicle_info_ENGINE,
	bool:vehicle_info_DRIVER_DOOR,
	bool:vehicle_info_PASSENGER_DOOR
};
new VEHICLE_INFO[][VEHICLE_INFO_enum] =
{
	{true, "Landstalker", 80.0, 159.00, 60000, 6, 0, 10			, 4		, true, true, true},
	{true, "Bravura", 45.0, 148.00, 40000, 4, 0, 6				, 2		, true, true, true},
	{true, "Buffalo", 50.0, 188.00, 120000, 8, 0, 6				, 2		, true, true, true},
	{true, "Linerunner", 150.0, 110.00, 300000, 30, 0, 0		, 2		, true, true, true},
	{true, "Perrenial", 50.0, 134.00, 10000, 2, 0, 10			, 4		, true, true, true},
	{true, "Sentinel", 45.0, 165.00, 12000, 2, 0, 6				, 4		, true, true, true},
	{true, "Dumper", 20.0, 111.00, 800000, 30, 0, 0				, 1		, true, true, true},
	{true, "Firetruck", 120.0, 149.00, 500000, 30, 0, 0			, 2		, true, true, true},
	{true, "Trashmaster", 80.0, 101.00, 300000, 30, 0, 0		, 2		, true, true, true},
	{true, "Stretch", 80.0, 159.00, 800000, 15, 0, 12			, 4		, true, true, true},
	{true, "Manana", 40.0, 131.00, 8000, 2, 0, 4				, 2		, true, true, true},
	{true, "Infernus", 80.0, 223.00, 350000, 15, 0, 6			, 2		, true, true, true},
	{true, "Voodoo", 45.0, 170.00, 40000, 6, 0, 4				, 2		, true, true, true},
	{true, "Pony", 60.0, 111.00, 60000, 6, 0, 12				, 4		, true, true, true},
	{true, "Mule", 60.0, 106.00, 80000, 8, 0, 0					, 2		, true, true, true},
	{true, "Cheetah", 65.0, 194.00, 320000, 15, 0, 4			, 2		, true, true, true},
	{true, "Ambulance", 120.0, 155.00, 600000, 30, 0, 0			, 4		, true, true, true},
	{false, "Leviathan", 1.0, 1.00, 1500000, 30, 0, 0			, 2		, true, true, true},
	{true, "Moonbeam", 60.0, 116.00, 16000, 2, 0, 12			, 4		, true, true, true},
	{true, "Esperanto", 40.0, 150.00, 35000, 3, 0, 5			, 2		, true, true, true},
	{true, "Taxi", 60.0, 146.00, 80000, 8, 0, 8					, 4		, true, true, true},
	{true, "Washington", 50.0, 155.00, 15000, 2, 0, 6			, 4		, true, true, true},
	{true, "Bobcat", 70.0, 141.00, 60000, 6, 0, 8				, 2		, true, true, true},
	{true, "MrWhoopee", 60.0, 99.00, 180000, 15, 0, 0			, 2		, true, true, true},
	{true, "BFInjection", 30.0, 136.00, 180000, 12, 0, 4		, 2		, true, true, false},
	{false, "Hunter", 1.0, 1.00, 3000000, 30, 0, 0				, 1		, true, true, true},
	{true, "Premier", 70.0, 175.00, 21000, 3, 0, 6				, 4		, true, true, true},
	{true, "Enforcer", 120.0, 167.00, 200000, 16, 0, 0			, 4		, true, true, true},
	{true, "Securicar", 80.0, 158.00, 150000, 15, 0, 12			, 4		, true, true, true},
	{true, "Banshee", 65.0, 203.00, 180000, 15, 0, 4			, 2		, true, true, true},
	{false, "Predator", 1.0, 1.00, 80000, 10, 0, 0				, 1		, true, true, true},
	{true, "Bus", 180.0, 131.00, 500000, 20, 0, 20				, 500	, true, true, true},
	{true, "Rhino", 200.0, 95.00, 10000000, 100, 0, 0			, 1		, true, true, true},
	{true, "Barracks", 150.0, 111.00, 600000, 80, 0, 0			, 2		, true, true, true},
	{true, "Hotknife", 50.0, 168.00, 120000, 15, 0, 4			, 2		, true, true, true},
	{false, "Trailer1", 1.0, 1.00, 50000, 5, 0, 0				, 0		, false, false, false},
	{true, "Previon", 40.0, 150.00, 8000, 2, 0, 6				, 2		, true, true, true},
	{true, "Coach", 150.0, 159.00, 450000, 30, 0, 20			, 500	, true, true, true},
	{true, "Cabbie", 80.0, 144.00, 54000, 5, 0, 6				, 4		, true, true, true},
	{true, "Stallion", 60.0, 170.00, 15000, 2, 0, 6				, 2		, true, true, true},
	{true, "Rumpo", 60.0, 137.00, 80000, 5, 0, 12				, 4		, true, true, true},
	{false, "RCBandit", 1.0, 1.00, 500, 1, 0, 0					, 1		, true, true, true},
	{true, "Romero", 60.0, 140.00, 100000, 10, 0, 0				, 2		, true, true, true},
	{true, "Packer", 150.0, 127.00, 500000, 15, 0, 0			, 2		, true, true, true},
	{true, "Monster", 80.0, 111.00, 1500000, 20, 0, 20			, 2		, true, true, true},
	{true, "Admiral", 65.0, 165.00, 5000, 1, 0, 4				, 4		, true, true, true},
	{false, "Squalo", 1.0, 1.00, 1200000, 12, 0, 0				, 1		, true, true, true},
	{false, "Seasparrow", 1.0, 1.00, 500000, 16, 0, 0			, 2		, true, true, true},
	{true, "Pizzaboy", 20.0, 116.00, 1600, 1, 0, 0				, 1		, true, true, true},
	{false, "Tram", 1.0, 1.00, 0, 0, 0, 0						, 0		, false, false, false},
	{false, "Trailer2", 1.0, 1.00, 0, 0, 0, 0					, 0		, false, false, false},
	{true, "Turismo", 80.0, 195.00, 250000, 15, 0, 6			, 2		, true, true, true},
	{false, "Speeder", 1.0, 1.00, 1500000, 15, 0, 0				, 1		, true, true, true},
	{false, "Reefer", 1.0, 1.00, 800000, 10, 0, 0				, 1		, true, true, true},
	{false, "Tropic", 1.0, 1.00, 1600000, 15, 0, 0				, 1		, true, true, true},
	{true, "Flatbed", 120.0, 159.00, 50000, 10, 0, 0			, 2		, true, true, true},
	{true, "Yankee", 50.0, 107.00, 80000, 8, 0, 15				, 2		, true, true, true},
	{true, "Caddy", 10.0, 96.00, 3000, 1, 0, 0					, 2		, true, true, false},
	{true, "Solair", 80.0, 158.00, 80000, 3, 0, 8				, 4		, true, true, true},
	{true, "BerkleyRCVan", 60.0, 137.00, 50000, 5, 0, 12		, 4		, true, true, true},
	{false, "Skimmer", 1.0, 1.00, 160000, 15, 0, 0				, 2		, true, true, true},
	{true, "PCJ-600", 45.0, 167.00, 20000, 5, 0, 0				, 2		, true, true, false},
	{true, "Faggio", 20.0, 107.00, 1500, 1, 0, 0				, 2		, true, true, false},
	{true, "Freeway", 60.0, 142.00, 60000, 6, 0, 0				, 2		, true, true, false},
	{false, "RCBaron", 1.0, 1.00, 500, 1, 0, 0					, 1		, true, true, true},
	{false, "RCRaider", 1.0, 1.00, 500, 1, 0, 0					, 1		, true, true, true},
	{true, "Glendale", 50.0, 148.00, 5000, 1, 0, 6				, 4		, true, true, true},
	{true, "Oceanic", 50.0, 141.00, 5600, 1, 0, 6				, 4		, true, true, true},
	{true, "Sanchez", 40.0, 143.00, 12000, 2, 0, 0				, 2		, true, true, false},
	{false, "Sparrow", 1.0, 1.00, 500000, 30, 0, 0				, 2		, true, true, true},
	{true, "Patriot", 120.0, 158.00, 500000, 15, 0, 8			, 4		, true, true, true},
	{true, "Quad", 25.0, 111.00, 5000, 1, 0, 0					, 2		, true, true, false},
	{false, "Coastguard", 1.0, 1.00, 150000, 5, 0, 0			, 1		, true, true, true},
	{false, "Dinghy", 1.0, 1.00, 10000, 5, 0, 0					, 1		, true, true, true},
	{true, "Hermes", 80.0, 150.00, 9000, 2, 0, 6				, 2		, true, true, true},
	{true, "Sabre", 45.0, 174.00, 12000, 2, 0, 6				, 2		, true, true, true},
	{false, "Rustler", 1.0, 1.00, 1900000, 15, 0, 0				, 1		, true, true, true},
	{true, "ZR-350", 60.0, 188.00, 30000, 3, 0, 4				, 2		, true, true, true},
	{true, "Walton", 50.0, 118.00, 3500, 1, 0, 6				, 2		, true, true, true},
	{true, "Regina", 80.0, 141.00, 50000, 5, 0, 10				, 4		, true, true, true},
	{true, "Comet", 45.0, 186.00, 80000, 6, 4					, 2		, true, true, true},
	{false, "BMX", 1.0, 1.00, 150, 1, 0, 0						, 1		, true, true, true},
	{true, "Burrito", 60.0, 158.00, 40000, 6, 0, 12				, 4		, true, true, true},
	{true, "Camper", 50.0, 124.00, 60000, 9, 0, 10				, 3		, true, true, true},
	{false, "Marquis", 1.0, 1.00, 6000000, 20, 0, 0				, 1		, true, true, true},
	{true, "Baggage", 20.0, 100.00, 1000, 1, 0, 0				, 1		, true, true, true},
	{true, "Dozer", 25.0, 65.00, 50000, 5, 0, 0					, 1		, true, true, true},
	{false, "Maverick", 1.0, 1.00, 500000, 20, 0, 0				, 4		, true, true, true},
	{false, "NewsChopper", 1.0, 1.00, 500000, 20, 0, 0			, 2		, true, true, true},
	{true, "Rancher", 90.0, 140.00, 70000, 6, 0, 10				, 2		, true, true, true},
	{true, "FBIRancher", 90.0, 158.00, 80000, 8, 0, 12			, 4		, true, true, true},
	{true, "Virgo", 45.0, 150.00, 6000, 1, 0, 4					, 2		, true, true, true},
	{true, "Greenwood", 45.0, 141.00, 12000, 2, 0, 4			, 4		, true, true, true},
	{false, "Jetmax", 1.0, 1.00, 5000000, 20, 0, 0				, 1		, true, true, true},
	{true, "Hotring", 80.0, 216.00, 320000, 15, 0, 0			, 2		, true, true, true},
	{true, "Sandking", 60.0, 178.00, 300000, 15, 0, 0			, 2		, true, true, true},
	{true, "Blista Compact", 60.0, 164.00, 6500, 1, 0, 4		, 2		, true, true, true},
	{false, "Police Maverick", 1.0, 1.00, 600000, 20, 0, 0		, 4		, true, true, true},
	{true, "Boxville", 60.0, 109.00, 80000, 12, 0, 12			, 4		, true, true, true},
	{true, "Benson", 70.0, 124.00, 80000, 12, 0, 12				, 2		, true, true, true},
	{true, "Mesa", 60.0, 141.00, 60000, 5, 0, 2					, 2		, true, true, true},
	{false, "RCGoblin", 1.0, 1.00, 500, 1, 0, 0					, 1		, true, true, true},
	{true, "HotringRacer A", 80.0, 216.00, 320000, 20, 0, 0		, 2		, true, true, true},
	{true, "HotringRacer B", 80.0, 216.00, 320000, 20, 0, 0		, 2		, true, true, true},
	{true, "BloodringBanger", 40.0, 174.00, 80000, 15, 0, 0		, 2		, true, true, true},
	{true, "Rancher", 80.0, 140.00, 60000, 6, 0, 10				, 2		, true, true, true},
	{true, "SuperGT", 60.0, 180.00, 250000, 15, 0, 4			, 2		, true, true, true},
	{true, "Elegant", 65.0, 167.00, 5000, 1, 0, 6				, 4		, true, true, true},
	{true, "Journey", 90.0, 108.00, 40000, 4, 0, 12				, 2		, true, true, true},
	{false, "Bike", 1.0, 1.00, 500, 1, 0, 0						, 1		, true, true, true},
	{false, "MountainBike", 1.0, 1.00, 500, 1, 0, 0				, 1		, true, true, true},
	{false, "Beagle", 1.0, 1.00, 6000000, 16, 0, 0				, 2		, true, true, true},
	{false, "Cropdust", 1.0, 1.00, 1200000, 12, 0, 0			, 1		, true, true, true},
	{false, "Stunt", 1.0, 1.00, 1200000, 12, 0, 0				, 1		, true, true, true},
	{true, "Tanker", 130.0, 121.00, 500000, 20, 0, 0			, 2		, true, true, true},
	{true, "Roadtrain", 150.0, 143.00, 500000, 20, 0, 0			, 2		, true, true, true},
	{true, "Nebula", 60.0, 158.00, 4000, 1, 0, 4				, 4		, true, true, true},
	{true, "Majestic", 45.0, 158.00, 4000, 1, 0, 4				, 2		, true, true, true},
	{true, "Buccaneer", 50.0, 165.00, 4500, 1, 0, 4				, 2		, true, true, true},
	{false, "Shamal", 1.0, 1.00, 20000000, 30, 0, 0				, 1		, true, true, true},
	{false, "Hydra", 1.0, 1.00	, 50000000, 100, 0, 0			, 1		, true, true, true},
	{true, "FCR-900", 50.0, 169.00, 60000, 6, 0, 0				, 2		, true, true, false},
	{true, "NRG-500", 40.0, 190.00, 80000, 8, 0, 0				, 2		, true, true, false},
	{true, "HPV1000", 60.0, 168.00, 50000, 8, 0, 0				, 2		, true, true, false},
	{true, "CementTruck", 30.0, 131.00, 80000, 8, 0, 0			, 2		, true, true, true},
	{true, "TowTruck", 60.0, 162.00, 30000, 3, 0, 4				, 2		, true, true, true},
	{true, "Fortune", 40.0, 159.00, 10000, 2, 0, 4				, 2		, true, true, true},
	{true, "Cadrona", 45.0, 150.00, 10000, 2, 0, 4				, 2		, true, true, true},
	{true, "FBITruck", 80.0, 178.00, 150000, 15, 0, 12			, 2		, true, true, true},
	{true, "Willard", 55.0, 150.00, 5000, 1, 0, 6				, 4		, true, true, true},
	{true, "Forklift", 10.0, 61.00, 1500, 1, 0, 0				, 1		, true, true, true},
	{true, "Tractor", 30.0, 71.00, 2000, 1, 0, 0				, 1		, true, true, true},
	{true, "Combine", 20.0, 111.00, 10000, 2, 0, 0				, 1		, true, true, true},
	{true, "Feltzer", 50.0, 168.00, 13000, 3, 0, 6				, 2		, true, true, true},
	{true, "Remington", 60.0, 170.00, 15000, 3, 0, 4			, 2		, true, true, true},
	{true, "Slamvan", 60.0, 159.00, 80000, 8, 0, 4				, 2		, true, true, true},
	{true, "Blade", 62.0, 174.00, 30000, 4, 0, 6				, 2		, true, true, true},
	{false, "Freight", 1.0, 1.00, 1000000, 100, 0, 0			, 500	, true, true, true},
	{false, "Streak", 1.0, 1.00, 1000000, 100, 0, 0				, 500	, true, true, true},
	{true, "Vortex", 20.0, 100.00, 2000, 20, 0, 0				, 1		, true, true, true},
	{true, "Vincent", 40.0, 150.00, 5000, 1, 0, 6				, 4		, true, true, true},
	{true, "Bullet", 60.0, 204.00, 290000, 15, 0, 4				, 2		, true, true, true},
	{true, "Clover", 45.0, 165.00, 6000, 1, 0, 4				, 2		, true, true, true},
	{true, "Sadler", 60.0, 152.00, 5000, 1, 0, 8				, 2		, true, true, true},
	{true, "FiretruckLA", 120.0, 149.00, 2000000, 20, 0, 0		, 2		, true, true, true},
	{true, "Hustler", 80.0, 148.00, 600000, 25, 0, 6			, 2		, true, true, true},
	{true, "Intruder", 60.0, 150.00, 15000, 3, 0, 6				, 4		, true, true, true},
	{true, "Primo", 55.0, 144.00, 3000, 1, 0, 6					, 4		, true, true, true},
	{false, "Cargobob", 1.0, 1.00, 3000000, 20, 0, 0			, 2		, true, true, true},
	{true, "Tampa", 60.0, 154.00, 12000, 2, 0, 4				, 2		, true, true, true},
	{true, "Sunrise", 60.0, 146.00, 9000, 2, 0, 6				, 4		, true, true, true},
	{true, "Merit", 55.0, 158.00, 8000, 2, 0, 6					, 4		, true, true, true},
	{true, "Utility", 60.0, 122.00, 30000, 3, 0, 6				, 2		, true, true, true},
	{false, "Nevada", 1.0, 1.00, 2000000, 30, 0, 0				, 1		, true, true, true},
	{true, "Yosemite", 60.0, 145.00, 25000, 3, 0, 8				, 2		, true, true, true},
	{true, "Windsor", 45.0, 159.00, 13500, 3, 0, 4				, 2		, true, true, true},
	{true, "MonsterA", 45.0, 111.00, 1500000, 20, 0, 20			, 2		, true, true, true},
	{true, "MonsterB", 60.0, 111.00, 1500000, 20, 0, 20			, 2		, true, true, true},
	{true, "Uranus", 80.0, 157.00, 15000, 3, 0, 4				, 2		, true, true, true},
	{true, "Jester", 60.0, 179.00, 25000, 5, 0, 4				, 2		, true, true, true},
	{true, "Sultan", 60.0, 170.00, 30000, 5, 0, 6				, 4		, true, true, true},
	{true, "Stratum", 60.0, 155.00, 29000, 4, 0, 8				, 4		, true, true, true},
	{true, "Elegy", 60.0, 179.00, 56000, 6, 0, 6				, 2		, true, true, true},
	{false, "Raindance", 1.0, 1.00, 500000, 15, 0, 0			, 2		, true, true, true},
	{false, "RC Tiger", 1.0, 1.00, 500, 1, 0, 0					, 1		, true, true, true},
	{true, "Flash", 60.0, 166.00, 60000, 6, 0, 8				, 2		, true, true, true},
	{true, "Tahoma", 40.0, 161.00, 5050, 1, 0, 6				, 4		, true, true, true},
	{true, "Savanna", 50.0, 174.00, 59000, 5, 0, 6				, 4		, true, true, true},
	{true, "Bandito", 30.0, 147.00, 30000, 5, 0, 0				, 1		, true, true, true},
	{false, "FreightFlat", 1.0, 1.00, 5000000, 50, 0, 0			, 0		, true, true, true},
	{false, "StreakCarriage", 1.0, 1.00, 5000000, 50, 0, 0		, 0		, true, true, true},
	{true, "Kart", 10.0, 94.00, 3000, 1, 0, 0					, 1		, true, true, true},
	{true, "Mower", 15.0, 61.00, 1200, 1, 0, 0					, 1		, true, true, true},
	{true, "Duneride", 80.0, 111.00, 1000000, 20, 0, 20			, 2		, true, true, true},
	{true, "Sweeper", 20.0, 61.00, 4000, 1, 0, 2				, 1		, true, true, true},
	{true, "Broadway", 45.0, 159.00, 60000, 6, 0, 4				, 2		, true, true, true},
	{true, "Tornado", 40.0, 159.00, 6000, 1, 0, 4				, 2		, true, true, true},
	{false, "AT-400", 1.0, 1.00, 10000000, 50, 0, 0				, 1		, true, true, true},
	{true, "DFT-30", 80.0, 131.00, 100000, 10, 0, 4				, 2		, true, true, true},
	{true, "Huntley", 80.0, 159.00, 60000, 6, 0, 8				, 4		, true, true, true},
	{true, "Stafford", 60.0, 154.00, 12000, 2, 0, 6				, 4		, true, true, true},
	{true, "BF-400", 35.0, 168.00, 13000, 2, 0, 0				, 2		, true, true, false},
	{true, "Newsvan", 60.0, 137.00, 30000, 3, 0, 10				, 4		, false, false, false},
	{true, "Tug", 15.0, 86.00, 2000, 1, 0, 0					, 1		, true, true, true},
	{false, "Trailer 3", 1.0, 1.00, 160000, 15, 0, 0			, 0		, true, true, true},
	{true, "Emperor", 60.0, 154.00, 6000, 1, 0, 6				, 4		, true, true, true},
	{true, "Wayfarer", 50.0, 158.00, 8000, 2, 0, 0				, 2		, true, true, false},
	{true, "Euros", 50.0, 166.00, 20000, 3, 0, 4				, 2		, true, true, true},
	{true, "Hotdog", 60.0, 109.00, 30000, 5, 0, 12				, 2		, true, true, true},
	{true, "Club", 65.0, 164.00, 90000, 10, 0, 6				, 2		, true, true, true},
	{false, "FreightCarriage", 1.0, 1.00, 1000000, 100, 0, 0	, 0		, false, false, false},
	{false, "Trailer3", 1.0, 1.00, 1000000, 100, 0, 0			, 0		, false, false, false},
	{false, "Andromada", 1.0, 1.00, 1000000, 100, 0, 0			, 500	, true, true, true},
	{false, "Dodo", 1.0, 1.00, 750000, 12, 0, 0					, 2		, true, true, true},
	{false, "RCCam", 1.0, 1.00, 500, 1, 0, 0					, 2		, true, true, true},
	{false, "Launch", 1.0, 1.00, 800000, 8, 0, 0				, 1		, true, true, true},
	{true, "LSPD", 60.0, 177.00, 50000, 10, 0, 8				, 4		, true, true, true},
	{true, "SFPD", 60.0, 177.00, 50000, 10, 0, 8				, 4		, true, true, true},
	{true, "LVPD", 60.0, 177.00, 50000, 10, 0, 8				, 4		, true, true, true},
	{true, "PoliceRanger", 90.0, 159.00, 70000, 10, 0, 12		, 2		, true, true, true},
	{true, "Picador", 40.0, 152.00, 4500, 1, 0, 6				, 2		, true, true, true},
	{true, "S.W.A.T.Van", 30.0, 111.00, 4000000, 50, 0, 0		, 2		, true, true, true},
	{true, "Alpha", 60.0, 170.00, 80000, 8, 0, 4				, 2		, true, true, true},
	{true, "Phoenix", 60.0, 172.00, 160000, 10, 0, 4			, 2		, true, true, true},
	{true, "Glendale", 30.0, 148.00, 1500, 1, 0, 6				, 4		, true, true, true},
	{true, "Sadler", 40.0, 152.00, 1600, 1, 0, 6				, 2		, true, true, true},
	{false, "LuggageTrailerA", 1.0, 1.00, 500, 1, 0, 0			, 0		, true, true, true},
	{false, "LuggageTrailerB", 1.0, 1.00, 500, 1, 0, 0			, 0		, true, true, true},
	{false, "StairTrailer", 1.0, 1.00, 500, 1, 0, 0				, 0		, true, true, true},
	{true, "Boxville", 90.0, 108.00, 60000, 6, 0, 15			, 4		, true, true, true},
	{false, "FarmPlow", 1.0, 1.00, 3000, 1, 0, 0				, 0		, true, true, true},
	{false, "UtilityTrailer", 1.0, 1.00, 1000, 1, 0, 0         	, 0		, true, true, true}
};

#define MAX_BOOT_SLOTS	20
enum
{
	BOOT_TYPE_WEAPON
};
enum enum_VEHICLE_BOOT
{
	bool:vehicle_boot_VALID,
	vehicle_boot_OBJECT_ID,
	vehicle_boot_TYPE,
	vehicle_boot_INT,
	vehicle_boot_INT_EXTRA
};
new VEHICLE_BOOT[MAX_VEHICLES][MAX_BOOT_SLOTS][enum_VEHICLE_BOOT];

enum SELL_INFO_VEHICLES_Enum
{
	sel_info_vehicle_MODELID,
	Float:sell_info_SPAWN_X,
	Float:sell_info_SPAWN_Y,
	Float:sell_info_SPAWN_Z,
	Float:sell_info_SPAWN_ANGLE,
	sell_info_COLOR_1,
	sell_info_COLOR_2,
	sell_info_SHOP
};
new SELL_INFO_VEHICLES[][SELL_INFO_VEHICLES_Enum] =
{
	{400, -1971.730834, 305.717071, 35.281467, 112.761856, -1, -1, 0}, //conce0
	{489, -1972.303588, 299.899291, 35.315319, 113.739143, -1, -1, 0}, //conce0
	{500, -1989.106811, 267.932830, 35.276290, 267.933868, -1, -1, 0}, //conce0
	{516, -1988.849243, 262.505828, 35.014682, 273.633972, -1, -1, 0}, //conce0
	{517, -1989.152587, 257.527374, 35.020854, 278.511993, -1, -1, 0}, //0
	{518, -1990.650756, 252.367614, 34.853424, 260.343750, -1, -1, 0}, //0
	{526, -1991.783203, 247.102294, 34.938541, 263.152526, -1, -1, 0}, //0
	{529, -1992.195556, 241.864547, 34.804782, 265.900787, -1, -1, 0}, //0
	{533, -1970.909790, 271.824432, 34.874591, 92.208198, -1, -1, 0}, //0
	{534, -1971.686889, 266.768585, 34.897808, 90.052833, -1, -1, 0}, //0
	{535, -1972.078857, 261.530334, 34.940402, 91.687599, -1, -1, 0}, //0
	{536, -1971.535644, 255.783843, 34.909259, 90.030273, -1, -1, 0}, //0
	{540, -1985.110107, 303.989593, 35.031871, 247.498382, -1, -1, 0}, //0
	{542, -1956.205932, 298.277404, 35.211814, 135.000122, -1, -1, 0}, //0
	{543, -1959.895751, 272.834747, 35.330417, 315.005645, -1, -1, 0}, //0
	{546, -1947.004760, 265.553222, 35.208316, 44.999832, -1, -1, 0}, //0
	{547, -1957.724731, 261.617736, 35.244117, 134.999298, -1, -1, 0}, //0
	{549, -1950.561035, 258.919067, 35.165855, 23.361270, -1, -1, 0}, //0
	{551, -1961.752929, 284.531127, 35.270526, 0.696665, -1, -1, 0}, //0
	{554, -1946.718139, 257.937591, 41.083919, 45.030506, -1, -1, 0}, //0
	{555, -1955.544677, 257.741241, 40.755210, 315.004882, -1, -1, 0}, //0
	{558, -1945.867919, 273.318969, 40.666416, 135.659255, -1, -1, 0}, //0
	{559, -1946.407836, 264.562194, 40.705158, 70.021125, -1, -1, 0}, //0
	{560, -1953.854003, 295.461822, 40.762950, 141.442657, -1, -1, 0}, //0
	{561, -1954.960693, 302.385498, 40.873092, 45.000858, -1, -1, 0}, //0
	{562, -1955.735351, 274.163513, 40.699062, 224.775680, -1, -1, 0}, //0
	{565, 561.566101, -1290.956542, 16.871730, 13.598201, -1, -1, 1}, //1
	{566, 555.651794, -1290.101562, 17.030550, 12.250467, -1, -1, 1}, //1
	{567, 548.681701, -1288.398803, 17.121070, 2.627753, -1, -1, 1}, //1
	{575, 543.408569, -1290.018676, 16.844970, 12.805674, -1, -1, 1}, //1
	{576, 537.712585, -1289.785278, 16.853311, 8.072924, -1, -1, 1}, //1
	{579, 531.610229, -1289.627563, 17.179222, 0.727972, -1, -1, 1}, //1
	{580, 524.575805, -1290.402587, 17.038362, 347.873016, -1, -1, 1}, //1
	{585, 519.242980, -1287.057373, 16.828090, 306.424560, -1, -1, 1}, //1
	{587, 527.172241, -1282.828613, 16.988870, 225.000015, -1, -1, 1}, //1
	{589, 531.867553, -1279.575195, 16.918565, 225.000091, -1, -1, 1}, //1
	{600, 536.016235, -1276.898681, 16.963094, 225.002395, -1, -1, 1}, //1
	{602, 539.315979, -1273.561767, 17.073772, 224.999908, -1, -1, 1}, //1
	{603, 543.021911, -1270.594482, 17.126434, 224.998825, -1, -1, 1}, //1
	{402, 547.388854, -1268.065185, 17.089252, 225.000061, -1, -1, 1}, //1
	{405, 550.830261, -1264.989990, 17.167030, 225.000000, -1, -1, 1}, //1
	{604, 2123.362304, -1144.851196, 24.472566, 314.818267, -1, -1, 2}, //2
	{605, 2120.166748, -1141.430053, 24.722545, 314.695739, -1, -1, 2}, //2
	{542, 2120.096923, -1136.088378, 24.996570, 314.858062, -1, -1, 2}, //2
	{462, 2126.857177, -1147.089843, 24.115188, 314.773010, -1, -1, 2}, //2
	{543, 2132.541748, -1142.541259, 24.895196, 44.777957, -1, -1, 2}, //2
	{529, 2135.447509, -1140.396362, 24.948331, 45.030994, -1, -1, 2}, //2
	{401, 1730.930053, 1887.108520, 10.599695, 134.999694, -1, -1, 3}, //
	{404, 1731.381225, 1892.453125, 10.569231, 134.707473, -1, -1, 3}, //
	{405, 1731.109252, 1898.369384, 10.702906, 135.000000, -1, -1, 3}, //
	{410, 1731.451293, 1903.748901, 10.504331, 135.005813, -1, -1, 3}, //
	{412, 1730.241699, 1908.477050, 10.707293, 134.881576, -1, -1, 3}, //
	{413, 1730.819458, 1914.079833, 10.902223, 134.658706, -1, -1, 3}, //
	{418, 1730.897949, 1919.471923, 10.925701, 135.000335, -1, -1, 3}, //
	{419, 1730.598510, 1924.523437, 10.644100, 135.000000, -1, -1, 3}, //
	{421, 1730.842407, 1929.510375, 10.778207, 134.998794, -1, -1, 3}, //
	{422, 1731.021850, 1934.202270, 10.808994, 135.312362, -1, -1, 3}, //
	{426, 1731.136352, 1938.637451, 10.596670, 134.887939, -1, -1, 3}, //
	{426, 1730.754760, 1943.268554, 10.570414, 134.479446, -1, -1, 3}, //
	{439, 1731.084106, 1948.810180, 10.755937, 134.970794, -1, -1, 3}, //
	{445, 1730.763916, 1954.217285, 10.718680, 134.999984, -1, -1, 3}, //
	{458, 1731.066528, 1959.513549, 10.657438, 136.287368, -1, -1, 3}, //
	{459, 1731.444946, 1964.863403, 10.899006, 134.975570, -1, -1, 3}, //
	{466, 1730.831176, 1969.622192, 10.593549, 134.999984, -1, -1, 3}, //
	{467, 1730.754882, 1975.104492, 10.608223, 134.999969, -1, -1, 3}, //
	{474, 1730.852539, 1980.575927, 10.568473, 135.129379, -1, -1, 3}, //
	{475, 1730.986572, 1986.015014, 10.660503, 134.965286, -1, -1, 3}, //
	{477, 1731.019409, 1990.834350, 10.559190, 134.795349, -1, -1, 3}, //
	{478, 1731.501220, 1996.037841, 10.857707, 134.984298, -1, -1, 3}, //
	{479, 1731.119262, 2000.719360, 10.598874, 134.999588, -1, -1, 3}, //
	{480, 1731.495361, 2005.884155, 10.634652, 134.999740, -1, -1, 3}, //
	{482, 1731.285766, 2010.759765, 10.950078, 135.215301, -1, -1, 3}, //
	{483, 1730.935058, 2014.496948, 10.826995, 135.018432, -1, -1, 3}, //
	{489, 1731.131103, 2019.822509, 10.965262, 134.999526, -1, -1, 3}, //
	{491, 1742.855224, 1886.187866, 10.607666, 224.881958, -1, -1, 3}, //
	{492, 1742.420410, 1891.042602, 10.625684, 225.000015, -1, -1, 3}, //
	{496, 1741.725830, 1895.996459, 10.518464, 224.999679, -1, -1, 3}, //
	{500, 1741.789916, 1901.220703, 10.979518, 224.999908, -1, -1, 3}, //
	{507, 1742.658081, 1905.751464, 10.650567, 224.999938, -1, -1, 3}, //
	{461, 1745.890258, 1853.801513, 10.397463, 44.999942, -1, -1, 3}, //
	{462, 1741.982177, 1853.458618, 10.424824, 45.022659, -1, -1, 3}, //
	{463, 1738.716674, 1853.531250, 10.366888, 45.000011, -1, -1, 3}, //
	{468, 1735.504272, 1853.494750, 10.499835, 44.996749, -1, -1, 3}, //
	{471, 1732.698120, 1853.572998, 10.344942, 44.999938, -1, -1, 3}, //
	{521, 1729.782714, 1853.793823, 10.406937, 44.999969, -1, -1, 3}, //
	{522, 1727.729858, 1853.685791, 10.398012, 44.997669, -1, -1, 3}, //
	{581, 1725.653930, 1853.688842, 10.425397, 45.000293, -1, -1, 3}, //
	{586, 1722.802734, 1853.941406, 10.325091, 45.006359, -1, -1, 3}, //
	{470, 1742.820800, 1913.142211, 10.816078, 229.028472, -1, -1, 3},
	{444, 1742.383178, 1877.171997, 11.191605, 207.159729, -1, -1, 3},
	{556, 1730.099609, 1877.612792, 11.195281, 145.682418, -1, -1, 3},
	{568, 1741.999877, 1919.793823, 10.684306, 230.327041, -1, -1, 3},
	{571, 1748.815063, 1854.531616, 10.108824, 43.566219 , -1, -1, 3},
	{572, 1751.926269, 1854.743774, 10.400316, 35.905029 , -1, -1, 3},
	{531, 1742.570190, 1923.476196, 10.785881, 234.443817, -1, -1, 3},
	{409, 1736.970092, 2030.637451, 10.619542, 359.768463, -1, -1, 3},
	{573, 1736.567016, 1873.478393, 11.484094, 181.366882, -1, -1, 3},
	{402, -1660.500610, 1214.428955, 7.081802, 245.781250, -1, -1, 4}, //
	{411, -1659.630004, 1216.934814, 13.398953, 332.907165, -1, -1, 4}, //
	{415, -1653.029663, 1210.681518, 13.444266, 253.155578, -1, -1, 4}, //
	{429, -1669.283081, 1206.197265, 13.351553, 294.647796, -1, -1, 4}, //
	{434, -1665.829223, 1222.459350, 13.684193, 224.999526, -1, -1, 4}, //
	{451, -1666.966186, 1205.829345, 20.861524, 324.716613, -1, -1, 4}, //
	{506, -1658.944458, 1206.433837, 20.860774, 17.348609, -1, -1, 4}, //
	{541, -1649.423461, 1206.491821, 20.775476, 133.478042, -1, -1, 4}, //
	{545, -1656.527587, 1216.405029, 21.003622, 44.999988, -1, -1, 4}, //
	{593, -1343.7820, -283.5430, 15.1051, 295.2159, -1, -1, 5},
	{511, -1395.3242, -226.8177, 15.1051, 329.7679, -1, -1, 5},
	{512, -1351.5674, -271.5968, 15.1051, 306.7229, -1, -1, 5},
	{513, -1359.2263, -260.2434, 15.1051, 310.1669, -1, -1, 5},
	{519, -1376.1088, -240.9439, 15.1051, 318.3999, -1, -1, 5},
	{446, -2231.2676, 2451.4797, 0.0119, 228.6364, -1, -1, 6},
	{452, -2241.1306, 2440.2146, 0.0119, 226.4393, -1, -1, 6},
	{453, -2250.6514, 2428.3452, 0.0119, 226.4393, -1, -1, 6},
	{454, -2262.2539, 2419.0127, 0.0119, 226.4393, -1, -1, 6},
	{454, -2202.1697, 2421.1807, 0.0119, 45.7924, -1, -1,  6},
	{472, -2234.6467, 2394.7185, 0.2970, 42.8398, -1, -1,  6},
	{484, -2213.1201, 2411.4111, 0.0119, 46.0592, -1, -1,  6},
	{473, -2237.2305, 2390.8669, 0.2970, 42.8398, -1, -1,  6},
	{493, -2223.5603, 2400.2893, -0.0596, 46.0592, -1, -1, 6},
	{595, -2245.3577, 2433.8679, 0.5854, 226.4393, -1, -1, 6}
};
new Float:SELL_VEHICLES_SHOPS_SPAWN[][] =
{
	{-1920.1965, 302.7697, 40.5643, -90.0000},
	{563.774475, -1273.510986, 16.867170, 12.636687},
	{2133.863037, -1129.836791, 25.270145, 71.406616},
	{1677.705078, 1790.098144, 10.445111, 89.955596},
	{-1645.245361, 1217.047973, 6.732273, 224.517120},
	{-1345.2130, -230.3504, 15.1051, 315.0196}, //aviones
	{-2258.0054, 2477.0315, 0.2512, 313.4971} //barcos
};

enum SELL_VEHICLES_Enum
{
	bool:sell_vehicle_VALID,
	sell_vehicle_SHOP,
	sell_vehicle_PRICE,
	sell_vehicle_LEVEL,
	sell_vehicle_EXTRA,
	Text3D:sell_vehicle_LABEL_ID
};
new SELL_VEHICLES[MAX_VEHICLES][SELL_VEHICLES_Enum];

/* RESULT_YOUTUBE */
#define MAX_RESULTS	10
enum yt_result
{
	videoID[11 + 1],
	yt_title[100 + 1]
};

new RESULT_YOUTUBE[MAX_RESULTS][yt_result],
	PLAYER_DIALOG_MP3_RESULT[MAX_PLAYERS][MAX_RESULTS][yt_result];

// AGRICULTOR
enum
{
	PLANT_TYPE_MEDICINE, 	// VIDA
	PLANT_TYPE_CANNABIS,	// YOKSETIOXD
	PLANT_TYPE_CRACK		//CHALECO
}

enum seed_info_enum
{
	seed_info_TYPE,
	seed_info_PLANT_TYPE,
	seed_info_EXP,
	seed_info_NAME[24],
	seed_info_PRICE
};
new seed_info[][seed_info_enum] =
{
	{TYPE_LEGAL, PLANT_TYPE_MEDICINE, 0, "Poliskap", 50},
	{TYPE_ILLEGAL, PLANT_TYPE_CANNABIS, 100, "Marihuana", 150},
	{TYPE_ILLEGAL, PLANT_TYPE_CRACK, 200, "Coca", 300}
};

enum plant_info_enum
{
	plant_info_SEEDS,
	plant_info_NAME[24]
};
new plant_info[][plant_info_enum] =
{
	{2, "Medicamento"},
	{4, "Marihuana"},
	{10, "Crack"}
};


#define MAX_PLANTS	500
enum PLANTS_ENUM
{
	bool:plant_VALID,
	bool:plant_GROWING,
	bool:plant_INVISIBLE,
	Float:plant_GROWING_PROGRESS,
	plant_TYPE,
	plant_PLANTED_BY_ACCOUNT_ID,
	plant_PLANTED_BY_NAME[24],
	plant_OBJECT_ID,
	Text3D:plant_LABEL_ID,
	plant_EXPIRE_TIME,
	plant_TIMER
};
new PLANTS[MAX_PLANTS][PLANTS_ENUM];

enum
{
	OBJECT_TYPE_NONE,
	OBJECT_TYPE_PLANT
};

/* SYSTEM - GPS */
enum 
{
	CHECKPOINT_TYPE_NONE,
	CHECKPOINT_TYPE_GPS,
	CHECKPOINT_TYPE_UNLOAD_TRUCK,
	CHECKPOINT_TYPE_FINISH_TRUCK,
	CHECKPOINT_TYPE_HARVEST,
	CHECKPOINT_TYPE_FUMIGATOR,
	CHECKPOINT_TYPE_TRASH,
	CHECKPOINT_TYPE_FINISH_TRASH,
	CHECKPOINT_TYPE_LUMBERJACK,
	CHECKPOINT_TYPE_PIZZA_DEL,
	CHECKPOINT_TYPE_PIZZA_FINISH
};

#define MAX_PLAYER_GPS_SAVES	10
#define MAX_LISTITEMS			35
enum Player_GPS_Enum
{
	player_gps_VALID,
	player_gps_ID,
	player_gps_NAME[24],
	Float:player_gps_X,
	Float:player_gps_Y,
	Float:player_gps_Z,
	player_gps_WORLD,
	player_gps_INTERIOR
};
new PLAYER_GPS[MAX_PLAYERS][MAX_PLAYER_GPS_SAVES][Player_GPS_Enum];

/* SYSTEM - PLAYER OBJECTS */
enum Player_Objects_Enum
{
	po_GPS,
	po_MP3,
	po_PHONE_RESOLVER
};
new PLAYER_OBJECT[MAX_PLAYERS][Player_Objects_Enum];

/* SYSTEM - PHONE */
enum
{
	CALL_GAME_STATE_NONE,
	CALL_STATE_WAITING_RESPONSE,
	CALL_STATE_INCOMING_CALL,
	CALL_STATE_ESTABLISHED
};

enum
{
	PHONE_STATE_ON,
	PHONE_STATE_OFF
};
enum Phone_Info_Enum
{
	player_phone_VALID,
	player_phone_NUMBER,
	player_phone_STATE,
	player_phone_VISIBLE_NUMBER // para elegir si quieres aparecer en la guia o no
};
new PLAYER_PHONE[MAX_PLAYERS][Phone_Info_Enum]; //PPI (PlayerPhoneInfo)

#define MAX_PHONE_CONTACTS	20
enum Phone_Book_Enum
{
	phone_book_contact_VALID,
	
	phone_book_contact_ID,
	phone_book_contact_NAME[24],
	phone_book_contact_PHONE_NUMBER
};
new PLAYER_PHONE_BOOK[MAX_PLAYERS][MAX_PHONE_CONTACTS][Phone_Book_Enum]; //PB = PhoneBook

enum
{
	SEX_MALE,
	SEX_FEMALE
};

enum e_ZONEINFO
{
	z_Name[45],
    Float:z_MinX,
    Float:z_MinY,
    Float:z_MinZ,
    Float:z_MaxX,
    Float:z_MaxY,
    Float:z_MaxZ
};
new g_Zones[][e_ZONEINFO] =
{
	// Indoor zones
	{"Caligula's Palace",            2087.30,  1543.20,   900.00,  2437.30,  1703.20,   1200.90},
	{"The Four Dragons Casino",      1817.30,   863.20,   900.00,  2027.30,  1083.20,   1200.90},
	// Outdoor Zones list by mabako, from gta client files
	{"The Big Ear",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
	{"Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
	{"Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
	{"Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
	{"Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
	{"Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
	{"Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
	{"Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
	{"Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
	{"Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
	{"Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
	{"Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
	{"Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
	{"Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
	{"Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
	{"Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
	{"Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
	{"Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
	{"Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
	{"Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
	{"Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
	{"Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
	{"Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
	{"Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
	{"Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
	{"Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
	{"Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
	{"Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
	{"Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
	{"Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
	{"City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
	{"Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
	{"Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
	{"Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
	{"Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
	{"Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
	{"Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
	{"Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
	{"Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
	{"Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
	{"Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
	{"Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
	{"Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
	{"Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
	{"Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
	{"Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
	{"Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
	{"Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
	{"Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
	{"Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
	{"Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
	{"Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
	{"Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
	{"Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
	{"Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
	{"Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
	{"Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
	{"Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
	{"Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
	{"Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
	{"East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
	{"East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
	{"East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
	{"East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
	{"East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
	{"East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
	{"East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
	{"East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
	{"East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
	{"East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
	{"East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
	{"Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
	{"Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
	{"Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
	{"Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
	{"Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
	{"Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
	{"Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
	{"Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
	{"Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
	{"Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
	{"Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
	{"Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
	{"El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
	{"El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
	{"El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
	{"El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
	{"El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
	{"El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
	{"Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
	{"Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
	{"Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
	{"Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
	{"Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
	{"Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
	{"Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
	{"Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
	{"Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
	{"Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
	{"Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
	{"Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
	{"Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
	{"Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
	{"Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
	{"Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
	{"Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
	{"Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
	{"Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
	{"Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
	{"Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
	{"Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
	{"Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
	{"Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
	{"Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
	{"Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
	{"Garver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
	{"Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
	{"Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
	{"Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
	{"Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
	{"Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
	{"Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
	{"Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
	{"Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
	{"Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
	{"Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
	{"Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
	{"Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
	{"Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
	{"Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
	{"Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
	{"Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
	{"Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
	{"Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
	{"Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
	{"Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
	{"Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
	{"Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
	{"Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
	{"Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
	{"Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
	{"Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
	{"Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
	{"Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
	{"Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
	{"Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
	{"Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
	{"Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
	{"Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
	{"Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
	{"Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
	{"Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
	{"Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
	{"Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
	{"Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
	{"Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
	{"Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
	{"Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
	{"Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
	{"K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
	{"Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
	{"Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
	{"Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
	{"King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
	{"King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
	{"King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
	{"LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
	{"LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
	{"LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
	{"LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
	{"LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
	{"Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
	{"Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
	{"Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
	{"Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
	{"Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
	{"Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
	{"Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
	{"Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
	{"Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
	{"Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
	{"Las Venturas Airport",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
	{"Las Venturas Airport",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
	{"Las Venturas Airport",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
	{"Las Venturas Airport",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
	{"Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
	{"Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
	{"Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
	{"Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
	{"Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
	{"Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
	{"Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
	{"Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
	{"Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
	{"Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
	{"Los Santos International",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
	{"Los Santos International",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
	{"Los Santos International",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
	{"Los Santos International",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
	{"Los Santos International",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
	{"Los Santos International",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
	{"Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
	{"Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
	{"Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
	{"Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
	{"Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
	{"Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
	{"Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
	{"Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
	{"Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
	{"Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
	{"Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
	{"Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
	{"Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
	{"Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
	{"Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
	{"Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
	{"Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
	{"Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
	{"Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
	{"Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
	{"Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
	{"Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
	{"Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
	{"Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
	{"Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
	{"Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
	{"Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
	{"Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
	{"North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
	{"Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
	{"Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
	{"Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
	{"Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
	{"Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
	{"Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
	{"Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
	{"Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
	{"Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
	{"Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
	{"Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
	{"Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
	{"Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
	{"Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
	{"Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
	{"Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
	{"Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
	{"Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
	{"Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
	{"Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
	{"Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
	{"Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
	{"Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
	{"Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
	{"Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
	{"Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
	{"Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
	{"Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
	{"Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
	{"Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
	{"Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
	{"Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
	{"Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
	{"Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
	{"Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
	{"Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
	{"Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
	{"Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
	{"Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
	{"Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
	{"Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
	{"Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
	{"Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
	{"Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
	{"Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
	{"Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
	{"Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
	{"Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
	{"Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
	{"Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
	{"Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
	{"Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
	{"Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
	{"Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
	{"Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
	{"Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
	{"Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
	{"Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
	{"Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
	{"Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
	{"Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
	{"Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
	{"Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
	{"Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
	{"Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
	{"Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
	{"San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
	{"Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
	{"Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
	{"Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
	{"Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
	{"Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
	{"Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
	{"Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
	{"Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
	{"Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
	{"Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
	{"Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
	{"Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
	{"Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
	{"Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
	{"Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
	{"Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
	{"Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
	{"The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
	{"The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
	{"The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
	{"The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
	{"The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
	{"The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
	{"The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
	{"The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
	{"The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
	{"The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
	{"The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
	{"The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
	{"The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
	{"The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
	{"The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
	{"The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
	{"Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
	{"Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
	{"Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
	{"Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
	{"Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
	{"Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
	{"Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
	{"Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
	{"Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
	{"Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
	{"Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
	{"Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
	{"Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
	{"Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
	{"Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
	{"Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
	{"Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
	{"Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
	{"Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
	{"Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
	{"Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
	{"Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
	{"Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
	{"Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
	{"Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00}
};

new g_Cities[][e_ZONEINFO] =
{
	// Main Zones
	{"Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
	{"Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
	{"Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
	{"Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
	{"Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
	{"San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
	{"Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
	{"Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
	{"Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}
};

/* Rangos Policias */
enum enum_POLICE_SHOP_WEAPONS
{
	police_shop_RANK,
	police_shop_WEAPON_ID,
	police_shop_WEAPON_PRICE
};
new POLICE_SHOP_WEAPONS[][enum_POLICE_SHOP_WEAPONS] = 
{
	{1, 3, 50},
	{1, 22, 300},
	{2, 17, 50},
	{2, 24, 600},
	{2, 25, 800},
	{2, 27, 1400},
	{2, 28, 1250},
	{2, 29, 1750},
	{2, 30, 1800},
	{2, 31, 1900},
	{2, 33, 900},
	{3, 34, 3500}
};


enum enum_POLICE_SKINS
{
	police_skin_TYPE,
	police_skin_SKIN,
	police_skin_RANK
};
new POLICE_SKINS[][enum_POLICE_SKINS] =
{
	{SEX_MALE, 280, 1},
	{SEX_MALE, 281, 2},
	{SEX_MALE, 284, 2},
	{SEX_MALE, 285, 3},
	{SEX_MALE, 310, 4},
	{SEX_MALE, 283, 5},
	{SEX_FEMALE, 306, 1},
	{SEX_FEMALE, 307, 2},
	{SEX_FEMALE, 309, 3}
};

new POLICE_RANKS[][] =
{
	"Civil",
	"Oficial",	//1
	"Agente",	//2
	"Sargento",	//3
	"Capitán",	//4
	"Comandante"//5
};

enum enum_POLICE_GARAGE_DOORS
{
	police_gdoor_MODELID,
	Float:police_gdoor_CLOSED_X,
	Float:police_gdoor_CLOSED_Y,
	Float:police_gdoor_CLOSED_Z,
	Float:police_gdoor_CLOSED_RX,
	Float:police_gdoor_CLOSED_RY,
	Float:police_gdoor_CLOSED_RZ,
	Float:police_gdoor_OPENED_X,
	Float:police_gdoor_OPENED_Y,
	Float:police_gdoor_OPENED_Z,
	Float:police_gdoor_OPENED_RX,
	Float:police_gdoor_OPENED_RY,
	Float:police_gdoor_OPENED_RZ,
	Float:police_gdoor_MOVE_SPEED,
	bool:police_gdoor_CLOSING,
	police_gdoor_OBJECT_ID,
	police_gdoor_TIMER
};
new POLICE_GARAGE_DOORS[][enum_POLICE_GARAGE_DOORS] =
{
	{3055, 1588.48853, -1637.85852, 14.57500, 0.0, 0.0, 0.0, 1588.48853, -1637.85852, 16.45880, 90.0, 0.0, 0.0, 1.3, false, INVALID_STREAMER_ID, -1},
	{3055, 2294.04102, 2498.81396, 4.47113,   0.00000, 0.00000, 90.00000, 2294.0410, 2498.8140, 9.0059, 0.0, 0.0, 90.0, 1.6, false, INVALID_STREAMER_ID, -1},
	{3055, 2335.13086, 2443.66895, 6.97370,   0.00000, 0.00000, 60.00000, 2335.1309, 2443.6689, 11.6876, 0.0, 0.0, 60.0, 1.6, false, INVALID_STREAMER_ID, -1},
	{10184, -1631.69556, 688.56641, 8.70960,   0.00000, 0.00000, 90.00000, -1631.6956, 688.5664, 13.2064, 0.0, 0.0, 90.0, 1.6, false, INVALID_STREAMER_ID, -1}
};

enum enum_POLICE_DOORS
{
	police_door_MODELID,
	Float:police_door_X,
	Float:police_door_Y,
	Float:police_door_Z,
	Float:police_door_RZ,
	police_door_INTERIOR,
	police_door_WORLD,
	bool:police_door_CLOSED,
	police_door_OBJECT_ID,
	police_door_TIMER
};
new POLICE_DOORS[][enum_POLICE_DOORS] =
{
	{1495, 1582.6055, -1638.0713, 12.3384, 0.0, 0, 0, true, INVALID_STREAMER_ID, -1},//lspd
	{1495, 245.62910, 72.53300, 1002.54999, 0.0, 6, 0, true, INVALID_STREAMER_ID, -1},//lspd
	{1495, 250.65849, 62.58540, 1002.54999, 90.0, 6, 0, true, INVALID_STREAMER_ID, -1},//lspd
	{1495, 226.16409, 71.01760, 1003.95050, 90.0, 6, 0, true, INVALID_STREAMER_ID, -1},//lspd
	{1497, 222.14630, 70.52970, 1003.95050, -90.0, 6, 0, true, INVALID_STREAMER_ID, -1},//lspd
	{1495, -1619.70764, 688.41058, 6.17220, 180.00000, 0, 0, true, INVALID_STREAMER_ID, -1},//sfpd
	{1495, 239.58211, 116.84430, 1002.20319, 90.00000, 10, 0, true, INVALID_STREAMER_ID, -1},//sfpd
	{1495, 253.19209, 108.35700, 1002.20319, 90.00000, 10, 0, true, INVALID_STREAMER_ID, -1},//sfpd
	{1497, 266.59210, 112.56570, 1003.60992, 180.0, 10, 0, true, INVALID_STREAMER_ID, -1},//sfpd
	{1495, 228.27240, 150.46510, 1002.01813, 90.0, 3, 0, true, INVALID_STREAMER_ID, -1},//lvpd
	{1495, 228.27240, 160.45010, 1002.01813, 90.0, 3, 0, true, INVALID_STREAMER_ID, -1},//lvpd
	{1495, 232.21030, 169.83350, 1002.01813, 180.0, 3, 0, true, INVALID_STREAMER_ID, -1},//lvpd
	{1495, 2294.03516, 2492.91528, 2.26740, 90.0, 0, 0, true, INVALID_STREAMER_ID, -1},//lvpd
	{1497, 221.95570, 181.21680, 1002.02142, 0.0, 3, 0, true, INVALID_STREAMER_ID, -1}//lvpd
};


/* SYSTEM - PROPERTIES */
#define MAX_PROPERTIES	2000
enum Property_Info_Enum
{
	property_VALID,
	property_ID,
	Float:property_EXT_X,
	Float:property_EXT_Y,
	Float:property_EXT_Z,
	Float:property_EXT_ANGLE,
	property_EXT_INTERIOR,
	property_EXT_FREEZE,
	property_ID_INTERIOR,
	
	bool:property_SOLD,
	bool:property_CREW,
	property_OWNER_ID,
	property_CREW_ID,
	property_NAME[24],
	property_PRICE,
	property_LEVEL,
	property_EXTRA,
	
	Text3D:property_EXT_LABEL_ID,
	Text3D:property_INT_LABEL_ID,
	property_EXT_PICKUP_ID,
	property_INT_PICKUP_ID,
	
	property_PRICE_BASE
};
new PROPERTY_INFO[MAX_PROPERTIES][Property_Info_Enum];


/* PROPERTY CONSTRUCTOR */
new TOTAL_PROPERTIES_LOADED;
enum PROPERTY_INTERIOR_ENUM
{
	property_creator_LEVEL,
	property_creator_PRICE,
	Float:property_INT_X,
	Float:property_INT_Y,
	Float:property_INT_Z,
	Float:property_INT_ANGLE,
	property_INT_INTERIOR,
	bool:property_INT_FREEZE
};
new PROPERTY_INTERIORS[][PROPERTY_INTERIOR_ENUM] =
{
	{6, 180000, 140.249008, 1366.197509, 1083.859375, 0.0, 5, false},
	{6, 160000, 2324.530029, -1149.540039, 1050.710083, 0.0, 12, false},
	{6, 270000, 225.679992, 1021.450012, 1084.017700, 0.0, 7, false},
	{6, 190000, 234.190002, 1063.729980, 1084.212280, 0.0, 6, false},
	{6, 120000, 226.300003, 1114.239990, 1080.992919, 270.0, 5, false},
	{6, 180000, 2317.889892, -1026.760009, 1050.217773, 0.0, 9, false},
	{6, 120000, 2495.979980, -1692.079956, 1014.742187, 180.0, 3, false},
	{6, 90000,  2196.626464, -1204.321411, 1049.023437, 90.0, 6, false},
	{6, 105000, 2270.143554, -1210.490600, 1047.562500, 90.0, 10, false},
	{4, 90000,  2365.199951, -1135.595825, 1050.882568, 0.0, 8, false},
	{3, 75000,  2237.590087, -1081.640014, 1049.023437, 0.0, 2, false},
	{4, 65000,  2468.840087, -1698.239990, 1013.507812, 90.0, 2, false},
	{3, 45000,  2282.928955, -1140.004516, 1050.898437, 0.0, 11, false},
	{4, 50000,  2308.775878, -1212.731689, 1049.023437, 0.0, 6, false},
	{6, 135000, 2233.681396, -1114.973510, 1050.882812, 0.0, 5, false},
	{6, 230000, 2218.162597, -1076.148315, 1050.484375, 90.0, 1, false},
	{6, 220000, 266.654327, 304.961791, 999.148437, 270.0, 2, false},
	{6, 30000,  243.720001, 304.910003, 999.148437, 270.0, 1, false},
	{6, 65000,  2259.440673, -1135.905883, 1050.640258, 270.0, 10, false},
	{12, 3000000, 1260.910034, -785.320068, 1091.906250, 280.0, 5, false}
};

enum PLAYER_PROPERTY_CONSTRUCTOR_ENU
{
	bool:player_property_creator_ENABLED,
	player_property_creator_INTERIO,
	Float:player_property_creator_EXT_X,
	Float:player_property_creator_EXT_Y,
	Float:player_property_creator_EXT_Z,
	Float:player_property_creator_EXT_ANG,
	player_property_creator_EXT_INT
};
new PLAYER_PROPERTY_CONSTRUCTOR[MAX_PLAYERS][PLAYER_PROPERTY_CONSTRUCTOR_ENU];

//Taxis
enum TAXI_METER_VEHICLE_Info
{
	bool:veh_taxi_meter_ENABLED,
	veh_taxi_meter_PRICE,
	veh_taxi_meter_PAYMENT,
	Float:veh_taxi_meter_OLD_X,
	Float:veh_taxi_meter_OLD_Y,
	Float:veh_taxi_meter_OLD_Z,
	Float:veh_taxi_meter_DISTANCE,
	veh_taxi_meter_TIMER
};
new TAXI_METER_VEHICLE[MAX_VEHICLES][TAXI_METER_VEHICLE_Info];


// Grua
new Float:CRANE_POINTS[][] = 
{
	{-28.8145, -1124.5767, 0.6990, 157.4051},
	{-34.1703, -1122.5664, 0.6990, 157.4051},
	{-39.7803, -1119.8870, 0.6990, 157.4051},
	{-45.1235, -1117.3114, 0.6990, 157.4051},
	{-49.8637, -1115.2751, 0.6990, 157.4051},
	{-42.4484, -1154.7849, 0.6990, 333.7967},
	{-46.8119, -1152.4274, 0.6990, 333.7967},
	{-50.6488, -1150.6056, 0.6990, 333.7967},
	{-54.1760, -1149.1364, 0.6990, 333.7967},
	{-57.8852, -1147.4999, 0.6990, 333.7967},
	{-62.2619, -1145.2260, 0.6990, 333.7967},
	{-66.4254, -1143.2191, 0.6990, 333.7967},
	{-70.7787, -1140.9065, 0.6990, 333.7967},
	{-75.1332, -1138.9713, 0.6990, 333.7967},
	{-79.8642, -1136.7786, 0.6990, 333.7967},
	{-33.8437, -1135.5642, 0.6990, 333.7967},
	{-36.8147, -1141.7927, 0.6990, 157.4051},
	{-40.9361, -1140.1613, 0.6990, 157.4051},
	{-45.5692, -1138.2747, 0.6990, 157.4051},
	{-50.3522, -1136.1228, 0.6990, 157.4051},
	{-54.4753, -1134.3014, 0.6990, 157.4051},
	{-38.0563, -1133.7695, 0.6990, 333.7967},
	{-42.4517, -1132.0298, 0.6990, 333.7967},
	{-47.2834, -1129.8915, 0.6990, 333.7967},
	{-51.6219, -1127.9185, 0.6990, 333.7967}
};

//Pizzero
new Float:PIZZA_DELIVERY_POINT[][] = 
{
	{2232.147460, -1785.597656, 13.560449, 82.756179    },
	{2290.242675, -1796.022583, 13.546875, 267.344024   },
	{1739.314575, -1582.890747, 14.158246, 174.783370   },
	{1694.923339, -1583.478881, 13.546875, 179.829818   },
	{1241.816406, -2032.996093, 60.041099, 263.972076   },
	{1187.268798, -1666.487915, 13.634441, 172.332916   },
	{998.998962, -1868.162231, 12.820312, 333.677734    },
	{891.677551, -1695.211669, 13.546875, 182.046417    },
	{507.502838, -1606.101684, 16.247840, 359.563903    },
	{305.462341, -1748.736816, 4.546875, 356.093139     },
	{159.034683, -1906.259521, 3.773437, 0.044234       },
	{387.668762, -2083.981689, 7.835937, 11.638330      },
	{902.655456, -930.055786, 42.601562, 185.516662     },
	{1809.700439, -1166.832885, 24.226562, 168.451568   },
	{2007.953857, -985.501953, 33.888450, 203.231872    },
	{2580.753906, -969.438110, 81.363517, 50.412715     },
	{2796.151855, -1088.867187, 30.719810, 234.631011   },
	{2819.019287, -1614.678588, 11.079871, 245.630599   },
	{2756.354492, -1979.312011, 13.547579, 270.360687   },
	{931.654541, -1231.159545, 16.928218, 262.568939    },
	{952.439208, -913.921447, 45.729900, 180.787841     },
	{824.417663, -2031.578857, 12.867187, 331.166229    },
	{1714.394531, -1629.683593, 20.203384, 332.709594   }
};

enum PIZZA_VEHICLE_Info
{
	bool:pizza_vehicle_STARTED,
	pizza_vehicle_DRIVER_AID,
	pizza_vehicle_PIZZAS,
	pizza_vehicle_PIZZA_POINT,
	bool:pizza_vehicle_PIZZA_POINT_DELI
};
new PIZZA_VEHICLE[MAX_VEHICLES][PIZZA_VEHICLE_Info];

//Camioneros
new Float:LoadTrucksPoints[][] =
{
	{-520.48822, -502.04059, 25.26037, 0.0},
	{-529.98822, -502.04059, 25.26040, 0.0},
	{-557.48822, -502.04059, 25.26040, 0.0}
};

enum TRUCK_VEHICLE_Info
{
	bool:truck_vehicle_LOADED,
	bool:truck_vehicle_LOADING,
	bool:truck_vehicle_UNLOADING,
	bool:truck_vehicle_DELIVERED,
	truck_vehicle_DRIVER_USER_ID,
	truck_vehicle_POINT,
};
new TRUCK_VEHICLE[MAX_VEHICLES][TRUCK_VEHICLE_Info];

enum Truck_Content_Info
{
	truck_content_EXP,
	truck_content_NAME[24],
	truck_content_MONEY,
	Float:truck_content_X,
	Float:truck_content_Y,
	Float:truck_content_Z
};
new Truck_Contents[][Truck_Content_Info] =
{
	{0, "Partes de vehículos", 350, -72.730911, -1176.907714, 2.940625},
	{0, "Productos agrícolas", 950, -185.473693, -280.008880, 1.603357},
	{0, "Productos industriales", 2300, 2168.514404, -2275.264892, 13.128628},
	{0, "Madera y leña", 2600, -2096.593017, -2243.229492, 30.352083},
	{0, "Ropa y complementos", 2975, 2834.454833, 958.061462, 10.479191},
	{25, "Productos de limpieza", 3500, 2524.153076, 2816.919189, 10.547390},
	{50, "Productos de pesca", 4500, -1789.979858, 1421.842895, 6.914581},
	{50, "Productos químicos", 5100, -1862.919433, -202.232727, 18.125516},
	{80, "Productos tecnológicos", 6250, 1039.057983, 2132.961425, 10.547390}
	
};

/* Leñador */
enum
{
	LUMBER_TREE_STATE_NORMAL,
	LUMBER_TREE_STATE_CUTTING,
	LUMBER_TREE_STATE_CUTTED
}
enum LUMBER_TREES_Info
{
	lumber_tree_MODELID,
	Float:lumber_tree_X,
	Float:lumber_tree_Y,
	Float:lumber_tree_Z,
	Float:lumber_tree_RX,
	Float:lumber_tree_RY,
	Float:lumber_tree_RZ,
	lumber_tree_OBJECT_ID,
	Text3D:lumber_tree_LABEL,
	lumber_tree_STATE,
	lumber_tree_GROW_TIMER,
	lumber_tree_GROW_COUNTER
};
new LUMBER_TREES[][LUMBER_TREES_Info] =
{
	{657, -467.31256, -47.68515, 59.00023,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -480.88443, -53.57695, 59.39736,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -491.79199, -45.14817, 59.24156,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -493.84619, -54.35930, 59.48059,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -473.43958, -40.64830, 59.00023,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -468.32245, -61.54378, 58.98302,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -458.69937, -75.32365, 58.80302,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -453.17416, -65.31260, 58.98302,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -444.92609, -78.80465, 57.97836,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -465.78470, -85.49714, 58.96302,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -454.24377, -86.58199, 58.46635,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -440.20041, -92.70150, 57.60720,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -484.98972, -65.79082, 59.82284,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -460.57928, -95.55928, 59.25615,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -521.20569, -44.74903, 60.62712,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -534.94348, -50.98387, 61.66861,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -533.45081, -41.45306, 61.64992,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -495.74197, -64.77782, 59.94119,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -519.74005, -72.02750, 61.19377,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1},
	{657, -518.47144, -57.24505, 60.76774,   0.00000, 0.00000, 0.00000, INVALID_STREAMER_ID, Text3D:INVALID_3DTEXT_ID, LUMBER_TREE_STATE_NORMAL, -1, -1}
};

/* Basurero */

#define MAX_ROUTES	5
#define MAX_OBJECTS_PER_ROUTE	20

enum Trash_Object_Info
{
	bool:trash_route_VALID,
	trash_route_OBJECTS,
	Float:trash_route_DISTANCE,
	trash_route_MONEY,
	trash_object_MODELID[MAX_OBJECTS_PER_ROUTE],
	Float:trash_object_X[MAX_OBJECTS_PER_ROUTE],
	Float:trash_object_Y[MAX_OBJECTS_PER_ROUTE],
	Float:trash_object_Z[MAX_OBJECTS_PER_ROUTE],
	Float:trash_object_RX[MAX_OBJECTS_PER_ROUTE],
	Float:trash_object_RY[MAX_OBJECTS_PER_ROUTE],
	Float:trash_object_RZ[MAX_OBJECTS_PER_ROUTE]
};
new TRASH_OBJECTS[MAX_ROUTES][Trash_Object_Info];
new TRASH_PLAYER_OBJECTS[MAX_PLAYERS][MAX_OBJECTS_PER_ROUTE];

enum TRASH_VEHICLES_INFO
{
	bool:trash_vehicle_JOB_STARTED, 
	trash_vehicle_ROUTE,
	trash_vehicle_CP,
	trash_vehicle_DRIVER_ID,
	trash_vehicle_PASSENGER_ID
};
new TRASH_VEHICLES[MAX_VEHICLES][TRASH_VEHICLES_INFO];

/* SYSTEM - PLAYERTEMP */
enum
{
	PED_STOPPED,
	PED_WALKING,
	PED_RUNNING,
	PED_SPRINTING,
	PED_BYCICLING
};

enum Temp_Enum
{
	pt_GAME_STATE,
	pt_NAME[24],
	pt_IP[16],
	bool:pt_USER_EXIT, // Esta registrado?
	bool:pt_USER_LOGGED, // 1 = ha cargado todos los datos del user
	pt_TIME_PLAYING, // tiempo jugando en segundos sesion actual
	pt_ANTIFLOOD_COMMANDS,
	pt_ANTIFLOOD_TALK,
	pt_TIMERS[MAX_TIMERS_PER_PLAYER],
	bool:pt_USER_VALID_NAME,
	pt_RP_NAME[24],
	pt_BAD_LOGIN_ATTEMP,
	pt_DOUBT_CHANNEL_TIME,
	pt_DOUBT_CHANNEL_MESSAGE[128],
	pt_LAST_PICKUP_ID,
	pt_HOSPITAL,
	Float:pt_HOSPITAL_LIFE,
	pt_TIME_PASSED_LAST_REP,
	pt_INTERIOR_INDEX,
	pt_CLOTHING_SHOP,
	pt_CLOTHING_SHOP_SELECTED_SKIN,
	bool:pt_SELECT_TEXTDRAW,
	bool:pt_HUD_TEXTDRAWS, // Barra de hambre y sed
	pt_PED_STATE,
	bool:pt_REGISTER_SELECTING_SKIN,
	pt_REGISTER_SELECTED_SKIN,
	pt_REGISTER_ACTOR,
	pt_HUNGRY_THIRST_DISCOUNT_TIME,
	pt_HUNGRY_THIRST_TIME,
	bool:pt_THIRST_MESSAGE,
	bool:pt_HUNGRY_MESSAGE,
	bool:pt_TOYS_SHOP,
	pt_TOYS_SHOP_TOY_SELECTED,
	pt_SELECTED_TOY_SLOT,
	pt_SELECT_BANK_TRANSFER_ACCOUNT,
	bool:pt_PLAYER_IN_ATM,
	pt_POCKET_SLOT_SELECTED,
	bool:pt_PHONE_COMMANDS_MESSAGE,
	bool:pt_PLAYER_IN_CALL,
	pt_PLAYER_PHONE_CALL_STATE,
	pt_PLAYER_PHONE_CALL_PLAYERID,
	pt_PLAYER_LISTITEM[MAX_LISTITEMS],
	pt_PLAYER_PHONE_BOOK_ADD_NUMBER,
	pt_PLAYER_PHONE_BOOK_SELECTED,
	pt_PLAYER_PHONE_NUMBER_SELECTED,
	pt_BUY_HOUSE_INDEX,
	bool:pt_PLAYER_FINISH_HOSPITAL,
	pt_ANTIFLOOD_KNOCK_PROPERTY,
	pt_KNOCK_PLAYER_ID,
	pt_GPS_CHECKPOINT,
	pt_GPS_PLAYER_SELECTED,
	pt_PLAYER_GPS_SELECTED_PROPERTY[MAX_SU_PROPERTIES],
	pt_PLAYER_PROPERTY_SELECTED,
	bool:pt_PLAYER_WAITING_MP3_HTTP,
	bool:pt_MUSIC_FOR_PROPERTY,
	bool:pt_MUSIC_FOR_VEHICLE,
	pt_FUEL_DOWN_TIME,
	pt_SELECTED_BUY_VEHICLE_ID,
	pt_LAST_VEHICLE_ID,
	pt_NOTARY_OPTION, //0 al banco, 1 a persona
	pt_NOTARY_PRICE,
	pt_NOTARY_TO_PLAYER,
	pt_PLAYER_VEHICLE_SELECTED,
	bool:pt_TAXI_METER_ENABLED,
	bool:pt_WANT_TAXI,
	Float:pt_TRUCK_LOADING_VALUE,
	pt_TRUCK_CHECKPOINT,
	pt_TUNING_SELECTED_PART[24],
	pt_TUNING_SELECTED_COMPONENT[24],
	pt_TUNING_SELECTED_COMPONENT_ID,
	pt_TUNING_SELECTED_PIECES,
	pt_PAINTJOB_SELECTED_ID,
	pt_WORKING_IN,
	pt_SELECTED_MECHANIC_VEHICLE_ID,
	pt_MECHANIC_COLOR_SLOT,
	bool:pt_WANT_MECHANIC,
	pt_HARVERT_CHECKPOINT,
	pt_HARVERT_PROCCESS,
	pt_FUMIGATOR_CHECKPOINT,
	pt_FUMIGATOR_PROCCESS,
	pt_PIZZA_CHECKPOINT,
	bool:pt_TRASH_DRIVER,
	bool:pt_TRASH_PASSENGER,
	pt_TRASH_VEHICLE_ID,
	pt_TRASH_CHECKPOINT,
	Float:pt_RECYCLE_BIN_VALUE,
	bool:pt_PLAYER_CARRYING_TREE,
	pt_PLAYER_LUMBERJACK_TREE,
	Float:pt_PLAYER_LUMBERJACK_TREE_PROG,
	pt_LUMBERJACK_CHECKPOINT,
	pt_LAST_GOT_WORK_TIME,
	pt_LAST_GIVE_MONEY_TIME,
	pt_SELECTED_BUY_SEED_ID,
	Float:pt_PLANTING_PROGRESS,
	bool:pt_PLANTING,
	pt_PLANTING_PLANT_SELECTED,
	bool:pt_GPS_MAP,
	pt_PROPERTY_INDEX,
	bool:pt_KICKED,
	pt_SELECTED_DIALOG_WEAPON_SLOT,
	pt_TRICK_SELLER_PID,
	pt_TRICK_SELLER_AID,
	pt_TRICK_SELLER_EXTRA,
	pt_TRICK_PRICE,
	pt_TRICK_TIME,
	pt_DIALOG_BOT_VEHICLE,
	pt_DIALOG_BOT_VEHICLE_BOOT_SLOT,
	pt_POLICE_RADIO,
	bool:pt_CUFFING,
	bool:pt_CUFFED,
	pt_ENTER_JAIL_TIME,
	pt_DIALOG_DB_LIMIT,
	pt_DIALOG_DB_PAGE,
	pt_SELECTED_DB_AC_ID,
	bool:pt_POLICE_CALL_NAME,
	bool:pt_POLICE_CALL_DESCRIPTION,
	pt_POLICE_CALL_NAME_STR[24],
	pt_SAVE_ACCOUNT_TIME,
	pt_ANTIFLOOD_REPORT,
	bool:pt_SEE_ACMD_LOG,
	pt_LAST_CHEAT_DETECTED_TIME,
	bool:pt_SEE_AC_LOG,
	pt_ANTIFLOOD_DEATH,
	pt_ANTIFLOOD_STATE,
	pt_ANTIFLOOD_ENTER_VEHICLE,
	pt_SELECTED_AC_LISTITEM,
	pt_ADMIN_PM_PID,
	pt_ADMIN_PM_AID,
	pt_ADMIN_PM_TIME,
	pt_MECHANIC_PID,
	pt_MECHANIC_AID,
	pt_MECHANIC_PRICE,
	pt_MECHANIC_TEXT[64],
	pt_MECHANIC_TYPE,
	pt_MECHANIC_EXTRA,
	pt_MECHANIC_VEHICLE_ID,
	pt_MECHANIC_PIECES,
	pt_MECHANIC_TIME,
	pt_MECHANIC_SELECTED_COLOR,
	bool:pt_SHOP,
	pt_SHOP_STATE,
	pt_SHOP_ARTICLE_ID[6],
	pt_SHOP_SELECTED_ARTICLE_ID,
	bool:pt_SHOP_COME_FROM_MY_ADS,
	pt_ANTIFLOOD_SHOP,	
	pt_SHOP_ADD_TYPE,
	pt_SHOP_ADD_TEXT[24],
	pt_SHOP_ADD_MODELID,
	pt_SHOP_ADD_VCOL1,
	pt_SHOP_ADD_VCOL2,
	pt_VIRTUAL_WORLD,
	bool:pt_PLAYER_SPECTATE,
	pt_LAST_BM_BUY,
	pt_PIZZA_PROCCESS,
	pt_DELIVERED_PIZZAS,
	pt_PIZZA_ACTOR,
	pt_LAST_PLANT_TIME,
	pt_LAST_SET_WANTED_LEVEL,
	Float:pt_INJURED_POS[4],
	pt_CREATE_CREW_NAME[32],
	pt_CREATE_CREW_COLOR,
	pt_CREW_INVITE_PID,
	pt_CREW_INVITE_AID,
	pt_CREW_INVITE_INFO[4],
	pt_CREW_SELECTED_RANK,
	pt_CREW_SELECTED_NEW_RANK,
	pt_LAST_TERRITORY,
	pt_PLAYER_TERRITORY_PRO,
	pt_PLAYER_COLOR,
	pt_LAST_GOT_CREW,
	pt_POLICE_PEN_PID,
	pt_POLICE_PEN_AID,
	pt_POLICE_PEN_IM,
	pt_POLICE_PEN_TIME,
	pt_DIALOG_ECO_SELECTED,
	pt_LAST_SU_CHECK,
	pt_PIVOT_OBJECT,
	pt_SELECT_TUNING_OBJECT,
	pt_TUNING_PICKUP,
	bool:pt_IN_TUNING_GARAGE,
	bool:pt_TUNING_GARAGE_SHOP,
	pt_TUNING_GARAGE_VEHICLEID,
	pt_TUNING_EDIT_SLOT,
	Float:pt_OLD_EDIT_VOBJECT_POS[6],
	pt_TUNING_EDIT_COLOR_SLOT,
	pt_COUNTRY_TYPE,
	pt_LAST_SHOT_TIME
};
new PLAYER_TEMP[MAX_PLAYERS][Temp_Enum]; // PT (PlayerTemp), variables que no van a ser guardadas en base de datos.

#define MAX_ADS_PER_PLAYER	3
enum
{
	PLAYER_SHOP_STATE_ALL,
	PLAYER_SHOP_STATE_AD,
	PLAYER_SHOP_STATE_MY_ADS
};

enum
{
	SHOP_ARTICLE_TYPE_PROPERTY,
	SHOP_ARTICLE_TYPE_VEHICLE,
	SHOP_ARTICLE_TYPE_OTHER
};

enum
{
	MECHANIC_OPTION_REPAIR,
	MECHANIC_OPTION_COLOR_1,
	MECHANIC_OPTION_COLOR_2,
	MECHANIC_OPTION_TUNING,
	MECHANIC_OPTION_PAINTJOB
};

//EnterExits
enum
{
	INTERIOR_NO_INFO,
	//INTERIOR_GENERAL_HOSPITAL,
	INTERIOR_BINCO,
	INTERIOR_SUBURBAN,
	INTERIOR_PROLAPS,
	INTERIOR_DIDIER_SACHS,
	INTERIOR_VICTIM,
	INTERIOR_ZIP,
	INTERIOR_247,
	INTERIOR_PIZZA,
	INTERIOR_CLUCKIN_BELL,
	INTERIOR_BURGER_SHOT,
	INTERIOR_BANK_LS,
	INTERIOR_BANK_SF,
	INTERIOR_BANK_LV,
	INTERIOR_CITY_HALL_LS,
	INTERIOR_UNITY_STATION,
	INTERIOR_TRUCK,
	INTERIOR_POLICE_LS,
	INTERIOR_POLICE_SF,
	INTERIOR_POLICE_LV,
	INTERIOR_ALHAMBRA,
	INTERIOR_POLICE_GARAGE,
	INTERIOR_HOSPITAL
};
enum Enter_Exits
{
	ee_ID,
	ee_NAME[32],
	
	ee_INTERIOR_TYPE,
	
	ee_INT_MAPICON,
	ee_INT_FREEZE,
	ee_INT_WORLD,
	ee_INT_INTERIOR,
	Float:ee_INT_X,
	Float:ee_INT_Y,
	Float:ee_INT_Z,
	Float:ee_INT_ANGLE,
	
	ee_EXT_MAPICON,
	ee_EXT_FREEZE,
	ee_EXT_WORLD,
	ee_EXT_INTERIOR,
	Float:ee_EXT_X,
	Float:ee_EXT_Y,
	Float:ee_EXT_Z,
	Float:ee_EXT_ANGLE,
	
	ee_TIME_OPEN,
	ee_TIME_CLOSE,
	
	ee_INT_MAPICON_ID,
	ee_EXT_MAPICON_ID,
	Text3D:ee_INT_LABEL_ID,
	Text3D:ee_EXT_LABEL_ID,
	
	
	ee_INT_PICKUP_ID,	/* No son pickups decorativos */
	ee_EXT_PICKUP_ID	/* Son pickups para identificar el id */
};

new ENTER_EXIT[][Enter_Exits] = // EE = EnterExits
{
	//{-1, "Hospital General", INTERIOR_GENERAL_HOSPITAL, -1, true, 0, 10, 1976.126342, 1163.504028, -5.208700, 90.0,		-1, false, 0, 0, 1172.832763, -1323.269531, 15.400051, 270.0, 0, 0,		-1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Binco", INTERIOR_BINCO, -1, false, 0, 15, 207.744949, -111.073318, 1005.132812, 0.0,	45, false, 0, 0, 2244.484863, -1665.223510, 15.476562, 0.0, 9, 20, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Binco", INTERIOR_BINCO, -1, false, 1, 15, 207.744949, -111.073318, 1005.132812, 0.0,	45, false, 0, 0, -2374.125976, 910.103271, 45.433864, 90.0, 9, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Binco", INTERIOR_BINCO, -1, false, 2, 15, 207.744949, -111.073318, 1005.132812, 0.0,	45, false, 0, 0, 2101.902832, 2257.391845, 11.023437, 270.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Binco", INTERIOR_BINCO, -1, false, 3, 15, 207.744949, -111.073318, 1005.132812, 0.0,	45, false, 0, 0, 1656.993408, 1733.450195, 10.828111, 90.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "SubUrban", INTERIOR_SUBURBAN, -1, false, 0, 1, 203.906326, -50.494247, 1001.804687, 0.0,	45, false, 0, 0, 2112.835205, -1211.456665, 23.962865, 180.0, 9, 21, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "SubUrban", INTERIOR_SUBURBAN, -1, false, 1, 1, 203.906326, -50.494247, 1001.804687, 0.0,	45, false, 0, 0, -2490.140869, -29.123632, 25.617187, 90.0, 9, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "SubUrban", INTERIOR_SUBURBAN, -1, false, 2, 1, 203.906326, -50.494247, 1001.804687, 0.0,	45, false, 0, 0, 2779.590087, 2453.658203, 11.062500, 136.0, 9, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "ProLaps", INTERIOR_PROLAPS, -1, false, 0, 3, 206.995925, -140.021163, 1003.507812, 0.0,	45, false, 0, 0, 499.498168, -1360.616088, 16.368682, 340.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "ProLaps", INTERIOR_PROLAPS, -1, false, 1, 3, 206.995925, -140.021163, 1003.507812, 0.0,	45, false, 0, 0, 2825.891357, 2407.322265, 11.062500, 133.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Didier Sachs", INTERIOR_DIDIER_SACHS, -1, false, 0, 14, 204.348281, -168.678985, 1000.523437, 0.0,	45, false, 0, 0, 453.858032, -1478.098632, 30.813968, 111.110641, 8, 23, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Didier Sachs", INTERIOR_DIDIER_SACHS, -1, false, 1, 14, 204.348281, -168.678985, 1000.523437, 0.0,	45, false, 0, 0, 1642.838012, -2284.760742, -1.195312, 270.0, 8, 23, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Victim", INTERIOR_VICTIM, -1, false, 0, 5, 227.350250, -8.188652, 1002.210937, 90.0,	45, false, 0, 0, 461.541320, -1500.892333, 31.049194, 98.0, 8, 21, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Victim", INTERIOR_VICTIM, -1, false, 1, 5, 227.350250, -8.188652, 1002.210937, 90.0,	45, false, 0, 0, -1694.747558, 951.613464, 24.890625, 135.0, 8, 21, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Victim", INTERIOR_VICTIM, -1, false, 2, 5, 227.350250, -8.188652, 1002.210937, 90.0,	45, false, 0, 0, 2802.926269, 2430.682861, 11.062500, 130.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "ZIP", INTERIOR_ZIP, -1, false, 0, 18, 161.401184, -96.887367, 1001.804687, 0.0,	45, false, 0, 0, 1456.611816, -1137.818969, 23.961400, 215.0, 9, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "ZIP", INTERIOR_ZIP, -1, false, 1, 18, 161.401184, -96.887367, 1001.804687, 0.0,	45, false, 0, 0, -1882.421997, 866.394836, 35.171875, 138.0, 9, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "ZIP", INTERIOR_ZIP, -1, false, 2, 18, 161.401184, -96.887367, 1001.804687, 0.0,	45, false, 0, 0, 2090.534667, 2224.481933, 11.023437, 180.0, 9, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "ZIP", INTERIOR_ZIP, -1, false, 3, 18, 161.401184, -96.887367, 1001.804687, 0.0,	45, false, 0, 0, 2572.074218, 1904.711181, 11.023437, 180.0, 9, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 0, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 2194.734130, 1991.022216, 12.296875, 90.0,	0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 1, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, -180.966003, 1034.823242, 19.742187, 90.0,	0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 2, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 1352.314941, -1758.961425, 13.507812, 0.0,	0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 3, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 1833.540771, -1842.542724, 13.578125, 90.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 4, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 2884.694335, 2453.865478, 11.068956, 225.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 5, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 2097.616210, 2224.081298, 11.023437, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 6, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 2247.650146, 2396.417236, 10.820312, 0.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 7, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 1315.453247, -897.967102, 39.578125, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 8, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 1000.317199, -919.933349, 42.328125, 105.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 9, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 2452.572021, 2064.924316, 10.820312, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 10, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 2546.502929, 1972.397338, 10.820312, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 11, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, 1937.592773, 2307.269042, 10.820312, 90.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 12, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, -1562.437744, -2733.189941, 48.743457, 234.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "24/7", INTERIOR_247, -1, false, 13, 18, -30.958774, -91.807441, 1003.546875, 0.0,	17, false, 0, 0, -2442.718994, 755.316589, 35.171875, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 0, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, 2105.234619, -1806.479614, 13.554687, 90.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 1, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, -1721.211425, 1359.705932, 7.185316, 90.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 2, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, 2756.652099, 2477.132812, 11.062500, 135.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 3, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, 2083.380615, 2224.687988, 11.023437, 180.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 4, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, 2351.770996, 2533.328369, 10.820312, 180.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 5, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, 2638.568847, 1849.818481, 11.023437, 90.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 6, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, 372.310729, -133.246292, 1001.492187, 0.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Well Stacked Pizza", INTERIOR_PIZZA, -1, false, 7, 5, 372.310729, -133.246292, 1001.492187, 0.0,	29, false, 0, 0, 375.114501, -117.272621, 1001.492187, 180.0, 13, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 0, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 2419.926025, -1509.024780, 24.000000, 270.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 1, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 2397.772949, -1898.847778, 13.546875, 0.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 2, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 928.553466, -1352.848876, 13.343750, 90.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 3, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 2838.312011, 2407.552978, 11.068956, 225.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 4, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 2101.901367, 2228.776855, 11.023437, 270.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 5, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 2393.372070, 2041.856323, 10.820312, 0.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 6, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 2638.423828, 1671.904296, 11.023437, 90.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 7, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, -1816.567382, 618.417419, 35.171875, 180.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 8, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, -2671.401611, 257.927551, 4.632812, 0.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 9, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 364.914093, -11.778851, 1001.851562, 0.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Cluckin Bell", INTERIOR_CLUCKIN_BELL, -1, false, 10, 9, 364.914093, -11.778851, 1001.851562, 0.0,	14, false, 0, 0, 368.652679, -4.492218, 1001.851562, 180.0, 13, 2, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 0, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, 810.715270, -1616.163330, 13.546875, 270.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 1, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, 1199.272216, -918.372253, 43.121376, 180.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 2, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, 2366.805419, 2071.106201, 10.820312, 90.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 3, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, 2472.626464, 2034.173339, 11.062500, 90.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 4, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, 1872.485351, 2071.812255, 11.062500, 270.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 5, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, 2169.620117, 2795.799072, 10.820312, 270.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 6, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, 1157.925659, 2072.159912, 11.062500, 270.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 7, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, -2356.003173, 1008.051147, 50.898437, 90.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 8, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, -2336.861816, -166.945022, 35.554687, 270.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Burger Shot", INTERIOR_BURGER_SHOT, -1, false, 9, 10, 362.869354, -75.153747, 1001.507812, 315.0,	10, false, 0, 0, -1912.406860, 827.900634, 35.227863, 315.0, 9, 6, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Banco Los Santos", INTERIOR_BANK_LS, -1, true, 5, 5, 1412.077880, 1315.779907, 1501.087890, 90.0,	52, false, 0, 0, 1477.583740, -1010.425170, 26.843750, 180.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Banco San Fierro", INTERIOR_BANK_SF, -1, true, 10, 10, 1104.824462, 1515.503173, 1452.807128, 0.0, 52, false, 0, 0, -1961.384887, 441.804687, 35.171875, 90.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Banco Las Venturas", INTERIOR_BANK_LV, -1, true, 15, 15, 2673.430908, -610.844604, -71.658203, 270.0, 52, false, 0, 0, 2474.557861, 1024.154052, 10.820312, 180.0, 8, 22, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Gobierno San Andreas", INTERIOR_CITY_HALL_LS, -1, true, 20, 20, -501.181243, 286.212188, 2001.094970, 0.0, 3, false, 0, 0, 1480.966918, -1772.065673, 18.795755, 0.0, 8, 21, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Unity Station", INTERIOR_UNITY_STATION, -1, false, 0, 3, 1494.416015, 1303.681884, 1093.289062, 0.0, -1, false, 0, 0, 1752.603881, -1894.155883, 13.557376, 270.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Camioneros", INTERIOR_TRUCK, -1, true, 25, 18, 1297.457031, -61.437820, 1002.498046, 180.0, -1, false, 0, 0, -510.699890, -539.409118, 25.523437, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Policía Los Santos", INTERIOR_POLICE_LS, -1, false, 0, 6, 246.827011, 62.424068, 1003.640625, 0.0, 30, false, 0, 0, 1555.400390, -1675.611694, 16.195312, 90.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Policía San Fierro", INTERIOR_POLICE_SF, -1, false, 0, 10, 246.425857, 107.400123, 1003.218750, 0.0, 30, false, 0, 0, -1605.511840, 710.382507, 13.867187, 0.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Policía Las Venturas", INTERIOR_POLICE_LV, -1, false, 0, 3, 238.758178, 138.726867, 1003.023437, 0.0, 30, false, 0, 0, 2287.059082, 2432.260742, 10.820312, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Club Alhambra", INTERIOR_ALHAMBRA, -1, false, 0, 17, 493.487731, -24.662528, 1000.679687, 0.0, 48, false, 0, 0, 1836.876586, -1682.407104, 13.329626, 90.0, 22, 8, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Policía Los Santos", INTERIOR_POLICE_GARAGE, -1, false, 0, 6, 246.407897, 87.903236, 1003.640625, 180.0, -1, false, 0, 0, 1568.651977, -1690.080688, 6.218750, 180.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1}, // garaje lspd
	{-1, "Policía San Fierro", INTERIOR_POLICE_GARAGE, -1, false, 0, 10, 278.369232, 117.561325, 1004.617187, 90.0, -1, false, 0, 0, -1594.110107, 716.163024, -4.906250, 270.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1}, // garaje lspd
	{-1, "Policía Las Venturas", INTERIOR_POLICE_GARAGE, -1, false, 0, 3, 231.671142, 181.048477, 1003.031250, 90.0, -1, false, 0, 0, 2282.221923, 2423.218505, 3.476562, 0.0, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1}, // garaje lspd
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 1, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	2034.197875, -1403.040039, 17.294845, 180.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 2, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	1172.832763, -1323.269531, 15.400051, 270.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 3, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	1242.235595, 328.113281, 19.755510, 0.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 4, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	-2201.566162, -2307.610839, 30.625000, 320.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 5, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	-2655.108886, 639.278625, 14.453125, 180.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 6, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	-318.812774, 1050.359130, 20.340259, 0.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 7, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	-1514.855590, 2520.366699, 55.909828, 0.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1},
	{-1, "Hospital", INTERIOR_HOSPITAL, -1, false, 8, 3, -2029.700683, -119.617759, 1035.171875, 0.0, 22, false, 0, 0,	1583.311401, 1768.952758, 10.820312, 90.0	, 0, 0, -1, -1, Text3D:INVALID_3DTEXT_ID, Text3D:INVALID_3DTEXT_ID, -1, -1}
};

enum enum_JAIL_POSITIONS
{
	jail_INT,
	Float:jail_X,
	Float:jail_Y,
	Float:jail_Z,
	Float:jail_ANGLE,
	jail_INTERIOR
};
new JAIL_POSITIONS[][enum_JAIL_POSITIONS] = 
{
	{INTERIOR_POLICE_LS, 265.070129, 77.518280, 1001.039062, 270.0, 6}, //jaills
	{INTERIOR_POLICE_SF, 215.681945, 110.177680, 999.015625, 0.0, 10}, //jailsf
	{INTERIOR_POLICE_LV, 197.925323, 174.997573, 1003.023437, 0.0, 3} //jaillv
};

enum BUY_PROPERTIES_SITES_INFO
{
	site_INTERIOR_TYPE,
	Float:site_X,
	Float:site_Y,
	Float:site_Z,
	site_WORLD,
	site_INTERIOR
};
new BUY_PROPERTIES_SITES[][BUY_PROPERTIES_SITES_INFO] =
{
	{INTERIOR_BANK_LS, 1396.613403, 1320.551635, 1501.090698, 5, 5},
	{INTERIOR_BANK_SF, 1116.351684, 1540.468750, 1451.827148, 10, 10},
	{INTERIOR_BANK_LV, 2681.990966, -615.470520, -71.658203, 15, 15}
};



enum
{
	PRODUCT_TYPE_NONE,
	PRODUCT_TYPE_FOOD,
	PRODUCT_TYPE_PHONE,
	PRODUCT_TYPE_GPS,
	PRODUCT_TYPE_MP3,
	PRODUCT_TYPE_PHONE_RESOLVER
};
enum Supermarket_Enum
{
	product_TYPE,
	product_NAME[24],
	product_PRICE,
	Float:product_HUNGRY,
	Float:product_THIRST,
	product_DRUNK
};
new Supermarket_Product_List[][Supermarket_Enum] =  
{
	{PRODUCT_TYPE_PHONE, "Teléfono", 350, 0.0, 0.0, 0},
	{PRODUCT_TYPE_PHONE_RESOLVER, "Guía telefónica", 200, 0.0, 0.0, 0},
	{PRODUCT_TYPE_GPS, "Localizador GPS", 300, 0.0, 0.0, 0},
	{PRODUCT_TYPE_MP3, "Reproductor MP3", 200, 0.0, 0.0, 0},
	{PRODUCT_TYPE_FOOD, "Botella de agua mineral", 80, 0.0, 25.0, 0},
	{PRODUCT_TYPE_FOOD, "Lata de refresco Sprunk", 40, 0.0, 12.0, 0},
	{PRODUCT_TYPE_FOOD, "Lata de refresco cola", 30, 0.0, 10.0, 0},
	{PRODUCT_TYPE_FOOD, "Barrita energética", 80, 15.0, 0.0, 0},
	{PRODUCT_TYPE_FOOD, "Porción de pizza", 60, 20.0, 0.0, 0},
	{PRODUCT_TYPE_FOOD, "Ensalada", 50, 15.0, 2.0, 0},
	{PRODUCT_TYPE_FOOD, "Sándwich", 45, 10.0, 2.0, 0},
	{PRODUCT_TYPE_FOOD, "Lata de cerveza", 40, 0.0, 3.0, 1000},
	{PRODUCT_TYPE_FOOD, "Vodka", 80, 0.0, 3.0, 2500},
	{PRODUCT_TYPE_FOOD, "Whisky", 200, 0.0, 3.0, 3000}
};


enum Clothing_Shop_Info
{
	clothing_shop_INTERIOR_TYPE,
	clothing_shop_NAME[24],
	Float:clothing_shop_X,
	Float:clothing_shop_Y,
	Float:clothing_shop_Z,
	Float:clothing_shop_ANGLE,
	clothing_shop_INTERIOR
};
new Clothing_Shop_Positions[][Clothing_Shop_Info] =  
{ 
	{INTERIOR_BINCO, "Binco", 207.733657, -100.633468, 1005.257812, 180.0, 15}, //Binco
	{INTERIOR_SUBURBAN, "SubUrban", 203.905395, -43.450450, 1001.804687, 180.0, 1}, //SubUrban
	{INTERIOR_PROLAPS, "ProLaps", 207.049148, -129.177581, 1003.507812, 180.0, 3}, //prolaps
	{INTERIOR_DIDIER_SACHS, "Didier Sachs", 204.348281, -159.493728, 1000.523437, 180.0, 14}, //Didier
	{INTERIOR_VICTIM, "Victim", 206.374328, -7.241514, 1001.210937, 270.0, 5}, //Victim
	{INTERIOR_ZIP, "ZIP", 161.443634, -83.589271, 1001.804687, 180.0, 18} //Zip
};


enum Fast_Food_Info
{
	fast_food_INTERIOR_TYPE,
	fast_food_NAME[24],
	Float:fast_food_X,
	Float:fast_food_Y,
	Float:fast_food_Z,
	fast_food_INTERIOR
};
new Fast_Food_Positions[][Fast_Food_Info] =
{
	{INTERIOR_BURGER_SHOT, "Burger Shot", 375.913238, -67.435272, 1001.507812, 10}, // BurgerShot
	{INTERIOR_PIZZA, "Well Stacked Pizza", 375.254730, -118.804710, 1001.499511, 5}, //Pizza
	{INTERIOR_CLUCKIN_BELL, "Cluckin Bell", 368.757904, -6.018908, 1001.851562, 9} //Cluckin Bell
};


enum atm_bank_info
{
	atm_modelid,
	Float:atm_X,
	Float:atm_Y,
	Float:atm_Z,
	Float:atm_RX,
	Float:atm_RY,
	Float:atm_RZ,
	atm_WORLD,
	atm_INTERIOR
};
new ATM_BANK[][atm_bank_info] =
{
	{2754, 2833.38672, 2402.91553, 10.93546,   0.00000, 0.00000, 131.44171},
	{2754, 2088.78442, 1510.00574, 10.69234,   0.00000, 0.00000, 45.39682},
	{2754, 1662.92346, 1723.03162, 10.53258,   0.00000, 0.00000, 90.27153},
	{2754, -16.17070, 1219.33813, 19.17369,   0.00000, 0.00000, 179.53238},
	{2754, -1505.91687, 2612.09058, 55.63910,   0.00000, 0.00000, 178.85609},
	{2754, -2540.67188, 2340.96143, 4.79166,   0.00000, 0.00000, 90.97625},
	{2754, -1690.23547, 1327.11902, 7.04427,   0.00000, 0.00000, 43.44909},
	{2754, -1980.48608, 155.24883, 27.49554,   0.00000, 0.00000, 359.06995},
	{2754, -2631.60693, -6.86652, 5.97444,   0.00000, 0.00000, 181.99303},
	{2754, -2146.54395, -2332.90283, 30.43888,   0.00000, 0.00000, 232.48808},
	{2754, 574.90155, -1419.96509, 14.22211,   0.00000, 0.00000, 283.89526},
	{2754, 1227.24524, -1428.54846, 13.29063,   0.00000, 0.00000, 269.20294},
	{2754, 1810.57153, -1873.97852, 13.38759,   0.00000, 0.00000, 180.44339},
	{2754, 1493.07471, -1022.08618, 23.63997,   0.00000, 0.00000, 91.19178},
	{2754, 2330.78149, 81.79469, 26.33336,   0.00000, 0.00000, 269.20883},
	{2754, 711.71503, -542.69287, 16.04271,   0.00000, 0.00000, 180.17184},
	{2754, 242.68755, -54.72442, 1.31352,   0.00000, 0.00000, 0.00000},
	{2754, 1381.12219, 233.81693, 19.28907,   0.00000, 0.00000, 154.79193}
};

#define MAX_BANK_TRANSACTIONS_DIALOG	20
enum
{
	BANK_TRANSACTION_WITHDRAW,
	BANK_TRANSACTION_DEPOSIT,
	BANK_TRANSACTION_TRANSFER_SENT,
	BANK_TRANSACTION_TRANSFER_RECE,
	BANK_TRANSACTION_CREATE_ACCOUNT,
	BANK_TRANSACTION_BUY_PROPERTY,
	BANK_TRANSACTION_SOLD_PROPERTY,
	BANK_TRANSACTION_BUY_VEHICLE,
	BANK_TRANSACTION_SOLD_VEHICLE
};
enum Bank_Interior_Info
{
	bank_INTERIOR_TYPE,
	Float:bank_X,
	Float:bank_Y,
	Float:bank_Z,
	bank_WORLD,
	bank_INTERIOR
};
new Bank_Interior_Positions[][Bank_Interior_Info] =
{
	{INTERIOR_BANK_LS, 1407.356201, 1320.171142, 1501.083984, 5, 5},
	{INTERIOR_BANK_SF, 1105.033935, 1529.565795, 1452.480957, 10, 10},
	{INTERIOR_BANK_LV, 2690.869628, -610.943664, -71.658203, 15, 15}
};

enum Food_Info
{
	food_NAME[24],
	food_PRICE,
	Float:food_HUNGRY,
	Float:food_THIRST,
};
new PIZZA_FOOD[][Food_Info] =
{
	{"Pizza de verduras", 25, 10.0, -0.1},
	{"Pizza de jamón y queso", 60, 16.0, -0.1},
	{"Pizza barbacoa", 40, 15.0, -0.1},
	{"Pizza 4 quesos", 55, 14.0, -0.1},
	{"Ensalada", 20, 10.0, 5.0},
	{"Refresco de Sprunk", 30, 0.0, 12.0},
	{"Refresco de Cola", 50, 0.0, 13.5},
	{"Agua mineral", 30, 0.0, 19.0}
};
new BURGER_SHOT_FOOD[][Food_Info] =
{
	{"Hamburguesa de ternera", 60, 16.0, -0.1},
	{"Hamburguesa de pollo", 80, 10.0, -0.1},
	{"Hamburguesa especial", 60, 12.0, -3.0},
	{"Ensalada", 20, 10.0, 5.0},
	{"Refresco de Sprunk", 30, 0.0, 12.0},
	{"Refresco de Cola", 50, 0.0, 13.5},
	{"Agua mineral", 30, 0.0, 19.0}
};
new CLUCKIN_BELL_FOOD[][Food_Info] =
{
	{"Alitas de pollo", 60, 16.0, -0.1},
	{"Plato especial", 80, 18.0, -2.0},
	{"Ensalada", 20, 10.0, 5.0},
	{"Refresco de Sprunk", 30, 0.0, 12.0},
	{"Refresco de Cola", 50, 0.0, 13.5},
	{"Agua mineral", 30, 0.0, 19.0}
};


enum Player_Toys_Info
{
	player_toy_VALID,
	
	player_toy_ID,
	player_toy_NAME[24],
	player_toy_ATTACHED,
	player_toy_MODELID,
	player_toy_BONE,
	Float:player_toy_OFFSET_X,
	Float:player_toy_OFFSET_Y,
	Float:player_toy_OFFSET_Z,
	Float:player_toy_ROT_X,
	Float:player_toy_ROT_Y,
	Float:player_toy_ROT_Z,
	Float:player_toy_SCALE_X,
	Float:player_toy_SCALE_Y,
	Float:player_toy_SCALE_Z,
	player_toy_COLOR_1,
	player_toy_COLOR_2
};
new PLAYER_TOYS[MAX_PLAYERS][MAX_PLAYER_ATTACHED_OBJECTS][Player_Toys_Info]; //PTOYS = PlayerToys

new Toys_Bones[][24] = 
{
	{"Espalda"},
	{"Cabeza"},
	{"Brazo izquierdo"},
	{"Brazo derecho"},
	{"Mano izquierda"},
	{"Mano derecha"},
	{"Muslo izquierdo"},
	{"Muslo derecho"},
	{"Pie izquierdo"},
	{"Pie derecho"},
	{"Pantorrilla derecha"},
	{"Pantorrilla izquierda"},
	{"Antebrazo izquierdo"},
	{"Antebrazo derecho"},
	{"Hombro izquierdo"},
	{"Hombro derecho"},
	{"Cuello"},
	{"Boca"}
};

enum Toys_Info
{
	shop_toy_model[24],
	shop_toy_modelid,
	shop_toy_price_base,
	shop_toy_price,
}
new Toys_Shop[][Toys_Info] =
{
	{"motorcyclehelmet2", 18976, 2000, 0},
	{"motorcyclehelmet3", 18977, 500, 0},
	{"motorcyclehelmet4", 18978, 500, 0},
	{"motorcyclehelmet5", 18979, 500, 0},
	{"sillyhelmet2", 19114, 100, 0},
	{"sillyhelmet3", 19115, 200, 0},
	{"plainhelmet1", 19116, 75, 0},
	{"plainhelmet2", 19117, 75, 0},
	{"plainhelmet3", 19118, 75, 0},
	{"plainhelmet4", 19119, 75, 0},
	{"plainhelmet5", 19120, 75, 0},
	{"glassestype1", 19006, 2000, 0},
	{"glassestype2", 19007, 2000, 0},
	{"glassestype3", 19008, 2000, 0},
	{"glassestype4", 19009, 2000, 0},
	{"glassestype5", 19010, 2000, 0},
	{"glassestype6", 19011, 2000, 0},
	{"glassestype7", 19012, 2000, 0},
	{"glassestype8", 19013, 2000, 0},
	{"glassestype9", 19014, 2000, 0},
	{"glassestype10", 19015, 2000, 0},
	{"glassestype11", 19016, 2000, 0},
	{"glassestype12", 19017, 2000, 0},
	{"glassestype13", 19018, 2000, 0},
	{"glassestype14", 19019, 2000, 0},
	{"glassestype15", 19020, 2000, 0},
	{"glassestype16", 19021, 2000, 0},
	{"glassestype17", 19022, 2000, 0},
	{"glassestype18", 19023, 2000, 0},
	{"glassestype19", 19024, 2000, 0},
	{"glassestype20", 19025, 2000, 0},
	{"glassestype21", 19026, 2000, 0},
	{"glassestype22", 19027, 2000, 0},
	{"glassestype23", 19028, 2000, 0},
	{"glassestype24", 19029, 2000, 0},
	{"glassestype25", 19030, 2000, 0},
	{"glassestype26", 19031, 2000, 0},
	{"glassestype27", 19032, 2000, 0},
	{"glassestype28", 19033, 2000, 0},
	{"glassestype29", 19034, 2000, 0},
	{"glassestype30", 19035, 2000, 0},
	{"policeglasses1", 19138, 2300, 0},
	{"policeglasses2", 19139, 2300, 0},
	{"policeglasses3", 19140, 2300, 0},
	{"bandana1", 18891, 600, 0},	
	{"bandana2", 18892, 600, 0},
	{"bandana3", 18893, 600, 0},
	{"bandana4", 18894, 600, 0},
	{"bandana5", 18895, 600, 0},
	{"bandana6", 18896, 600, 0},
	{"bandana7", 18897, 600, 0},
	{"bandana8", 18898, 600, 0},
	{"bandana9", 18899, 600, 0},
	{"bandana10", 18900, 600, 0},
	{"bandana11", 18901, 600, 0},
	{"bandana12", 18902, 600, 0},
	{"bandana13", 18903, 600, 0},
	{"bandana14", 18904, 600, 0},
	{"bandana15", 18905, 600, 0},
	{"bandana16", 18906, 600, 0},
	{"bandana17", 18907, 600, 0},
	{"bandana18", 18908, 600, 0},
	{"bandana19", 18909, 600, 0},
	{"bandana20", 18910, 600, 0},
	{"mask1", 18911, 500, 0},
	{"mask2", 18912, 500, 0},
	{"mask3", 18913, 500, 0},
	{"mask4", 18914, 500, 0},
	{"mask5", 18915, 500, 0},
	{"mask6", 18916, 500, 0},
	{"mask7", 18917, 500, 0},
	{"mask8", 18918, 500, 0},
	{"mask9", 18919, 500, 0},
	{"mask10", 18920, 500, 0},
	{"watchtype1", 19039, 3000, 0},
	{"watchtype2", 19040, 3000, 0},
	{"watchtype3", 19041, 3000, 0},
	{"watchtype4", 19042, 3000, 0},
	{"watchtype5", 19043, 3000, 0},
	{"watchtype6", 19044, 3000, 0},
	{"watchtype7", 19045, 3000, 0},
	{"watchtype8", 19046, 3000, 0},
	{"watchtype9", 19047, 3000, 0},
	{"watchtype10", 19048, 3000, 0},
	{"watchtype11", 19049, 3000, 0},
	{"watchtype12", 19050, 3000, 0},
	{"watchtype13", 19051, 3000, 0},
	{"watchtype14", 19052, 3000, 0},
	{"watchtype15", 19053, 3000, 0},
	{"beret1", 18921, 1150, 0},
	{"beret2", 18922, 1150, 0},
	{"beret3", 18923, 1150, 0},
	{"beret4", 18924, 1150, 0},
	{"beret5", 18925, 1150, 0},
	{"cj_tommy_hat", 2052, 200, 0},
	{"cj_jerry_hat", 2053, 200, 0},
	{"cj_capt_hat", 2054, 2000, 0},
	{"hardhat1", 18638, 300, 0},
	{"hardhat2", 19093, 450, 0},
	{"hardhat3", 19160, 450, 0},
	{"blackhat1", 18639, 600, 0},
	{"hat1", 18926, 650, 0},
	{"hat2", 18927, 650, 0},
	{"hat3", 18928, 650, 0},
	{"hat4", 18929, 650, 0},
	{"hat5", 18930, 650, 0},
	{"hat6", 18931, 650, 0},
	{"hat7", 18932, 650, 0},
	{"hat8", 18933, 650, 0},
	{"hat9", 18934, 650, 0},
	{"hat10", 18935, 650, 0},
	{"hatboater1", 18944, 800, 0},
	{"hatboater2", 18945, 800, 0},
	{"hatboater3", 18946, 800, 0},
	{"hatbowler1", 18947, 1200, 0},
	{"hatbowler2", 18948, 1200, 0},
	{"hatbowler3", 18949, 1200, 0},
	{"hatbowler4", 18950, 1200, 0},
	{"hatbowler5", 18951, 1200, 0},
	{"hatbowler6", 19488, 1200, 0},
	{"cowboyhat1", 19095, 1150, 0},
	{"cowboyhat2", 18962, 1150, 0},
	{"cowboyhat3", 19096, 1150, 0},
	{"cowboyhat4", 19097, 1150, 0},
	{"cowboyhat5", 19098, 1150, 0},
	{"hatman1", 18967, 650, 0},
	{"hatman2", 18968, 650, 0},
	{"hatman3", 18969, 650, 0},
	{"hatman3", 18969, 650, 0},
	{"hattiger1", 18970, 1500, 0},
	{"hatcool1", 18971, 1500, 0},
	{"hatcool2", 18972, 1500, 0},
	{"hatcool3", 18973, 1500, 0},
	{"santahat1", 19064, 100, 0},
	{"santahat2", 19065, 100, 0},
	{"santahat3", 19066, 100, 0},
	{"hoodyhat1", 19067, 500, 0},
	{"hoodyhat2", 19068, 500, 0},
	{"hoodyhat3", 19069, 500, 0},
	{"policehat1", 19161, 2500, 0},
	{"policehat2", 19162, 2500, 0},
	{"tophat01", 19352, 700, 0},
	{"tophat02", 19487, 700, 0},
	{"pilothat01", 19520, 3000, 0},
	{"policehat01", 19521, 3000, 0},
	{"witcheshat1", 19528, 150, 0},
	{"strawhat1", 19553, 450, 0},
	{"pizzahat1", 19558, 100, 0},
	{"hikerbackpack1", 19559, 600, 0},
	{"hair1", 19517, 1000, 0},
    {"hair2", 19516, 1000, 0},
    {"hair3", 19077, 1000, 0},
    {"hair4", 18975, 1000, 0},
    {"cluckinbellhat", 19137, 2500, 0},
    {"firehat01", 19330, 3000, 0},
    {"firehat02", 19331, 3000, 0},
    {"burgershothat1", 19094, 2000, 0},
    {"captruker1", 18961, 1000, 0},
    {"bassguitar01", 19317, 2100, 0},
    {"bassguitar02", 19318, 2100, 0},
    {"boxinghelmet01", 18952, 1500, 0},
    {"hockeymas1", 19036, 1700, 0},
    {"theparrot1", 19078, 7500, 0},
    {"armour", 19515, 7000, 0},
    {"bdupsmask1", 11704, 3500, 0},
    {"glimpmask1", 19163, 2500, 0},
    {"headphones02", 19422, 1500, 0},
    {"parachute", 371, 2200, 0}
};

new 
Binco_Shop_Male_Skins[][] =  
{
	/* BINCO - HOMBRE */
	{4, 75      , 0},
	{5, 75      , 0},
	{6, 90      , 0},
	{7, 80      , 0},
	{21, 121    , 0},
	{44, 65     , 0},
	{47, 119    , 0},
	{101, 149   , 0},
	{127, 89    , 0},
	{128, 25    , 0},
	{134, 25    , 0},
	{135, 25    , 0},
	{137, 19    , 0},
	{160, 55    , 0},
	{161, 68    , 0},
	{168, 39    , 0},
	{176, 79    , 0},
	{177, 65    , 0},
	{179, 110   , 0},
	{184, 150   , 0},
	{188, 160   , 0},
	{200, 15    , 0},
	{212, 30    , 0},
	{230, 10    , 0},
	{258, 69    , 0},
	{259, 69    , 0},
	{262, 50	, 0},
	{86, 70		, 0},
	{102, 100	, 0},
	{103, 100	, 0},
	{104, 100	, 0},
	{105, 100	, 0},
	{106, 100	, 0},
	{107, 100	, 0},
	{108, 100	, 0},
	{109, 100	, 0},
	{110, 100	, 0},
	{111, 100	, 0},
	{112, 100	, 0},
	{113, 100	, 0},
	{114, 100	, 0},
	{115, 100	, 0},
	{116, 100	, 0},
	{117, 100	, 0},
	{118, 100	, 0},
	{119, 100	, 0},
	{120, 100	, 0},
	{121, 100	, 0},
	{122, 100	, 0},
	{123, 100	, 0},
	{124, 100	, 0},
	{125, 100	, 0},
	{126, 100	, 0}
},

Binco_Shop_Female_Skins[][] =  
{
	/* BINCO - MUJER */
	{13, 120   , 0},
	{41, 59    , 0},
	{56, 190   , 0},
	{65, 110   , 0},
	{69, 100   , 0},
	{75, 50    , 0},
	{89, 69    , 0},
	{151, 89   , 0},
	{152, 3000 , 0},
	{207, 500  , 0},
	{226, 120  , 0},
	{298, 900  , 0}
},

Suburban_Shop_Male_Skins[][] =  
{
	/* SUBURBAN - HOMBRE */
	{2, 100   , 0},
	{3, 140   , 0},
	{20, 190  , 0},
	{43, 180  , 0},
	{48, 145  , 0},
	{60, 250  , 0},
	{100, 300 , 0},
	{112, 200 , 0},
	{119, 49  , 0},
	{143, 199 , 0},
	{180, 150 , 0},
	{183, 100 , 0},
	{184, 140 , 0},
	{241, 200 , 0},
	{242, 190 , 0},
	{247, 450 , 0},
	{248, 499 , 0},
	{249, 650 , 0},
	{264, 5   , 0}
},

Suburban_Shop_Female_Skins[][] =  
{
	/* SUBURBAN - MUJER */
	{39, 109  , 0},
	{56, 100  , 0},
	{88, 140  , 0},
	{131, 200 , 0},
	{195, 199 , 0}
},

Prolaps_Shop_Male_Skins[][] =  
{
	/* PROLAPS - HOMBRE */
	{29, 129  , 0},
	{36, 140  , 0},
	{37, 150  , 0},
	{51, 160  , 0},
	{52, 170  , 0},
	{96, 200  , 0},
	{99, 700  , 0},
	{206, 499 , 0},
	{154, 199 , 0}
},

Prolaps_Shop_Female_Skins[][] =  
{
	/* PROLAPS - MUJER */
	{41, 199 , 0},
	{90, 250 , 0},
	{92, 860 , 0},
	{138, 150, 0},
	{139, 150, 0},
	{140, 159, 0},
	{190, 150, 0},
	{192, 180, 0},
	{193, 195, 0}
},

Didier_Shop_Male_Skins[][] =  
{
	/* DIDIER - HOMBRE */
	{17, 1500  , 0},
	{46, 1900  , 0},
	{57, 1220  , 0},
	{82, 3400  , 0},
	{83, 3400  , 0},
	{84, 3400  , 0},
	{124, 3500 , 0},
	{147, 6000 , 0},
	{163, 3000 , 0},
	{166, 3000 , 0},
	{171, 4000 , 0},
	{187, 4500 , 0},
	{223, 3100 , 0},
	{240, 1500 , 0},
	{295, 3000 , 0}
},

Didier_Shop_Female_Skins[][] =  
{
	/* DIDIER - MUJER */
	{11, 1500  , 0},
	{12, 3000  , 0},
	{40, 2500  , 0},
	{91, 8000  , 0},
	{141, 3500 , 0},
	{169, 4000 , 0},
	{172, 2100 , 0},
	{194, 2000 , 0},
	{214, 25000, 0},
	{215, 3200 , 0},
	{216, 10500, 0},
	{219, 9500 , 0}
},

Victim_Shop_Male_Skins[][] =  
{
	/* VICTIM - HOMBRE */
	{19, 400   , 0},
	{46, 1200  , 0},
	{59, 900   , 0},
	{72, 599   , 0},
	{73, 699   , 0},
	{98, 339   , 0},
	{121, 200  , 0},
	{170, 500  , 0},
	{185, 400  , 0},
	{186, 900  , 0},
	{188, 350  , 0},
	{221, 700  , 0},
	{223, 1200 , 0},
	{250, 50000, 0},
	{289, 699  , 0},
	{299, 700  , 0},
	{303, 500  , 0},
	{304, 700  , 0}
},

Victim_Shop_Female_Skins[][] =  
{
	/* VICTIM - MUJER */
	{12, 2900  , 0},
	{40, 3000  , 0},
	{55, 1010  , 0},
	{56, 400   , 0},
	{192, 3000 , 0},
	{211, 3500 , 0},
	{226, 600  , 0},
	{233, 900  , 0}
},

Zip_Shop_Male_Skins[][] =  
{
	/* ZIP - HOMBRE */
	{121, 190  , 0},
	{170, 500  , 0},
	{185, 400  , 0},
	{186, 900  , 0},
	{19, 400   , 0},
	{46, 1200  , 0},
	{59, 905   , 0},
	{72, 400   , 0},
	{73, 650   , 0},
	{98, 320   , 0},
	{250, 49999, 0},
	{289, 622  , 0},
	{299, 730  , 0},
	{303, 550  , 0},
	{188, 350  , 0},
	{221, 700  , 0},
	{223, 1200 , 0},
	{304, 700  , 0}
},

Zip_Shop_Female_Skins[][] =  
{
	/* ZIP - MUJER */
	{56, 405    , 0},
	{192, 3010  , 0},
	{211, 3520  , 0},
	{226, 620   , 0},
	{233, 950   , 0},
	{12, 2904   , 0},
	{40, 3002   , 0},
	{55, 1011   , 0}
};

enum
{
	PICKUP_TYPE_NONE,
	PICKUP_TYPE_ENTER_EXIT,
	PICKUP_TYPE_ATM,
	PICKUP_TYPE_PROPERTY
};


new Intro_Skins[][] =
{
	{ // HOMBRE 	
		170,
		158,
		184,
		220,
		183,
		73
	},
	
	{ // MUJER
		192,
		40, 
		226,
		41, 
		13, 
		298,
	}
};

new Intro_Music[][] =
{
	"https://localhost/some_music.mp3"
};


new Float:Fuel_Stations[][] =
{
	{1942.679443, -1771.374511, 13.390598},
	{654.678710, -570.627807, 16.335937},
	{1384.011962, 457.825012, 19.995258},
	{-1669.027221, 411.541076, 7.179687},
	{-2409.644042, 976.147644, 45.307708},
	{-1328.633666, 2675.913818, 50.062500},
	{612.890563, 1692.938720, 6.992187},
	{-1607.715820, -2717.499023, 48.539062},
	{2146.831542, 2743.855224, 10.820312},
	{2197.993408, 2475.015625, 10.820312},
	{2115.124267, 926.094909, 10.960937},
	{1595.974731, 2193.016845, 10.820312},
	{-1477.559326, 1858.962524, 32.639846},
	{-100.281738, -1178.148193, 2.940625}
};

new Float:Hospital_Spawn_Positions[][] =  
{ 
	{2034.197875, -1403.040039, 17.294845, 180.0},
	{1172.832763, -1323.269531, 15.400051, 270.0},
	{1242.235595, 328.113281, 19.755510, 0.0},
	{-2201.566162, -2307.610839, 30.625000, 320.0},
	{-2655.108886, 639.278625, 14.453125, 180.0},
	{-318.812774, 1050.359130, 20.340259, 0.0},
	{-1514.855590, 2520.366699, 55.909828, 0.0},
	{1583.311401, 1768.952758, 10.820312, 90.0}
};

new Float:Hospital_Cameras_Positions[][] =
{
	{2007.3301, -1442.3809, 26.7332, 2008.0043, -1441.6445, 26.4982},
	{1209.2427, -1314.4705, 23.4945, 1208.5284, -1315.1681, 23.3195},
	{1260.2025, 342.6251, 22.3913, 1259.4681, 341.9478, 22.2512},
	{-2200.5859, -2316.3057, 31.7932, -2200.8340, -2315.3367, 31.6932},
	{-2530.8450, 568.0942, 29.4603, -2531.6973, 568.6146, 29.4553},
	{-305.5014, 1068.6696, 24.2657, -306.1943, 1067.9514, 24.0607},
	{-1504.2892, 2553.1243, 61.1113, -1504.5568, 2552.1619, 60.8414},
	{1624.5881, 1837.4691, 12.5740, 1623.9382, 1836.7124, 12.4690}
};

/* TEXTDRAWS */
#define MAX_PLAYER_MAP_GPS_POINTS 20
enum Player_Textdraws_Enum
{
	PlayerText:ptextdraw_REPUTATION[3], // Barra rep hud
	PlayerText:ptextdraw_HOSPITAL[3], //Barra recuperando vida despues de morir
	PlayerText:ptextdraw_CLOTHING_SHOP[6], //Tiendas de ropas
	PlayerText:ptextdraw_HUNGRY[4], //Barra hambre
	PlayerText:ptextdraw_THIRST[4], //Barra sed
	PlayerText:ptextdraw_REGISTER_SKIN[10],
	PlayerText:ptextdraw_TOYS_SHOP[10],
	PlayerText:ptextdraw_PROPERTY_CONSTRUCTOR[6],
	PlayerText:ptextdraw_SPEEDO_METER[6],
	PlayerText:ptextdraw_TAXI_METER[5],
	PlayerText:ptextdraw_TRUCK_LOAD[4],
	PlayerText:ptextdraw_RECYCLE_TRASH[3],
	PlayerText:ptextdraw_PLANT_PLANT[4],
	PlayerText:ptextdraw_PLAYER_GPS_MAP[MAX_PLAYER_MAP_GPS_POINTS],
	PlayerText:ptextdraw_WANTED_LEVEL[2],
	PlayerText:ptextdraw_SHOP_BUTTONS[5],
	PlayerText:ptextdraw_SHOP_ARTICLES_PAGE,
	PlayerText:ptextdraw_SHOP_ARTICLES_MODEL[6],
	PlayerText:ptextdraw_SHOP_ARTICLES_PRICE[6],
	PlayerText:ptextdraw_SHOP_ARTICLE_NUMBER,
	PlayerText:ptextdraw_SHOP_ARTICLE_INFO,
	PlayerText:ptextdraw_SHOP_ARTICLE_MODELID,
	PlayerText:ptextdraw_TUNING_SHOP
};
new PlayerTextdraws[MAX_PLAYERS][Player_Textdraws_Enum];

#define map_td_X 3.0
#define map_td_Y 134.0
#define map_td_SIZE_X 175.0
#define map_td_SIZE_Y 190.0

enum Textdraws_Enum
{
	Text:textdraw_WATER_MARK, // Marca de agua "Super RolePlay 1.10"
	Text:textdraw_LOAD_SCREEN[3],
	Text:textdraw_SERVER_TIME,
	Text:textdraw_GPS_MAP[3],
	Text:textdraw_SHOP[5],
	Text:textdraw_SHOP_ARTICLES_BOX[6],
	Text:textdraw_SHOP_ARTICLE_BOX,
	Text:textdraw_TERRITORY_BOX,
	Text:textdraw_SHOP_TUNING[5]
};
new Textdraws[Textdraws_Enum];


/*enum
{
	ACCOUNT_STATE_NORMAL,
	ACCOUNT_STATE_BANNED,
	ACCOUNT_STATE_TEMPBAN
};*/

#define MIN_PASS_LENGTH	6
#define MAX_PASS_LENGTH	18

enum Account_Enum
{
	ac_ID,
	ac_IP[16],
	ac_NAME[24],
	ac_EMAIL[32],
	ac_PASS[64 + 1],
	ac_SALT[16],
	ac_LAST_CONNECTION[24],
	ac_TIME_PLAYING,
	ac_LEVEL,
	ac_REP,
	ac_STATE,
	reg_DATE[24], //Fecha de registro de la tabla REGISTRO
	ac_DOUBT_CHANNEL,
	ac_TIME_FOR_REP, // En MS
	ac_ADMIN_LEVEL,
	ac_PAYDAY_REP,
	ac_SU,
	ac_SU_EXPIRE_DATE[24],
	ac_SD
};
new ACCOUNT_INFO[MAX_PLAYERS][Account_Enum]; // AI (AccountInfo)

enum Character_Enum
{
	ch_SKIN,
	ch_CASH,
	Float:ch_POS[3],
	Float:ch_ANGLE,
	ch_STATE,
	ch_INTERIOR,
	ch_INTERIOR_EXTRA,
	ch_FIGHT_STYLE,
	Float:ch_HEALTH,
	Float:ch_ARMOUR,
	ch_SEX,
	Float:ch_HUNGRY,
	Float:ch_THIRST,
	ch_BLACK_MARKET_LEVEL,
	ch_WANTED_LEVEL,
	ch_POLICE_JAIL_TIME,
	ch_POLICE_JAIL_ID //interior
};
new CHARACTER_INFO[MAX_PLAYERS][Character_Enum]; // CI (CharacterInfo)

enum Bank_Account_Enum
{
	bank_account_ID,
	bank_account_BALANCE
};
new BANK_ACCOUNT[MAX_PLAYERS][Bank_Account_Enum]; //BA (BankAccount)


#define MAX_PLAYER_POCKET_OBJECTS 10
enum Player_Pocket_Enum
{
	bool:player_pocket_VALID,
	player_pocket_object_ID,
	player_pocket_object_NAME[24],
	Float:player_pocket_object_HUNGRY,
	Float:player_pocket_object_THIRST,
	player_pocket_object_DRUNK
};
new PLAYER_POCKET[MAX_PLAYERS][MAX_PLAYER_POCKET_OBJECTS][Player_Pocket_Enum]; // PP (PlayerPocket)


new 
	DIALOG_FOOD_PIZZA_String[800],
	DIALOG_FOOD_CLUCKIN_String[800],
	DIALOG_FOOD_BURGER_String[800],
	DIALOG_247_LIST_String[34 + 55 * sizeof Supermarket_Product_List],
	DIALOG_ANIMS_String[1000],
	DIALOG_PLAYER_GPS_SITE_0_String[90 * (sizeof(Hospital_Spawn_Positions) + 1)],
	DIALOG_PLAYER_GPS_SITE_7_String[90 * (sizeof(SELL_VEHICLES_SHOPS_SPAWN) + 1)],
	DIALOG_CREATE_CREW_COLOR_String[4200];


#define HidePlayerDialog(%1)		ShowPlayerDialog(%1, -1, 0, " ", " ", " ", " ")


// PLAYER WEAPONS
#define NO_WEAPON 0
enum enum_WEAPON_INFO
{
	bool:weapon_info_ANTI_CHEAT,
	bool:weapon_info_AMMO,
	weapon_info_TYPE,
	weapon_info_NAME[32],
	weapon_info_SLOT,
	weapon_info_SHOT_TIME
};
new WEAPON_INFO[][enum_WEAPON_INFO] = 
{
	{false, false, NO_WEAPON, "Puño", 0, 250},
	{true, false, WEAPON_BRASSKNUCKLE, "Manopla", 0, 250},
	{true, false, WEAPON_GOLFCLUB, "Palo de golf", 1, 250},
	{true, false, WEAPON_NITESTICK, "Porra", 1, 250},
	{true, false, WEAPON_KNIFE, "Cuchillo", 1, 250},
	{true, false, WEAPON_BAT, "Bate", 1, 250},
	{true, false, WEAPON_SHOVEL, "Pala", 1, 250},
	{true, false, WEAPON_POOLSTICK, "Taco", 1, 250},
	{true, false, WEAPON_KATANA, "Katana", 1, 250},
	{true, false, WEAPON_CHAINSAW, "Motosierra", 1, 30},
	{true, false, WEAPON_DILDO, "Dildo morado", 10, 250},
	{true, false, WEAPON_DILDO2, "Dildo", 10, 250},
	{true, false, WEAPON_VIBRATOR, "Vibrador", 10, 250},
	{true, false, WEAPON_VIBRATOR2, "Vibrador plateado", 10, 250},
	{true, false, WEAPON_FLOWER, "Flores", 10, 250},
	{true, false, WEAPON_CANE, "Bastón", 10, 250},
	{true, true, WEAPON_GRENADE, "Granada", 8, 500},
	{true, true, WEAPON_TEARGAS, "Gas lacrimógeno", 8, 500},
	{true, true, WEAPON_MOLTOV, "Cocktail Molotov", 8, 500},
	{false, false, NO_WEAPON, "", 0, 0},
	{false, false, NO_WEAPON, "", 0, 0},
	{false, false, NO_WEAPON, "", 0, 0},
	{true, true, WEAPON_COLT45, "9mm", 2, 160},
	{true, true, WEAPON_SILENCED, "9mm silenciada", 2, 120},
	{true, true, WEAPON_DEAGLE, "Desert Eagle", 2, 950},
	{true, true, WEAPON_SHOTGUN, "Escopeta", 3, 800},
	{true, true, WEAPON_SAWEDOFF, "Escopeta recortada", 3, 120},
	{true, true, WEAPON_SHOTGSPA, "Escopeta de combate", 3, 120},
	{true, true, WEAPON_UZI, "Micro UZI", 4, 70},
	{true, true, WEAPON_MP5, "MP5", 4, 70},
	{true, true, WEAPON_AK47, "Ak-47", 5, 80},
	{true, true, WEAPON_M4, "M4", 5, 80},
	{true, true, WEAPON_TEC9, "TEC-9", 4, 70},
	{true, true, WEAPON_RIFLE, "Rifle", 6, 1000},
	{true, true, WEAPON_SNIPER, "Sniper", 6, 1000},
	{true, true, WEAPON_ROCKETLAUNCHER, "Lanzacohetes RPG", 7, 1000},
	{true, true, WEAPON_HEATSEEKER, "Lanzacohetes HS", 7, 1000},
	{true, true, WEAPON_FLAMETHROWER, "Lanzallamas", 7, 500},
	{true, true, WEAPON_MINIGUN, "Minigun", 7, 0},
	{true, true, WEAPON_SATCHEL, "Bomba detonadora", 8, 500},
	{false, false, WEAPON_BOMB, "Detonador", 12, 500},
	{true, true, WEAPON_SPRAYCAN, "Bote de spray", 9, 10},
	{true, true, WEAPON_FIREEXTINGUISHER, "Extintor", 9, 10},
	{true, false, WEAPON_CAMERA, "Cámara", 9, 500},
	{true, false, NO_WEAPON, "Gafas de visión nocturna", 11, 0},
	{true, false, NO_WEAPON, "Gafas térmicas", 11, 0},
	{false, false, WEAPON_PARACHUTE, "Paracaídas", 11, 0}
};

enum enum_BLACK_MARKT_WEAPONS
{
	black_market_EXP,
	black_market_WEAPON_ID,
	black_market_WEAPON_PRICE_BASE,
	black_market_WEAPON_PRICE
};
new BLACK_MARKT_WEAPONS[][enum_BLACK_MARKT_WEAPONS] = 
{
	{0, 4, 100, 0},
	{0, 5, 100, 0},
	{0, 10, 50, 0},
	{0, 22, 600, 0},
	{0, 23, 650, 0},
	{100, 24, 1200, 0},
	{100, 33, 1500, 0},
	{100, 25, 1600, 0},
	{200, 26, 2200, 0},
	{200, 27, 2800, 0},
	{200, 28, 2500, 0},
	{200, 32, 2800, 0},
	{250, 29, 3500, 0},
	{250, 30, 3600, 0},
	{250, 31, 3800, 0},
	{300, 34, 6500, 0}
};

enum enum_PLAYER_WEAPONS
{
	bool:player_weapon_VALID,
	player_weapon_DB_ID,
	player_weapon_ID,
	player_weapon_AMMO
};
new PLAYER_WEAPONS[MAX_PLAYERS][13][enum_PLAYER_WEAPONS];


enum
{
	TYPE_WARNING,
	TYPE_KICK,
	TYPE_BAN,
	TYPE_TEMP_BAN
};

new ADMIN_LEVELS[][] = 
{
	"Usuario normal",
	"Ayudante",
	"A prueba",
	"Estándar",
	"Líder",
	"Dueño"
};

public OnPlayerConnect(playerid)
{	
	PLAYER_TEMP[playerid][pt_GAME_STATE] = GAME_STATE_CONNECTED;
	PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] = -1;
	PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] = -1;
	PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] = -1;
	PLAYER_TEMP[playerid][pt_HUD_TEXTDRAWS] = false;
	PLAYER_TEMP[playerid][pt_SEE_ACMD_LOG] = true;
	PLAYER_TEMP[playerid][pt_SEE_AC_LOG] = true;
	PLAYER_TEMP[playerid][pt_REGISTER_ACTOR] = INVALID_ACTOR_ID;
	PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = INVALID_PLAYER_ID;
	PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID] = INVALID_PLAYER_ID;
	PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT] = INVALID_STREAMER_ID;
	PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT] = INVALID_STREAMER_ID;
	PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
	PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT] = INVALID_STREAMER_ID;
	PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT] = INVALID_STREAMER_ID;
	PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = INVALID_STREAMER_ID;
	PLAYER_TEMP[playerid][pt_PIZZA_ACTOR] = INVALID_STREAMER_ID;
	PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] = INVALID_PLAYER_ID;
	PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] = INVALID_VEHICLE_ID;
	PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] = INVALID_VEHICLE_ID;
	PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] = INVALID_OBJECT_ID;
	PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] = -1;
	for(new i = 0; i != MAX_OBJECTS_PER_ROUTE; i ++) TRASH_PLAYER_OBJECTS[playerid][i] = INVALID_STREAMER_ID;
	
	GetPlayerName(playerid, PLAYER_TEMP[playerid][pt_NAME], 24);
	GetPlayerIp(playerid, PLAYER_TEMP[playerid][pt_IP], 16);
	
	EnablePlayerCameraTarget(playerid, true);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	TogglePlayerControllable(playerid, true);
	HidePlayerDialog(playerid);
	ResetPlayerMoney(playerid);
	CancelSelectTextDrawEx(playerid);
	SetPlayerTime(playerid, 12, 0);
	SetPlayerWeather(playerid, 0);
	SetPlayerScore(playerid, 0);
	ResetPlayerWeapons(playerid);
	SetPlayerColorEx(playerid, PLAYER_COLOR);
	CancelEdit(playerid);
	
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][0]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][1]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][2]);
	
	if(!IsValidName(PLAYER_TEMP[playerid][pt_NAME]) || strfind( PLAYER_TEMP[playerid][pt_NAME], "_", true) == -1)
	{
		PLAYER_TEMP[playerid][pt_USER_VALID_NAME] = false;
		ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", "Bienvenido, has entrado a un servidor de rol.\n\nTu nombre no cumple con el formato necesario.\nPor favor utilice el formato: Nombre_Apellido.", "Entiendo", "");
		KickEx(playerid, 500);
		return 1;
	}
	
	new num_players_on_ip = GetNumberOfPlayersOnThisIP(PLAYER_TEMP[playerid][pt_IP]);
	if(num_players_on_ip > 3)
	{
		ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", "Ha sido expulsado por exceder el máximo de conexiones desde una IP.", "Entiendo", "");
		KickEx(playerid, 500);
		return 1;
	}
	
	
	new DB_Query[550], DBResult:ban_Result;
	format(DB_Query, sizeof DB_Query, "SELECT DATETIME('NOW') AS `NOW`, `BANS`.*, `BAD_HISTORY`.* FROM `BANS`, `BAD_HISTORY` WHERE (`BANS`.`NAME` = '%q' OR `BANS`.`IP` = '%q') AND `BAD_HISTORY`.`ID` = `BANS`.`ID_HISTORY`;", PLAYER_TEMP[playerid][pt_NAME], PLAYER_TEMP[playerid][pt_IP]);
	ban_Result = db_query(Database, DB_Query);
	
	if(db_num_rows(ban_Result))
	{
		new now[24], name[24], expire_date[24], type, by, text[128], date[24];
		
		db_get_field_assoc(ban_Result, "NOW", now, 24);
		db_get_field_assoc(ban_Result, "NAME", name, 24);
		db_get_field_assoc(ban_Result, "EXPIRE_DATE", expire_date, 24);
		type = db_get_field_assoc_int(ban_Result, "TYPE");
		by = db_get_field_assoc_int(ban_Result, "BY");
		db_get_field_assoc(ban_Result, "TEXT", text, 128);
		db_get_field_assoc(ban_Result, "DATE", date, 24);
		
		if(type == TYPE_BAN)
		{
			new dialog[480];
			format(dialog, sizeof dialog, 
				
				"\
					Esta IP o cuenta está expulsada permanentemente, detalles:\n\
					\n\
					Tu nombre: %s\n\
					Tu IP: %s\n\
					\n\
					Nombre: %s\n\
					Expulsado por: %d\n\
					Fecha expulsión: %s\n\
					Razón: %s\n\
					\n\
				",
				
				PLAYER_TEMP[playerid][pt_NAME], PLAYER_TEMP[playerid][pt_IP],
				name, by, date, text
			);
				
			ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
			KickEx(playerid, 500);
		}
		else if(type == TYPE_TEMP_BAN)
		{
			new DBResult:still_banned_Result;
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `BANS` WHERE (`NAME` = '%q' OR `IP` = '%q') AND DATETIME('NOW') >= `EXPIRE_DATE`;", PLAYER_TEMP[playerid][pt_NAME], PLAYER_TEMP[playerid][pt_IP]);
			still_banned_Result = db_query(Database, DB_Query);
			
			if(db_num_rows(still_banned_Result))
			{
				format(DB_Query, sizeof DB_Query, "DELETE FROM `BANS` WHERE (`NAME` = '%q' OR `IP` = '%q');", PLAYER_TEMP[playerid][pt_NAME], PLAYER_TEMP[playerid][pt_IP]);
				db_query(Database, DB_Query);
			}
			else
			{
				new dialog[600];
				format(dialog, sizeof dialog, 
					
					"\
						Esta IP o cuenta está expulsada temporalmente, detalles:\n\
						\n\
						Tu nombre: %s\n\
						Tu IP: %s\n\
						\n\
						Nombre: %s\n\
						Expulsado por: %d\n\
						Fecha expulsión: %s\n\
						Razón: %s\n\
						\n\
						Fecha actual: %s\n\
						Fecha readmisión: %s\n\
						\n\
					",
					
					PLAYER_TEMP[playerid][pt_NAME], PLAYER_TEMP[playerid][pt_IP],
					name, by, date, text, now, expire_date
				);
					
				ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
				KickEx(playerid, 500);
			}
			db_free_result(still_banned_Result);
		}
	}
	db_free_result(ban_Result);
	
	if(PLAYER_TEMP[playerid][pt_KICKED]) return 1;
	
	
	PLAYER_TEMP[playerid][pt_USER_VALID_NAME] = true;
	PLAYER_TEMP[playerid][pt_RP_NAME] = RP_GetPlayerName(playerid);
	
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), 
	"\
		SELECT CUENTA.*, REGISTRO.DATE, PERSONAJE.INTERIOR, PERSONAJE.LOCAL_INTERIOR, PERSONAJE.POS_X, PERSONAJE.POS_Y, PERSONAJE.POS_Z, PERSONAJE.ANGLE, PERSONAJE.STATE AS PSTATE FROM `CUENTA`, `REGISTRO`, `PERSONAJE` WHERE CUENTA.`NAME` = '%q' AND REGISTRO.`ID_USER` = CUENTA.`ID` AND PERSONAJE.`ID_USER` = CUENTA.`ID`;\
		UPDATE `CUENTA` SET `CONNECTED` = '1', `PLAYERID` = '%d' WHERE `NAME` = '%q';\
	", PLAYER_TEMP[playerid][pt_NAME], playerid, PLAYER_TEMP[playerid][pt_NAME]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{		
		ACCOUNT_INFO[playerid][ac_ID] = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "IP", ACCOUNT_INFO[playerid][ac_IP], 16);
		db_get_field_assoc(Result, "NAME", ACCOUNT_INFO[playerid][ac_NAME], 24);
		db_get_field_assoc(Result, "EMAIL", ACCOUNT_INFO[playerid][ac_EMAIL], 32);
		db_get_field_assoc(Result, "PASS", ACCOUNT_INFO[playerid][ac_PASS], 64 + 1);
		db_get_field_assoc(Result, "SALT", ACCOUNT_INFO[playerid][ac_SALT], 16);
	
		db_get_field_assoc(Result, "LAST_CONNECTION", ACCOUNT_INFO[playerid][ac_LAST_CONNECTION], 24);
		ACCOUNT_INFO[playerid][ac_TIME_PLAYING] = db_get_field_assoc_int(Result, "TIME-PLAYING");
		ACCOUNT_INFO[playerid][ac_LEVEL] = db_get_field_assoc_int(Result, "LEVEL");
		ACCOUNT_INFO[playerid][ac_REP] = db_get_field_assoc_int(Result, "REP");
		ACCOUNT_INFO[playerid][ac_STATE] = db_get_field_assoc_int(Result, "STATE");
		db_get_field_assoc(Result, "DATE", ACCOUNT_INFO[playerid][reg_DATE], 24);
		ACCOUNT_INFO[playerid][ac_DOUBT_CHANNEL] = db_get_field_assoc_int(Result, "DOUBT_CHANNEL");
		ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] = db_get_field_assoc_int(Result, "TIME_FOR_REP");
		ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] = db_get_field_assoc_int(Result, "ADMIN_LEVEL");
		ACCOUNT_INFO[playerid][ac_PAYDAY_REP] = db_get_field_assoc_int(Result, "PAYDAY_REP");
		ACCOUNT_INFO[playerid][ac_SU] = db_get_field_assoc_int(Result, "SU");
		db_get_field_assoc(Result, "SU_EXPIRE_DATE", ACCOUNT_INFO[playerid][ac_SU_EXPIRE_DATE], 24);
		ACCOUNT_INFO[playerid][ac_SD] = db_get_field_assoc_int(Result, "SD");
	
		
		CHARACTER_INFO[playerid][ch_INTERIOR] = db_get_field_assoc_int(Result, "INTERIOR");
		CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = db_get_field_assoc_int(Result, "LOCAL_INTERIOR");
		CHARACTER_INFO[playerid][ch_POS][0] = db_get_field_assoc_float(Result, "POS_X");
		CHARACTER_INFO[playerid][ch_POS][1] = db_get_field_assoc_float(Result, "POS_Y");
		CHARACTER_INFO[playerid][ch_POS][2] = db_get_field_assoc_float(Result, "POS_Z");
		CHARACTER_INFO[playerid][ch_ANGLE] = db_get_field_assoc_float(Result, "ANGLE");
		CHARACTER_INFO[playerid][ch_STATE] = db_get_field_assoc_int(Result, "PSTATE");
		
		switch(CHARACTER_INFO[playerid][ch_STATE])
		{
			case ROLEPLAY_STATE_INTERIOR:
			{
				new index = GetEnterExitIndexById(CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA]);
				if(index == -1)
				{
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
					CHARACTER_INFO[playerid][ch_POS][0] = New_User_Pos[0];
					CHARACTER_INFO[playerid][ch_POS][1] = New_User_Pos[1];
					CHARACTER_INFO[playerid][ch_POS][2] = New_User_Pos[2];
					CHARACTER_INFO[playerid][ch_ANGLE] = New_User_Pos[3];
					CHARACTER_INFO[playerid][ch_INTERIOR] = 0;
				}
				else
				{
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
					CHARACTER_INFO[playerid][ch_POS][0] = ENTER_EXIT[index][ee_EXT_X];
					CHARACTER_INFO[playerid][ch_POS][1] = ENTER_EXIT[index][ee_EXT_Y];
					CHARACTER_INFO[playerid][ch_POS][2] = ENTER_EXIT[index][ee_EXT_Z];
					CHARACTER_INFO[playerid][ch_ANGLE] = ENTER_EXIT[index][ee_EXT_ANGLE];
					CHARACTER_INFO[playerid][ch_INTERIOR] = ENTER_EXIT[index][ee_EXT_INTERIOR];
				}
			}
			case ROLEPLAY_STATE_OWN_PROPERTY:
			{
				new index = GetPropertyIndexByID(CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA]);
				if(index == -1)
				{
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
					CHARACTER_INFO[playerid][ch_POS][0] = New_User_Pos[0];
					CHARACTER_INFO[playerid][ch_POS][1] = New_User_Pos[1];
					CHARACTER_INFO[playerid][ch_POS][2] = New_User_Pos[2];
					CHARACTER_INFO[playerid][ch_ANGLE] = New_User_Pos[3];
					CHARACTER_INFO[playerid][ch_INTERIOR] = 0;
				}
				else
				{
					if(PROPERTY_INFO[index][property_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
					{
						CHARACTER_INFO[playerid][ch_POS][0] = PROPERTY_INTERIORS[ PROPERTY_INFO[index][property_ID_INTERIOR] ][property_INT_X];
						CHARACTER_INFO[playerid][ch_POS][1] = PROPERTY_INTERIORS[ PROPERTY_INFO[index][property_ID_INTERIOR] ][property_INT_Y];
						CHARACTER_INFO[playerid][ch_POS][2] = PROPERTY_INTERIORS[ PROPERTY_INFO[index][property_ID_INTERIOR] ][property_INT_Z];
						CHARACTER_INFO[playerid][ch_ANGLE] = PROPERTY_INTERIORS[ PROPERTY_INFO[index][property_ID_INTERIOR] ][property_INT_ANGLE];
						CHARACTER_INFO[playerid][ch_INTERIOR] = PROPERTY_INTERIORS[ PROPERTY_INFO[index][property_ID_INTERIOR] ][property_INT_INTERIOR];
					}
					else
					{
						CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
						CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
						CHARACTER_INFO[playerid][ch_POS][0] = PROPERTY_INFO[index][property_EXT_X];
						CHARACTER_INFO[playerid][ch_POS][1] = PROPERTY_INFO[index][property_EXT_Y];
						CHARACTER_INFO[playerid][ch_POS][2] = PROPERTY_INFO[index][property_EXT_Z];
						CHARACTER_INFO[playerid][ch_ANGLE] = PROPERTY_INFO[index][property_EXT_ANGLE];
						CHARACTER_INFO[playerid][ch_INTERIOR] = PROPERTY_INFO[index][property_EXT_INTERIOR];
					}
				}
			}
			case ROLEPLAY_STATE_GUEST_PROPERTY:
			{
				new index = GetPropertyIndexByID(CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA]);
				if(index == -1)
				{
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
					CHARACTER_INFO[playerid][ch_POS][0] = New_User_Pos[0];
					CHARACTER_INFO[playerid][ch_POS][1] = New_User_Pos[1];
					CHARACTER_INFO[playerid][ch_POS][2] = New_User_Pos[2];
					CHARACTER_INFO[playerid][ch_ANGLE] = New_User_Pos[3];
					CHARACTER_INFO[playerid][ch_INTERIOR] = 0;
				}
				else
				{
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
					CHARACTER_INFO[playerid][ch_POS][0] = PROPERTY_INFO[index][property_EXT_X];
					CHARACTER_INFO[playerid][ch_POS][1] = PROPERTY_INFO[index][property_EXT_Y];
					CHARACTER_INFO[playerid][ch_POS][2] = PROPERTY_INFO[index][property_EXT_Z];
					CHARACTER_INFO[playerid][ch_ANGLE] = PROPERTY_INFO[index][property_EXT_ANGLE];
					CHARACTER_INFO[playerid][ch_INTERIOR] = PROPERTY_INFO[index][property_EXT_INTERIOR];
				}
			}
		}
		
		PlayAudioStreamForPlayer(playerid, Intro_Music[random(sizeof(Intro_Music))]); // Música
		PLAYER_TEMP[playerid][pt_USER_EXIT] = true;
	}
	else
	{
		PlayAudioStreamForPlayer(playerid, Intro_Music[0]); // Música
		// Nuevo usuario
	}
	db_free_result(Result);
	
	CreatePlayerTextDraws(playerid);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	if(ACCOUNT_INFO[playerid][ac_ID] != 0)
	{
		new DB_Query[128];
		format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `CONNECTED` = '0', PLAYERID = '-1' WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
		db_query(Database, DB_Query);
	}
	if(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR] != INVALID_ACTOR_ID)
	{
		DestroyActor(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR]);
		PLAYER_TEMP[playerid][pt_REGISTER_ACTOR] = INVALID_ACTOR_ID;
	}
	
	if(PLAYER_TEMP[playerid][pt_USER_LOGGED]) // ha pasado la pantalla de registro/login y ha estado jugando
	{
		ACCOUNT_INFO[playerid][ac_TIME_PLAYING] += gettime() - PLAYER_TEMP[playerid][pt_TIME_PLAYING];
		if(PLAYER_TEMP[playerid][pt_USER_EXIT])
		{
			if(PLAYER_CREW[playerid][player_crew_VALID]) CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ONLINE_MEMBERS] --;
			
			if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] != INVALID_VEHICLE_ID)
			{
				if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_LAST_DRIVER] == playerid) GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_LAST_DRIVER] = INVALID_PLAYER_ID;
			}
			
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(vehicleid)
				{
					GLOBAL_VEHICLES[ vehicleid ][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
					GLOBAL_VEHICLES[ vehicleid ][gb_vehicle_DRIVER] = INVALID_PLAYER_ID;
					GLOBAL_VEHICLES[ vehicleid ][gb_vehicle_LAST_DRIVER] = INVALID_PLAYER_ID;
					GLOBAL_VEHICLES[ vehicleid ][gb_vehicle_OCCUPIED] = false;
				}
			}
			
			if(PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] != INVALID_OBJECT_ID) DestroyPlayerObject(playerid, PLAYER_TEMP[playerid][pt_PIVOT_OBJECT]);
			
			EndPlayerJob(playerid, false);
			
			if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] -= gettime() - PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME];
			
			GetPlayerPos(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2]);
			GetPlayerFacingAngle(playerid, CHARACTER_INFO[playerid][ch_ANGLE]);
			CHARACTER_INFO[playerid][ch_INTERIOR] = GetPlayerInterior(playerid);
			PLAYER_TEMP[playerid][pt_TIME_PASSED_LAST_REP] = gettime() * 1000 - PLAYER_TEMP[playerid][pt_TIME_PASSED_LAST_REP];
			ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] -= PLAYER_TEMP[playerid][pt_TIME_PASSED_LAST_REP];
			
			if(CHARACTER_INFO[playerid][ch_HEALTH] <= 0.0) CHARACTER_INFO[playerid][ch_HEALTH] = 1.0;
			if(CHARACTER_INFO[playerid][ch_HEALTH] > 100.0) CHARACTER_INFO[playerid][ch_HEALTH] = 100.0;
			if(CHARACTER_INFO[playerid][ch_ARMOUR] > 100.0) CHARACTER_INFO[playerid][ch_ARMOUR] = 100.0;
			
			SaveUserData(playerid);
			SavePlayerToysData(playerid);
			SavePlayerVehicles(playerid, true);
			SavePlayerSkills(playerid);
			SavePlayerWorks(playerid);
			SavePlayerMisc(playerid);
			SavePlayerWeaponsData(playerid);
			
			new disconnect_message[128];
			switch(reason)
			{
				case 0: format(disconnect_message, sizeof disconnect_message, "%s se ha desconectado por error (crash).", PLAYER_TEMP[playerid][pt_RP_NAME]);
				case 1: format(disconnect_message, sizeof disconnect_message, "%s se ha desconectado.", PLAYER_TEMP[playerid][pt_RP_NAME]);
				case 2: format(disconnect_message, sizeof disconnect_message, "%s se ha desconectado porque fue expulsado del servidor.", PLAYER_TEMP[playerid][pt_RP_NAME]);
			}
			NearbyMessage(CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_INTERIOR], GetPlayerVirtualWorld(playerid), 15.0, 0x909D95FF, disconnect_message);
		
			if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) EndPhoneCall(playerid);
		}
	}
	
	new pip[16]; format(pip, sizeof pip, "%s", PLAYER_TEMP[playerid][pt_IP]);
	
	DestroyPlayerCheckpoints(playerid);
	DestroyPlayerTextDraws(playerid);
	for(new i = 0; i != MAX_TIMERS_PER_PLAYER; i++) KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][i]);
	ResetPlayerVariables(playerid);
	
	BlockIpAddress(pip, 12000);
	return 1;
}

ResetPlayerVariables(playerid)
{
	new temp_PLAYER_TEMP[Temp_Enum]; PLAYER_TEMP[playerid] = temp_PLAYER_TEMP;
	new temp_ACCOUNT_INFO[Account_Enum]; ACCOUNT_INFO[playerid] = temp_ACCOUNT_INFO;
	new temp_CHARACTER_INFO[Character_Enum]; CHARACTER_INFO[playerid] = temp_CHARACTER_INFO;
	new temp_BANK_ACCOUNT[Bank_Account_Enum]; BANK_ACCOUNT[playerid] = temp_BANK_ACCOUNT;	
	
	new temp_PLAYER_TOYS[Player_Toys_Info];
	for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++) PLAYER_TOYS[playerid][i] = temp_PLAYER_TOYS;
	
	new temp_PLAYER_POCKET[Player_Pocket_Enum];
	for(new i = 0; i != MAX_PLAYER_POCKET_OBJECTS; i ++) PLAYER_POCKET[playerid][i] = temp_PLAYER_POCKET;
	
	
	new temp_PLAYER_PHONE[Phone_Info_Enum]; PLAYER_PHONE[playerid] = temp_PLAYER_PHONE;
	
	new temp_PLAYER_PHONE_BOOK[Phone_Book_Enum]; 
	for(new i = 0; i != MAX_PHONE_CONTACTS; i ++) PLAYER_PHONE_BOOK[playerid][i] = temp_PLAYER_PHONE_BOOK;
	
	new temp_PLAYER_GPS[Player_GPS_Enum]; 
	for(new i = 0; i != MAX_PLAYER_GPS_SAVES; i ++) PLAYER_GPS[playerid][i] = temp_PLAYER_GPS;
	
	new temp_PLAYER_OBJECT[Player_Objects_Enum]; PLAYER_OBJECT[playerid] = temp_PLAYER_OBJECT;
	
	for(new i = 0; i != sizeof(PLAYER_SKILLS[]); i ++) PLAYER_SKILLS[playerid][i] = 0;
	
	for(new i = 0; i != sizeof(PLAYER_WORKS[]); i ++) PLAYER_WORKS[playerid][i] = 0;
	
	for(new i = 0; i != sizeof(PLAYER_MISC[]); i ++) PLAYER_MISC[playerid][i] = 0;
	
	new temp_PLAYER_PROPERTY_CONSTRUCTO[PLAYER_PROPERTY_CONSTRUCTOR_ENU]; PLAYER_PROPERTY_CONSTRUCTOR[playerid] = temp_PLAYER_PROPERTY_CONSTRUCTO;
	
	PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] = INVALID_PLAYER_ID;
	
	new tmp_PLAYER_WEAPONS[enum_PLAYER_WEAPONS];
	for(new i = 0; i != 13; i ++) PLAYER_WEAPONS[playerid][i] = tmp_PLAYER_WEAPONS;
	
	new tmp_PLAYER_AC_INFO[e_PLAYER_AC_INFO];
	for(new i = 0; i != sizeof(ac_Info); i ++) PLAYER_AC_INFO[playerid][i] = tmp_PLAYER_AC_INFO;
	
	new tmp_PLAYER_CREW[enum_PLAYER_CREW]; PLAYER_CREW[playerid] = tmp_PLAYER_CREW;
	return 1;
}

DestroyPlayerCheckpoints(playerid)
{
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT]))
	{
		DestroyDynamicRaceCP(PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT]))
	{
		DestroyDynamicRaceCP(PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]))
	{
		DestroyDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]);
		PLAYER_TEMP[playerid][pt_PIZZA_ACTOR] = INVALID_STREAMER_ID;
	}
	return 1;
}

GetEnterExitIndexById(id)
{
	for(new i = 0; i != sizeof ENTER_EXIT; i ++)
	{
		if(ENTER_EXIT[i][ee_ID] == 0) continue;
		if(ENTER_EXIT[i][ee_ID] == id) return i;
	}
	return -1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(!success) BlockIpAddress(ip, 12000);
    return 1;
}

public OnPlayerSpawn(playerid)
{
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_OCCUPIED) // Primer spawn
	{
		PLAYER_TEMP[playerid][pt_TIME_PLAYING] = gettime();
		PLAYER_TEMP[playerid][pt_USER_LOGGED] = true;
		
		SetPlayerGangZones(playerid);
		SetPlayerSkillLevels(playerid);
		ApplyAnimation(playerid,"SWAT","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"MEDIC","null",0.0,0,0,0,0,0);
		
		switch(CHARACTER_INFO[playerid][ch_STATE])
		{
			case ROLEPLAY_STATE_NORMAL:
			{
				ShowPlayerHud(playerid);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, false);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
				PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
				
				if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0)
				{
					CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] = 0;
					JailPlayer(playerid);
				}
			}
			case ROLEPLAY_STATE_JAIL:
			{
				CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_JAIL;
				if(CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] < 5) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 5;
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][15]);
				PLAYER_TEMP[playerid][pt_TIMERS][15] = SetTimerEx("UnjailPlayer", CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] * 1000, false, "i", playerid);
				
				PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME] = gettime();
				SetPlayerPosEx(playerid, JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] ][jail_X], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Y], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Z], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_ANGLE], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_INTERIOR], 0, true);
				
				new time = CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] - (gettime() - PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME]);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Te quedan %s minutos de condena.", TimeConvert(time));
				
				ShowPlayerHud(playerid);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, false);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
				PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
			}
			case ROLEPLAY_STATE_ARRESTED:
			{
				if(ACCOUNT_INFO[playerid][ac_SU]) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 150 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
				else CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 300 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
				
				CHARACTER_INFO[playerid][ch_WANTED_LEVEL] = 0;
				
				CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_JAIL;
				if(CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] < 5) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 5;
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][15]);
				PLAYER_TEMP[playerid][pt_TIMERS][15] = SetTimerEx("UnjailPlayer", CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] * 1000, false, "i", playerid);
				
				PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME] = gettime();
				SetPlayerPosEx(playerid, JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] ][jail_X], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Y], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Z], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_ANGLE], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_INTERIOR], 0, true);
				
				new time = CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] - (gettime() - PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME]);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Te quedan %s minutos de condena.", TimeConvert(time));
				
				ShowPlayerHud(playerid);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, false);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
				PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
			}
			case ROLEPLAY_STATE_OWN_PROPERTY:
			{
				new index = GetPropertyIndexByID(CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA]);
				if(index == -1)
				{
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
					CHARACTER_INFO[playerid][ch_POS][0] = New_User_Pos[0];
					CHARACTER_INFO[playerid][ch_POS][1] = New_User_Pos[1];
					CHARACTER_INFO[playerid][ch_POS][2] = New_User_Pos[2];
					CHARACTER_INFO[playerid][ch_ANGLE] = New_User_Pos[3];
					CHARACTER_INFO[playerid][ch_INTERIOR] = 0;
					
					SetPlayerPosEx(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], CHARACTER_INFO[playerid][ch_INTERIOR], 0);
				}
				else
				{
					if(PROPERTY_INFO[index][property_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
					{
						SetPlayerInterior(playerid, PROPERTY_INTERIORS[ PROPERTY_INFO[index][property_ID_INTERIOR] ][property_INT_INTERIOR]);
						SetPlayerVirtualWorld(playerid, PROPERTY_INFO[index][property_ID]);
					}
					else
					{
						CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
						CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
						CHARACTER_INFO[playerid][ch_POS][0] = PROPERTY_INFO[index][property_EXT_X];
						CHARACTER_INFO[playerid][ch_POS][1] = PROPERTY_INFO[index][property_EXT_Y];
						CHARACTER_INFO[playerid][ch_POS][2] = PROPERTY_INFO[index][property_EXT_Z];
						CHARACTER_INFO[playerid][ch_ANGLE] = PROPERTY_INFO[index][property_EXT_ANGLE];
						CHARACTER_INFO[playerid][ch_INTERIOR] = PROPERTY_INFO[index][property_EXT_INTERIOR];
						
						SetPlayerPosEx(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], CHARACTER_INFO[playerid][ch_INTERIOR], 0);
					}
				}
					
				ShowPlayerHud(playerid);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, false);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
				PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
			}
			case ROLEPLAY_STATE_HOSPITAL:
			{
				PLAYER_TEMP[playerid][pt_HOSPITAL] = GetNearestHospitalForPlayer(playerid);
				PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL] = false;
				PLAYER_TEMP[playerid][pt_GAME_STATE] = GAME_STATE_DEAD;
				
				TogglePlayerControllable(playerid, true);
				TogglePlayerSpectatingEx(playerid, true);
				SetPlayerInterior(playerid, 0);
				CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
				PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] = -1;
				PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] = -1;
				
				PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] = 35.0;
				UpdateHospitalSizeTextdrawLife(playerid);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][4]);
				PLAYER_TEMP[playerid][pt_TIMERS][4] = SetTimerEx("HealthUp", 1000, false, "i", playerid);

				DeleteIlegalInv(playerid);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2]);
				
				//ClearPlayerChat(playerid);
				if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0)
				{
					if(ACCOUNT_INFO[playerid][ac_SU]) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 300 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
					else CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 150 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
					
					SendClientMessage(playerid, -1, "{CCCCCC}Fuiste ingresado en el centro médico más cercano.");
					SendClientMessage(playerid, -1, "{CCCCCC}Cuando te recuperes serás llevado a la cárcel.");
				}
				else
				{
					SendClientMessage(playerid, -1, "{CCCCCC}Fuiste ingresado en el centro médico más cercano.");
					SendClientMessage(playerid, -1, "{CCCCCC}Espera mientras te recuperas.");
				}
				
				InterpolateCameraPos(playerid, Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][0], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][1], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][2], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][0], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][1], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][2], 1000, CAMERA_CUT);
				InterpolateCameraLookAt(playerid, Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][3], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][4], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][5], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][3], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][4], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][5], 1000, CAMERA_CUT);
			}
			case ROLEPLAY_STATE_CRACK:
			{
				ShowPlayerHud(playerid);
				SetCameraBehindPlayer(playerid);
				SendAlertToMedics(playerid);
				TogglePlayerControllable(playerid, false);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
				PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
				
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][16]);
				PLAYER_TEMP[playerid][pt_TIMERS][16] = SetTimerEx("HealthDown", 3000, false, "i", playerid);
				
				PLAYER_TEMP[playerid][pt_INJURED_POS][0] = CHARACTER_INFO[playerid][ch_POS][0];
				PLAYER_TEMP[playerid][pt_INJURED_POS][1] = CHARACTER_INFO[playerid][ch_POS][1];
				PLAYER_TEMP[playerid][pt_INJURED_POS][2] = CHARACTER_INFO[playerid][ch_POS][2];
				PLAYER_TEMP[playerid][pt_INJURED_POS][3] = CHARACTER_INFO[playerid][ch_ANGLE];
				
				ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.1, true, 0, 0, 1, 0, 1);
				SendClientMessage(playerid, -1, "Estás herido, puedes esperar a un médico o usar {eddd2f}/morir.");
			}
		}
		
		TextDrawHideForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][0]);
		TextDrawHideForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][1]);
		TextDrawHideForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][2]);
		
		TextDrawShowForPlayer(playerid, Textdraws[textdraw_WATER_MARK]);
		PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0]);
		PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1]);
		PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2]);
		UpdateReputationTextDraws(playerid);
		//PreloadAnimations(playerid);
		
		new neccessary_rep = ACCOUNT_INFO[playerid][ac_LEVEL] * 3;
		if(ACCOUNT_INFO[playerid][ac_REP] < neccessary_rep)
		{
			if(ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] > TIME_FOR_REP) ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] = TIME_FOR_REP;
			if(ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] <= 900) ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] = 3000;
			
			SendClientMessageEx(playerid, -1, "Eres {C4FF66}nivel %d, {FFFFFF}te quedan {C4FF66}%s minutos {FFFFFF}para la siguiente reputación.", ACCOUNT_INFO[playerid][ac_LEVEL], TimeConvert(ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] / 1000));
			PLAYER_TEMP[playerid][pt_TIME_PASSED_LAST_REP] = gettime() * 1000;
			PLAYER_TEMP[playerid][pt_TIMERS][2] = SetTimerEx("AddPlayerReputation", ACCOUNT_INFO[playerid][ac_TIME_FOR_REP], false, "i", playerid);
		}
		else SendClientMessageEx(playerid, -1, "Escribe {C4FF66}/comprarnivel {FFFFFF}para subir al nivel {C4FF66}%d {FFFFFF}por {C4FF66}%d$.", ACCOUNT_INFO[playerid][ac_LEVEL] + 1, ACCOUNT_INFO[playerid][ac_LEVEL] * 150);
		
		if(PLAYER_PHONE[playerid][player_phone_VALID])
		{
			new DBResult:Result, DB_Query[220];
			format(DB_Query, sizeof(DB_Query), 
				"\
					SELECT COUNT() FROM `PHONE_MESSAGES` WHERE `TO` = '%d' AND `OFFLINE` = '1' ORDER BY `DATE` DESC LIMIT 10;\
					UPDATE `PHONE_MESSAGES` SET `OFFLINE` = '0' WHERE `TO` = '%d';\
				",
			PLAYER_PHONE[playerid][player_phone_NUMBER],
			PLAYER_PHONE[playerid][player_phone_NUMBER]);
			
			Result = db_query(Database, DB_Query);
			if(db_num_rows(Result))
			{
				new new_messages = db_get_field_int(Result, 0);
				if(new_messages > 0) SendClientMessageEx(playerid, -1, "Tienes {f1f442}%d {FFFFFF}mensajes nuevos desde tu última conexión.", new_messages);
			}
			db_free_result(Result);
		}
	}
	else if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_DEAD) // Viene de morir
	{
		if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_HOSPITAL)
		{
			if(!PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL])
			{
				TogglePlayerSpectatingEx(playerid, true);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL] = false;
				CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_HOSPITAL;
				CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
				PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] = -1;
				PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] = -1;
				
				PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] = 35.0;
				UpdateHospitalSizeTextdrawLife(playerid);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][4]);
				PLAYER_TEMP[playerid][pt_TIMERS][4] = SetTimerEx("HealthUp", 1000, false, "i", playerid);

				DeleteIlegalInv(playerid);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2]);
				
				ClearPlayerChat(playerid);
				if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0 || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}Fuiste ingresado en el centro médico más cercano.");
					SendClientMessage(playerid, -1, "{CCCCCC}Cuando te recuperes serás llevado a la cárcel.");
				}
				else
				{
					SendClientMessage(playerid, -1, "{CCCCCC}Fuiste ingresado en el centro médico más cercano.");
					SendClientMessage(playerid, -1, "{CCCCCC}Espera mientras te recuperas.");
				}
				
				InterpolateCameraPos(playerid, Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][0], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][1], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][2], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][0], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][1], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][2], 1000, CAMERA_CUT);
				InterpolateCameraLookAt(playerid, Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][3], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][4], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][5], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][3], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][4], Hospital_Cameras_Positions[PLAYER_TEMP[playerid][pt_HOSPITAL]][5], 1000, CAMERA_CUT);
			}
		}
		else if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK)
		{
			ShowPlayerHud(playerid);
			SetPlayerHealthEx(playerid, 60.0);
			SendAlertToMedics(playerid);
			TogglePlayerControllable(playerid, false);
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
			PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
			
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][16]);
			PLAYER_TEMP[playerid][pt_TIMERS][16] = SetTimerEx("HealthDown", 3000, false, "i", playerid);
			
			ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.1, true, 0, 0, 1, 0, 1);
			SendClientMessage(playerid, -1, "Estás herido, puedes esperar a un médico o usar {eddd2f}/morir.");
		}
	}
	
	if(PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL])
	{
		if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL)
		{
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][15]);
			PLAYER_TEMP[playerid][pt_TIMERS][15] = SetTimerEx("UnjailPlayer", CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] * 1000, false, "i", playerid);
		}
		
		SetPlayerInterior(playerid, CHARACTER_INFO[playerid][ch_INTERIOR]);
		SetPlayerVirtualWorld(playerid, 0);
		ShowPlayerHud(playerid);
		TogglePlayerControllable(playerid, false);
		PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL] = false;
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
		SetCameraBehindPlayer(playerid);
		PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
	}
	
	SetPlayerTime(playerid, SERVER_TIME[0], SERVER_TIME[1]);
	SetPlayerWeather(playerid, SERVER_WEATHER);
	
	PLAYER_TEMP[playerid][pt_GAME_STATE] = GAME_STATE_NORMAL;
	SetPlayerSkin(playerid, CHARACTER_INFO[playerid][ch_SKIN]);
	SetPlayerToys(playerid);
	if(CHARACTER_INFO[playerid][ch_STATE] != ROLEPLAY_STATE_JAIL && CHARACTER_INFO[playerid][ch_STATE] != ROLEPLAY_STATE_CRACK) SetWeaponsForPlayer(playerid);
	if(CHARACTER_INFO[playerid][ch_STATE] != ROLEPLAY_STATE_HOSPITAL) SetPlayerWantedLevelEx(playerid, CHARACTER_INFO[playerid][ch_WANTED_LEVEL]);
	SetPlayerArmedWeapon(playerid, 0);
	SetPlayerColorEx(playerid, PLAYER_COLOR);
	
	PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_IMMUNITY] = gettime() + 5;
	return 1;
}

CMD:morir(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] != ROLEPLAY_STATE_CRACK) return SendClientMessage(playerid, -1, "{999999}No estás malherido.");
	
	SetPlayerHealthEx(playerid, 0.0);
	Auto_SendPlayerAction(playerid, "ha elegido la salida rápida.");
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(PLAYER_TEMP[playerid][pt_KICKED]) return 1;
	
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][16]);
	PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_IMMUNITY] = gettime() + 15;
	if(!ACCOUNT_INFO[playerid][ac_SU]) SetPlayerArmourEx(playerid, 0.0);
	
	if(ac_Info[CHEAT_DEATH_SPAMMER][ac_Enabled])
	{
		if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_DEATH_SPAMMER][p_ac_info_IMMUNITY])
		{
			new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_DEATH]);
			if(interval < 50)
			{
				if(!ac_Info[CHEAT_DEATH_SPAMMER][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_DEATH_SPAMMER, float(interval));
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_DEATH_SPAMMER][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_DEATH_SPAMMER][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_DEATH_SPAMMER][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_DEATH_SPAMMER][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_DEATH_SPAMMER][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_DEATH_SPAMMER][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_DEATH_SPAMMER][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_DEATH_SPAMMER, float(interval));
				}
			}
			PLAYER_TEMP[playerid][pt_ANTIFLOOD_DEATH] = GetTickCount();
		}
	}
	
	if(IsPlayerConnected(killerid) && CHARACTER_INFO[killerid][ch_STATE] == ROLEPLAY_STATE_NORMAL && CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_NORMAL)
	{
		if(CHARACTER_INFO[killerid][ch_WANTED_LEVEL] < 6 && !PLAYER_WORKS[killerid][WORK_POLICE])
		{
			new level = CHARACTER_INFO[killerid][ch_WANTED_LEVEL] + 1;
			SetPlayerWantedLevelEx(killerid, level);
		}
	}
	
	if(PLAYER_TEMP[playerid][pt_SELECT_TEXTDRAW])
	{
		if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] != -1) ClosePlayerClothingMenu(playerid);
		if(PLAYER_TEMP[playerid][pt_TOYS_SHOP]) ClosePlayerToysMenu(playerid);
		if(PLAYER_TEMP[playerid][pt_SHOP]) HidePlayerShop(playerid);
	}
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1]);
	
	StopAudioStreamForPlayer(playerid);
	SetPlayerDrunkLevel(playerid, 0);
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	GetPlayerPos(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2]);
	GetPlayerFacingAngle(playerid, CHARACTER_INFO[playerid][ch_ANGLE]);
	CHARACTER_INFO[playerid][ch_INTERIOR] = GetPlayerInterior(playerid);
	HidePlayerHud(playerid);
	CancelEdit(playerid);
	HidePlayerDialog(playerid);
	SetNormalPlayerMarkers(playerid);
	EndPlayerJob(playerid, false);
	PLAYER_TEMP[playerid][pt_HUNGRY_MESSAGE] = false;
	PLAYER_TEMP[playerid][pt_THIRST_MESSAGE] = false;
	PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
	PLAYER_TEMP[playerid][pt_CUFFED] = false;
	PLAYER_TEMP[playerid][pt_CUFFING] = false;
	PLAYER_TEMP[playerid][pt_PLAYER_WAITING_MP3_HTTP] = false;
	if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
	{
		PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
		DisablePlayerTaxiMark(playerid);
	}
	if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
	{
		PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
		DisablePlayerMechanicMark(playerid);
	}
	if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) EndPhoneCall(playerid);
	if(PLAYER_TEMP[playerid][pt_GPS_MAP]) HidePlayerGpsMap(playerid);
	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0) DisablePlayerPoliceMark(playerid);
	if(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_SHOP]) CancelPlayerTuningShop(playerid);
	if(PLAYER_TEMP[playerid][pt_IN_TUNING_GARAGE])
	{
		PLAYER_TEMP[playerid][pt_IN_TUNING_GARAGE] = false;
		SetVehicleVirtualWorldEx(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], 0);
		SetVehiclePosEx(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], 246.551910, 17.474195, 2.363841);
		SetVehicleZAngle(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], 0.0);
	}
	if(PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] != INVALID_VEHICLE_ID)
	{
		if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_JOB_STARTED])
		{
			if(PLAYER_TEMP[playerid][pt_TRASH_DRIVER])
			{
				SendClientMessage(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], -1, "{CCCCCC}El trabajo se ha cancelado porque tu compañero ha dejado de trabajar.");
				CancelTrashWork(playerid, TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
			}
			if(PLAYER_TEMP[playerid][pt_TRASH_PASSENGER])
			{
				SendClientMessage(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], -1, "{CCCCCC}El trabajo se ha cancelado porque tu compañero ha dejado de trabajar.");
				CancelTrashWork(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], playerid, PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
			}
		}
	}
	
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL)
	{
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][15]);
		PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL] = true;
		CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] -= gettime() - PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME];
		if(CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] < 5) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 5;
		PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME] = gettime();
		SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] ][jail_X], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Y], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Z], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_ANGLE], 0, 0, 0, 0, 0, 0);
		CHARACTER_INFO[playerid][ch_INTERIOR] = JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_INTERIOR];
	}
	else
	{
		if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0 || CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0)
		{
			DisablePlayerInjuredMark(playerid);
			if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_NORMAL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) PLAYER_TEMP[playerid][pt_HOSPITAL] = GetNearestHospitalForPlayer(playerid);
			if(PLAYER_TEMP[playerid][pt_HOSPITAL] == -1) PLAYER_TEMP[playerid][pt_HOSPITAL] = 1;
			CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_HOSPITAL;
			PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL] = false;
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][16]);
			SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], 0, 0, 0, 0, 0, 0);
		}
		else
		{
			CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_CRACK;
			
			GetPlayerPos(playerid, PLAYER_TEMP[playerid][pt_INJURED_POS][0], PLAYER_TEMP[playerid][pt_INJURED_POS][1], PLAYER_TEMP[playerid][pt_INJURED_POS][2]);
			GetPlayerFacingAngle(playerid, PLAYER_TEMP[playerid][pt_INJURED_POS][3]);
			
			SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], PLAYER_TEMP[playerid][pt_INJURED_POS][0], PLAYER_TEMP[playerid][pt_INJURED_POS][1], PLAYER_TEMP[playerid][pt_INJURED_POS][2], PLAYER_TEMP[playerid][pt_INJURED_POS][3], 0, 0, 0, 0, 0, 0);
		}
	}
	
	PLAYER_TEMP[playerid][pt_GAME_STATE] = GAME_STATE_DEAD;
   	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_CONNECTED) // Recién conectado
	{
		if(!PLAYER_TEMP[playerid][pt_USER_VALID_NAME] || PLAYER_TEMP[playerid][pt_KICKED]) return 0;
		
		TogglePlayerSpectatingEx(playerid, true);
		ClearPlayerChat(playerid);
		
		if(PLAYER_TEMP[playerid][pt_USER_EXIT])
		{
			// Usuario registrado
			if(ACCOUNT_INFO[playerid][ac_ID] == 0 || strcmp(PLAYER_TEMP[playerid][pt_NAME], ACCOUNT_INFO[playerid][ac_NAME], false)) // No coincide
			{
				Kick(playerid);
				return 1;
			}
			
			if(strcmp(PLAYER_TEMP[playerid][pt_IP], ACCOUNT_INFO[playerid][ac_IP], false)) // La IP actual no es la misma IP de la última conexión
			{
				SendClientMessage(playerid, -1, "{999999}Tu dirección IP ha cambiado desde tu última conexión.");
				format(ACCOUNT_INFO[playerid][ac_IP], 16, "%s", PLAYER_TEMP[playerid][pt_IP]);
			}
			
			ShowDialog(playerid, DIALOG_LOGIN);
		}
		else
		{
			// Nuevo usuario
			PLAYER_TEMP[playerid][pt_REGISTER_ACTOR] = CreateActor(Intro_Skins[0][0], 444.200225, 514.112182, 1001.419494, 0.939619); //ACTOR DE LA HABITACION DE LA INTRO
			SetActorVirtualWorld(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], playerid + 10);
			ApplyActorAnimation(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], "INT_SHOP", "shop_loop", 4.1, 1, 1, 1, 0, 0);
			
			SetPlayerVirtualWorld(playerid, playerid + 10);
			InterpolateCameraPos(playerid, 447.1717, 512.9380, 1001.6884, 447.1717, 512.9380, 1001.6884, 4000);
			InterpolateCameraLookAt(playerid, 446.4043, 513.5767, 1001.7037, 446.4043, 513.5767, 1001.7037, 4000);
			SetPlayerInterior(playerid, 12);
			
			ShowDialog(playerid, DIALOG_REGISTER);
		}
	}
	else if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_DEAD) // Viene de jugar
	{
		SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], 0, 0, 0, 0, 0, 0);
		SpawnPlayer(playerid);
		return 0;
	}
	
	PLAYER_TEMP[playerid][pt_GAME_STATE] = GAME_STATE_OCCUPIED;
	return 1;
}

public OnPlayerRequestSpawn(playerid) // Intentar 'spawnear' mediante la selección de skin << spawn >>
{
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_CONNECTED) CallLocalFunction("OnPlayerRequestClass", "dd", playerid, 0);
    return 0;
}

/* Configuración básica del servidor */
#define SERVER_NAME		"Super RolePlay"
#define SERVER_HOSTNAME "     « Super RolePlay "SERVER_VERSION" (Español - 0.3.7) »"
#define SERVER_GAMEMODE	""SERVER_NAME" en Español"
#define SERVER_LANGUAGE	"Español - Latino"
#define SERVER_WEBSITE	"www.superfreeroam.com"


public OnGameModeInit()
{
	ConnectDatabase();
	SetGameModeText(SERVER_GAMEMODE);
    SendRconCommand("hostname "SERVER_HOSTNAME"");
    SendRconCommand("language "SERVER_LANGUAGE"");
	SendRconCommand("weburl "SERVER_WEBSITE"");
	SendRconCommand("minconnectiontime 3000");
	SendRconCommand("ackslimit 5000");
	SendRconCommand("messageslimit 100");

	//UsePlayerPedAnims();
	DisableInteriorEnterExits();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	EnableStuntBonusForAll(false);
	ManualVehicleEngineAndLights();
	FormatDialogStrings();
	
	SanAndreas();
	
	LoadServerInfo();
	UpdateEconomy();
	return 1;
}

FormatDialogStrings()
{
	new Dialog_Lines_String[256];
	
		/* PIZZA FOOD */
	format(DIALOG_FOOD_PIZZA_String, sizeof DIALOG_FOOD_PIZZA_String, "{CCCCCC}Producto\t{90C3D4}Precio\n");
	for(new i; i != sizeof PIZZA_FOOD; i ++)
	{
		format(Dialog_Lines_String, sizeof Dialog_Lines_String, "{CCCCCC}%d. %s\t{90C3D4}%d$\n", i + 1, PIZZA_FOOD[i][food_NAME], PIZZA_FOOD[i][food_PRICE]);
		strcat(DIALOG_FOOD_PIZZA_String, Dialog_Lines_String);
	}
	
		/* CLUCKIN FOOD */
	format(DIALOG_FOOD_CLUCKIN_String, sizeof DIALOG_FOOD_CLUCKIN_String, "{CCCCCC}Producto\t{90C3D4}Precio\n");
	for(new i; i != sizeof CLUCKIN_BELL_FOOD; i ++)
	{
		format(Dialog_Lines_String, sizeof Dialog_Lines_String, "{CCCCCC}%d. %s\t{90C3D4}%d$\n", i + 1, CLUCKIN_BELL_FOOD[i][food_NAME], CLUCKIN_BELL_FOOD[i][food_PRICE]);
		strcat(DIALOG_FOOD_CLUCKIN_String, Dialog_Lines_String);
	}
	
		/* BURGER_SHOT FOOD */
	format(DIALOG_FOOD_BURGER_String, sizeof DIALOG_FOOD_BURGER_String, "{CCCCCC}Producto\t{90C3D4}Precio\n");
	for(new i; i != sizeof BURGER_SHOT_FOOD; i ++)
	{
		format(Dialog_Lines_String, sizeof Dialog_Lines_String, "{CCCCCC}%d. %s\t{90C3D4}%d$\n", i + 1, BURGER_SHOT_FOOD[i][food_NAME], BURGER_SHOT_FOOD[i][food_PRICE]);
		strcat(DIALOG_FOOD_BURGER_String, Dialog_Lines_String);
	}
	
		/* 24/7 LIST */
	format(DIALOG_247_LIST_String, sizeof DIALOG_247_LIST_String, "{CCCCCC}Producto\t{90C3D4}Precio\n");
	for(new i = 0; i != sizeof Supermarket_Product_List; i ++)
	{
		format(Dialog_Lines_String, sizeof(Dialog_Lines_String), "{CCCCCC}%d. %s\t{90C3D4}%d$\n", i + 1, Supermarket_Product_List[i][product_NAME], Supermarket_Product_List[i][product_PRICE]);
		strcat(DIALOG_247_LIST_String, Dialog_Lines_String);
	}
	
	//GPS
	new city[45], zone[45];
	
	//GPS Hospitales
	format(DIALOG_PLAYER_GPS_SITE_0_String, sizeof DIALOG_PLAYER_GPS_SITE_0_String, "{CCCCCC}Lugar\t{90C3D4}Zona\n");
	for(new i = 0; i != sizeof(Hospital_Spawn_Positions); i++ )
	{
		GetPointZone(Hospital_Spawn_Positions[i][0], Hospital_Spawn_Positions[i][1], city, zone);
		format(Dialog_Lines_String, sizeof Dialog_Lines_String, "{CCCCCC}Hospital %d\t{90C3D4}%s, %s\n", i + 1, city, zone);
		strcat(DIALOG_PLAYER_GPS_SITE_0_String, Dialog_Lines_String);
	}
	
	//GPS CONCES
	format(DIALOG_PLAYER_GPS_SITE_7_String, sizeof DIALOG_PLAYER_GPS_SITE_7_String, "{CCCCCC}Lugar\t{90C3D4}Zona\n");
	for(new i = 0; i != sizeof(SELL_VEHICLES_SHOPS_SPAWN); i++ )
	{
		GetPointZone(SELL_VEHICLES_SHOPS_SPAWN[i][0], SELL_VEHICLES_SHOPS_SPAWN[i][1], city, zone);
		format(Dialog_Lines_String, sizeof Dialog_Lines_String, "{CCCCCC}Concesionario %d\t{90C3D4}%s, %s\n", i + 1, city, zone);
		strcat(DIALOG_PLAYER_GPS_SITE_7_String, Dialog_Lines_String);
	}
	
	//Colores bandas
	format(DIALOG_CREATE_CREW_COLOR_String, sizeof DIALOG_CREATE_CREW_COLOR_String, "");
	for(new i = 0; i != sizeof(RandomColors); i++)
	{
		format(Dialog_Lines_String, sizeof(Dialog_Lines_String), "{%06x}color %d\n", RandomColors[i] >>> 8, i + 1);
		strcat(DIALOG_CREATE_CREW_COLOR_String, Dialog_Lines_String);
	}
	
	//Animaciones
	format(DIALOG_ANIMS_String, sizeof DIALOG_ANIMS_String, "");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /rendirse\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /blowjob\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /rodar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /borracho\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /bomba\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /apuntar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /reir\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /amenazar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /paja\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /herido\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /cruzarbrazos\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /recostarse\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /cubrirse\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /vomitar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /comer\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /despedir\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /nalgada\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /agonizar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /besar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /crack\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /mear\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /sentarse\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /fucku\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /llamar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /taichi\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /beber\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /boxear\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /saludar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /llorar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /dormir\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /rapear\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /astrip\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /bailar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /alentar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /hablar\n");
	strcat(DIALOG_ANIMS_String, "{CCCCCC}>> /asiento\n");
			
	return 1;
}

SanAndreas()
{
	CreateTextDraws();
	LoadEnterExits();
	LoadProperties();
	LoadCrews();
	LoadGangZones();

	SetMyWorldTime(180); // 3 horas reales = 24 horas en juego
	
	//HABITACION INTRO PARA REGISTRARSE
	SetDynamicObjectMaterialText(CreateDynamicObject(19353, 445.2722, 514.8859, 1001.42, 0.0000, 0.3999, 0.3542), 0, "Super", 140, "Gabriola", 55, 1, -8092540, 0, 1); //TEXTO SA:MP DE LA HABITACION DE LA INTRO
	SetDynamicObjectMaterialText(CreateDynamicObject(19353, 445.2722, 514.8859, 1001.3, 0.0000, 0.3999, 0.3542), 0, "roleplay", 140, "Gabriola", 55, 1, -8092540, 0, 1); //TEXTO 'SERVER 1.01' DE LA HABITACION DE LA INTRO
	//CreateDynamicObject(19624, 446.51517, 514.81940, 1001.63550,   0.00000, 0.00000, 29.44436); //MALETA ROCKSTAR DE LA HABITACION DE LA INTRO
	SetDynamicObjectMaterial(CreateDynamicObject(19893, 444.1881, 514.5712, 1001.3964,   0.0000, 0.0000, 0.0), 1, 18646, "matcolours", "grey-50-percent", 0xFFFFFFFF); //LAPTOP DE LA HABITACION DE LA INTRO
	SetDynamicObjectMaterial(CreateDynamicObject(18981, 444.61780, 510.80801, 1004.14160,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "black", 0xFFFFFFFF); //TECHO NEGRO PRIMERA HABITACION DE LA INTRO
	CreateDynamicObject(2102, 443.90033, 514.92853, 1001.66467,   0.00000, 0.00000, 38.35522); //RADIO DE LA HABITACION DE LA INTRO

	// Map Icons Hospitales
	//for(new i = 0; i < sizeof Hospital_Spawn_Positions; i++) CreateDynamicMapIcon(Hospital_Spawn_Positions[i][0], Hospital_Spawn_Positions[i][1], Hospital_Spawn_Positions[i][2], 22, -1, 0, 0);
	
	//Tuning
	CreateDynamicMapIcon(263.592102, 22.960014, 2.170951, 63, -1, 0, 0);
	CreateDynamic3DTextLabel("Usa {b9f442}/tuning {FFFFFF}para tunear tu vehículo", 0xFFFFFFFF, 263.592102, 22.960014, 2.170951, 10.0, .testlos = true, .worldid = 0, .interiorid = 0);
	
	// 3D Texts Ropas
	for(new i = 0; i < sizeof Clothing_Shop_Positions; i++)
	{
		new label_str[256];
		format(label_str, sizeof label_str, "{97c142}%s\n\n{FFFFFF}Escribe {c9c244}/ropa {FFFFFF}para cambiar de ropa\n{FFFFFF}Escribe {c9c244}/toys {FFFFFF}para comprar accesorios", Clothing_Shop_Positions[i][clothing_shop_NAME]);
		CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, Clothing_Shop_Positions[i][clothing_shop_X], Clothing_Shop_Positions[i][clothing_shop_Y], Clothing_Shop_Positions[i][clothing_shop_Z] + 0.25, 10.0, .testlos = true, .interiorid = Clothing_Shop_Positions[i][clothing_shop_INTERIOR]);
	}
	
	// 3D Texts Pedir comida
	for(new i = 0; i < sizeof Fast_Food_Positions; i++)
	{
		new label_str[128];
		format(label_str, sizeof label_str, "{97c142}%s\n\n{FFFFFF}Escribe {c9c244}/pedir {FFFFFF}para alimentarte", Fast_Food_Positions[i][fast_food_NAME]);
		CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, Fast_Food_Positions[i][fast_food_X], Fast_Food_Positions[i][fast_food_Y], Fast_Food_Positions[i][fast_food_Z] + 0.25, 10.0, .testlos = true, .interiorid = Fast_Food_Positions[i][fast_food_INTERIOR]);
	}
	
	// 3D Texts Bank
	for(new i = 0; i < sizeof Bank_Interior_Positions; i++) CreateDynamic3DTextLabel("Escribe {6a98e2}/banco {FFFFFF}para realizar una operación", 0xFFFFFFFF, Bank_Interior_Positions[i][bank_X], Bank_Interior_Positions[i][bank_Y], Bank_Interior_Positions[i][bank_Z] + 0.25, 10.0, .testlos = true, .worldid = Bank_Interior_Positions[i][bank_WORLD], .interiorid = Bank_Interior_Positions[i][bank_INTERIOR]);
	for(new i = 0; i < sizeof BUY_PROPERTIES_SITES; i++) CreateDynamic3DTextLabel("Escribe {6a98e2}/comprarcasa [ID] {FFFFFF}para comprar una propiedad", 0xFFFFFFFF, BUY_PROPERTIES_SITES[i][site_X], BUY_PROPERTIES_SITES[i][site_Y], BUY_PROPERTIES_SITES[i][site_Z] + 0.25, 10.0, .testlos = true, .worldid = BUY_PROPERTIES_SITES[i][site_WORLD], .interiorid = BUY_PROPERTIES_SITES[i][site_INTERIOR]);
	
	//Cajeros
	for(new i = 0; i < sizeof ATM_BANK; i ++)
	{
		CreateDynamicObject(ATM_BANK[i][atm_modelid], ATM_BANK[i][atm_X], ATM_BANK[i][atm_Y], ATM_BANK[i][atm_Z], ATM_BANK[i][atm_RX], ATM_BANK[i][atm_RY], ATM_BANK[i][atm_RZ], ATM_BANK[i][atm_WORLD], ATM_BANK[i][atm_INTERIOR]);
		
		ATM_BANK[i][atm_X] += (-0.5 * floatsin(-(ATM_BANK[i][atm_RZ] - 90.0), degrees));
		ATM_BANK[i][atm_Y] += (-0.5 * floatcos(-(ATM_BANK[i][atm_RZ] - 90.0), degrees));
		CreateDynamic3DTextLabel("Escribe {6a98e2}/cajero {FFFFFF}para realizar una operación", 0xFFFFFFFF, ATM_BANK[i][atm_X], ATM_BANK[i][atm_Y], ATM_BANK[i][atm_Z] + 0.25, 10.0, .testlos = true, .worldid = ATM_BANK[i][atm_WORLD], .interiorid = ATM_BANK[i][atm_INTERIOR]);
	
		new atm_pickup_id = CreateDynamicPickup(0, 1, ATM_BANK[i][atm_X], ATM_BANK[i][atm_Y], ATM_BANK[i][atm_Z] + 0.10, ATM_BANK[i][atm_WORLD], ATM_BANK[i][atm_INTERIOR]), info[3];
		info[0] = PICKUP_TYPE_ATM;
		info[1] = i; // Index
		info[2] = 0; // Nada
		Streamer_SetArrayData(STREAMER_TYPE_PICKUP, atm_pickup_id, E_STREAMER_EXTRA_ID, info);
	}
	
	// 3D Texts Gasolinera
	for(new i = 0; i < sizeof Fuel_Stations; i++) CreateDynamic3DTextLabel("{97c142}Gasolinera\n\n{FFFFFF}Precio: {c9c244}9$/Litro\n{FFFFFF}Escribe {c9c244}/gasolina [litros / lleno] {FFFFFF}para repostar\n\nCompra {c9c244}/bidon {FFFFFF}de 20 litros por 250$", 0xFFFFFFFF, Fuel_Stations[i][0], Fuel_Stations[i][1], Fuel_Stations[i][2] + 0.25, 10.0, .testlos = true, .worldid = 0, .interiorid = 0);
	
		
	//24/7 Int
	CreateDynamic3DTextLabel("Escribe {b3f442}/productos {FFFFFF}para comprar", 0xFFFFFFFF, -27.964675, -89.948631, 1003.546875 + 0.25, 10.0, .testlos = true, .interiorid = 18);

	//Mercado negro
	CreateDynamic3DTextLabel("Escribe {b3f442}/mercado {FFFFFF}para comprar", 0xFFFFFFFF, 2119.059814, -2001.701904, 7.984375, 10.0, .testlos = true, .interiorid = 0, .worldid = 0);

	//Vehs venta
	for(new i = 0; i != sizeof SELL_INFO_VEHICLES; i ++)
	{
		if(SELL_INFO_VEHICLES[i][sell_info_COLOR_1] == -1) SELL_INFO_VEHICLES[i][sell_info_COLOR_1] = valid_work_vehicle_colors[random(sizeof(valid_work_vehicle_colors))];
		if(SELL_INFO_VEHICLES[i][sell_info_COLOR_2] == -1) SELL_INFO_VEHICLES[i][sell_info_COLOR_2] = valid_work_vehicle_colors[random(sizeof(valid_work_vehicle_colors))];
		
		new vehicle_id = INVALID_VEHICLE_ID;
		vehicle_id = CreateVehicle(SELL_INFO_VEHICLES[i][sel_info_vehicle_MODELID], SELL_INFO_VEHICLES[i][sell_info_SPAWN_X], SELL_INFO_VEHICLES[i][sell_info_SPAWN_Y], SELL_INFO_VEHICLES[i][sell_info_SPAWN_Z], SELL_INFO_VEHICLES[i][sell_info_SPAWN_ANGLE], SELL_INFO_VEHICLES[i][sell_info_COLOR_1], SELL_INFO_VEHICLES[i][sell_info_COLOR_2], -1, false);
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_VALID] = true;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_TYPE] = VEHICLE_TYPE_SELL;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] = SELL_INFO_VEHICLES[i][sel_info_vehicle_MODELID];
		format(GLOBAL_VEHICLES[vehicle_id][gb_vehicle_NUMBER_PLATE], 32, "EN VENTA");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X] = SELL_INFO_VEHICLES[i][sell_info_SPAWN_X];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y] = SELL_INFO_VEHICLES[i][sell_info_SPAWN_Y];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z] = SELL_INFO_VEHICLES[i][sell_info_SPAWN_Z];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_ANGLE] = SELL_INFO_VEHICLES[i][sell_info_SPAWN_ANGLE];
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][0] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][1] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][2] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z];
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_HEALTH] = 1000.0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_PANELS] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_DOORS] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_LIGHTS] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_TIRES] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_1] = SELL_INFO_VEHICLES[i][sell_info_COLOR_1];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_2] = SELL_INFO_VEHICLES[i][sell_info_COLOR_2];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PAINTJOB] = 3; // No paintjob
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS] = 0.0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_GAS] = 0.0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;

		SELL_VEHICLES[vehicle_id][sell_vehicle_VALID] = true;
		SELL_VEHICLES[vehicle_id][sell_vehicle_SHOP] = SELL_INFO_VEHICLES[i][sell_info_SHOP];
		SELL_VEHICLES[vehicle_id][sell_vehicle_PRICE] = VEHICLE_INFO[GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] - 400][vehicle_info_PRICE];
		SELL_VEHICLES[vehicle_id][sell_vehicle_LEVEL] = VEHICLE_INFO[GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] - 400][vehicle_info_LEVEL];
		SELL_VEHICLES[vehicle_id][sell_vehicle_EXTRA] = VEHICLE_INFO[GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] - 400][vehicle_info_EXTRA];
		
		SetVehicleToRespawnEx(vehicle_id);
		
		
		new label_str[256];
		format
		(
			label_str, 
				sizeof label_str, 
				"\
					{C4FF66}%s\n\n\
					{FFFFFF}Precio: {C4FF66}%s$\n\
					{FFFFFF}Nivel necesario: {C4FF66}%d\n\
					{CCCCCC}Entra en él para comprarlo\
				", VEHICLE_INFO[GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] - 400][vehicle_info_NAME], number_format_thousand(SELL_VEHICLES[vehicle_id][sell_vehicle_PRICE]), SELL_VEHICLES[vehicle_id][sell_vehicle_LEVEL]
		);
		SELL_VEHICLES[vehicle_id][sell_vehicle_LABEL_ID] = CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, 0.0, 0.0, 1.5, 10.0, .attachedvehicle = vehicle_id, .testlos = true, .worldid = 0, .interiorid = 0);
	}
	
	//Concesionarios
	for(new i = 0; i < sizeof SELL_VEHICLES_SHOPS_SPAWN; i++)
	{
		CreateDynamicMapIcon(SELL_VEHICLES_SHOPS_SPAWN[i][0], SELL_VEHICLES_SHOPS_SPAWN[i][1], SELL_VEHICLES_SHOPS_SPAWN[i][2], 55, -1, 0, 0);
		CreateDynamic3DTextLabel("{ffdf2d}SALIDA DE VEHICULOS", 0xFFFFFFFF, SELL_VEHICLES_SHOPS_SPAWN[i][0], SELL_VEHICLES_SHOPS_SPAWN[i][1], SELL_VEHICLES_SHOPS_SPAWN[i][2], 10.0, .testlos = true, .worldid = 0, .interiorid = 0);
	}
	
	//Notario
	CreateDynamic3DTextLabel("Escribe {79abfc}/pvender {FFFFFF}para vender\nalguna propiedad o vehículo", 0xFFFFFFFF, -474.596282, 289.679107, 2004.584960, 10.0, .testlos = true, .worldid = 20, .interiorid = 20);
	//Grua
	CreateDynamic3DTextLabel("Escribe {79abfc}/grua {FFFFFF}para solicitar\nel servicio de grúa a un vehículo", 0xFFFFFFFF, -508.645385, 322.147644, 2004.585937, 10.0, .testlos = true, .worldid = 20, .interiorid = 20);
	
	
	//San Andreas Vehicles
	for(new i = 0; i != sizeof San_Andreas_Vehicles; i ++)
	{
		
		if(San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_1] == -1) San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_1] = valid_work_vehicle_colors[random(sizeof(valid_work_vehicle_colors))];
		if(San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_2] == -1) San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_2] = valid_work_vehicle_colors[random(sizeof(valid_work_vehicle_colors))];
		
		new vehicle_id = INVALID_VEHICLE_ID;
		vehicle_id = CreateVehicle(San_Andreas_Vehicles[i][san_andreas_vehicle_MODELID], San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_X], San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_Y], San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_Z], San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_ANGLE], San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_1], San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_2], 300, false);
		if(vehicle_id == INVALID_VEHICLE_ID) continue;
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_VALID] = true;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_TYPE] = San_Andreas_Vehicles[i][san_andreas_vehicle_TYPE];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] = San_Andreas_Vehicles[i][san_andreas_vehicle_MODELID];
		format(GLOBAL_VEHICLES[vehicle_id][gb_vehicle_NUMBER_PLATE], 32, "%c%c%c-%04d", getRandomLetter(), getRandomLetter(), getRandomLetter(), random(9999));
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X] = San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_X];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y] = San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_Y];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z] = San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_Z];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_ANGLE] = San_Andreas_Vehicles[i][san_andreas_vehicle_SPAWN_ANGLE];
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][0] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][1] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][2] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z];
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_HEALTH] = 1000.0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_PANELS] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_DOORS] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_LIGHTS] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_TIRES] = 0;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_1] = San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_1];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_2] = San_Andreas_Vehicles[i][san_andreas_vehicle_COLOR_2];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PAINTJOB] = 3; // No paintjob
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS] = VEHICLE_INFO[ GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] - 400][vehicle_info_MAX_GAS];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_GAS] = frandom(GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS], GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS] / 3, 2);
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;
		
		if(GLOBAL_VEHICLES[vehicle_id][gb_vehicle_TYPE] == VEHICLE_TYPE_WORK)
		{
			WORK_VEHICLES[vehicle_id][work_vehicle_VALID] = true;
			WORK_VEHICLES[vehicle_id][work_vehicle_WORK] = San_Andreas_Vehicles[i][san_andreas_vehicle_TYPE_IN];
			WORK_VEHICLES[vehicle_id][work_vehicle_EXP] = San_Andreas_Vehicles[i][san_andreas_vehicle_TYPE_IN_EXP];
			WORK_VEHICLES[vehicle_id][work_vehicle_NEED_DUTY] = work_info[ WORK_VEHICLES[vehicle_id][work_vehicle_WORK] ][work_info_NEED_DUTY];
		}
		
		SetVehicleToRespawnEx(vehicle_id);
	}
	
	//Barreras
	for(new i = 0; i != sizeof San_Andreas_Barriers; i ++)
	{
		CreateDynamicObject(966, San_Andreas_Barriers[i][barrier_X], San_Andreas_Barriers[i][barrier_Y], San_Andreas_Barriers[i][barrier_Z], 0.0, 0.0, San_Andreas_Barriers[i][barrier_ROTATION], San_Andreas_Barriers[i][barrier_WORLD], San_Andreas_Barriers[i][barrier_INTERIOR]);
		San_Andreas_Barriers[i][barrier_OBJECT_ID] = CreateDynamicObject(968, San_Andreas_Barriers[i][barrier_X], San_Andreas_Barriers[i][barrier_Y], San_Andreas_Barriers[i][barrier_Z] + 0.72967, 0.0, -90.0, San_Andreas_Barriers[i][barrier_ROTATION], San_Andreas_Barriers[i][barrier_WORLD], San_Andreas_Barriers[i][barrier_INTERIOR]);

		if(San_Andreas_Barriers[i][barrier_VEHICLE_TYPE])
		{
			new label_str[128];
			format(label_str, sizeof label_str, "{b2f441}%c%s\n{FFFFFF}Toca el {f4e842}claxon {FFFFFF}para que te abran", toupper(work_info[ San_Andreas_Barriers[i][barrier_VEHICLE_TYPE_IN] ][work_info_NAME][0]), work_info[ San_Andreas_Barriers[i][barrier_VEHICLE_TYPE_IN] ][work_info_NAME][1]);
			
			CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, San_Andreas_Barriers[i][barrier_X], San_Andreas_Barriers[i][barrier_Y], San_Andreas_Barriers[i][barrier_Z] + 1.5, 15.0, .worldid = San_Andreas_Barriers[i][barrier_WORLD], .interiorid = San_Andreas_Barriers[i][barrier_INTERIOR]);
		}
		else CreateDynamic3DTextLabel("Toca el {f4e842}claxon {FFFFFF}para que te abran", 0xFFFFFFFF, San_Andreas_Barriers[i][barrier_X], San_Andreas_Barriers[i][barrier_Y], San_Andreas_Barriers[i][barrier_Z] + 1.5, 15.0, .worldid = San_Andreas_Barriers[i][barrier_WORLD], .interiorid = San_Andreas_Barriers[i][barrier_INTERIOR]);
	}
	
	//polciais
	for(new i = 0; i != sizeof POLICE_GARAGE_DOORS; i ++)
	{
		POLICE_GARAGE_DOORS[i][police_gdoor_OBJECT_ID] = CreateDynamicObject(POLICE_GARAGE_DOORS[i][police_gdoor_MODELID], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_X], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_Y], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_Z], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_RX], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_RY], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_RZ], 0, 0);
	}
	for(new i = 0; i != sizeof POLICE_DOORS; i ++)
	{
		POLICE_DOORS[i][police_door_OBJECT_ID] = CreateDynamicObject(POLICE_DOORS[i][police_door_MODELID], POLICE_DOORS[i][police_door_X], POLICE_DOORS[i][police_door_Y], POLICE_DOORS[i][police_door_Z], 0.0, 0.0, POLICE_DOORS[i][police_door_RZ], POLICE_DOORS[i][police_door_WORLD], POLICE_DOORS[i][police_door_INTERIOR]);
	}
	CreateDynamic3DTextLabel("Usa {b9f442}/policia {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, 253.280288, 76.219017, 1003.640625, 5.0, .testlos = true, .worldid = 0, .interiorid = 6);
	CreateDynamic3DTextLabel("Usa {b9f442}/policia {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, 266.547180, 119.652816, 1004.617187, 5.0, .testlos = true, .worldid = 0, .interiorid = 10);
	CreateDynamic3DTextLabel("Usa {b9f442}/policia {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, 217.816406, 187.667922, 1003.031250, 5.0, .testlos = true, .worldid = 0, .interiorid = 3);
	
	CreateDynamic3DTextLabel("Usa {b9f442}/entregarse {FFFFFF}para entregarte", 0xFFFFFFFF, 250.049026, 67.635704, 1003.640625, 5.0, .testlos = true, .worldid = 0, .interiorid = 6);
	CreateDynamic3DTextLabel("Usa {b9f442}/entregarse {FFFFFF}para entregarte", 0xFFFFFFFF, 246.349716, 118.358116, 1003.218750, 5.0, .testlos = true, .worldid = 0, .interiorid = 10);
	CreateDynamic3DTextLabel("Usa {b9f442}/entregarse {FFFFFF}para entregarte", 0xFFFFFFFF, 235.772537, 165.382186, 1003.029968, 5.0, .testlos = true, .worldid = 0, .interiorid = 3);
	
	CreateDynamic3DTextLabel("Usa {b9f442}/equiparse {FFFFFF}para equiparte", 0xFFFFFFFF, 219.244018, 69.982215, 1005.039062, 5.0, .testlos = true, .worldid = 0, .interiorid = 6);
	CreateDynamic3DTextLabel("Usa {b9f442}/equiparse {FFFFFF}para equiparte", 0xFFFFFFFF, 262.945587, 109.785270, 1004.617187, 5.0, .testlos = true, .worldid = 0, .interiorid = 10);
	CreateDynamic3DTextLabel("Usa {b9f442}/equiparse {FFFFFF}para equiparte", 0xFFFFFFFF, 222.683914, 186.956054, 1003.031250, 5.0, .testlos = true, .worldid = 0, .interiorid = 3);

	Jail_Areas[0] = CreateDynamicRectangle(258.236938, 72.319061, 273.117279, 95.841438, 0, 6);
	Jail_Areas[1] = CreateDynamicRectangle(211.001739, 117.171920, 236.010986, 104.004219, 0, 10);
	Jail_Areas[2] = CreateDynamicRectangle(204.957885, 180.868392, 183.743148, 168.624618, 0, 3);


	//Trabajos
	for(new i = 1; i != sizeof obtain_work_coords; i ++)
	{
		new label_str[256];
		
		switch(work_info[i][work_info_TYPE])
		{
			case WORK_TYPE_NORMAL:
			{
				format(label_str, sizeof label_str, "Trabajo de {95f442}%s\n{FFFFFF}Nivel necesario: {95f442}%d\n\n{FFFFFF}Usa {caf441}/trabajar {FFFFFF}para obtener el trabajo", work_info[i][work_info_NAME], work_info[i][work_info_LEVEL]);
				CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, obtain_work_coords[i][obtain_work_X], obtain_work_coords[i][obtain_work_Y], obtain_work_coords[i][obtain_work_Z], 10.0, .testlos = true, .interiorid = obtain_work_coords[i][obtain_work_INTERIOR]);
				CreateDynamicPickup(1314, 1, obtain_work_coords[i][obtain_work_X], obtain_work_coords[i][obtain_work_Y], obtain_work_coords[i][obtain_work_Z], -1, obtain_work_coords[i][obtain_work_INTERIOR]);
				if(obtain_work_coords[i][obtain_work_MAP_ICON]) CreateDynamicMapIcon(obtain_work_coords[i][obtain_work_MAP_ICON_X], obtain_work_coords[i][obtain_work_MAP_ICON_Y], obtain_work_coords[i][obtain_work_MAP_ICON_Z], obtain_work_coords[i][obtain_work_MAP_ICON_ID], -1, 0, 0);
			}
		}
	}
	
	//Random taximeters
	for(new i = 0; i != MAX_VEHICLES; i ++) TAXI_METER_VEHICLE[i][veh_taxi_meter_PRICE] = minrand(2, 8);
	
	//Carga camioneros
	for(new i = 0; i != sizeof LoadTrucksPoints; i ++)
	{
		CreateDynamic3DTextLabel("Usa {b9f442}/cargar {FFFFFF}para cargar el camión", 0xFFFFFFFF, LoadTrucksPoints[i][0], LoadTrucksPoints[i][1], LoadTrucksPoints[i][2], 10.0, .testlos = true, .worldid = 0, .interiorid = 0);
		CreateDynamicPickup(19135, 1, LoadTrucksPoints[i][0], LoadTrucksPoints[i][1], LoadTrucksPoints[i][2], 0, 0);
	}
	
	//Mecánico
	Mechanic_Area = CreateDynamicRectangle(-115.255050, -1211.812377, -54.539089, -1179.635253, 0, 0);
	CreateDynamic3DTextLabel("Usa {b9f442}/mecanico {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, -89.087181, -1184.843627, 2.940625, 5.0, .testlos = true, .worldid = 0, .interiorid = 0);
	CreateDynamic3DTextLabel("Piezas de mecánico\nEscribe {b9f442}/piezas [cantidad] {FFFFFF}para comprar piezas\nPrecio de pieza: {b9f442}50$", 0xFFFFFFFF, -80.710136, -1193.329956, 2.947619, 5.0, .testlos = true, .worldid = 0, .interiorid = 0);
	
	//Leñador
	CreateDynamicPickup(19793, 1, -527.670349, -97.338562, 63.176174, 0, 0);
	CreateDynamic3DTextLabel("Usa {b9f442}/talar {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, -527.670349, -97.338562, 63.176174, 5.0, .testlos = true, .worldid = 0, .interiorid = 0);
	
	//Pizzero
	CreateDynamicPickup(1582, 1, 2097.355712, -1818.040771, 13.382812, 0, 0);
	CreateDynamic3DTextLabel("Usa {b9f442}/pizzero {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, 2097.355712, -1818.040771, 13.382812, 5.0, .testlos = true, .worldid = 0, .interiorid = 0);
	
	//Medico
	CreateDynamicPickup(1275, 1, -2029.751342, -114.503044, 1035.171875, -1, 3);
	CreateDynamic3DTextLabel("Usa {b9f442}/medico {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, -2029.751342, -114.503044, 1035.171875, 5.0, .testlos = true, .interiorid = 3);
	
	//mercado
	CreateDynamicActor(179, 2120.724853, -2000.400268, 7.984375, 130.0, true, 100.0, 0, 0);
	
	//Trash
	CreateDynamic3DTextLabel("Usa {b9f442}/basurero {FFFFFF}para empezar a trabajar\no para dejar de trabajar", 0xFFFFFFFF, -1906.577514, -1756.457519, 22.079319, 5.0, .testlos = true, .worldid = 0, .interiorid = 0);
		//Ruta 0
	CreateTrashCheckpoint(0, 1440, -1812.46228, -558.37744, 15.73948,   0.00000, 0.00000, 274.24359);
	CreateTrashCheckpoint(0, 1440, -1793.84106, -312.50452, 24.46057,   0.00000, 0.00000, 268.49271);
	CreateTrashCheckpoint(0, 1440, -1801.20825, 115.39587, 14.55550,   0.00000, 0.00000, 280.09882);
	CreateTrashCheckpoint(0, 1440, -1750.40051, 323.11810, 6.61720,   0.00000, 0.00000, 319.06424);
	CreateTrashCheckpoint(0, 1440, -1814.43311, 511.15622, 28.66113,   0.00000, 9.00000, 304.31201);
	CreateTrashCheckpoint(0, 1440, -1982.79871, 614.85687, 34.61121,   0.00000, 0.00000, 0.00000);
	CreateTrashCheckpoint(0, 1440, -2229.42896, 575.27448, 34.58952,   0.00000, 0.00000, 0.00000);
	CreateTrashCheckpoint(0, 1440, -2385.20020, 513.64594, 28.11606,   0.00000, 0.00000, 282.48959);
	CreateTrashCheckpoint(0, 1440, -2258.51782, 221.79150, 34.74878,   0.00000, 0.00000, 90.00000);
	CreateTrashCheckpoint(0, 1440, -2266.30273, -206.86926, 34.86986,   0.00000, 0.00000, 90.00000);
	CreateTrashCheckpoint(0, 1440, -1995.48499, -771.90076, 31.56746,   0.00000, 0.00000, 90.00000);
		//Ruta 1
	CreateTrashCheckpoint(1, 1440, -2211.24414, -964.98248, 38.68247,   0.00000, 2.50000, 286.39740);
	CreateTrashCheckpoint(1, 1440, -2424.54443, -595.71997, 131.88649,   0.00000, -4.50000, 303.65921);
	CreateTrashCheckpoint(1, 1440, -2602.82544, -478.18484, 68.15035,   0.00000, 0.00000, 21.71607);
	CreateTrashCheckpoint(1, 1440, -2353.62256, -396.48764, 78.42006,   0.00000, -3.50000, 305.07410);
	CreateTrashCheckpoint(1, 1440, -2756.29199, -500.66721, 6.77589,   0.00000, 0.00000, 316.44635);
	CreateTrashCheckpoint(1, 1440, -2811.07056, -346.85269, 6.66456,   0.00000, 0.00000, 259.86459);
	CreateTrashCheckpoint(1, 1440, -2415.51563, -128.34013, 34.82273,   0.00000, 0.00000, 250.60507);
	CreateTrashCheckpoint(1, 1440, -2028.09985, -76.42242, 34.70956,   0.00000, 0.00000, 0.00000);
		//Ruta 2
	CreateTrashCheckpoint(2, 1440, -2193.88306, -2156.55347, 46.46848,   0.00000, -10.00000, 46.48320);
	CreateTrashCheckpoint(2, 1440, -2208.01904, -2280.10645, 30.12751,   0.00000, 0.00000, 331.91882);
	CreateTrashCheckpoint(2, 1440, -2125.33594, -2256.24902, 30.10599,   0.00000, 0.00000, 326.47290);
	CreateTrashCheckpoint(2, 1440, -2101.86353, -2313.20093, 30.14946,   0.00000, 0.00000, 42.68287);
	CreateTrashCheckpoint(2, 1440, -2183.69775, -2449.03003, 30.01783,   0.00000, 0.00000, 51.16318);
	CreateTrashCheckpoint(2, 1440, -2328.98047, -2704.17358, 44.41791,   6.17998, 5.88000, 340.20822);
	CreateTrashCheckpoint(2, 1440, -2601.78345, -2334.39746, 10.50614,   0.00000, 0.00000, 41.64481);

	
	
	//Leñador arboles
	Lumberjack_Area = CreateDynamicRectangle(-613.953796, -209.777252, -381.961181, -6.355076, 0, 0);
	for(new i = 0; i != sizeof LUMBER_TREES; i ++)
	{
		LUMBER_TREES[i][lumber_tree_OBJECT_ID] = CreateDynamicObject(LUMBER_TREES[i][lumber_tree_MODELID], LUMBER_TREES[i][lumber_tree_X], LUMBER_TREES[i][lumber_tree_Y], LUMBER_TREES[i][lumber_tree_Z], LUMBER_TREES[i][lumber_tree_RX], LUMBER_TREES[i][lumber_tree_RY], LUMBER_TREES[i][lumber_tree_RZ], 0, 0);
		
		new label_str[256];
		format(label_str, sizeof label_str, "{f46530}Árbol (%d)\n\n{FFFFFF}Pulsa {f9d834}~k~~CONVERSATION_NO~ {FFFFFF}para talar el árbol.", i);
		LUMBER_TREES[i][lumber_tree_LABEL] = CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, LUMBER_TREES[i][lumber_tree_X], LUMBER_TREES[i][lumber_tree_Y], LUMBER_TREES[i][lumber_tree_Z] + 1.5, 5.0, .testlos = false, .worldid = 0, .interiorid = 0);
	}
	
	//Agricultor
	Farmer_Area = CreateDynamicCircle(1461.8894, -83.2621, 65.0, 0, 0);
	CreateDynamicMapIcon(1461.8894, -83.2621, 65.0, 53, -1, 0, 0);
	CreateDynamic3DTextLabel("Usa {b9f442}/semillas {FFFFFF}para comprar semillas", 0xFFFFFFFF, 1566.521606, 31.370532, 24.16406, 5.0, .testlos = true, .worldid = 0, .interiorid = 0);
	
	//Cosechador
	Harvest_Area = CreateDynamicRectangle(-428.336059, -1667.658569, -116.565414, -1220.122070, 0, 0);
	return 1;
}

CreateTrashCheckpoint(route, modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(route >= MAX_ROUTES) return print("---> Límite superado en array 'TRASH_OBJECTS, route' en la función 'CreateTrashCheckpoint'.");
	if(!TRASH_OBJECTS[route][trash_route_VALID]) TRASH_OBJECTS[route][trash_route_VALID] = true;
	if(TRASH_OBJECTS[route][trash_route_OBJECTS] >= MAX_OBJECTS_PER_ROUTE) return print("---> Límite superado en array 'TRASH_OBJECTS, objects' en la función 'CreateTrashCheckpoint'.");

	if(TRASH_OBJECTS[route][trash_route_OBJECTS] == 0) TRASH_OBJECTS[route][trash_route_DISTANCE] = GetDistanceBetweenPoints3D(x, y, z, obtain_work_coords[WORK_TRASH][obtain_work_X], obtain_work_coords[WORK_TRASH][obtain_work_Y], obtain_work_coords[WORK_TRASH][obtain_work_Z]);
	else
	{
		TRASH_OBJECTS[route][trash_route_DISTANCE] -= GetDistanceBetweenPoints3D(TRASH_OBJECTS[route][trash_object_X][ TRASH_OBJECTS[route][trash_route_OBJECTS] - 1], TRASH_OBJECTS[route][trash_object_Y][ TRASH_OBJECTS[route][trash_route_OBJECTS] - 1 ], TRASH_OBJECTS[route][trash_object_Z][ TRASH_OBJECTS[route][trash_route_OBJECTS] - 1 ], obtain_work_coords[WORK_TRASH][obtain_work_X], obtain_work_coords[WORK_TRASH][obtain_work_Y], obtain_work_coords[WORK_TRASH][obtain_work_Z]);
		TRASH_OBJECTS[route][trash_route_DISTANCE] += GetDistanceBetweenPoints3D(x, y, z, TRASH_OBJECTS[route][trash_object_X][ TRASH_OBJECTS[route][trash_route_OBJECTS] - 1], TRASH_OBJECTS[route][trash_object_Y][ TRASH_OBJECTS[route][trash_route_OBJECTS] - 1 ], TRASH_OBJECTS[route][trash_object_Z][ TRASH_OBJECTS[route][trash_route_OBJECTS] - 1 ]);
	}
	
	TRASH_OBJECTS[route][trash_object_MODELID][ TRASH_OBJECTS[route][trash_route_OBJECTS] ] = modelid;
	TRASH_OBJECTS[route][trash_object_X][ TRASH_OBJECTS[route][trash_route_OBJECTS] ] = x;
	TRASH_OBJECTS[route][trash_object_Y][ TRASH_OBJECTS[route][trash_route_OBJECTS] ] = y;
	TRASH_OBJECTS[route][trash_object_Z][ TRASH_OBJECTS[route][trash_route_OBJECTS] ] = z;
	TRASH_OBJECTS[route][trash_object_RX][ TRASH_OBJECTS[route][trash_route_OBJECTS] ] = rx;
	TRASH_OBJECTS[route][trash_object_RY][ TRASH_OBJECTS[route][trash_route_OBJECTS] ] = ry;
	TRASH_OBJECTS[route][trash_object_RZ][ TRASH_OBJECTS[route][trash_route_OBJECTS] ] = rz;
	//CreateDynamicObject(modelid, x, y, z, rx, ry, rz, 0, 0);
	
	TRASH_OBJECTS[route][trash_route_DISTANCE] += GetDistanceBetweenPoints3D(x, y, z, obtain_work_coords[WORK_TRASH][obtain_work_X], obtain_work_coords[WORK_TRASH][obtain_work_Y], obtain_work_coords[WORK_TRASH][obtain_work_Z]);
	TRASH_OBJECTS[route][trash_route_MONEY] = floatround(0.3 * TRASH_OBJECTS[route][trash_route_DISTANCE]);
	
	TRASH_OBJECTS[route][trash_route_OBJECTS] ++;
	return 1;
}

stock Float:GetDistanceBetweenPoints3D(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2)
{
    return VectorSize(x1-x2,y1-y2,z1-z2);
}  

CreateTextDraws()
{
	for(new i; i < sizeof(Textdraws); i++) Textdraws[Textdraws_Enum:i] = INVALID_TEXT_DRAW;
	
	
	Textdraws[textdraw_GPS_MAP][0] = TextDrawCreate(-5.000000, 132.000000, "box");
	TextDrawLetterSize(Textdraws[textdraw_GPS_MAP][0], 0.000000, 22.498472);
	TextDrawTextSize(Textdraws[textdraw_GPS_MAP][0], 180.130477, 0.000000);
	TextDrawAlignment(Textdraws[textdraw_GPS_MAP][0], 1);
	TextDrawColor(Textdraws[textdraw_GPS_MAP][0], -1);
	TextDrawUseBox(Textdraws[textdraw_GPS_MAP][0], 1);
	TextDrawBoxColor(Textdraws[textdraw_GPS_MAP][0], 120);
	TextDrawSetShadow(Textdraws[textdraw_GPS_MAP][0], 0);
	TextDrawSetOutline(Textdraws[textdraw_GPS_MAP][0], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_GPS_MAP][0], 255);
	TextDrawFont(Textdraws[textdraw_GPS_MAP][0], 1);
	TextDrawSetProportional(Textdraws[textdraw_GPS_MAP][0], 1);
	TextDrawSetShadow(Textdraws[textdraw_GPS_MAP][0], 0);

	Textdraws[textdraw_GPS_MAP][1] = TextDrawCreate(map_td_X, map_td_Y, "samaps:map");
	TextDrawLetterSize(Textdraws[textdraw_GPS_MAP][1], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_GPS_MAP][1], map_td_SIZE_X, map_td_SIZE_Y);
	TextDrawAlignment(Textdraws[textdraw_GPS_MAP][1], 1);
	TextDrawColor(Textdraws[textdraw_GPS_MAP][1], -1);
	TextDrawSetShadow(Textdraws[textdraw_GPS_MAP][1], 0);
	TextDrawSetOutline(Textdraws[textdraw_GPS_MAP][1], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_GPS_MAP][1], 255);
	TextDrawFont(Textdraws[textdraw_GPS_MAP][1], 4);
	TextDrawSetProportional(Textdraws[textdraw_GPS_MAP][1], 0);
	TextDrawSetShadow(Textdraws[textdraw_GPS_MAP][1], 0);

	Textdraws[textdraw_GPS_MAP][2] = TextDrawCreate(90.000000, 324.000000, "GPS_-_/mapa");
	TextDrawLetterSize(Textdraws[textdraw_GPS_MAP][2], 0.197330, 1.027553);
	TextDrawAlignment(Textdraws[textdraw_GPS_MAP][2], 2);
	TextDrawColor(Textdraws[textdraw_GPS_MAP][2], -186);
	TextDrawSetShadow(Textdraws[textdraw_GPS_MAP][2], 0);
	TextDrawSetOutline(Textdraws[textdraw_GPS_MAP][2], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_GPS_MAP][2], 255);
	TextDrawFont(Textdraws[textdraw_GPS_MAP][2], 1);
	TextDrawSetProportional(Textdraws[textdraw_GPS_MAP][2], 1);
	TextDrawSetShadow(Textdraws[textdraw_GPS_MAP][2], 0);
	
	
	Textdraws[textdraw_WATER_MARK] = TextDrawCreate(635.000000, 430.000000, ""SERVER_NAME" "SERVER_VERSION"");
	TextDrawLetterSize(Textdraws[textdraw_WATER_MARK], 0.213333, 1.010964);
	TextDrawAlignment(Textdraws[textdraw_WATER_MARK], 3);
	TextDrawColor(Textdraws[textdraw_WATER_MARK], -186);
	TextDrawSetShadow(Textdraws[textdraw_WATER_MARK], 0);
	TextDrawSetOutline(Textdraws[textdraw_WATER_MARK], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_WATER_MARK], 255);
	TextDrawFont(Textdraws[textdraw_WATER_MARK], 1);
	TextDrawSetProportional(Textdraws[textdraw_WATER_MARK], 1);
	TextDrawSetShadow(Textdraws[textdraw_WATER_MARK], 0);
	
	Textdraws[textdraw_LOAD_SCREEN][0] = TextDrawCreate(320.000000, 0.000000, "box");
	TextDrawLetterSize(Textdraws[textdraw_LOAD_SCREEN][0], 0.000000, 60.0);
	TextDrawTextSize(Textdraws[textdraw_LOAD_SCREEN][0], 0.000000, 700.000000);
	TextDrawAlignment(Textdraws[textdraw_LOAD_SCREEN][0], 2);
	TextDrawColor(Textdraws[textdraw_LOAD_SCREEN][0], -1);
	TextDrawUseBox(Textdraws[textdraw_LOAD_SCREEN][0], 1);
	TextDrawBoxColor(Textdraws[textdraw_LOAD_SCREEN][0], 255);
	TextDrawSetShadow(Textdraws[textdraw_LOAD_SCREEN][0], 0);
	TextDrawSetOutline(Textdraws[textdraw_LOAD_SCREEN][0], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_LOAD_SCREEN][0], 255);
	TextDrawFont(Textdraws[textdraw_LOAD_SCREEN][0], 1);
	TextDrawSetProportional(Textdraws[textdraw_LOAD_SCREEN][0], 1);
	TextDrawSetShadow(Textdraws[textdraw_LOAD_SCREEN][0], 0);

	Textdraws[textdraw_LOAD_SCREEN][1] = TextDrawCreate(320.000000, 50.000000, SERVER_NAME);
	TextDrawLetterSize(Textdraws[textdraw_LOAD_SCREEN][1], 0.624000, 2.607998);
	TextDrawAlignment(Textdraws[textdraw_LOAD_SCREEN][1], 2);
	TextDrawColor(Textdraws[textdraw_LOAD_SCREEN][1], -1684633601);
	TextDrawSetShadow(Textdraws[textdraw_LOAD_SCREEN][1], 0);
	TextDrawSetOutline(Textdraws[textdraw_LOAD_SCREEN][1], 1);
	TextDrawBackgroundColor(Textdraws[textdraw_LOAD_SCREEN][1], 255);
	TextDrawFont(Textdraws[textdraw_LOAD_SCREEN][1], 3);
	TextDrawSetProportional(Textdraws[textdraw_LOAD_SCREEN][1], 1);
	TextDrawSetShadow(Textdraws[textdraw_LOAD_SCREEN][1], 0);

	Textdraws[textdraw_LOAD_SCREEN][2] = TextDrawCreate(402.000000, 77.000000, ""SERVER_VERSION"."VERSION_BUILD"");
	TextDrawLetterSize(Textdraws[textdraw_LOAD_SCREEN][2], 0.192666, 0.869924);
	TextDrawAlignment(Textdraws[textdraw_LOAD_SCREEN][2], 3);
	TextDrawColor(Textdraws[textdraw_LOAD_SCREEN][2], -1684633601);
	TextDrawSetShadow(Textdraws[textdraw_LOAD_SCREEN][2], 0);
	TextDrawSetOutline(Textdraws[textdraw_LOAD_SCREEN][2], 1);
	TextDrawBackgroundColor(Textdraws[textdraw_LOAD_SCREEN][2], 255);
	TextDrawFont(Textdraws[textdraw_LOAD_SCREEN][2], 3);
	TextDrawSetProportional(Textdraws[textdraw_LOAD_SCREEN][2], 1);
	TextDrawSetShadow(Textdraws[textdraw_LOAD_SCREEN][2], 0);

	
	Textdraws[textdraw_SERVER_TIME] = TextDrawCreate(577.5, 23.0, "00:00");
	TextDrawLetterSize(Textdraws[textdraw_SERVER_TIME], 0.424666, 1.661777);
	TextDrawAlignment(Textdraws[textdraw_SERVER_TIME], 2);
	TextDrawColor(Textdraws[textdraw_SERVER_TIME], -1);
	TextDrawSetShadow(Textdraws[textdraw_SERVER_TIME], 0);
	TextDrawSetOutline(Textdraws[textdraw_SERVER_TIME], 1);
	TextDrawBackgroundColor(Textdraws[textdraw_SERVER_TIME], 255);
	TextDrawFont(Textdraws[textdraw_SERVER_TIME], 3);
	TextDrawSetProportional(Textdraws[textdraw_SERVER_TIME], 1);
	TextDrawSetShadow(Textdraws[textdraw_SERVER_TIME], 0);
	
	
	Textdraws[textdraw_SHOP][0] = TextDrawCreate(320.000000, 120.000000, "box");
	TextDrawLetterSize(Textdraws[textdraw_SHOP][0], 0.000000, 24.936986);
	TextDrawTextSize(Textdraws[textdraw_SHOP][0], 0.000000, 254.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP][0], 2);
	TextDrawColor(Textdraws[textdraw_SHOP][0], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP][0], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP][0], 201);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][0], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP][0], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP][0], 255);
	TextDrawFont(Textdraws[textdraw_SHOP][0], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP][0], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][0], 0);

	Textdraws[textdraw_SHOP][1] = TextDrawCreate(320.000000, 125.000000, "box");
	TextDrawLetterSize(Textdraws[textdraw_SHOP][1], 0.000000, 23.766672);
	TextDrawTextSize(Textdraws[textdraw_SHOP][1], 0.000000, 254.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP][1], 2);
	TextDrawColor(Textdraws[textdraw_SHOP][1], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP][1], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP][1], 11117257);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][1], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP][1], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP][1], 255);
	TextDrawFont(Textdraws[textdraw_SHOP][1], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP][1], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][1], 0);

	Textdraws[textdraw_SHOP][2] = TextDrawCreate(207.000000, 128.000000, "Compra_y_venta");
	TextDrawLetterSize(Textdraws[textdraw_SHOP][2], 0.295333, 1.388446);
	TextDrawAlignment(Textdraws[textdraw_SHOP][2], 1);
	TextDrawColor(Textdraws[textdraw_SHOP][2], -1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][2], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP][2], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP][2], 255);
	TextDrawFont(Textdraws[textdraw_SHOP][2], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP][2], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][2], 0);

	Textdraws[textdraw_SHOP][3] = TextDrawCreate(320.000000, 145.000000, "box");
	TextDrawLetterSize(Textdraws[textdraw_SHOP][3], 0.000000, -0.266666);
	TextDrawTextSize(Textdraws[textdraw_SHOP][3], 0.000000, 222.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP][3], 2);
	TextDrawColor(Textdraws[textdraw_SHOP][3], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP][3], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP][3], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][3], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP][3], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP][3], 255);
	TextDrawFont(Textdraws[textdraw_SHOP][3], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP][3], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][3], 0);

	Textdraws[textdraw_SHOP][4] = TextDrawCreate(320.000000, 301.000000, "box");
	TextDrawLetterSize(Textdraws[textdraw_SHOP][4], 0.000000, -0.266666);
	TextDrawTextSize(Textdraws[textdraw_SHOP][4], 0.000000, 222.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP][4], 2);
	TextDrawColor(Textdraws[textdraw_SHOP][4], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP][4], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP][4], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][4], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP][4], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP][4], 255);
	TextDrawFont(Textdraws[textdraw_SHOP][4], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP][4], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP][4], 0);
	
	
	Textdraws[textdraw_SHOP_ARTICLES_BOX][0] = TextDrawCreate(208.000000, 148.000000, "LD_SPAC:white");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 70.000000, 70.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 1);
	TextDrawColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 4);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 0);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_ARTICLES_BOX][0], true);

	Textdraws[textdraw_SHOP_ARTICLES_BOX][1] = TextDrawCreate(285.000000, 148.000000, "LD_SPAC:white");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 70.000000, 70.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 1);
	TextDrawColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 4);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 0);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_ARTICLES_BOX][1], true);

	Textdraws[textdraw_SHOP_ARTICLES_BOX][2] = TextDrawCreate(362.000000, 148.000000, "LD_SPAC:white");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 70.000000, 70.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 1);
	TextDrawColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 4);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 0);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_ARTICLES_BOX][2], true);

	Textdraws[textdraw_SHOP_ARTICLES_BOX][3] = TextDrawCreate(208.000000, 225.000000, "LD_SPAC:white");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 70.000000, 70.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 1);
	TextDrawColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 4);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 0);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_ARTICLES_BOX][3], true);

	Textdraws[textdraw_SHOP_ARTICLES_BOX][4] = TextDrawCreate(285.000000, 225.000000, "LD_SPAC:white");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 70.000000, 70.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 1);
	TextDrawColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 4);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 0);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_ARTICLES_BOX][4], true);

	Textdraws[textdraw_SHOP_ARTICLES_BOX][5] = TextDrawCreate(362.000000, 225.000000, "LD_SPAC:white");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 70.000000, 70.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 1);
	TextDrawColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 4);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 0);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_ARTICLES_BOX][5], true);
	
	Textdraws[textdraw_SHOP_ARTICLE_BOX] = TextDrawCreate(208.000000, 175.000000, "LD_SPAC:white");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_ARTICLE_BOX], 0.000000, 0.000000);
	TextDrawTextSize(Textdraws[textdraw_SHOP_ARTICLE_BOX], 100.000000, 100.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_ARTICLE_BOX], 1);
	TextDrawColor(Textdraws[textdraw_SHOP_ARTICLE_BOX], 255);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLE_BOX], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_ARTICLE_BOX], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_ARTICLE_BOX], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_ARTICLE_BOX], 4);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_ARTICLE_BOX], 0);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_ARTICLE_BOX], 0);
	
	Textdraws[textdraw_TERRITORY_BOX] = TextDrawCreate(320.000000, 355.000000, "-");
	TextDrawLetterSize(Textdraws[textdraw_TERRITORY_BOX], 12.321674, 9.937778);
	TextDrawAlignment(Textdraws[textdraw_TERRITORY_BOX], 2);
	TextDrawColor(Textdraws[textdraw_TERRITORY_BOX], 167);
	TextDrawSetShadow(Textdraws[textdraw_TERRITORY_BOX], 0);
	TextDrawSetOutline(Textdraws[textdraw_TERRITORY_BOX], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_TERRITORY_BOX], 255);
	TextDrawFont(Textdraws[textdraw_TERRITORY_BOX], 1);
	TextDrawSetProportional(Textdraws[textdraw_TERRITORY_BOX], 1);
	TextDrawSetShadow(Textdraws[textdraw_TERRITORY_BOX], 0);
	
	Textdraws[textdraw_SHOP_TUNING][0] = TextDrawCreate(320.000000, 330.000000, "box");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_TUNING][0], 0.000000, 6.966667);
	TextDrawTextSize(Textdraws[textdraw_SHOP_TUNING][0], 0.000000, 152.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_TUNING][0], 2);
	TextDrawColor(Textdraws[textdraw_SHOP_TUNING][0], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP_TUNING][0], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP_TUNING][0], 95);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][0], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_TUNING][0], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_TUNING][0], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_TUNING][0], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_TUNING][0], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][0], 0);

	Textdraws[textdraw_SHOP_TUNING][1] = TextDrawCreate(320.000000, 330.000000, "Super_Tuning_Club");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_TUNING][1], 0.354000, 1.533629);
	TextDrawTextSize(Textdraws[textdraw_SHOP_TUNING][1], 0.000000, 152.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_TUNING][1], 2);
	TextDrawColor(Textdraws[textdraw_SHOP_TUNING][1], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP_TUNING][1], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP_TUNING][1], 10205093);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][1], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_TUNING][1], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_TUNING][1], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_TUNING][1], 0);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_TUNING][1], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][1], 0);

	Textdraws[textdraw_SHOP_TUNING][2] = TextDrawCreate(320.000000, 376.000000, "COMPRAR");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_TUNING][2], 0.219666, 1.031703);
	TextDrawTextSize(Textdraws[textdraw_SHOP_TUNING][2], 10.000000, 43.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_TUNING][2], 2);
	TextDrawColor(Textdraws[textdraw_SHOP_TUNING][2], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP_TUNING][2], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP_TUNING][2], -1936945921);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][2], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_TUNING][2], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_TUNING][2], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_TUNING][2], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_TUNING][2], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][2], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_TUNING][2], true);

	Textdraws[textdraw_SHOP_TUNING][3] = TextDrawCreate(370.000000, 376.000000, "SIGUIENTE");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_TUNING][3], 0.219666, 1.031703);
	TextDrawTextSize(Textdraws[textdraw_SHOP_TUNING][3], 10.000000, 43.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_TUNING][3], 2);
	TextDrawColor(Textdraws[textdraw_SHOP_TUNING][3], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP_TUNING][3], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP_TUNING][3], -1936945921);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][3], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_TUNING][3], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_TUNING][3], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_TUNING][3], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_TUNING][3], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][3], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_TUNING][3], true);

	Textdraws[textdraw_SHOP_TUNING][4] = TextDrawCreate(270.000000, 376.000000, "ANTERIOR");
	TextDrawLetterSize(Textdraws[textdraw_SHOP_TUNING][4], 0.219666, 1.031703);
	TextDrawTextSize(Textdraws[textdraw_SHOP_TUNING][4], 10.000000, 43.000000);
	TextDrawAlignment(Textdraws[textdraw_SHOP_TUNING][4], 2);
	TextDrawColor(Textdraws[textdraw_SHOP_TUNING][4], -1);
	TextDrawUseBox(Textdraws[textdraw_SHOP_TUNING][4], 1);
	TextDrawBoxColor(Textdraws[textdraw_SHOP_TUNING][4], -1936945921);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][4], 0);
	TextDrawSetOutline(Textdraws[textdraw_SHOP_TUNING][4], 0);
	TextDrawBackgroundColor(Textdraws[textdraw_SHOP_TUNING][4], 255);
	TextDrawFont(Textdraws[textdraw_SHOP_TUNING][4], 1);
	TextDrawSetProportional(Textdraws[textdraw_SHOP_TUNING][4], 1);
	TextDrawSetShadow(Textdraws[textdraw_SHOP_TUNING][4], 0);
	TextDrawSetSelectable(Textdraws[textdraw_SHOP_TUNING][4], true);
	return 1;
}

stock DestroyTextDraws()
{
	for(new i; i < sizeof(Textdraws); i++)
	{
		if(Textdraws[Textdraws_Enum:i] == INVALID_TEXT_DRAW) continue;
		TextDrawDestroy(Text:Textdraws[Textdraws_Enum:i]);
		Textdraws[Textdraws_Enum:i] = INVALID_TEXT_DRAW;
	}
	return 1;
}

public OnGameModeExit()
{
	print("\n\n\n----> Saliendo\n\n");
	db_close(Database);
	return 1;
}

#define MIN_SECONDS_BETWEEN_COMMANDS 1 // Deben pasar al menos 1 segundos entre comando y comando.
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(PLAYER_TEMP[playerid][pt_KICKED]) return 0;
	
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] != GAME_STATE_NORMAL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_HOSPITAL)
	{
		SendClientMessage(playerid, 0x999999AA, "Ahora no puedes usar comandos.");
		return 0;
	}
	if(PLAYER_TEMP[playerid][pt_SELECT_TEXTDRAW]) { SendClientMessage(playerid, 0x999999AA, "Ahora no puedes usar comandos, pulsa 'ESCAPE' para cerrar el menú."); return 0; }
	
	
	new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_COMMANDS]);
	if(interval < MIN_SECONDS_BETWEEN_COMMANDS)
	{
		if(ac_Info[CHEAT_COMMAND_SPAMMER][ac_Enabled])
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_COMMAND_SPAMMER][p_ac_info_IMMUNITY])
			{
				if(interval < 50)
				{
					if(!ac_Info[CHEAT_COMMAND_SPAMMER][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_COMMAND_SPAMMER, float(interval));
					else
					{
						if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_COMMAND_SPAMMER][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_COMMAND_SPAMMER][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_COMMAND_SPAMMER][p_ac_info_DETECTIONS] = 0;
						else PLAYER_AC_INFO[playerid][CHEAT_COMMAND_SPAMMER][p_ac_info_DETECTIONS] ++;
						
						PLAYER_AC_INFO[playerid][CHEAT_COMMAND_SPAMMER][p_ac_info_LAST_DETECTION] = gettime();
						if(PLAYER_AC_INFO[playerid][CHEAT_COMMAND_SPAMMER][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_COMMAND_SPAMMER][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_COMMAND_SPAMMER, float(interval));
					}
				}
			}
		}
		SendClientMessage(playerid, 0x999999AA, "Cálmate."); 
		return 0; 
	}
	PLAYER_TEMP[playerid][pt_ANTIFLOOD_COMMANDS] = GetTickCount();

	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success) SendClientMessage(playerid, -1, "Comando incorrecto, usa {C4FF66}/ayuda {FFFFFF}si necesitas ayuda.");
	return 1;
}

#define MIN_SECONDS_BETWEEN_TALKS 100 // Deben pasar al menos 1 segundos para volver a hablar.
public OnPlayerText(playerid, text[])
{
	if(PLAYER_TEMP[playerid][pt_KICKED]) return 0;
	
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] != GAME_STATE_NORMAL || PLAYER_TEMP[playerid][pt_SELECT_TEXTDRAW] || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_HOSPITAL) { SendClientMessage(playerid, 0x999999AA, "Ahora no puedes hablar."); return 0; }
	if(text[0] == '#' && (ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] >= 1 || IsPlayerAdmin(playerid)) )
	{
      	new string[145];
        format(string, sizeof(string), "{90C3D4}Admin Chat: {90D496}%s (%s): {CCCCCC}%s", ACCOUNT_INFO[playerid][ac_NAME], ADMIN_LEVELS[ ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] ], text[1]);
		SendMessageToAdmins(-1, string);
		return 0;
	}
	
	new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_TALK]);
	if(interval < MIN_SECONDS_BETWEEN_TALKS)
	{
		if(ac_Info[CHEAT_TEXT_SPAMMER][ac_Enabled])
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_TEXT_SPAMMER][p_ac_info_IMMUNITY])
			{
				if(interval < 50)
				{
					if(!ac_Info[CHEAT_TEXT_SPAMMER][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_TEXT_SPAMMER, float(interval));
					else
					{
						if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_TEXT_SPAMMER][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_TEXT_SPAMMER][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_TEXT_SPAMMER][p_ac_info_DETECTIONS] = 0;
						else PLAYER_AC_INFO[playerid][CHEAT_TEXT_SPAMMER][p_ac_info_DETECTIONS] ++;
						
						PLAYER_AC_INFO[playerid][CHEAT_TEXT_SPAMMER][p_ac_info_LAST_DETECTION] = gettime();
						if(PLAYER_AC_INFO[playerid][CHEAT_TEXT_SPAMMER][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_TEXT_SPAMMER][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_TEXT_SPAMMER, float(interval));
					}
				}
			}
		}
		SendClientMessage(playerid, 0x999999AA, "Cálmate."); 
		return 0; 
	}
	PLAYER_TEMP[playerid][pt_ANTIFLOOD_TALK] = GetTickCount();
	
	if(PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME])
	{
		format(PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME_STR], 24, "%s", text);
		SendClientMessage(playerid, -1, "{CCCCCC}Operadora: De acuerdo, describe brevemente lo que sucede para enviar una patrulla.");
		PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] = false;
		PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION] = true;
		return 0;
	}
	if(PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION])
	{
		PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = false;
		PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] = false;
		PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION] = false;
		
		
		new city[45], zone[45];
		GetPlayerZones(playerid, city, zone);
			
		new message[145];
		format(message, sizeof message, "{4286f4}[Central policía] {FFFFFF}Reporte {CCCCCC}[%s (%d), gps: %s, %s]: {FFFFFF}%s", PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME_STR], playerid, city, zone, text);
		SendPoliceRadioMessage(-1, -1, message);

		SendClientMessage(playerid, -1, "{CCCCCC}Operadora: Su petición fue enviada, en breve una patrulla acudirá.");
		SendClientMessage(playerid, -1, "{f47d42}Llamada finalizada.");
		return 0;
	}
	
	new str_text[145];
	if(text[0] == '!')
	{
		if(PLAYER_WORKS[playerid][WORK_POLICE] && PLAYER_TEMP[playerid][pt_WORKING_IN] == WORK_POLICE)
		{
			if(text[1] == '!') format(str_text, sizeof str_text, "{4286f4}[Radio] {CCCCCC}%s: (%s): {FFFFFF}(( %s ))", PLAYER_TEMP[playerid][pt_RP_NAME], POLICE_RANKS[ PLAYER_SKILLS[playerid][WORK_POLICE] ], text[2]);
			else format(str_text, sizeof str_text, "{4286f4}[Radio] {CCCCCC}%s (%s): {FFFFFF}%s", PLAYER_TEMP[playerid][pt_RP_NAME], POLICE_RANKS[ PLAYER_SKILLS[playerid][WORK_POLICE] ], text[1]);
			
			SendPoliceRadioMessage(PLAYER_TEMP[playerid][pt_POLICE_RADIO], -1, str_text);
			return 0;
		}
		
		if(PLAYER_CREW[playerid][player_crew_VALID])
		{
			if(text[1] == '!') format(str_text, sizeof str_text, "{%06x}[Radio] {FFFFFF}%s (%s): (( %s ))", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME], text[2]);
			else format(str_text, sizeof str_text, "{%06x}[Radio] {FFFFFF}%s (%s): %s", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME], text[1]);
			
			SendMessageToCrewMembers(PLAYER_CREW[playerid][player_crew_ID], -1, str_text);
			return 0;
		}
	}
	
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] == CALL_STATE_ESTABLISHED)
	{
		format(str_text, 145, "%s dice (por teléfono): %s", PLAYER_TEMP[playerid][pt_RP_NAME], text);
		SendClientMessageEx(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID], -1, "{CCCCCC}Teléfono: %s: %s", convertPhoneNumber(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID], PLAYER_PHONE[playerid][player_phone_NUMBER]), text);
	}
	else
	{
		if(GetPlayerDrunkLevel(playerid) > 2000) format(str_text, 145, "%s dice (ebrio): %s", PLAYER_TEMP[playerid][pt_RP_NAME], text);
		else format(str_text, 145, "%s dice: %s", PLAYER_TEMP[playerid][pt_RP_NAME], text);
	}
	ProxDetector(playerid, 15.0, str_text, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 0;
}

#define MIN_TIME_BETWEEN_DOUBT	60
CMD:d(playerid, params[])
{
	if(!ACCOUNT_INFO[playerid][ac_DOUBT_CHANNEL]) return SendClientMessage(playerid, -1, "Para enviar una duda primero debes activar el canal de dudas con {C4FF66}/dudas");
	if(isnull(params)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/d {FFFFFF}[DUDA]");
	if(!ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL])
	{
		if(gettime() < PLAYER_TEMP[playerid][pt_DOUBT_CHANNEL_TIME] + MIN_TIME_BETWEEN_DOUBT)
		{
			new time = (MIN_TIME_BETWEEN_DOUBT-(gettime()-PLAYER_TEMP[playerid][pt_DOUBT_CHANNEL_TIME]));
			SendClientMessageEx(playerid, 0x999999AA, "Tienes que esperar %s minutos para volver a realizar otra consulta.", TimeConvert(time));
			return 1;
		}
	}
	format(PLAYER_TEMP[playerid][pt_DOUBT_CHANNEL_MESSAGE], 128, "%s", params);
	ShowDialog(playerid, DIALOG_DOUBT_CHANNEL_POST);
	return 1;
}

CMD:dudas(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_DOUBT_CHANNEL])
	{
		ACCOUNT_INFO[playerid][ac_DOUBT_CHANNEL] = false;
		SendClientMessage(playerid, -1, "Canal de dudas {C4FF66}deshabilitado.");
	}
	else
	{
		ACCOUNT_INFO[playerid][ac_DOUBT_CHANNEL] = true;
		SendClientMessage(playerid, -1, "Canal de dudas {C4FF66}habilitado.");
	}
	return 1;
}

CMD:g(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/g{FFFFFF}ritar [TEXTO]");
	
	new str_text[145];
	format(str_text, 145, "%s grita: ¡%s!", PLAYER_TEMP[playerid][pt_RP_NAME], params);
	ProxDetector(playerid, 25.0, str_text, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 1;
}

CMD:gritar(playerid, params[])
{
	return cmd_g(playerid, params);
}

CMD:s(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/s{FFFFFF}usurrar [TEXTO]");
	
	new str_text[145];
	format(str_text, sizeof(str_text), "%s susurra: %s", PLAYER_TEMP[playerid][pt_RP_NAME], params);
	ProxDetector(playerid, 5.0, str_text, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 1;
}

CMD:susurrar(playerid, params[])
{
	return cmd_s(playerid, params);
}

CMD:b(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/b {FFFFFF}[TEXTO]");
	
    new str_text[145];
    format(str_text, sizeof(str_text), "ID: %d | %s: (( %s ))", playerid, PLAYER_TEMP[playerid][pt_RP_NAME], params);
	ProxDetector(playerid, 15.0, str_text, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
	return 1;
}

CMD:do(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/do {FFFFFF}[TEXTO]");

    new str_text[145];
    format(str_text, sizeof(str_text), "* %s [ %s ]", PLAYER_TEMP[playerid][pt_RP_NAME], params);
	ProxDetector(playerid, 15.0, str_text, 0xADFF2FAA, 0xADFF2FAA, 0xADFF2FAA, 0xADFF2FAA, 0xADFF2FAA);
	return 1;
}

CMD:me(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/me {FFFFFF}[TEXTO]");
	
	SendPlayerAction(playerid, params);
	return 1;
}

CMD:y(playerid, params[])
{
	return cmd_me(playerid, params);
}

CMD:inventario(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ShowPlayerInventory(playerid, playerid);
	return 1;
}

CMD:inv(playerid, params[])
{
	return cmd_inventario(playerid, params);
}


CMD:experiencia(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ShowPlayerSkills(playerid, playerid);
	return 1;
}

CMD:exp(playerid, params[])
{
	return cmd_experiencia(playerid, params);
}

CMD:skills(playerid, params[])
{
	return cmd_experiencia(playerid, params);
}

CMD:est(playerid, params[])
{
	ShowPlayerStats(playerid, playerid);
	return 1;
}

CMD:estadisticas(playerid, params[])
{
	return cmd_est(playerid, params);
}

CMD:web(playerid, params[])
{
	SendClientMessage(playerid, -1, "Web: {a7f442}"SERVER_WEBSITE"");
	return 1;
}

CMD:csave(playerid, params[])
{
	if(gettime() < PLAYER_TEMP[playerid][pt_SAVE_ACCOUNT_TIME] + 30)
	{
		new time = (30-(gettime()-PLAYER_TEMP[playerid][pt_SAVE_ACCOUNT_TIME]));
		SendClientMessageEx(playerid, 0x999999AA, "Tienes que esperar %s minutos para volver a guardar tus datos.", TimeConvert(time));
		return 1;
	}

	SaveUserData(playerid);
	SavePlayerToysData(playerid);
	SavePlayerVehicles(playerid, false);
	SavePlayerSkills(playerid);
	SavePlayerWorks(playerid);
	SavePlayerMisc(playerid);
	SavePlayerWeaponsData(playerid);
	PLAYER_TEMP[playerid][pt_SAVE_ACCOUNT_TIME] = gettime();
	
	SendClientMessage(playerid, -1, "{CCCCCC}Datos de la cuenta guardados.");
	return 1;
}

CMD:ayuda(playerid, params[])
{
	new option[24];
	if(sscanf(params, "s[24]", option)) return ShowDialog(playerid, DIALOG_HELP);
	
	if(!strcmp(option, "general", true)) ShowDialog(playerid, DIALOG_HELP_GENERAL);
	else if(!strcmp(option, "informacion", true)) ShowDialog(playerid, DIALOG_HELP_INFO);
	else if(!strcmp(option, "personaje", true)) ShowDialog(playerid, DIALOG_HELP_CHARACTER);
	else if(!strcmp(option, "propiedades", true)) ShowDialog(playerid, DIALOG_HELP_PROPERTIES);
	else if(!strcmp(option, "reportar", true)) ShowDialog(playerid, DIALOG_HELP_REPORT);
	else if(!strcmp(option, "trabajos", true)) ShowDialog(playerid, DIALOG_HELP_WORKS);
	else if(!strcmp(option, "vehiculos", true)) ShowDialog(playerid, DIALOG_HELP_VEHICLES);
	else if(!strcmp(option, "bandas", true)) ShowDialog(playerid, DIALOG_HELP_CREWS);
	else if(!strcmp(option, "su", true)) ShowDialog(playerid, DIALOG_HELP_SU);
	else ShowDialog(playerid, DIALOG_HELP);
	return 1;
}

CMD:accesorios(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ShowDialog(playerid, DIALOG_PLAYER_TOYS);
	return 1;
}

CMD:armas(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ShowDialog(playerid, DIALOG_PLAYER_WEAPONS);
	return 1;
}

CMD:ropa(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] == INTERIOR_NO_INFO) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] = GetClothingShopIndexByIntType(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE]);
	if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	if(!IsPlayerInRangeOfPoint(playerid, 1.0, Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_X], Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_Y], Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_Z])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
	SetPlayerPosEx(playerid, 257.251373, -40.797775, 1002.023437, 135.0, 14, playerid + MAX_PLAYERS, false); // World = Playerid + Max_players
	TogglePlayerControllable(playerid, false);
	
	SetPlayerCameraPos(playerid, 254.988632, -43.060516, 1002.9131);
	SetPlayerCameraLookAt(playerid, 257.251373, -40.797775, 1002.023437);
	
	UpdateClothingShop(playerid);
	ShowClothingShopTextdraws(playerid);
	
	SendClientMessage(playerid, -1, "Pulsa {C4FF66}'ESCAPE' {FFFFFF}para dejar de probarte ropa.");
	SelectTextDrawEx(playerid, 0xe8d08fFF);
	return 1;
}

CMD:toys(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] == INTERIOR_NO_INFO) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new shop = GetClothingShopIndexByIntType(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE]);
	if(shop == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	if(!IsPlayerInRangeOfPoint(playerid, 1.0, Clothing_Shop_Positions[shop][clothing_shop_X], Clothing_Shop_Positions[shop][clothing_shop_Y], Clothing_Shop_Positions[shop][clothing_shop_Z])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	PLAYER_TEMP[playerid][pt_TOYS_SHOP] = true;
	//PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] = 0;
	
	SetPlayerVirtualWorld(playerid, playerid + MAX_PLAYERS); // World = Playerid + Max_players
	TogglePlayerControllable(playerid, false);
	
	UpdateToysShop(playerid);
	ShowToysShopTextdraws(playerid);
	
	SendClientMessage(playerid, -1, "Pulsa {C4FF66}'ESCAPE' {FFFFFF}para salir del menú.");
	SelectTextDrawEx(playerid, 0xe8d08fFF);
	return 1;
}

CMD:pedir(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] == INTERIOR_NO_INFO) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	
	new index = GetFastFoodLocalIndexByIntType(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE]);
	if(index == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	if(!IsPlayerInRangeOfPoint(playerid, 1.0, Fast_Food_Positions[index][fast_food_X], Fast_Food_Positions[index][fast_food_Y], Fast_Food_Positions[index][fast_food_Z])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	switch(Fast_Food_Positions[index][fast_food_INTERIOR_TYPE])
	{
		case INTERIOR_BURGER_SHOT: ShowDialog(playerid, DIALOG_FOOD_BURGER);
		case INTERIOR_PIZZA: ShowDialog(playerid, DIALOG_FOOD_PIZZA);
		case INTERIOR_CLUCKIN_BELL: ShowDialog(playerid, DIALOG_FOOD_CLUCKIN);
	}
	return 1;
}

CMD:productos(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_247) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -27.964675, -89.948631, 1003.546875)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	ShowDialog(playerid, DIALOG_247_LIST);
	return 1;
}

CMD:mercado(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, 2119.059814, -2001.701904, 7.984375)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");	
	if(PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, 0x999999AA, "No eres bienvenido aquí.");
	ShowDialog(playerid, DIALOG_BLACK_MARKET);
	return 1;
}

CMD:gps(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_OBJECT[playerid][po_GPS])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún GPS, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	
	Auto_SendPlayerAction(playerid, "mira su GPS.");
	ShowDialog(playerid, DIALOG_PLAYER_GPS);
	return 1;
}

CMD:tiempo(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL)
	{
		new time = CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] - (gettime() - PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME]);
		if(time <= 0)
		{
			UnjailPlayer(playerid);
			return 1;
		}
		SendClientMessageEx(playerid, -1, "{CCCCCC}Te quedan %s minutos de condena.", TimeConvert(time));
	}
	else SendClientMessage(playerid, -1, "{999999}No estás en la cárcel.");
	return 1;
}

CMD:mapa(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_OBJECT[playerid][po_GPS])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún GPS, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	
	if(PLAYER_TEMP[playerid][pt_GPS_MAP]) HidePlayerGpsMap(playerid);
	else ShowPlayerGpsMap(playerid);
	return 1;
}

CMD:mp3(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_OBJECT[playerid][po_MP3])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún MP3, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_TEMP[playerid][pt_PLAYER_WAITING_MP3_HTTP]) return SendClientMessage(playerid, -1, "{999999}Espera que termine la búsqueda actual.");
	
	PLAYER_TEMP[playerid][pt_MUSIC_FOR_PROPERTY] = false;
	Auto_SendPlayerAction(playerid, "busca música en su MP3.");
	ShowDialog(playerid, DIALOG_PLAYER_MP3);
	return 1;
}

CMD:vmp3(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "{999999}No conduces ningún vehículo.");
	if(!PLAYER_OBJECT[playerid][po_MP3])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún MP3, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_TEMP[playerid][pt_PLAYER_WAITING_MP3_HTTP]) return SendClientMessage(playerid, -1, "{999999}Espera que termine la búsqueda actual.");
	
	PLAYER_TEMP[playerid][pt_MUSIC_FOR_VEHICLE] = true;
	Auto_SendPlayerAction(playerid, "busca música en su MP3.");
	ShowDialog(playerid, DIALOG_PLAYER_MP3);
	return 1;
}

CMD:stop(playerid, params[])
{
	StopAudioStreamForPlayer(playerid);
	return 1;
}

CMD:pass(playerid, params[])
{
	ShowDialog(playerid, DIALOG_CHANGE_PASSWORD);
	return 1;
}

CMD:gcp(playerid, params[])
{
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT] = INVALID_STREAMER_ID;
		
		SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado la ruta antigua de tu GPS.");
	}
	else SendClientMessage(playerid, -1, "{999999}No tienes ningún punto marcado en tu GPS.");
	return 1;
}

CMD:movil(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) SendClientMessageEx(playerid, -1, "{999999}Estás en una llamada.");
	
	if(!PLAYER_TEMP[playerid][pt_PHONE_COMMANDS_MESSAGE])
	{
		PLAYER_TEMP[playerid][pt_PHONE_COMMANDS_MESSAGE] = true;
		SendClientMessage(playerid, -1, "Recuerda que también puedes usar {7b9cd1}/agenda, /llamar, /sms, /tienda.");
	}
	
	Auto_SendPlayerAction(playerid, "mira su teléfono.");
	ShowDialog(playerid, DIALOG_PHONE);
	return 1;
}

CMD:celular(playerid, params[])
{
	return cmd_movil(playerid, params);
}

CMD:telefono(playerid, params[])
{
	return cmd_movil(playerid, params);
}

CMD:tlf(playerid, params[])
{
	return cmd_movil(playerid, params);
}
	
CMD:guia(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_OBJECT[playerid][po_PHONE_RESOLVER])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes una guía telefónica, puedes ir a cualquier 24/7 para comprar una.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/guia {FFFFFF}[PlayerID/Nombre]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}Jugador desconectado.");
	
	if(!PLAYER_PHONE[params[0]][player_phone_VALID]) return SendClientMessage(playerid, -1, "{999999}Este jugador no tiene teléfono.");
	if(!PLAYER_PHONE[params[0]][player_phone_VISIBLE_NUMBER]) return SendClientMessage(playerid, -1, "{999999}Este jugador ha decidido no mostrar su número en la guía.");
	
	SendClientMessageEx(playerid, -1, "{CCCCCC}Nombre: {5c93ed}%s	{CCCCCC}Teléfono: {5c93ed}%s.", PLAYER_TEMP[params[0]][pt_RP_NAME], number_format_dash(PLAYER_PHONE[params[0]][player_phone_NUMBER]));
	return 1;
}

CMD:sguia(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	
	if(PLAYER_PHONE[playerid][player_phone_VISIBLE_NUMBER])
	{
		PLAYER_PHONE[playerid][player_phone_VISIBLE_NUMBER] = false;
		SendClientMessage(playerid, -1, "{CCCCCC}Tu número no aparecerá ahora en la guía telefónica.");
	}
	else
	{
		PLAYER_PHONE[playerid][player_phone_VISIBLE_NUMBER] = true;
		SendClientMessage(playerid, -1, "{CCCCCC}Tu número aparecerá en la guía telefónica.");
	}
	return 1;
}

CMD:sms(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
	if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}Estás en una llamada.");
	
	new to_number, message[64];
	new tmp_number, tmp_contact[24], bool:found;
	if(!sscanf(params, "ds[64]", tmp_number, message))
	{
		found = true;
		to_number = tmp_number;
	}
	else if(!sscanf(params, "s[24]s[64]", tmp_contact, message))
	{
		// con strcmp daba crash por las tilder
		new DBResult:Result, DB_Query[145];
		format(DB_Query, sizeof DB_Query, "SELECT `PHONE_NUMBER` FROM `PHONE_BOOK` WHERE `PHONE_ID` = '%d' AND `NAME` LIKE '%%%q%%' LIMIT 1;", PLAYER_PHONE[playerid][player_phone_NUMBER], tmp_contact);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
			found = true;
			to_number = db_get_field_int(Result, 0);
		}
		db_free_result(Result);
	}	
	else return SendClientMessage(playerid, -1, "Error: {C4FF66}/sms {FFFFFF}[Número o contacto de /agenda] [Mensaje 1-64 caracteres]");
	
	if(!found) return SendClientMessageEx(playerid, -1, "{999999}No hemos encontrado a '%s' en tu /agenda.", tmp_contact);
	if(to_number <= 0) return SendClientMessage(playerid, -1, "{999999}El número destino no es válido.");
	
	new DBResult:Result, DB_Query[100], bool:phone_exists;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PHONE` WHERE `PHONE_NUMBER` = '%d';", to_number);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result)) phone_exists = true;
	db_free_result(Result);
	
	if(!phone_exists) return SendClientMessage(playerid, -1, "{999999}El número destino no es válido.");
	
	new to_playerid = INVALID_PLAYER_ID;
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if((PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_DEAD) && PLAYER_PHONE[i][player_phone_NUMBER] == to_number)
			{
				to_playerid = i;
				break;
			}
		}
	}
	
	if(to_playerid == INVALID_PLAYER_ID) RegisterPhoneMessage(PLAYER_PHONE[playerid][player_phone_NUMBER], to_number, message, true);
	else
	{
		RegisterPhoneMessage(PLAYER_PHONE[playerid][player_phone_NUMBER], to_number, message);
		if(PLAYER_PHONE[to_playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(to_playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(to_playerid, PLAYER_PHONE[playerid][player_phone_NUMBER]), message);
	}
	SendClientMessageEx(playerid, -1, "Mensaje enviado a {7b9cd1}%s.", convertPhoneNumber(playerid, to_number));
	return 1;
}

CMD:agenda(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
	if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}Estás en una llamada.");
	
	ShowDialog(playerid, DIALOG_PHONE_BOOK);
	return 1;
}

CMD:tienda(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	
	if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
	ShowPlayerShop(playerid);
	return 1;
}

CMD:llamar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
	if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}Estás en una llamada.");
	
	new call_number, tmp_number, tmp_contact[24], bool:found;
	if(!sscanf(params, "d", tmp_number))
	{
		found = true;
		call_number = tmp_number;
	}
	else if(!sscanf(params, "s[24]", tmp_contact))
	{
		// con strcmp daba crash por las tilder
		new DBResult:Result, DB_Query[145];
		format(DB_Query, sizeof DB_Query, "SELECT `PHONE_NUMBER` FROM `PHONE_BOOK` WHERE `PHONE_ID` = '%d' AND `NAME` LIKE '%%%q%%' LIMIT 1;", PLAYER_PHONE[playerid][player_phone_NUMBER], tmp_contact);
		Result = db_query(Database, DB_Query);
		
		if(db_num_rows(Result))
		{
			found = true;
			call_number = db_get_field_int(Result, 0);
		}
		db_free_result(Result);
	}	
	else return SendClientMessage(playerid, -1, "Error: {C4FF66}/llamar {FFFFFF}[Número o contacto de /agenda]");
	
	if(!found) return SendClientMessageEx(playerid, -1, "{999999}No hemos encontrado a '%s' en tu /agenda.", tmp_contact);
	if(call_number <= 0) return SendClientMessage(playerid, -1, "{999999}El número destino no es válido.");

	switch(call_number)
	{
		case 911:
		{
			if(ACCOUNT_INFO[playerid][ac_LEVEL] < 3) return SendClientMessage(playerid, -1, "{999999}Debes ser al menos nivel 3 para llamar a la policía.");
			PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = true;
			PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] = true;
			PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION] = false;
			
			SendClientMessage(playerid, -1, "{CCCCCC}Operadora: Ha llamado a la central de policía, indícanos su nombre por favor.");
			return 1;
		}
		case 450: //Taxi
		{
			if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
			{
				PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
				DisablePlayerTaxiMark(playerid);
				SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado el taxi.");
			}
			else
			{
				PLAYER_TEMP[playerid][pt_WANT_TAXI] = true;
				SendClientMessage(playerid, -1, "{CCCCCC}Tu llamada se ha enviado a los taxistas disponibles, espera a que llegue un taxi.");
				SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a llamar a este número si ya no necesitas un taxi.");
				SendAlertToTaxiDrivers(playerid);
			}
			return 1;
		}
		case 570: //Mecanico
		{
			if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
			{
				PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
				DisablePlayerMechanicMark(playerid);
				SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado el mecánico.");
			}
			else
			{
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "{999999}Tienes que estar dentro de un vehículo averiado para llamar al mecánico.");
				if(GLOBAL_VEHICLES[ GetPlayerVehicleID(playerid) ][gb_vehicle_STATE] != VEHICLE_STATE_DAMAGED) return SendClientMessage(playerid, -1, "{999999}Tienes que estar dentro de un vehículo averiado para llamar al mecánico.");
				
				PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = true;
				SendClientMessage(playerid, -1, "{CCCCCC}Tu llamada se ha enviado a los mecánicos disponibles, espera a que llegue un mecánico.");
				SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a llamar a este número si ya no necesitas un mecánico.");
				SendAlertToMechanic(playerid);
			}
			return 1;
		}
		case 6740: return SendClientMessage(playerid, -1, "{CCCCCC}No vuelvas a llamar al banco, cuidado.");
		case 38350: return SendClientMessage(playerid, -1, "{CCCCCC}Aseguradora que asegura tus vehículos de mierda.");
		case 666: return SendClientMessage(playerid, -1, "{CCCCCC}Mirar a las estrellas es mirar al pasado, no mires.");
	}
	
	new to_playerid = INVALID_PLAYER_ID;
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if((PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL) && PLAYER_PHONE[i][player_phone_NUMBER] == call_number)
			{
				to_playerid = i;
				break;
			}
		}
	}
	
	if(to_playerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar no es correcto o está fuera de cobertura.");
	if(to_playerid == playerid) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar no es correcto.");
	if(PLAYER_PHONE[to_playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar está apagado o fuera de cobertura.");
	if(PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL]) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar está en otra llamada.");
	
	SendClientMessageEx(to_playerid, -1, "{e5f442}[Llamada entrante] {FFFFFF}%s te está llamando, para responser usa {e5f442}/responder {FFFFFF}o {e5f442}/colgar.", convertPhoneNumber(to_playerid, PLAYER_PHONE[playerid][player_phone_NUMBER]));
	PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL] = true;
	PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_INCOMING_CALL;
	PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = playerid;
	
	SendClientMessageEx(playerid, -1, "Llamando a {e5f442}%s ...", convertPhoneNumber(playerid, call_number));
	PLAYER_TEMP[playerid][pt_TIMERS][6] = SetTimerEx("NoCallResponse", 15000, false, "i", playerid);
	PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = true;
	PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_WAITING_RESPONSE;
	PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = to_playerid;
	PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	return 1;
}

CMD:responder(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
	
	if(!PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}No hay ninguna llamada entrante.");
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] == INVALID_PLAYER_ID) return SendClientMessageEx(playerid, -1, "{999999}No hay ninguna llamada entrante."); 
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] != CALL_STATE_INCOMING_CALL) return SendClientMessageEx(playerid, -1, "{999999}No hay ninguna llamada entrante.");
	
	new to_playerid = PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID];
	
	PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = true;
	PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_ESTABLISHED;
	PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = to_playerid;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	
	KillTimer(PLAYER_TEMP[to_playerid][pt_TIMERS][6]);
	PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL] = true;
	PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_ESTABLISHED;
	PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = playerid;
	SetPlayerSpecialAction(to_playerid, SPECIAL_ACTION_USECELLPHONE);
	
	SendClientMessage(playerid, -1, "Llamada establecida, usa {e5f442}/colgar {FFFFFF}para terminarla.");
	SendClientMessage(to_playerid, -1, "Llamada establecida, usa {e5f442}/colgar {FFFFFF}para terminarla.");
	return 1;
}

CMD:colgar(playerid, params[])
{
	if(!PLAYER_PHONE[playerid][player_phone_VALID])
	{
		SendClientMessageEx(playerid, -1, "{999999}No tienes ningún teléfono, puedes ir a cualquier 24/7 para comprar uno.");
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		return 1;
	}
	if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
	
	if(!PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}No hay ninguna llamada entrante.");
	
	if(PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] || PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION])
	{
		PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = false;
		PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] = false;
		PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION] = false;
		SendClientMessage(playerid, -1, "{f47d42}Llamada finalizada.");
		return 1;
	}
	
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] == INVALID_PLAYER_ID) return SendClientMessageEx(playerid, -1, "{999999}No hay ninguna llamada entrante."); 
	
	switch(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE])
	{
		case CALL_STATE_WAITING_RESPONSE:
		{
			EndPhoneCall(playerid);
			SendClientMessage(playerid, -1, "{CCCCCC}Colgaste.");
		}
		case CALL_STATE_INCOMING_CALL:
		{
			EndPhoneCall(playerid);
			SendClientMessage(playerid, -1, "{CCCCCC}No has respondido la llamada.");
		}
		case CALL_STATE_ESTABLISHED:
		{
			EndPhoneCall(playerid);
			SendClientMessage(playerid, -1, "{f47d42}Llamada finalizada.");
		}
		default: SendClientMessageEx(playerid, -1, "{999999}No estás en ninguna llamada.");	
	}
	return 1;
}

CMD:comprarcasa(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] == INTERIOR_NO_INFO) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	
	new site_index = GetBuyPropertySiteIndexByIntTyp(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE]);
	if(site_index == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	if(!IsPlayerInRangeOfPoint(playerid, 1.0, BUY_PROPERTIES_SITES[site_index][site_X], BUY_PROPERTIES_SITES[site_index][site_Y], BUY_PROPERTIES_SITES[site_index][site_Z])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(BANK_ACCOUNT[playerid][bank_account_ID] == 0) return SendClientMessage(playerid, -1, "{999999}No puedes comprar una casa sin tener cuenta bancaria.");

	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/comprarcasa {FFFFFF}[ID]");
	if(params[0] <= 0) return SendClientMessage(playerid, -1, "{999999}Error: ID no es válida.");
	
	new DBResult:Result, DB_Query[120], player_properties;
	format(DB_Query, sizeof(DB_Query), "SELECT COUNT(`ID_USER`) AS `PROPERTIES` FROM `PROPERTY_OWNER` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result)) player_properties = db_get_field_assoc_int(Result, "PROPERTIES");
	db_free_result(Result);
	
	if(ACCOUNT_INFO[playerid][ac_SU])
	{
		if(player_properties >= MAX_SU_PROPERTIES) return SendClientMessage(playerid, -1, "{999999}No puedes comprar más propiedades.");
	}
	else
	{
		if(player_properties >= MAX_NU_PROPERTIES)
		{
			SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d propiedades! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_PROPERTIES);
			SendClientMessage(playerid, -1, "{999999}No puedes comprar más propiedades.");
		}
	}
	
	new index = GetPropertyIndexByID(params[0]);
	if(index == -1) return SendClientMessage(playerid, -1, "{999999}Error: ID no es válida.");
	
	if(PROPERTY_INFO[index][property_SOLD]) return SendClientMessage(playerid, -1, "{999999}Está propiedad ya está vendida.");
	if(PROPERTY_INFO[index][property_LEVEL] > ACCOUNT_INFO[playerid][ac_LEVEL]) return SendClientMessageEx(playerid, -1, "{999999}Necesitas ser como mínimo nivel %d para comprar esta propiedad.", PROPERTY_INFO[index][property_LEVEL]);
	
	if(BANK_ACCOUNT[playerid][bank_account_BALANCE] >= PROPERTY_INFO[index][property_PRICE])
	{
		PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX] = index;
		ShowDialog(playerid, DIALOG_CONFIRM_BUY_PROPERTY);
	}
	else SendClientMessageEx(playerid, -1, "{999999}No tienes fondos suficientes en tu cuenta, te faltan {FF6633}%s$ {999999}para poder comprar esta propiedad.", number_format_thousand(PROPERTY_INFO[index][property_PRICE] - BANK_ACCOUNT[playerid][bank_account_BALANCE]));
	return 1;
}

GetPropertyIndexByID(id)
{
	for(new i = 0; i != MAX_PROPERTIES; i ++)
	{
		if(!PROPERTY_INFO[i][property_VALID]) continue;
		if(PROPERTY_INFO[i][property_ID] == id) return i;
	}
	return -1;
}

CMD:banco(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] == INTERIOR_NO_INFO) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	
	new index = GetBankLocalIndexByIntType(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE]);
	if(index == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	if(!IsPlayerInRangeOfPoint(playerid, 1.0, Bank_Interior_Positions[index][bank_X], Bank_Interior_Positions[index][bank_Y], Bank_Interior_Positions[index][bank_Z])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(BANK_ACCOUNT[playerid][bank_account_ID] == 0) // no tiene cuenta bancaria
	{
		ShowDialog(playerid, DIALOG_CREATE_BANK_ACCOUNT);
		return 1;
	}
	ShowDialog(playerid, DIALOG_BANK);
	return 1;
}

CMD:cajero(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		
	new info[3];
	Streamer_GetArrayData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
	if(info[0] != PICKUP_TYPE_ATM) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new Float:pos[3]; 
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_X, pos[0]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Y, pos[1]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Z, pos[2]);
	
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(BANK_ACCOUNT[playerid][bank_account_ID] == 0)
	{
		SendClientMessage(playerid, -1, "{999999}No tienes cuenta bancaria, puedes crearla en cualquier Banco.");
		return 1;
	}
	
	PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = true;
	ShowDialog(playerid, DIALOG_BANK);
	return 1;
}

CMD:alimentos(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ShowDialog(playerid, DIALOG_PLAYER_POCKET);
	return 1;
}


#define TIME_BETWEEN_GIVE_CASH	30 // segundos
CMD:dar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(ACCOUNT_INFO[playerid][ac_LEVEL] < 2) return SendClientMessage(playerid, -1, "{999999}Debes ser al menos nivel 2 para usar este comando.");
	
	new option[24], to_playerid, extra;
	if(sscanf(params, "s[24]ud", option, to_playerid, extra)) return SendClientMessage(playerid, -1, "{999999}Error en los parámetros, utilice {CCCCCC}/man dar.");
	
	if(!IsPlayerConnected(to_playerid)) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(to_playerid, pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[to_playerid][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes darle nada a este jugador ahora.");
	
	if(!strcmp(option, "dinero", true))
	{
		if(gettime() < PLAYER_TEMP[playerid][pt_LAST_GIVE_MONEY_TIME] + TIME_BETWEEN_GIVE_CASH)
		{
			new time = TIME_BETWEEN_GIVE_CASH - (gettime() - PLAYER_TEMP[playerid][pt_LAST_GIVE_MONEY_TIME]);
			SendClientMessageEx(playerid, -1, "{999999}Debes de esperar %s minutos para volver a dar dinero.", TimeConvert(time));
			return 1;
		}
		
		if(extra < 0 || extra > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessage(playerid, -1, "{999999}Cantidad de dinero incorrecta.");
		if(extra > 50000) return SendClientMessage(playerid, -1, "{999999}Para dar tanto dinero tienes que hacerlo a través de transferencias bancarias.");
		
		GivePlayerCash(playerid, -extra);
		GivePlayerCash(to_playerid, extra);
		
		SendClientMessageEx(playerid, -1, "Le has dado {5cd1d1}%s$ {FFFFFF}a {b6f442}%s.", number_format_thousand(extra), PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		SendClientMessageEx(to_playerid, -1, "{b6f442}%s {FFFFFF} te ha dado {5cd1d1}%s$.", PLAYER_TEMP[playerid][pt_RP_NAME], number_format_thousand(extra));
		
		new action[64];
		format(action, sizeof action, "le da dinero a %s.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		PLAYER_TEMP[playerid][pt_LAST_GIVE_MONEY_TIME] = gettime();
		return 1;
	}
	else if(!strcmp(option, "alimento", true))
	{
		if(extra < 1 || extra > MAX_PLAYER_POCKET_OBJECTS) return SendClientMessage(playerid, -1, "Error: {C4FF66}/dar alimento {FFFFFF}[ID o Nombre] [Slot /alimentos]");
	
		extra --;
		
		if(!PLAYER_POCKET[playerid][extra][player_pocket_VALID]) return SendClientMessage(playerid, -1, "{999999}No tienes nada en ese slot.");
		
		new to_player_slot = GetEmptyPlayerPocketSlot(to_playerid);
		if(to_player_slot == -1)
		{
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, -1, "{999999}El jugador no tiene más espacio entre sus alimentos.");
			return 1;
		}
		
		new action[64];
		format(action, sizeof action, "le da su %s a %s.", PLAYER_POCKET[playerid][extra][player_pocket_object_NAME], PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		
		TransferPlayerPocketObject(playerid, extra, to_playerid, to_player_slot);
		return 1;
	}
	else if(!strcmp(option, "medicamentos", true))
	{
		if(extra <= 0 || extra > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(extra > PLAYER_MISC[playerid][MISC_MEDICINE]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		PLAYER_MISC[playerid][MISC_MEDICINE] -= extra;
		PLAYER_MISC[to_playerid][MISC_MEDICINE] += extra;
		
		SendClientMessageEx(playerid, -1, "Le has dado %dg de medicamentos a %s.", extra, PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		SendClientMessageEx(to_playerid, -1, "%s te ha dado %dg de medicamentos.", PLAYER_TEMP[playerid][pt_RP_NAME], extra);
		
		new action[64];
		format(action, sizeof action, "le da algo a %s.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		return 1;
	}
	else if(!strcmp(option, "marihuana", true))
	{
		if(extra <= 0 || extra > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(extra > PLAYER_MISC[playerid][MISC_CANNABIS]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		PLAYER_MISC[playerid][MISC_CANNABIS] -= extra;
		PLAYER_MISC[to_playerid][MISC_CANNABIS] += extra;
		
		SendClientMessageEx(playerid, -1, "Le has dado %dg de marihuana a %s.", extra, PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		SendClientMessageEx(to_playerid, -1, "%s te ha dado %dg de marihuana.", PLAYER_TEMP[playerid][pt_RP_NAME], extra);
		
		new action[64];
		format(action, sizeof action, "le da algo a %s.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		return 1;
	}
	else if(!strcmp(option, "crack", true))
	{
		if(extra <= 0 || extra > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(extra > PLAYER_MISC[playerid][MISC_CRACK]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		PLAYER_MISC[playerid][MISC_CRACK] -= extra;
		PLAYER_MISC[to_playerid][MISC_CRACK] += extra;
		
		SendClientMessageEx(playerid, -1, "Le has dado %dg de crack a %s.", extra, PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		SendClientMessageEx(to_playerid, -1, "%s te ha dado %dg de crack.", PLAYER_TEMP[playerid][pt_RP_NAME], extra);
		
		new action[64];
		format(action, sizeof action, "le da algo a %s.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		return 1;
	}
	else if(!strcmp(option, "arma", true))
	{
		if(PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}Los policías no pueden vender armas.");
		if(extra < 0 || extra > 12) return SendClientMessage(playerid, -1, "Error: {C4FF66}/dar arma {FFFFFF}[ID o Nombre] [Slot /armas]");
	
		if(!PLAYER_WEAPONS[playerid][extra][player_weapon_VALID]) return SendClientMessage(playerid, -1, "{999999}No tienes nigún arma en ese slot.");
		
		if(ACCOUNT_INFO[to_playerid][ac_LEVEL] < 3) return SendClientMessage(playerid, -1, "{999999}La otra persona tiene que ser al menos nivel 3.");
		if(PLAYER_WEAPONS[to_playerid][extra][player_weapon_VALID])
		{
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, -1, "{999999}El jugador ya tiene un arma en ese slot.");
			return 1;
		}
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Le has dado tu '%s' a %s.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][extra][player_weapon_ID] ][weapon_info_NAME], PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		SendClientMessageEx(to_playerid, -1, "{CCCCCC}%s te ha dado su '%s'.", PLAYER_TEMP[playerid][pt_RP_NAME], WEAPON_INFO[ PLAYER_WEAPONS[playerid][extra][player_weapon_ID] ][weapon_info_NAME]);
		
		new action[64];
		format(action, sizeof action, "le da un arma a %s.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		
		TransferPlayerWeapon(playerid, extra, to_playerid);
		return 1;
	}
	else SendClientMessage(playerid, -1, "{999999}Error en los parámetros, utilice {CCCCCC}/man dar.");
	return 1;
}

CMD:vender(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(ACCOUNT_INFO[playerid][ac_LEVEL] < 2) return SendClientMessage(playerid, -1, "{999999}Debes ser al menos nivel 2 para usar este comando.");
	
	new option[24], to_playerid, extra, price;
	if(sscanf(params, "s[24]udd", option, to_playerid, extra, price)) return SendClientMessage(playerid, -1, "{999999}Error en los parámetros, utilice {CCCCCC}/man vender.");
	
	if(price <= 0 || price > 10000000) return SendClientMessage(playerid, -1, "{999999}El precio no es válido.");
	if(!IsPlayerConnected(to_playerid)) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(to_playerid, pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[to_playerid][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes venderle nada a este jugador ahora.");
	
	if(price > CHARACTER_INFO[to_playerid][ch_CASH])
	{
		SendClientMessage(playerid, -1, "{999999}Esta persona no tiene el dinero que pides.");
		return 1;
	}
	
	PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_PID] = playerid;
	PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_AID] = ACCOUNT_INFO[playerid][ac_ID];
	PLAYER_TEMP[to_playerid][pt_TRICK_PRICE] = price;
	PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] = extra;
	PLAYER_TEMP[to_playerid][pt_TRICK_TIME] = gettime();
	
	if(!strcmp(option, "alimento", true))
	{
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] < 1 || PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > MAX_PLAYER_POCKET_OBJECTS) return SendClientMessage(playerid, -1, "Error: {C4FF66}/vender alimento {FFFFFF}[ID o Nombre] [Slot /alimentos] [precio]");
		PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] --;
		
		if(!PLAYER_POCKET[playerid][ PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] ][player_pocket_VALID]) return SendClientMessage(playerid, -1, "{999999}No tienes nada en ese slot.");
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido una venta a %s, espera para ver si la acepta.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		ShowDialog(to_playerid, DIALOG_TRICKS_FOOD);
		return 1;
	}
	else if(!strcmp(option, "medicamentos", true))
	{
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] <= 0 || PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > PLAYER_MISC[playerid][MISC_MEDICINE]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido una venta a %s, espera para ver si la acepta.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		ShowDialog(to_playerid, DIALOG_TRICKS_MEDICINE);
		return 1;
	}
	else if(!strcmp(option, "marihuana", true))
	{
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] <= 0 || PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > PLAYER_MISC[playerid][MISC_CANNABIS]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido una venta a %s, espera para ver si la acepta.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		ShowDialog(to_playerid, DIALOG_TRICKS_CANNABIS);
		return 1;
	}
	else if(!strcmp(option, "crack", true))
	{
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] <= 0 || PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > PLAYER_MISC[playerid][MISC_CRACK]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido una venta a %s, espera para ver si la acepta.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		ShowDialog(to_playerid, DIALOG_TRICKS_CRACK);
		return 1;
	}
	else if(!strcmp(option, "arma", true))
	{
		if(PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}Los policías no pueden vender armas.");
		if(PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] < 0 || PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] > 12) return SendClientMessage(playerid, -1, "Error en slot de /armas.");
	
		if(!PLAYER_WEAPONS[playerid][ PLAYER_TEMP[to_playerid][pt_TRICK_SELLER_EXTRA] ][player_weapon_VALID]) return SendClientMessage(playerid, -1, "{999999}No tienes nigún arma en ese slot.");
		
		if(ACCOUNT_INFO[to_playerid][ac_LEVEL] < 3) return SendClientMessage(playerid, -1, "{999999}La otra persona tiene que ser al menos nivel 3.");
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido una venta a %s, espera para ver si la acepta.", PLAYER_TEMP[to_playerid][pt_RP_NAME]);
		ShowDialog(to_playerid, DIALOG_TRICKS_WEAPON);
		return 1;
	}
	else SendClientMessage(playerid, -1, "{999999}Error en los parámetros, utilice {CCCCCC}/man vender.");
	return 1;
}

CMD:consumir(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	new option[24], slot;
	if(!sscanf(params, "s[24]d", option, slot))	
	{
		if(!strcmp(option, "alimento", true))
		{
			if(slot < 1 || slot > MAX_PLAYER_POCKET_OBJECTS) return SendClientMessageEx(playerid, -1, "Error: {C4FF66}/consumir alimento {FFFFFF}[SLOT 1-%d]", MAX_PLAYER_POCKET_OBJECTS);
		
			slot --;
			
			if(!PLAYER_POCKET[playerid][slot][player_pocket_VALID]) return SendClientMessage(playerid, -1, "{999999}No tienes nada en ese slot.");
			if(CHARACTER_INFO[playerid][ch_HUNGRY] >= 99.0 && CHARACTER_INFO[playerid][ch_THIRST] >= 99.0) return SendClientMessage(playerid, -1, "{CCCCCC}¿Es que quieres reventar?");

			Add_Hungry_Thirst(playerid, PLAYER_POCKET[playerid][slot][player_pocket_object_HUNGRY], PLAYER_POCKET[playerid][slot][player_pocket_object_THIRST]);
			GivePlayerDrunkLevel(playerid, PLAYER_POCKET[playerid][slot][player_pocket_object_DRUNK]);
			
			new action[64];
			format(action, sizeof action, "consume %s.", PLAYER_POCKET[playerid][slot][player_pocket_object_NAME]);
			Auto_SendPlayerAction(playerid, action);
			
			DeletePlayerPocketObject(playerid, slot);

			ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 0, 0, 0, 0, 0, 0);
			ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 1000);
		}
		else SendClientMessage(playerid, -1, "Error: {C4FF66}/consumir {FFFFFF}[medicamento - marihuana - crack - alimento]");
	}
	else if(!sscanf(params, "s[24]", option))
	{
		if(!strcmp(option, "medicamento", true))
		{
			if(PLAYER_MISC[playerid][MISC_MEDICINE] <= 0) return SendClientMessage(playerid, -1, "{999999}No tienes medicamentos.");
			
			PLAYER_MISC[playerid][MISC_MEDICINE] --;
			GivePlayerHealthEx(playerid, 25.0);
			Auto_SendPlayerAction(playerid, "se toma un medicamento.");
		}
		else if(!strcmp(option, "marihuana", true))
		{
			if(PLAYER_MISC[playerid][MISC_CANNABIS] <= 0) return SendClientMessage(playerid, -1, "{999999}No tienes marihuana.");
			
			PLAYER_MISC[playerid][MISC_CANNABIS] --;
			GivePlayerHealthEx(playerid, 30.0);
			Auto_SendPlayerAction(playerid, "consume marihuana.");
			GivePlayerDrunkLevel(playerid, 1000);
		}
		else if(!strcmp(option, "crack", true))
		{
			if(PLAYER_MISC[playerid][MISC_CRACK] <= 0) return SendClientMessage(playerid, -1, "{999999}No tienes crack.");
			
			PLAYER_MISC[playerid][MISC_CRACK] --;
			GivePlayerArmourEx(playerid, 20.0);
			Auto_SendPlayerAction(playerid, "consume crack.");
			GivePlayerDrunkLevel(playerid, 2000);
		}
		else if(!strcmp(option, "alimento", true)) SendClientMessageEx(playerid, -1, "Error: {C4FF66}/consumir alimento {FFFFFF}[SLOT 1-%d]", MAX_PLAYER_POCKET_OBJECTS);
		else SendClientMessage(playerid, -1, "Error: {C4FF66}/consumir {FFFFFF}[medicamento - marihuana - crack - alimento]");
	}
	else SendClientMessage(playerid, -1, "Error: {C4FF66}/consumir {FFFFFF}[medicamento - marihuana - crack - alimento]");
	return 1;
}

CMD:man(playerid, params[])
{
	new option[24];
	if(sscanf(params, "s[24]", option)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/man {FFFFFF}[dar]");

	if(!strcmp(option, "dar", true))
	{
		ShowPlayerDialog
		(
			playerid,
			DIALOG_INFO,
			DIALOG_STYLE_MSGBOX,
			
				"Super RolePlay - Manual",
					"\
						Comando: dar\n\
						Sintaxis: dar <opcion> <playerid o nombre> <extra>\n\
						\n\
						Este comando sirve para dar algo a otro jugador cercano.\n\
						Para comprobar que tiene el objeto y la cantidad utilice /inv.\n\
						\n\
						Esta es la lista de opciones:\n\
						    - arma <playerid o nombre> <slot de /armas>\n\
						    - dinero <playerid o nombre> <cantidad>\n\
						    - alimento <playerid o nombre> <slot de /alimentos>\n\
						    - medicamentos <playerid o nombre> <cantidad>\n\
						    - marihuana <playerid o nombre> <cantidad>\n\
						    - crack <playerid o nombre> <cantidad>\n\
						\n\
						Para obtener ayuda diferente use /ayuda.\
					",
				"Cerrar", ""
				
		);
		return 1;
	}
	else if(!strcmp(option, "tirar", true))
	{
		ShowPlayerDialog
		(
			playerid,
			DIALOG_INFO,
			DIALOG_STYLE_MSGBOX,
			
				"Super RolePlay - Manual",
					"\
						Comando: tirar\n\
						Sintaxis: tirar <opcion> <extra>\n\
						\n\
						Este comando sirve para deshacerte de algún objeto.\n\
						\n\
						Esta es la lista de opciones:\n\
						    - arma <slot de /armas>\n\
						    - dinero <cantidad>\n\
						    - alimento <slot de /alimentos>\n\
						    - medicamentos <cantidad>\n\
						    - marihuana <cantidad>\n\
						    - crack <cantidad>\n\
						\n\
						Para obtener ayuda diferente use /ayuda.\
					",
				"Cerrar", ""
				
		);
		return 1;
	}
	else if(!strcmp(option, "vender", true))
	{
		ShowPlayerDialog
		(
			playerid,
			DIALOG_INFO,
			DIALOG_STYLE_MSGBOX,
			
				"Super RolePlay - Manual",
					"\
						Comando: vender\n\
						Sintaxis: vender <opcion> <playerid o nombre> <extra> <precio>\n\
						\n\
						Este comando sirve para vender algo a otro jugador cercano.\n\
						Para comprobar que tiene el objeto y la cantidad utilice /inv.\n\
						\n\
						Esta es la lista de opciones:\n\
						    - arma <playerid o nombre> <slot de /armas> <precio>\n\
						    - alimento <playerid o nombre> <slot de /alimentos> <precio>\n\
						    - medicamentos <playerid o nombre> <cantidad> <precio>\n\
						    - marihuana <playerid o nombre> <cantidad> <precio>\n\
						    - crack <playerid o nombre> <cantidad> <precio>\n\
						\n\
						Para obtener ayuda diferente use /ayuda.\
					",
				"Cerrar", ""
				
		);
		return 1;
	}
	else SendClientMessage(playerid, -1, "Error: {C4FF66}/man {FFFFFF}[dar]");
	return 1;
}

CMD:tirar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	new option[24], extra;
	if(sscanf(params, "s[24]d", option, extra)) return SendClientMessage(playerid, -1, "{999999}Error en los parámetros, utilice {CCCCCC}/man tirar.");
	
	if(!strcmp(option, "dinero", true))
	{
		if(extra < 0 || extra > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessage(playerid, -1, "{999999}Cantidad de dinero incorrecta.");
		
		GivePlayerCash(playerid, -extra);
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Has tirado {5cd1d1}%s$.", number_format_thousand(extra));
		Auto_SendPlayerAction(playerid, "tira dinero.");
		return 1;
	}
	else if(!strcmp(option, "alimento", true))
	{
		if(extra < 1 || extra > MAX_PLAYER_POCKET_OBJECTS) return SendClientMessageEx(playerid, -1, "Error: {C4FF66}/tirar alimento {FFFFFF}[SLOT 1-%d]", MAX_PLAYER_POCKET_OBJECTS);
	
		extra --;
		
		if(!PLAYER_POCKET[playerid][extra][player_pocket_VALID]) return SendClientMessage(playerid, -1, "{999999}No tienes nada en ese slot.");

		SendClientMessageEx(playerid, -1, "{999999}Has eliminado \"%s\" de tus alimentos.", PLAYER_POCKET[playerid][extra][player_pocket_object_NAME]);
		DeletePlayerPocketObject(playerid, extra);
		return 1;
	}
	else if(!strcmp(option, "medicamentos", true))
	{
		if(extra <= 0 || extra > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(extra > PLAYER_MISC[playerid][MISC_MEDICINE]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		PLAYER_MISC[playerid][MISC_MEDICINE] -= extra;
		
		SendClientMessageEx(playerid, -1, "Has tirado %dg de medicamentos.", extra);
		return 1;
	}
	else if(!strcmp(option, "marihuana", true))
	{
		if(extra <= 0 || extra > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(extra > PLAYER_MISC[playerid][MISC_CANNABIS]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		PLAYER_MISC[playerid][MISC_CANNABIS] -= extra;
		
		SendClientMessageEx(playerid, -1, "Has tirado %dg de marihuana.", extra);
		return 1;
	}
	else if(!strcmp(option, "crack", true))
	{
		if(extra <= 0 || extra > 10000000) return SendClientMessage(playerid, -1, "{999999}Cantidad incorrecta.");
		if(extra > PLAYER_MISC[playerid][MISC_CRACK]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
		
		PLAYER_MISC[playerid][MISC_CRACK] -= extra;
		
		SendClientMessageEx(playerid, -1, "Has tirado %dg de crack.", extra);
		return 1;
	}
	else if(!strcmp(option, "arma", true))
	{
		if(extra < 0 || extra > 12) return SendClientMessage(playerid, -1, "Error: {C4FF66}/tirar arma {FFFFFF}[Slot /armas]");
	
		if(!PLAYER_WEAPONS[playerid][extra][player_weapon_VALID]) return SendClientMessage(playerid, -1, "{999999}No tienes nigún arma en ese slot.");
		
		SendClientMessageEx(playerid, -1, "{999999}Has eliminado tu '%s' de tus armas.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][extra][player_weapon_ID] ][weapon_info_NAME]);
		RemovePlayerSlotWeapon(playerid, extra, true);
		return 1;
	}
	else SendClientMessage(playerid, -1, "{999999}Error en los parámetros, utilice {CCCCCC}/man tirar.");
	return 1;
}

CMD:entrar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		
	new info[3];
	Streamer_GetArrayData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
	if(info[0] == PICKUP_TYPE_NONE) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new Float:pos[3]; 
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_X, pos[0]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Y, pos[1]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Z, pos[2]);
	
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	switch(info[0])
	{
		case PICKUP_TYPE_ENTER_EXIT:
		{
			PLAYER_TEMP[playerid][pt_HOSPITAL] = GetNearestHospitalForPlayer(playerid);
			if(PLAYER_TEMP[playerid][pt_HOSPITAL] == -1) PLAYER_TEMP[playerid][pt_HOSPITAL] = 1;
	
			if(info[2] == 2) // Está en el Pickup Exterior y quiere ir al interior
			{
				if(ENTER_EXIT[info[1]][ee_TIME_OPEN] == 0 && ENTER_EXIT[info[1]][ee_TIME_CLOSE] == 0) // 24 horas
				{
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_INTERIOR;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = ENTER_EXIT[info[1]][ee_ID];
					PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] = info[1];
					SetPlayerPosEx(playerid, ENTER_EXIT[info[1]][ee_INT_X], ENTER_EXIT[info[1]][ee_INT_Y], ENTER_EXIT[info[1]][ee_INT_Z], ENTER_EXIT[info[1]][ee_INT_ANGLE], ENTER_EXIT[info[1]][ee_INT_INTERIOR], ENTER_EXIT[info[1]][ee_INT_WORLD], ENTER_EXIT[info[1]][ee_INT_FREEZE], true);
				}
				else
				{
					if(is_open(SERVER_TIME[0], ENTER_EXIT[info[1]][ee_TIME_OPEN], ENTER_EXIT[info[1]][ee_TIME_CLOSE]))
					{
						CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_INTERIOR;
						CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = ENTER_EXIT[info[1]][ee_ID];
						PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] = info[1];
						SetPlayerPosEx(playerid, ENTER_EXIT[info[1]][ee_INT_X], ENTER_EXIT[info[1]][ee_INT_Y], ENTER_EXIT[info[1]][ee_INT_Z], ENTER_EXIT[info[1]][ee_INT_ANGLE], ENTER_EXIT[info[1]][ee_INT_INTERIOR], ENTER_EXIT[info[1]][ee_INT_WORLD], ENTER_EXIT[info[1]][ee_INT_FREEZE], true);
					}
					else SendClientMessageEx(playerid, -1, "{C4FF66}%s {FFFFFF}está cerrado, su horario es: {C4FF66}%02d:00 - %02d:00.", ENTER_EXIT[info[1]][ee_NAME], ENTER_EXIT[info[1]][ee_TIME_OPEN], ENTER_EXIT[info[1]][ee_TIME_CLOSE]);
				}
			}
			else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		}
		case PICKUP_TYPE_PROPERTY:
		{
			PLAYER_TEMP[playerid][pt_HOSPITAL] = GetNearestHospitalForPlayer(playerid);
			if(PLAYER_TEMP[playerid][pt_HOSPITAL] == -1) PLAYER_TEMP[playerid][pt_HOSPITAL] = 1;
			
			if(info[2] == 2) // Está en el Pickup Exterior y quiere ir al interior
			{
				if(!PROPERTY_INFO[info[1]][property_SOLD]) return SendClientMessage(playerid, -1, "{999999}Esta propiedad está en venta.");
				if(PROPERTY_INFO[info[1]][property_CREW])
				{
					if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessageEx(playerid, -1, "{999999}Solo miembros de la banda pueden entrar.");
					if(PLAYER_CREW[playerid][player_crew_ID] != PROPERTY_INFO[info[1]][property_CREW_ID]) return SendClientMessageEx(playerid, -1, "{999999}Solo miembros de la banda pueden entrar.");
					
					CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_GUEST_PROPERTY;
					CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = PROPERTY_INFO[info[1]][property_ID];
					PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] = info[1];
					SetPlayerPosEx(playerid, PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_X], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_Y], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_Z], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_ANGLE], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_INTERIOR], PROPERTY_INFO[info[1]][property_ID], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_FREEZE], true);
				}
				else
				{
					if(PROPERTY_INFO[info[1]][property_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
					{
						CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_OWN_PROPERTY;
						CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = PROPERTY_INFO[info[1]][property_ID];
						PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] = info[1];
						SetPlayerPosEx(playerid, PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_X], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_Y], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_Z], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_ANGLE], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_INTERIOR], PROPERTY_INFO[info[1]][property_ID], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_FREEZE], true);
					}
					else
					{
						if(gettime() < PLAYER_TEMP[playerid][pt_ANTIFLOOD_KNOCK_PROPERTY] + 10) return SendClientMessage(playerid, 0x999999AA, "Espera para volver a tocar, si no te quieren abrir vete.");
						
						new owner_playerid = GetOwnerIntProperty(PROPERTY_INFO[info[1]][property_ID]);
						if(owner_playerid == -1) return SendClientMessage(playerid, -1, "{999999}Esta no es tu propiedad y el dueño no está dentro para dejarte entrar.");
						
						PLAYER_TEMP[playerid][pt_ANTIFLOOD_KNOCK_PROPERTY] = gettime();
						PLAYER_TEMP[owner_playerid][pt_KNOCK_PLAYER_ID] = playerid;
						SendClientMessageEx(owner_playerid, -1, "{f4e542}%s {FFFFFF}está tocando la puerta, para dejarle entrar ve a la puerta y usa {bef441}/puerta.", PLAYER_TEMP[playerid][pt_RP_NAME]);
						SendClientMessage(playerid, -1, "{CCCCCC}Has tocado en la puerta, espera para que te abran o vete.");
					}
				}
			}
			else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		}
		default: SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	}
	return 1;
}

CMD:puerta(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] != ROLEPLAY_STATE_OWN_PROPERTY) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		
	new info[3];
	Streamer_GetArrayData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
	if(info[0] != PICKUP_TYPE_PROPERTY) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new Float:pos[3]; 
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_X, pos[0]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Y, pos[1]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Z, pos[2]);
	
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(info[2] == 1) // Está en el Pickup Interior
	{
		if(PROPERTY_INFO[info[1]][property_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
		{
			if(PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID] == INVALID_PLAYER_ID) return SendClientMessage(playerid, 0x999999AA, "Nadie ha tocado en la puerta.");
			if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID])) return SendClientMessage(playerid, 0x999999AA, "Nadie ha tocado en la puerta o ya se ha ido.");
			if(!IsPlayerInRangeOfPoint(PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID], 3.0, PROPERTY_INFO[info[1]][property_EXT_X], PROPERTY_INFO[info[1]][property_EXT_Y], PROPERTY_INFO[info[1]][property_EXT_Z])) return SendClientMessage(playerid, 0x999999AA, "Nadie ha tocado en la puerta o ya se ha ido.");
			if(PLAYER_TEMP[playerid][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, 0x999999AA, "Este jugador no puede entrar ahora.");
			
			PLAYER_TEMP[PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID]][pt_HOSPITAL] = GetNearestHospitalForPlayer(PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID]);
			if(PLAYER_TEMP[PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID]][pt_HOSPITAL] == -1) PLAYER_TEMP[PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID]][pt_HOSPITAL] = 1;
			
			CHARACTER_INFO[PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID]][ch_STATE] = ROLEPLAY_STATE_GUEST_PROPERTY;
			CHARACTER_INFO[PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID]][ch_INTERIOR_EXTRA] = PROPERTY_INFO[info[1]][property_ID];
			PLAYER_TEMP[PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID]][pt_PROPERTY_INDEX] = info[1];
			SetPlayerPosEx(PLAYER_TEMP[playerid][pt_KNOCK_PLAYER_ID], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_X], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_Y], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_Z], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_ANGLE], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_INTERIOR], PROPERTY_INFO[info[1]][property_ID], PROPERTY_INTERIORS[ PROPERTY_INFO[info[1]][property_ID_INTERIOR] ][property_INT_FREEZE], true);
		}
		else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	}
	else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	return 1;
}

CMD:pvender(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_LEVEL] < 2) return SendClientMessage(playerid, -1, "{999999}Debes ser al menos nivel 2 para usar este comando.");
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_CITY_HALL_LS) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -474.596282, 289.679107, 2004.584960)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(BANK_ACCOUNT[playerid][bank_account_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "Necesitas tener una cuenta bancaria para poder realizar estas operaciones.");
	
	ShowDialog(playerid, DIALOG_NOTARY);
	return 1;
}

CMD:grua(playerid, params[])
{
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_CITY_HALL_LS) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -508.645385, 322.147644, 2004.585937)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");

	ShowDialog(playerid, DIALOG_CRANE_SELECT_VEHICLE);
	return 1;
}

CMD:casa(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		
	new info[3];
	Streamer_GetArrayData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
	if(info[0] != PICKUP_TYPE_PROPERTY) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new Float:pos[3]; 
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_X, pos[0]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Y, pos[1]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Z, pos[2]);
	
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_OWN_PROPERTY)
	{
		if(info[2] == 1) // Está en el Pickup Interior
		{
			if(PROPERTY_INFO[info[1]][property_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
			{
				PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] = info[1];
				ShowDialog(playerid, DIALOG_PROPERTY_OPTIONS);
			}
			else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		}
		else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	}
	else if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_GUEST_PROPERTY)
	{
		if(info[2] == 1) // Está en el Pickup Interior
		{
			if(PROPERTY_INFO[info[1]][property_CREW])
			{
				if(PROPERTY_INFO[info[1]][property_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) return SendClientMessage(playerid, -1, "{999999}Esta no es una propiedad de tu banda.");
				if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_DELETE_PROPERTIES]) return SendClientMessage(playerid, -1, "{999999}No tienes permiso.");
				if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No puedes liberar una propiedad cuando tu banda está en combate."); 
				
				PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] = info[1];
				ShowDialog(playerid, DIALOG_CREW_LEAVE_PROPERTY);
			}
			else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		}
		else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	}
	else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	return 1;
}

CMD:echar(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/echar {FFFFFF}[PlayerID/Nombre]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	if(playerid == params[0]) return SendClientMessage(playerid, -1, "{999999}No te eches a ti mismo.");
	
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_OWN_PROPERTY)
	{
		if( CHARACTER_INFO[params[0]][ch_STATE] == ROLEPLAY_STATE_GUEST_PROPERTY && CHARACTER_INFO[params[0]][ch_INTERIOR_EXTRA] == CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA])
		{		
			new index = GetPropertyIndexByID(CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA]);
			if(index == -1) return SendClientMessage(playerid, -1, "BUG: CMD /ECHAR, Tome captura y contacte con administrador.");
				
			CHARACTER_INFO[params[0]][ch_STATE] = ROLEPLAY_STATE_NORMAL;
			CHARACTER_INFO[params[0]][ch_INTERIOR_EXTRA] = 0;
			PLAYER_TEMP[params[0]][pt_PROPERTY_INDEX] = -1;
			SetPlayerPosEx(params[0], PROPERTY_INFO[ index ][property_EXT_X], PROPERTY_INFO[ index ][property_EXT_Y], PROPERTY_INFO[ index ][property_EXT_Z], PROPERTY_INFO[ index ][property_EXT_ANGLE], PROPERTY_INFO[ index ][property_EXT_INTERIOR], 0, PROPERTY_INFO[ index ][property_EXT_FREEZE], false);
			StopAudioStreamForPlayer(params[0]);
			
			SendClientMessageEx(params[0], -1, "{bad2d8}%s {FFFFFF}te ha echado de su propiedad.", PLAYER_TEMP[playerid][pt_RP_NAME]);
			SendClientMessageEx(playerid, -1, "{CCCCCC}Has echado a {bad2d8}%s {CCCCCC}de tu propiedad.", PLAYER_TEMP[params[0]][pt_RP_NAME]);
		}
		else SendClientMessage(playerid, -1, "{999999}Este jugador no está en tu propiedad.");
		return 1;
	}

	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		
		if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
		if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
		if(GetPlayerVehicleID(params[0]) != vehicleid) return SendClientMessage(playerid, -1, "{999999}Este jugador no está en tu vehículo.");
		
		RemovePlayerFromVehicle(params[0]);
		
		new action[64];
		format(action, sizeof action, "ha echado a %s de su vehículo.", PLAYER_TEMP[ params[0] ][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		return 1;
	}
	
	SendClientMessage(playerid, -1, "{999999}No estás en tu propiedad o en tu vehículo.");
	return 1;
}

CMD:tarifa(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "{999999}No estás conduciendo.");
	if(!PLAYER_WORKS[playerid][WORK_TAXI]) return SendClientMessage(playerid, -1, "{999999}No eres taxista.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TAXI) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como taxista.");
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_ENABLED]) return SendClientMessage(playerid, -1, "{999999}Solo puedes cambiar la tarifa cuando no haya ningún pasajero.");
	
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/tarifa {FFFFFF}[0-14]");
	if(params[0] < 0 || params[0] > 14) return SendClientMessage(playerid, -1, "Error: {C4FF66}/tarifa {FFFFFF}[0-14]");
	
	TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_PRICE] = params[0];
	Auto_SendPlayerAction(playerid, "ajusta el taxímetro.");
	UpdatePlayerTaxiMeterTextdraws(playerid);
	return 1;
}

CMD:cargar(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "{999999}No estás conduciendo.");
	if(!PLAYER_WORKS[playerid][WORK_TRUCK]) return SendClientMessage(playerid, -1, "{999999}No eres camionero.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRUCK) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como camionero.");
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!WORK_VEHICLES[vehicleid][work_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}No estás en un camión.");
	if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] != WORK_TRUCK) return SendClientMessage(playerid, -1, "{999999}No estás en un camión.");

	for(new i = 0; i != sizeof LoadTrucksPoints; i ++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, LoadTrucksPoints[i][0], LoadTrucksPoints[i][1], LoadTrucksPoints[i][2]))
		{
			new Float:angle;
			GetVehicleZAngle(vehicleid, angle);
			if(angle > 180.0) angle -= 360.0;

			if(angle > (LoadTrucksPoints[i][3] - 15.0) && angle < (LoadTrucksPoints[i][3] + 15.0))
			{	
				if(TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADED]) return SendClientMessage(playerid, -1, "{999999}El camión ya está cargado.");
				if(TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADING]) return SendClientMessage(playerid, -1, "{999999}El camión ya se está cargando.");
	
				TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADING] = true;
				TRUCK_VEHICLE[vehicleid][truck_vehicle_DRIVER_USER_ID] = ACCOUNT_INFO[playerid][ac_ID];
				
				SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
				
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
				UpdateVehicleParams(vehicleid);
				
				ShowDialog(playerid, DIALOG_SELECT_TRUCK_TYPE);
			}
			else SendClientMessage(playerid, -1, "{999999}El camión no está correctamente colocado para cargarlo.");
			return 1;
		}
	}
	SendClientMessage(playerid, -1, "{CCCCCC}Para cargar el camión colocate en cualquier punto de carga.");
	return 1;
}

CMD:salir(playerid, params[])
{	
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		
	new info[3];
	Streamer_GetArrayData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
	if(info[0] == PICKUP_TYPE_NONE) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new Float:pos[3]; 
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_X, pos[0]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Y, pos[1]);
	Streamer_GetFloatData(STREAMER_TYPE_PICKUP, PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID], E_STREAMER_Z, pos[2]);
	
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	switch(info[0])
	{
		case PICKUP_TYPE_ENTER_EXIT:
		{
			if(info[2] == 1) // Está en el Pickup Interior y quiere ir al exterior
			{
				CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
				CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
				PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] = -1;
				SetPlayerPosEx(playerid, ENTER_EXIT[info[1]][ee_EXT_X], ENTER_EXIT[info[1]][ee_EXT_Y], ENTER_EXIT[info[1]][ee_EXT_Z], ENTER_EXIT[info[1]][ee_EXT_ANGLE], ENTER_EXIT[info[1]][ee_EXT_INTERIOR], ENTER_EXIT[info[1]][ee_EXT_WORLD], ENTER_EXIT[info[1]][ee_EXT_FREEZE]);
			}
			else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		}
		case PICKUP_TYPE_PROPERTY:
		{
			if(info[2] == 1) // Está en el Pickup Interior y quiere ir al exterior
			{
				CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
				CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
				PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] = -1;
				SetPlayerPosEx(playerid, PROPERTY_INFO[info[1]][property_EXT_X], PROPERTY_INFO[info[1]][property_EXT_Y], PROPERTY_INFO[info[1]][property_EXT_Z], PROPERTY_INFO[info[1]][property_EXT_ANGLE], PROPERTY_INFO[info[1]][property_EXT_INTERIOR], 0, PROPERTY_INFO[info[1]][property_EXT_FREEZE], false);
				StopAudioStreamForPlayer(playerid);
			}
			else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
		}
		default: SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	}
	return 1;
}

CMD:gasolina(playerid, params[])
{
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, 0x999999AA, "No estás en nigún vehículo.");
	
	new vehicleid = GetPlayerVehicleID(playerid), modelid = GetVehicleModel(vehicleid);
	if(!VEHICLE_INFO[modelid - 400][vehicle_info_VALID]) return SendClientMessage(playerid, 0x999999AA, "No puedes repostar este vehículo.");
	
	new fuel_station = -1;
	for(new i = 0; i < sizeof Fuel_Stations; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, Fuel_Stations[i][0], Fuel_Stations[i][1], Fuel_Stations[i][2]))
		{
			fuel_station = i;
			break;
		}
	}
	if(fuel_station == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE])
	{
		SendClientMessage(playerid, -1, "{999999}Por favor, para primero el motor del vehículo.");
		return 1;
	}
	
	if(!sscanf(params, "d", params[0]))
	{
		new Float:ammount = float(params[0]);
		if(ammount < 0.0) return SendClientMessage(playerid, -1, "Error: {C4FF66}/gasolina {FFFFFF}[litros / lleno]");
		if(ammount + GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] > GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS]) ammount = GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS] - GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS];
		
		new price = floatround( floatmul(ammount, 9.0) );
		
		if(CHARACTER_INFO[playerid][ch_CASH] >= price)
		{
			GivePlayerCash(playerid, -price);
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] += ammount;
			
			PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			SendClientMessageEx(playerid, -1, "Cantidad: {ede890}%.1f Litros {FFFFFF}Precio: {ede890}%s$.", ammount, number_format_thousand(price));
			Auto_SendPlayerAction(playerid, "ha repostado el vehículo.");
		}
		else
		{
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder repostar {588dc9}%.1f.", number_format_thousand(price - CHARACTER_INFO[playerid][ch_CASH]), ammount);
		}
		return 1;
	}
	
	new text[24];
	if(!sscanf(params, "s[24]", text))
	{
		if(!strcmp(text, "lleno", true))
		{
			new Float:ammount = floatsub(GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS]);

			new price = floatround( floatmul(ammount, 9.0) );
			if(CHARACTER_INFO[playerid][ch_CASH] >= price)
			{
				GivePlayerCash(playerid, -price);
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] = GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS];
				
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "Cantidad: {ede890}%.1f Litros {FFFFFF}Precio: {ede890}%s$.", ammount, number_format_thousand(price));
				Auto_SendPlayerAction(playerid, "ha repostado el vehículo.");
			}
			else
			{
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder repostar {588dc9}%.1f.", number_format_thousand(price - CHARACTER_INFO[playerid][ch_CASH]), ammount);
			}
		}
		else SendClientMessage(playerid, -1, "Error: {C4FF66}/gasolina {FFFFFF}[litros / lleno]");
		return 1;
	}
	
	SendClientMessage(playerid, -1, "Error: {C4FF66}/gasolina {FFFFFF}[litros / lleno]");
	return 1;
}

CMD:bidon(playerid, params[])
{
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new fuel_station = -1;
	for(new i = 0; i < sizeof Fuel_Stations; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, Fuel_Stations[i][0], Fuel_Stations[i][1], Fuel_Stations[i][2]))
		{
			fuel_station = i;
			break;
		}
	}
	if(fuel_station == -1) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(!PLAYER_MISC[playerid][MISC_FUEL_DRUM])
	{
		if(CHARACTER_INFO[playerid][ch_CASH] >= 250)
		{
			GivePlayerCash(playerid, -250);
			PLAYER_MISC[playerid][MISC_FUEL_DRUM] = 20;
			SendClientMessage(playerid, -1, "{CCCCCC}Has comprado un bidón de gasolina de 20 litros por 250$, usa {C4FF66}/vertir {CCCCCC}para repostar un vehículo.");
		}
		else SendClientMessage(playerid, -1, "{999999}No tienes suficiente dinero para comprar el bidón.");
	}
	else
	{
		if(PLAYER_MISC[playerid][MISC_FUEL_DRUM] == 20) return SendClientMessage(playerid, -1, "{999999}Tu bidón de gasolina está lleno.");
		
		new ammount = (20 - PLAYER_MISC[playerid][MISC_FUEL_DRUM]);
		new price = (13 * ammount);
		
		if(CHARACTER_INFO[playerid][ch_CASH] >= price)
		{
			GivePlayerCash(playerid, -price);
			PLAYER_MISC[playerid][MISC_FUEL_DRUM] += ammount;
			SendClientMessageEx(playerid, -1, "{CCCCCC}Has llenado tu bidón de gasolina con 20 litros por %d$, usa {C4FF66}/vertir {CCCCCC}para repostar un vehículo.", price);
		}
		else SendClientMessage(playerid, -1, "{999999}No tienes suficiente dinero para comprar el bidón.");
	}
	return 1;
}

CMD:vertir(playerid, params[])
{	
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}Tienes que estar fuera del vehículo para vertir el bidón.");
	
	new vehicleid = GetPlayerCameraTargetVehicle(playerid);
	if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás cerca de ningún vehículo.");
	
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE])
	{
		SendClientMessage(playerid, -1, "{999999}Por favor, para primero el motor del vehículo.");
		return 1;
	}
	
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/vetir {FFFFFF}[Cantidad de litros]");
	if(params[0] <= 0) return SendClientMessage(playerid, -1, "{999999}Cantidad de litros no válida.");
	if(params[0] > PLAYER_MISC[playerid][MISC_FUEL_DRUM]) return SendClientMessageEx(playerid, -1, "{999999}Solo tienes %d.0 litros en el bidón.", PLAYER_MISC[playerid][MISC_FUEL_DRUM]);
	
	new Float:ammount = float(params[0]);
	if(ammount + GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] > GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS]) ammount = GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS] - GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS];
	
	PLAYER_MISC[playerid][MISC_FUEL_DRUM] -= floatround(ammount);
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] += ammount;
	
	SendClientMessageEx(playerid, -1, "{CCCCCC}Has vertido %.1f litros del bidón, te quedan %d.0 litros.", ammount, PLAYER_MISC[playerid][MISC_FUEL_DRUM]);
	Auto_SendPlayerAction(playerid, "ha repostado el vehículo.");
	return 1;
}

SendPlayerAction(playerid, action[])
{
	new str_text[145];
	format(str_text, 145, " * %s %s", PLAYER_TEMP[playerid][pt_RP_NAME], action);
	ProxDetector(playerid, 15.0, str_text, 0xf796bdFF, 0xf796bdFF, 0xf796bdFF, 0xf796bdFF, 0xf796bdFF);
	return 1;
}

Auto_SendPlayerAction(playerid, action[])
{
	new str_text[145];
	format(str_text, 145, "%s %s", PLAYER_TEMP[playerid][pt_RP_NAME], action);
	ProxDetector(playerid, 15.0, str_text, 0xd4e59cFF, 0xd4e59cFF, 0xd4e59cFF, 0xd4e59cFF, 0xd4e59cFF);
	return 1;
}

#define DEFAULT_DIALOG_CAPTION	SERVER_NAME
ShowDialog(playerid, dialogid)
{
	PLAYER_TEMP[playerid][pt_PLAYER_WAITING_MP3_HTTP] = false;
	
	switch(dialogid)
	{
		case DIALOG_REGISTER:
		{
			new dialog[140];
			format(dialog, sizeof dialog, "Esta cuenta no está registrada.\nIngrese su contraseña a continuación.\n\nLa contraseña debe contener entre %d-%d caracteres.", MIN_PASS_LENGTH, MAX_PASS_LENGTH);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_PASSWORD, ""DEFAULT_DIALOG_CAPTION" - Registrarse", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_LOGIN: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_PASSWORD, ""DEFAULT_DIALOG_CAPTION" - Ingresar", "Bienvenido de nuevo.\nIngrese su contraseña para acceder.", ">>", "Salir");
		case DIALOG_REGISTER_EMAIL: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, ""DEFAULT_DIALOG_CAPTION" - Correo electrónico", "Ingresa una dirección de correlo electrónico válida.\n\nEs importante que tengas acceso al correo ya que\nserá la única manera de recuperar tu contraseña.\n\nTranquilo, no recibirás ningún tipo de SPAM ni suscripciones.", ">>", "Salir");
		case DIALOG_DOUBT_CHANNEL_POST:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, ""DEFAULT_DIALOG_CAPTION" - ¿Dudas?", 
			"\n{999999}Usa este canal solo para dudas que tengas del servidor.\n\
			\nSi lo usas para hablar con amigos, vender artículos, spam\n\
			o cualquier otra cosa que no sea una duda o responder\na una {C4FF66}serás sancionado e incluso expulsado.\
			\n\n{999999}Recuerda que para dudas más extensas puedes\nusar el foro {C4FF66}"SERVER_WEBSITE"\n\
			\n{CCCCCC}« "SERVER_NAME" »\n", ">>", "X");
			return 1;
		}
		case DIALOG_FOOD_PIZZA: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, ""DEFAULT_DIALOG_CAPTION" - Comida rápida", DIALOG_FOOD_PIZZA_String, "Pedir", "Salir");
		case DIALOG_FOOD_CLUCKIN: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, ""DEFAULT_DIALOG_CAPTION" - Comida rápida", DIALOG_FOOD_CLUCKIN_String, "Pedir", "Salir");
		case DIALOG_FOOD_BURGER: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, ""DEFAULT_DIALOG_CAPTION" - Comida rápida", DIALOG_FOOD_BURGER_String, "Pedir", "Salir");
		case DIALOG_PLAYER_TOYS:
		{
			new dialog[96 * (MAX_PLAYER_ATTACHED_OBJECTS + 2)], line_str[64];
			format(dialog, sizeof dialog, "{CCCCCC}Accesorio\t{90C3D4}Colocado\n");
			for(new i; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
			{
				if(ACCOUNT_INFO[playerid][ac_SU])
				{
					if(PLAYER_TOYS[playerid][i][player_toy_VALID])
					{
						if(PLAYER_TOYS[playerid][i][player_toy_ATTACHED]) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}Sí\n", i + 1, PLAYER_TOYS[playerid][i][player_toy_NAME]);
						else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}No\n", i + 1, PLAYER_TOYS[playerid][i][player_toy_NAME]);
					}
					else format(line_str, sizeof line_str, "{666666}%d. Slot vacío\n", i + 1);
				}
				else
				{
					if(i >= MAX_NU_TOYS)
					{
						if(PLAYER_TOYS[playerid][i][player_toy_VALID]) format(line_str, sizeof line_str, "{666666}%d. %s\t{90C3D4}No\n", i + 1, PLAYER_TOYS[playerid][i][player_toy_NAME]);
						else format(line_str, sizeof line_str, "{666666}%d. Slot vacío\n", i + 1);
					}
					else
					{
						if(PLAYER_TOYS[playerid][i][player_toy_VALID])
						{
							if(PLAYER_TOYS[playerid][i][player_toy_ATTACHED]) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}Sí\n", i + 1, PLAYER_TOYS[playerid][i][player_toy_NAME]);
							else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}No\n", i + 1, PLAYER_TOYS[playerid][i][player_toy_NAME]);
						}
						else format(line_str, sizeof line_str, "{666666}%d. Slot vacío\n", i + 1);
					}
				}
				strcat(dialog, line_str);
			}
			strcat(dialog, "{c4290d}- Eliminar todo\n");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, ""DEFAULT_DIALOG_CAPTION" - Mis accesorios", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_PLAYER_TOY_MENU:
		{
			if(!PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_VALID])
			{
				SendClientMessage(playerid, -1, "{CCCCCC}Este slot está vacío, puedes comprar accesorios en cualquier tienda de ropa.");
				return 1;
			}
			
			new caption[48];
			format(caption, sizeof caption, "{CCCCCC}Accesorio '%s'", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
			
			new dialog[256];
			if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED]) format(dialog, sizeof dialog, "{CCCCCC}Guardar este accesorio\n{CCCCCC}Cambiar el nombre del accesorio\n{CCCCCC}Configurar el accesorio\n{CCCCCC}Color primario\n{CCCCCC}Color secundario\n{CCCCCC}Eliminar este accesorio");
			else
			{
				if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE] == -1)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}Este accesorio es nuevo y aún no ha sido configurado, configuralo desde 'Configurar el accesorio'.");
					format(dialog, sizeof dialog, "{999999}Colocarte el accesorio\n{CCCCCC}Cambiar el nombre del accesorio\n{CCCCCC}Configurar el accesorio\n{CCCCCC}Color primario\n{CCCCCC}Color secundario\n{CCCCCC}Eliminar este accesorio");
				}
				else format(dialog, sizeof dialog, "{CCCCCC}Colocarte el accesorio\n{CCCCCC}Cambiar el nombre del accesorio\n{CCCCCC}Configurar el accesorio\n{CCCCCC}Color primario\n{CCCCCC}Color secundario\n{CCCCCC}Eliminar este accesorio");
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_TOY_EDIT_NAME:
		{		
			new dialog[145];
			format(dialog, sizeof dialog, "Nombre actual: \"%s\"\nIndica el nuevo nombre:", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{CCCCCC}Accesorio - Modificar nombre", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_TOY_CONFIRMDELETE:
		{
			new dialog[145];
			format(dialog, sizeof dialog, "¿Estás seguro que quieres borrar el siguiente accesorio?\n\t\"%s\"", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{CCCCCC}Accesorio - Eliminar accesorio", dialog, "Eliminar", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_TOY_SELECT_BONE:
		{
			SendClientMessage(playerid, -1, "{CCCCCC}Selecciona en que parte del cuerpo quieres colocar este accesorio.");
			
			new caption[48];
			format(caption, sizeof caption, "{CCCCCC}Accesorio '%s'", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
			
			new dialog[45 * sizeof Toys_Bones], line_str[45];
			for(new i = 0; i != sizeof Toys_Bones; i ++)
			{
				format(line_str, sizeof(line_str), "{90C3D4}%d. %s\n", i + 1, Toys_Bones[i]);
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_TOY_EDIT_BONE:
		{
			new caption[48];
			format(caption, sizeof caption, "{CCCCCC}Accesorio '%s'", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
			
			new dialog[145];
			format(dialog, sizeof(dialog), "¿Quieres cambiar la parte del cuerpo donde se coloca este accesorio?\nActualmente está colocado en: %s", Toys_Bones[ PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE] - 1 ]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, caption, dialog, "Sí", "No");
			return 1;
		}
		case DIALOG_PLAYER_TOY_COLOR_1:
		{
			SendClientMessage(playerid, -1, "Selecciona el color 0 para poner el color original del accesorio.");
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona color", DIALOG_CREATE_CREW_COLOR_String, "Continuar", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_TOY_COLOR_2:
		{
			SendClientMessage(playerid, -1, "Selecciona el color 0 para poner el color original del accesorio.");
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona color", DIALOG_CREATE_CREW_COLOR_String, "Continuar", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_TOY_DELETE_ALL: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Accesorios - Eliminar todo", "¿Está seguro de que quiere eliminar todos sus accesorios?\nEsta opción no se puede deshacer.", "Eliminar", "Atrás");	
		case DIALOG_BANK:
		{
			if(BANK_ACCOUNT[playerid][bank_account_ID] == 0) return SendClientMessage(playerid, -1, "{999999}No tienes cuenta bancaria.");
			
			new caption[80];
			format(caption, sizeof caption, "Mi cuenta bancaria: {90C3D4}%s {FFFFFF}- Balance actual: {90C3D4}%s$", number_format_thousand(BANK_ACCOUNT[playerid][bank_account_ID]), number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, 
				"{CCCCCC}1. Retirar dinero\n{CCCCCC}2. Depositar dinero\n{CCCCCC}3. Transferir dinero\n{CCCCCC}4. Últimas transacciones", 
			">>", "Salir");
			return 1;
		}
		case DIALOG_CREATE_BANK_ACCOUNT:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, ""DEFAULT_DIALOG_CAPTION" - Crear cuenta bancaria", 
				"{CCCCCC}Bienvenido, actualmente no tienes una cuenta bancaria.\n\nPara disfrutar de los beneficios de una cuenta bancaria\npuedes crearla ahora mismo con un depósito minimo de 500$.", 
			"Crear", "Salir");
			return 1;
		}
		case DIALOG_BANK_WITHDRAW:
		{
			new dialog[100];
			format(dialog, sizeof dialog, "{CCCCCC}Balance actual: {90C3D4}%s$\n{CCCCCC}¿Cuánto quiere retirar?", number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Banco - Retirar", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_BANK_DEPOSIT:
		{
			new dialog[100];
			format(dialog, sizeof dialog, "{CCCCCC}Dinero actual: {90C3D4}%s$\n{CCCCCC}¿Cuánto quiere depositar?", number_format_thousand(CHARACTER_INFO[playerid][ch_CASH]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Banco - Depositar", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_BANK_TRANSFER: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Banco - Transferir", "Indica a que número de cuenta quiere transferir dinero.", ">>", "Atrás");
		case DIALOG_BANK_TRANSFER_SEND:
		{
			new dialog[170];
			format(dialog, sizeof dialog, "{CCCCCC}Transferir a cuenta: {90C3D4}%s\n{CCCCCC}Balance actual: {90C3D4}%s$\n\n{CCCCCC}¿Cuánto quiere transferir?", number_format_thousand(PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT]), number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE]));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Banco - Transferir", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_BANK_TRANSACTIONS:
		{
			new dialog[2675];
			format(dialog, sizeof dialog, "{CCCCCC}Fecha\t{90C3D4}Concepto\t{CCCCCC}Importe\n");

			new DBResult:Result, transactions, DB_Query[140];
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `BANK_TRANSACTIONS` WHERE `ID_ACCOUNT` = '%d' ORDER BY `DATE` DESC LIMIT %d;", BANK_ACCOUNT[playerid][bank_account_ID], MAX_BANK_TRANSACTIONS_DIALOG);
			Result = db_query(Database, DB_Query);

			if(db_num_rows(Result) == 0) strcat(dialog, "{CCCCCC}No hay transacciones en tu cuenta.");
			else
			{
				new line_str[125];
				for(new i; i < db_num_rows(Result); i++ )
				{
					new trasaction_type, ammount, extra, date[24];
					trasaction_type = db_get_field_assoc_int(Result, "TRANSACTION_TYPE");
					ammount = db_get_field_assoc_int(Result, "AMMOUNT");
					extra = db_get_field_assoc_int(Result, "EXTRA");
					db_get_field_assoc(Result, "DATE", date, 24);
					
					switch(trasaction_type)
					{
						case BANK_TRANSACTION_WITHDRAW:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}RETIRADA EFECTIVO\t{CCCCCC}-%s$\n", date, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_DEPOSIT:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}INGRESO EN EFECTIVO\t{CCCCCC}%s$\n", date, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_TRANSFER_SENT:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}TRANSFERENCIA A LA CUENTA %d\t{CCCCCC}-%s$\n", date, extra, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_TRANSFER_RECE:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}TRANSFERENCIA DE LA CUENTA %d\t{CCCCCC}%s$\n", date, extra, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_CREATE_ACCOUNT:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}CREACION DE LA CUENTA\t{CCCCCC}%s$\n", date, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_BUY_PROPERTY:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}PROPIEDAD COMPRADA\t{CCCCCC}-%s$\n", date, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_SOLD_PROPERTY:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}PROPIEDAD VENDIDA\t{CCCCCC}%s$\n", date, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_BUY_VEHICLE:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}VEHICULO COMPRADO\t{CCCCCC}-%s$\n", date, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
						case BANK_TRANSACTION_SOLD_VEHICLE:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}VEHICULO VENDIDO\t{CCCCCC}%s$\n", date, number_format_thousand(ammount));
							strcat(dialog, line_str);
						}
					}
					
					transactions ++;
					db_next_row(Result);
				}
				format(line_str, sizeof line_str, "{CCCCCC}SALDO ACTUAL:\t{d0f441}%s$", number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE]));
				strcat(dialog, line_str);
			}
			db_free_result(Result);
		
			new caption[40];
			format(caption, sizeof caption, "Banco - Últimas %d transacciones", transactions);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, "Salir", "Atrás");
			return 1;
		}
		case DIALOG_247_LIST: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, ""DEFAULT_DIALOG_CAPTION" - 24/7", DIALOG_247_LIST_String, ">>", "Salir");
		case DIALOG_PLAYER_POCKET:
		{
			new dialog[50 * (MAX_PLAYER_POCKET_OBJECTS + 2)], line_str[50];
			for(new i = 0; i != MAX_PLAYER_POCKET_OBJECTS; i ++)
			{
				if(PLAYER_POCKET[playerid][i][player_pocket_VALID])
				{
					format(line_str, sizeof line_str, "{CCCCCC}%d. %s\n", i + 1, PLAYER_POCKET[playerid][i][player_pocket_object_NAME]);
					strcat(dialog, line_str);
				}
				else
				{
					format(line_str, sizeof line_str, "{666666}%d. Slot vacío\n", i + 1);
					strcat(dialog, line_str);
				}
			}
			strcat(dialog, "{c4290d}- Eliminar todo\n");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, ""DEFAULT_DIALOG_CAPTION" - Alimentos", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_PLAYER_POCKET_OPTIONS:
		{
			new caption[40];
			format(caption, sizeof caption, "Alimento - %s", PLAYER_POCKET[playerid][PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]][player_pocket_object_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "{CCCCCC}1. Consumir\n{CCCCCC}2. Eliminar", ">>", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_POCKET_DELETE_ALL: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Alimentos - Eliminar todo", "¿Está seguro de que quiere eliminar todos sus alimentos?\nEsta opción no se puede deshacer y perderás todos lo que haya.", "Eliminar", "Atrás");	
		case DIALOG_PHONE:
		{
			new caption[50];
			format(caption, sizeof caption, "Mi teléfono - %s", number_format_dash(PLAYER_PHONE[playerid][player_phone_NUMBER]));
			
			new dialog[200];
			if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON) format(dialog, sizeof dialog, "{CCCCCC}1. Agenda\n{CCCCCC}2. Llamar\n{CCCCCC}3. Enviar mensaje\n{CCCCCC}4. Ver mensajes recibidos\n{CCCCCC}5. Ver mensajes enviados\n{CCCCCC}6. Tienda de compra y venta\n{CCCCCC}7. Apagar teléfono");
			else format(dialog, sizeof dialog, "{CCCCCC}1. Encender teléfono\n{999999}2. Agenda\n{999999}3. Llamar\n{999999}4. Enviar mensaje\n{999999}5. Ver mensajes recibidos\n{999999}6. Ver mensajes enviados\n{999999}7. Tienda de compra y venta");
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_PHONE_BOOK:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[80 * (MAX_PHONE_CONTACTS + 3)];
			format(dialog, sizeof dialog, "{CCCCCC}Nombre\t{90C3D4}Número\n");

			new line_str[80], contacts, listitem;
			for(new i = 0; i != MAX_PHONE_CONTACTS; i++ )
			{
				if(!PLAYER_PHONE_BOOK[playerid][i][phone_book_contact_VALID]) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%s\n", listitem + 1, PLAYER_PHONE_BOOK[playerid][i][phone_book_contact_NAME], number_format_dash(PLAYER_PHONE_BOOK[playerid][i][phone_book_contact_PHONE_NUMBER]));
				strcat(dialog, line_str);
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
				
				contacts ++; listitem ++;
			}
			if(contacts < MAX_PHONE_CONTACTS)
			{
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = MAX_PHONE_CONTACTS + 10;
				strcat(dialog, "{CCCCCC}+ Añadir contacto\n"); listitem ++;
			}
			if(contacts > 0)
			{
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = MAX_PHONE_CONTACTS + 20;
				strcat(dialog, "{c4290d}- Eliminar todo\n"); listitem ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Mi teléfono - Agenda", dialog, ">>", "Atrás");		
			return 1;
		}
		case DIALOG_PHONE_BOOK_ADD_NUMBER: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Agenda - Añadir contacto", "Está añadiendo un nuevo contacto en su agenda.\nIndique el número de teléfono del nuevo contacto.", ">>", "Atrás");
		case DIALOG_PHONE_BOOK_ADD_NAME: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Agenda - Añadir contacto", "Está añadiendo un nuevo contacto en su agenda.\nIndique el nombre del nuevo contacto.", ">>", "Atrás");
		case DIALOG_PHONE_BOOK_OPTIONS:
		{
			new caption[40];
			format(caption, sizeof caption, "Contacto - %s", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "{CCCCCC}1. Llamar\n{CCCCCC}2. Enviar mensaje\n{CCCCCC}3. Cambiar nombre del contacto\n{CCCCCC}4. Eliminar este contacto", ">>", "Atrás");			
			return 1;
		}
		case DIALOG_PHONE_BOOK_CHANGE_NAME:
		{
			new caption[40];
			format(caption, sizeof caption, "Contacto - %s", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME]);
			
			new dialog[140];
			format(dialog, sizeof dialog, "Nombre actual: %s\nTeléfono: %s\n\nIndica el nuevo nombre de este contacto.", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME], number_format_dash(PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, dialog, "Cambiar", "Atrás");	
			return 1;
		}
		case DIALOG_PHONE_BOOK_CONFIRM_DELET:
		{
			new caption[40];
			format(caption, sizeof caption, "Contacto - %s", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME]);
			
			new dialog[140];
			format(dialog, sizeof dialog, "¿Está seguro de que desea eliminar el siguiente contacto?\n\nNombre: %s\nTeléfono: %s", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME], number_format_dash(PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, caption, dialog, "Eliminar", "Atrás");	
			return 1;
		}
		case DIALOG_PHONE_BOOK_DELETE_ALL: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Agenda - Eliminar todo", "¿Está seguro de que quiere eliminar todos sus contactos?\nEsta opción no se puede deshacer y perderás todos los contactos guardados.", "Eliminar", "Atrás");	
		case DIALOG_PHONE_CALL_NUMBER: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Mi teléfono - Realizar una llamada", "¿A quién quieres llamar?\nIndique el número al que desea llamar.", ">>", "Atrás");
		case DIALOG_PHONE_SMS_NUMBER: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Mi teléfono - Enviar mensaje", "¿A quién quieres enviarle el mensaje?\nIndique el número al que desea enviar el mensaje.", ">>", "Atrás");
		case DIALOG_PHONE_SMS_MESSAGE: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Mi teléfono - Enviar mensaje", "Escribe el mensaje que quieres enviar\nCaracteres: 1-64.", ">>", "Atrás");
		case DIALOG_PHONE_BOOK_SEND_MESSAGE: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Mi teléfono - Enviar mensaje", "Escribe el mensaje que quieres enviar\nCaracteres: 1-64.", ">>", "Atrás");
		case DIALOG_PHONE_SENT_MESSAGES:
		{
			new dialog[1600];
			format(dialog, sizeof dialog, "{CCCCCC}Fecha\t{90C3D4}Enviado a\t{CCCCCC}Mensaje\n");

			new DBResult:Result, DB_Query[140], messages;
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `PHONE_MESSAGES` WHERE `FROM` = '%d' ORDER BY `DATE` DESC LIMIT 10;", PLAYER_PHONE[playerid][player_phone_NUMBER]);
			Result = db_query(Database, DB_Query);

			if(db_num_rows(Result) == 0) strcat(dialog, "{CCCCCC}No hay mensajes.");
			else
			{
				new line_str[150];
				for(new i; i < db_num_rows(Result); i++ )
				{
					new date[24], to, message[64];
					to = db_get_field_assoc_int(Result, "TO");
					db_get_field_assoc(Result, "MESSAGE", message, 64);
					db_get_field_assoc(Result, "DATE", date, 24);
					
					format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}%s\t{CCCCCC}%s\n", date, convertPhoneNumber(playerid, to), message);
					strcat(dialog, line_str);
					
					messages ++;
					db_next_row(Result);
				}
			}
			db_free_result(Result);
			
			new caption[40];
			format(caption, sizeof caption, "Últimos %d mensajes enviados", messages);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, "Salir", "Atrás");
			return 1;
		}
		case DIALOG_PHONE_RECEIVED_MESSAGES:
		{
			new dialog[1600];
			format(dialog, sizeof dialog, "{CCCCCC}Fecha\t{90C3D4}Remitente\t{CCCCCC}Mensaje\n");

			new DBResult:Result, DB_Query[140], messages;
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `PHONE_MESSAGES` WHERE `TO` = '%d' ORDER BY `DATE` DESC LIMIT 10;", PLAYER_PHONE[playerid][player_phone_NUMBER]);
			Result = db_query(Database, DB_Query);

			if(db_num_rows(Result) == 0) strcat(dialog, "{CCCCCC}No hay mensajes.");
			else
			{
				new line_str[150];
				for(new i; i < db_num_rows(Result); i++ )
				{
					new date[24], from, message[64];
					from = db_get_field_assoc_int(Result, "FROM");
					db_get_field_assoc(Result, "MESSAGE", message, 64);
					db_get_field_assoc(Result, "DATE", date, 24);
					
					format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}%s\t{CCCCCC}%s\n", date, convertPhoneNumber(playerid, from), message);
					strcat(dialog, line_str);
					
					messages ++;
					db_next_row(Result);
				}
			}
			db_free_result(Result);
			
			new caption[40];
			format(caption, sizeof caption, "Últimos %d mensajes recibidos", messages);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, "Salir", "Atrás");
			return 1;
		}
		case DIALOG_CONFIRM_BUY_PROPERTY:
		{
			new dialog[220];
			format(dialog, sizeof dialog, "Precio de la propiedad: %s$\nSeguro: %s$\nBalance actual: %s$\nBalance tras la compra: %s$\n\n¿De verdad desea comprar esta propiedad?", number_format_thousand(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX] ][property_PRICE]), number_format_thousand(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX] ][property_PRICE_BASE] / 200), number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE]), number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE] - PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX] ][property_PRICE]));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, ""DEFAULT_DIALOG_CAPTION" - Comprar propiedad",  dialog, "Comprar", "Salir");
			return 1;
		}
		case DIALOG_PLAYER_GPS:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, ""DEFAULT_DIALOG_CAPTION" - GPS",  "{CCCCCC}1. Mis lugares\n{CCCCCC}2. Mis propiedades\n{CCCCCC}3. Mis vehículos\n{CCCCCC}4. Lugares de interés\n{CCCCCC}5. Trabajos\n{CCCCCC}6. Ver mapa", ">>", "Salir");
			return 1;
		}
		case DIALOG_PLAYER_GPS_PLAYER:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[90 * (MAX_PLAYER_GPS_SAVES + 2)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites, listitem;
			for(new i = 0; i != MAX_PLAYER_GPS_SAVES; i++ )
			{
				if(!PLAYER_GPS[playerid][i][player_gps_VALID]) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%.2f Km\n", listitem + 1, PLAYER_GPS[playerid][listitem][player_gps_NAME], (GetPlayerDistanceFromPoint(playerid, PLAYER_GPS[playerid][listitem][player_gps_X], PLAYER_GPS[playerid][listitem][player_gps_Y], PLAYER_GPS[playerid][listitem][player_gps_Z]) * 0.01));
				strcat(dialog, line_str);
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
				
				sites ++; listitem ++;
			}
			if(sites < MAX_PLAYER_GPS_SAVES)
			{
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = MAX_PLAYER_GPS_SAVES + 10;
				strcat(dialog, "{CCCCCC}+ Añadir lugar actual\n"); listitem ++;
			}
			if(sites > 0)
			{
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = MAX_PLAYER_GPS_SAVES + 20;
				strcat(dialog, "{c4290d}- Eliminar todo\n"); listitem ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Mis lugares", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_PLAYER_ADD:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "GPS - Añadir lugar", "Tu posición actual será guardada en este lugar para ir más tarde.\nIndica el nombre de este lugar para guardarlo.", ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_DELETE_ALL: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Mis lugares - Eliminar todo", "¿Está seguro de que quiere eliminar todos sus lugares?\nEsta opción no se puede deshacer y perderás todos los lugares guardados.", "Eliminar", "Atrás");	
		case DIALOG_PLAYER_GPS_PLAYER_OPTION:
		{
			new caption[40];
			format(caption, sizeof caption, "GPS - %s", PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "{CCCCCC}1. Marcar coordenadas en el GPS\n{CCCCCC}2. Cambiar nombre de este lugar\n{CCCCCC}3. Eliminar este lugar del GPS", ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_CHANGE_NAME:
		{
			new dialog[90];
			format(dialog, sizeof dialog, "Nombre del lugar: %s\nIndica el nuevo nombre para este lugar.", PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "GPS - Cambiar nombre de un lugar", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_CONFIRM_DELET:
		{
			new dialog[95];
			format(dialog, sizeof dialog, "Nombre del lugar: %s\n¿Está seguro de que quiere borrarlo del GPS?", PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "GPS - Eliminar un lugar", dialog, "Eliminar", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITES:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "GPS - Lugares de interés", "{CCCCCC}1. Hospitales\n{CCCCCC}2. Tiendas de ropa\n{CCCCCC}3. Tiendas 24 horas\n{CCCCCC}4. Restaurantes de comida rápida\n{CCCCCC}5. Bancos\n{CCCCCC}6. Cajeros automáticos\n{CCCCCC}7. Gasolineras\n{CCCCCC}8. Concesionarios\n{CCCCCC}9. Gobierno San Andreas\n{CCCCCC}10. Policías\n{CCCCCC}11. Super Tuning Club", ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_WORKS:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[85 * (sizeof(work_info) + 1)], listitem;
			format(dialog, sizeof dialog, "{CCCCCC}Trabajo\t{CCCCCC}Distancia\n");

			for(new i = 1; i != sizeof work_info; i ++)
			{
				if(work_info[i][work_info_TYPE] == WORK_TYPE_FAMILY) continue;
				
				new line_str[85];
				format(line_str, sizeof line_str, "{CCCCCC}%c%s {90C3D4}(%d)\t{CCCCCC}%.2f Km\n", toupper(work_info[i][work_info_NAME][0]), work_info[i][work_info_NAME][1], work_info[i][work_info_LEVEL], (GetPlayerDistanceFromPoint(playerid, obtain_work_coords[i][obtain_work_MAP_ICON_X], obtain_work_coords[i][obtain_work_MAP_ICON_Y], obtain_work_coords[i][obtain_work_MAP_ICON_Z]) * 0.01));
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
				listitem ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Trabajos", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_0: //Hospitales
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Hospitales", DIALOG_PLAYER_GPS_SITE_0_String, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_1: //Tiendas de ropa
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[90 * (MAX_LISTITEMS + 1)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites;
			for(new i = 0; i != sizeof(ENTER_EXIT); i++ )
			{
				if(sites >= MAX_LISTITEMS) break;
				if(ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_BINCO && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_SUBURBAN && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_PROLAPS && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_DIDIER_SACHS && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_VICTIM && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_ZIP) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%.2f Km\n", sites + 1, ENTER_EXIT[i][ee_NAME], (GetPlayerDistanceFromPoint(playerid, ENTER_EXIT[i][ee_EXT_X], ENTER_EXIT[i][ee_EXT_Y], ENTER_EXIT[i][ee_EXT_Z]) * 0.01));
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][sites] = i;
				sites ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Tiendas de ropa", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_2: //Tiendas 24 horas
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[90 * (MAX_LISTITEMS + 1)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites;
			for(new i = 0; i != sizeof(ENTER_EXIT); i++ )
			{
				if(sites >= MAX_LISTITEMS) break;
				if(ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_247) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%.2f Km\n", sites + 1, ENTER_EXIT[i][ee_NAME], (GetPlayerDistanceFromPoint(playerid, ENTER_EXIT[i][ee_EXT_X], ENTER_EXIT[i][ee_EXT_Y], ENTER_EXIT[i][ee_EXT_Z]) * 0.01));
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][sites] = i;
				sites ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Tiendas 24/7", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_3: //Comida rapida
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[90 * (MAX_LISTITEMS + 1)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites;
			for(new i = 0; i != sizeof(ENTER_EXIT); i++ )
			{
				if(sites >= MAX_LISTITEMS) break;
				if(ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_PIZZA && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_CLUCKIN_BELL && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_BURGER_SHOT) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%.2f Km\n", sites + 1, ENTER_EXIT[i][ee_NAME], (GetPlayerDistanceFromPoint(playerid, ENTER_EXIT[i][ee_EXT_X], ENTER_EXIT[i][ee_EXT_Y], ENTER_EXIT[i][ee_EXT_Z]) * 0.01));
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][sites] = i;
				sites ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Restaurantes", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_4: //Bancos
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[90 * (MAX_LISTITEMS + 1)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites;
			for(new i = 0; i != sizeof(ENTER_EXIT); i++ )
			{
				if(sites >= MAX_LISTITEMS) break;
				if(ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_BANK_LS && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_BANK_SF && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_BANK_LV) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%.2f Km\n", sites + 1, ENTER_EXIT[i][ee_NAME], (GetPlayerDistanceFromPoint(playerid, ENTER_EXIT[i][ee_EXT_X], ENTER_EXIT[i][ee_EXT_Y], ENTER_EXIT[i][ee_EXT_Z]) * 0.01));
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][sites] = i;
				sites ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Bancos", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_5: //Cajeros
		{
			new dialog[90 * (sizeof(ATM_BANK) + 1)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites;
			for(new i = 0; i != sizeof(ATM_BANK); i++ )
			{
				format(line_str, sizeof line_str, "{CCCCCC}Cajero %d\t{90C3D4}%.2f Km\n", sites + 1, (GetPlayerDistanceFromPoint(playerid, ATM_BANK[i][atm_X], ATM_BANK[i][atm_Y], ATM_BANK[i][atm_Z]) * 0.01));
				strcat(dialog, line_str);
				
				sites ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Cajeros", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_6: //Gasolineras
		{
			new dialog[90 * (sizeof(Fuel_Stations) + 1)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites;
			for(new i = 0; i != sizeof(Fuel_Stations); i++ )
			{
				format(line_str, sizeof line_str, "{CCCCCC}Gasolinera %d\t{90C3D4}%.2f Km\n", sites + 1, (GetPlayerDistanceFromPoint(playerid, Fuel_Stations[i][0], Fuel_Stations[i][1], Fuel_Stations[i][2]) * 0.01));
				strcat(dialog, line_str);
				
				sites ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Gasolineras", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_7: //Concesionarios
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Concesionarios", DIALOG_PLAYER_GPS_SITE_7_String, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_8: //Policias
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[90 * (MAX_LISTITEMS + 1)];
			format(dialog, sizeof dialog, "{CCCCCC}Lugar\t{90C3D4}Distancia\n");
			
			new line_str[90], sites;
			for(new i = 0; i != sizeof(ENTER_EXIT); i++ )
			{
				if(sites >= MAX_LISTITEMS) break;
				if(ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_POLICE_LS && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_POLICE_SF && ENTER_EXIT[i][ee_INTERIOR_TYPE] != INTERIOR_POLICE_LV) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%.2f Km\n", sites + 1, ENTER_EXIT[i][ee_NAME], (GetPlayerDistanceFromPoint(playerid, ENTER_EXIT[i][ee_EXT_X], ENTER_EXIT[i][ee_EXT_Y], ENTER_EXIT[i][ee_EXT_Z]) * 0.01));
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][sites] = i;
				sites ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Policías", dialog, ">>", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_GPS_PROPERTIES:
		{
			for(new i = 0; i != MAX_SU_PROPERTIES; i ++) PLAYER_TEMP[playerid][pt_PLAYER_GPS_SELECTED_PROPERTY][i] = -1;
			
			new dialog[90 * (MAX_SU_PROPERTIES + 2)];
			format(dialog, sizeof dialog, "{CCCCCC}Propiedad\t{90C3D4}Distancia\n");

			new DBResult:Result, DB_Query[250];
			format(DB_Query, sizeof DB_Query, "SELECT `PROPERTY_OWNER`.*, `PROPERTY`.`EXT_X`, `PROPERTY`.`EXT_Y`, `PROPERTY`.`EXT_Z` FROM `PROPERTY_OWNER`, `PROPERTY` WHERE `PROPERTY_OWNER`.`ID_USER` = '%d' AND `PROPERTY`.`ID` = `PROPERTY_OWNER`.`ID_PROPERTY`;", ACCOUNT_INFO[playerid][ac_ID]);
			Result = db_query(Database, DB_Query);
			
			if(db_num_rows(Result) == 0) strcat(dialog, "{CCCCCC}No tienes propiedades");
			else
			{
				new line_str[90], properties;
				for(new i; i < db_num_rows(Result); i++ )
				{
					if(properties >= MAX_SU_PROPERTIES) break;
					
					new property_name[24], Float:pos[3];
					PLAYER_TEMP[playerid][pt_PLAYER_GPS_SELECTED_PROPERTY][properties] = db_get_field_assoc_int(Result, "ID_PROPERTY");
					db_get_field_assoc(Result, "PROPERTY_NAME", property_name, 24);
					pos[0] = db_get_field_assoc_float(Result, "EXT_X");
					pos[1] = db_get_field_assoc_float(Result, "EXT_Y");
					pos[2] = db_get_field_assoc_float(Result, "EXT_Z");
					
					format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%.2f Km\n", properties + 1, property_name, (GetPlayerDistanceFromPoint(playerid, pos[0], pos[1], pos[2]) * 0.01));
					strcat(dialog, line_str);
					
					properties ++;
					db_next_row(Result);
				}
			}
			db_free_result(Result);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Mis propiedades", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_GPS_VEHICLES:
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[115 * (MAX_SU_VEHICLES + 2)], total_vehicles;
			format(dialog, sizeof dialog, "{CCCCCC}Vehículo\t{90C3D4}Matrícula\t{CCCCCC}Distancia\n");
			for(new i = 0; i != MAX_VEHICLES; i ++)
			{
				if(!GLOBAL_VEHICLES[i][gb_vehicle_VALID]) continue;
				if(!PLAYER_VEHICLES[i][player_vehicle_VALID]) continue;
				if(total_vehicles > MAX_SU_VEHICLES) break;
				
				if(PLAYER_VEHICLES[i][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
				{
					PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][total_vehicles] = i;
					
					new Float:pos[3];
					GetVehiclePos(i, pos[0], pos[1], pos[2]);
					
					new line_str[115];
					if(ACCOUNT_INFO[playerid][ac_SU]) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%s\t{CCCCCC}%.2f Km\n", total_vehicles + 1, VEHICLE_INFO[ GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME], GLOBAL_VEHICLES[i][gb_vehicle_NUMBER_PLATE], (GetPlayerDistanceFromPoint(playerid, pos[0], pos[1], pos[2]) * 0.01));
					else
					{
						if(PLAYER_VEHICLES[i][player_vehicle_ACCESSIBLE]) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%s\t{CCCCCC}%.2f Km\n", total_vehicles + 1, VEHICLE_INFO[ GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME], GLOBAL_VEHICLES[i][gb_vehicle_NUMBER_PLATE], (GetPlayerDistanceFromPoint(playerid, pos[0], pos[1], pos[2]) * 0.01));
						else format(line_str, sizeof line_str, "{666666}%d. %s\t{666666}%s\t{666666}%.2f Km\n", total_vehicles + 1, VEHICLE_INFO[ GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME], GLOBAL_VEHICLES[i][gb_vehicle_NUMBER_PLATE], (GetPlayerDistanceFromPoint(playerid, pos[0], pos[1], pos[2]) * 0.01));
					}
					strcat(dialog, line_str);
					total_vehicles ++;
				}
			}
			if(total_vehicles == 0) strcat(dialog, "{CCCCCC}No tienes vehículos");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "GPS - Mis vehículos", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PROPERTY_OPTIONS:
		{
			new caption[40];
			format(caption, sizeof caption, "Propiedad - %s", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME]);
			
			new dialog[256];
			format(dialog, sizeof dialog, "{CCCCCC}1. Cambiar nombre de la propiedad\n{CCCCCC}2. Echar a todo del mundo de mi propiedad\n{CCCCCC}3. Poner música desde tu MP3\n");
			if(PLAYER_CREW[playerid][player_crew_VALID])
			{
				if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_ADD_PROPERTIES])
				{
					strcat(dialog, "{CCCCCC}4. Pasar a propiedad de banda\n");
				}
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PROPERTY_NAME:
		{
			new dialog[85];
			format(dialog, sizeof dialog, "Nombre actual: %s\nIndica el nuevo nombre de la propiedad.", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Propiedad - Cambiar nombre", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PLAYER_MP3: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "MP3 - Buscar una canción", "Indica el nombre y cantante de la canción que quieres reproducir.\nSe recomienda añadir la palabra 'audio' para canción directa.\n\nPor ejemplo: Lynyrd Skynyrd - Free Bird (Audio)", "Buscar", "Salir");
		case DIALOG_BUY_VEHICLE:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_VALID]) return 0;
			if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_TYPE] != VEHICLE_TYPE_SELL) return 0;
			if(!SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_VALID]) return 0;
			
			new dialog[800];
			format(dialog, sizeof dialog, 
				"Vehículo: %s\n\
				Nivel necesario: %d\n\
				Precio del vehículo: %s$\n\
				Velocidad máxima: %d Km/h\n\
				Capacidad depósito: %.1f Litros\n\
				Espacio maletero: %d\n\
				Seguro: %s$\n\n", 
				VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME],
				SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_LEVEL],
				number_format_thousand(SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE]),
				floatround(VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_MAX_VEL]),
				VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_MAX_GAS],
				VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_BOOT_SLOTS],
				number_format_thousand(VEHICLE_INFO[GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_MODELID] - 400][vehicle_info_PRICE] / 100)
			);
			
			new str[145];
			if(SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_LEVEL] > ACCOUNT_INFO[playerid][ac_LEVEL])
			{
				format(str, sizeof str, "{FF6633}- Necesitas ser al menos nivel %d para poder comprar este vehículo.", SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_LEVEL]);
				strcat(dialog, str);
				PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] = INVALID_VEHICLE_ID;
				ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Comprar vehículo", dialog, "Salir", "");
				return 1;
			}
			
			if(BANK_ACCOUNT[playerid][bank_account_ID] == 0)
			{
				strcat(dialog, "{FF6633}- Necesitas una cuenta bancaria para poder comprar vehículos.");
				PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] = INVALID_VEHICLE_ID;
				ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Comprar vehículo", dialog, "Salir", "");
				return 1;
			}
	
			if(SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE] > BANK_ACCOUNT[playerid][bank_account_BALANCE])
			{
				new diff = SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE] - BANK_ACCOUNT[playerid][bank_account_BALANCE];
				format(str, sizeof str, "{FF6633}- Te faltan %s$ en tu cuenta bancaria para poder comprar este vehículo.", number_format_thousand(diff));
				strcat(dialog, str);
				PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] = INVALID_VEHICLE_ID;
				ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Comprar vehículo", dialog, "Salir", "");
				return 1;
			}
			
			format(str, sizeof str, "Balance de tu cuenta bancaria: %s$\nBalance tras la compra: %s$\n\n¿De verdad desea comprar este vehículo?", number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE]), number_format_thousand(BANK_ACCOUNT[playerid][bank_account_BALANCE] - SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE]));
			strcat(dialog, str);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Comprar vehículo", dialog, "Comprar", "Salir");
			return 1;
		}
		case DIALOG_NOTARY:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Notaría", "{CCCCCC}Vender una propiedad al banco\n{CCCCCC}Vender un vehículo al banco\n{CCCCCC}Vender una propiedad a una persona\n{CCCCCC}Vender un vehículo a una persona", ">>", "Salir");
			return 1;
		}
		case DIALOG_NOTARY_SELECT_PROPERTY:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[45 * (MAX_SU_PROPERTIES + 2)];
			format(dialog, sizeof dialog, "{CCCCCC}Propiedad\n");

			new DBResult:Result, DB_Query[80];
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `PROPERTY_OWNER` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
			Result = db_query(Database, DB_Query);
			
			if(db_num_rows(Result) == 0) strcat(dialog, "{CCCCCC}No tienes propiedades");
			else
			{
				new line_str[45], properties;
				for(new i; i < db_num_rows(Result); i++ )
				{
					if(properties >= MAX_SU_PROPERTIES) break;
					
					new property_name[24];
					PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][properties] = db_get_field_assoc_int(Result, "ID_PROPERTY");
					db_get_field_assoc(Result, "PROPERTY_NAME", property_name, 24);
					
					format(line_str, sizeof line_str, "{CCCCCC}%d. %s\n", properties + 1, property_name);
					strcat(dialog, line_str);
					
					properties ++;
					db_next_row(Result);
				}
			}
			db_free_result(Result);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona la propiedad que quieres vender", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PROPERTY_BANK_SELL:
		{
			new caption[40];
			format(caption, sizeof caption, "Vender - %s", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME]);
			
			new Float:price, payment;
			price = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE_BASE];
			if(ACCOUNT_INFO[playerid][ac_SU]) payment = floatround( floatmul(price, 0.50) );
			else payment = floatround( floatmul(price, 0.25) );
			
			new dialog[160];
			format(dialog, sizeof dialog, "Precio en mercado: %s$\nNosotros te pagaremos: %s$\n\n¿Está seguro de que quiere venderla?", number_format_thousand(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE]), number_format_thousand(payment));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, caption, dialog, "Vender", "Atrás");
			return 1;
		}
		case DIALOG_PROPERTY_SELL_PRICE:
		{
			new caption[40];
			format(caption, sizeof caption, "Vender - %s", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME]);
			
			new Float:price, min_price, max_price;
			price = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE];
			min_price = floatround( floatmul(price, 0.15) );
			max_price = floatround( floatmul(price, 6.0) );
			
			new dialog[250];
			format(dialog, sizeof dialog, 
			"Precio en mercado: %s$\n\nPrecio mínimo de venta: %s$\nPrecio máximo de venta: %s$\n\n¿Por cuánto quieres vender esta propiedad?", 
			number_format_thousand(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE]),
			number_format_thousand(min_price),
			number_format_thousand(max_price));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PROPERTY_SELL_TO_PLAYER:
		{
			new caption[40];
			format(caption, sizeof caption, "Vender - %s", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME]);
			
			new dialog[250];
			format(dialog, sizeof dialog, "De acuerdo, quieres vender esta propiedad por %s$.\n\nIndica el nombre o playerid del comprador.\nEl comprador debe estar en la sala y cumplir todos los requisitos.", number_format_thousand(PLAYER_TEMP[playerid][pt_NOTARY_PRICE]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_SELL_CONFIRM_PROPERTY:
		{
			new dialog[240];
			format(dialog, sizeof dialog,
				"%s te quiere vender una propiedad.\n\n\
				Propiedad: %d\n\
				Precio: %s$\n\n\
				Balance tras la compra: %s$\n\n\
				¿Quieres comprar esta propiedad?",
				PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_RP_NAME],
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID],
				number_format_thousand(PLAYER_TEMP[playerid][pt_NOTARY_PRICE]),
				number_format_thousand( BANK_ACCOUNT[playerid][bank_account_BALANCE] - PLAYER_TEMP[playerid][pt_NOTARY_PRICE] )
			);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Oferta recibida", dialog, "Comprar", "Salir");
			return 1;
		}
		case DIALOG_NOTARY_SELECT_VEHICLE:
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[95 * (MAX_SU_VEHICLES + 2)], total_vehicles;
			format(dialog, sizeof dialog, "{CCCCCC}Vehículo\t{90C3D4}Matrícula\n");
			for(new i = 0; i != MAX_VEHICLES; i ++)
			{
				if(!GLOBAL_VEHICLES[i][gb_vehicle_VALID]) continue;
				if(!PLAYER_VEHICLES[i][player_vehicle_VALID]) continue;
				if(total_vehicles > MAX_SU_VEHICLES) break;
				
				if(PLAYER_VEHICLES[i][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
				{
					PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][total_vehicles] = i;
					
					new line_str[95];
					format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%s\n", total_vehicles + 1, VEHICLE_INFO[ GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME], GLOBAL_VEHICLES[i][gb_vehicle_NUMBER_PLATE]);
					strcat(dialog, line_str);
					total_vehicles ++;
				}
			}
			if(total_vehicles == 0) strcat(dialog, "{CCCCCC}No tienes vehículos");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona el vehículo que quieres vender", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VEHICLE_BANK_SELL:
		{
			new caption[40];
			format(caption, sizeof caption, "Vender - %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			new Float:price, payment;
			price = VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE];
			if(ACCOUNT_INFO[playerid][ac_SU]) payment = floatround( floatmul(price, 0.50) );
			else payment = floatround( floatmul(price, 0.25) );
			
			new dialog[160];
			format(dialog, sizeof dialog, "Precio en mercado: %s$\nNosotros te pagaremos: %s$\n\n¿Está seguro de que quiere venderlo?", number_format_thousand( VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE] ), number_format_thousand(payment));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, caption, dialog, "Vender", "Atrás");
			return 1;
		}
		case DIALOG_VEHICLE_SELL_PRICE:
		{
			new caption[40];
			format(caption, sizeof caption, "Vender - %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			new Float:price, min_price, max_price;
			price = VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE];
			min_price = floatround( floatmul(price, 0.15) );
			max_price = floatround( floatmul(price, 6.0) );
			
			new dialog[250];
			format(dialog, sizeof dialog, 
			"Precio en mercado: %s$\n\nPrecio mínimo de venta: %s$\nPrecio máximo de venta: %s$\n\n¿Por cuánto quieres vender este vehículo?", 
			number_format_thousand(VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE]),
			number_format_thousand(min_price),
			number_format_thousand(max_price));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VEHICLE_SELL_TO_PLAYER:
		{
			new caption[40];
			format(caption, sizeof caption, "Vender - %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			new dialog[250];
			format(dialog, sizeof dialog, "De acuerdo, quieres vender este vehículo por %s$.\n\nIndica el nombre o playerid del comprador.\nEl comprador debe estar en la sala y cumplir todos los requisitos.", number_format_thousand(PLAYER_TEMP[playerid][pt_NOTARY_PRICE]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_SELL_CONFIRM_VEHICLE:
		{
			new dialog[300];
			format(dialog, sizeof dialog,
				"%s te quiere vender un vehículo.\n\n\
				Vehículo: %s\n\
				Matrícula: %s\n\
				Precio: %s$\n\n\
				Balance tras la compra: %s$\n\n\
				¿Quieres comprar este vehículo?",
				PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_RP_NAME],
				VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME],
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_NUMBER_PLATE],
				number_format_thousand(PLAYER_TEMP[playerid][pt_NOTARY_PRICE]),
				number_format_thousand( BANK_ACCOUNT[playerid][bank_account_BALANCE] - PLAYER_TEMP[playerid][pt_NOTARY_PRICE] )
			);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Oferta recibida", dialog, "Comprar", "Salir");
			return 1;
		}
		case DIALOG_SELECT_TRUCK_TYPE:
		{
			new work_extra_payment;
			if(work_info[WORK_TRUCK][work_info_EXTRA_PAY] > 0 && work_info[WORK_TRUCK][work_info_EXTRA_PAY_EXP] > 0)
			{
				work_extra_payment = (work_info[WORK_TRUCK][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_TRUCK], work_info[WORK_TRUCK][work_info_EXTRA_PAY_EXP])));
				if(work_info[WORK_TRUCK][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TRUCK][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TRUCK][work_info_EXTRA_PAY_LIMIT];
				
				if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
			}
			
			new dialog[105 * (sizeof(Truck_Contents) + 2)];
			format(dialog, sizeof dialog, "{CCCCCC}Producto\t{90C3D4}Beneficios\t{CCCCCC}Distancia\n");
			for(new i = 0; i != sizeof Truck_Contents; i ++)
			{
				new line_str[105];
				if(Truck_Contents[i][truck_content_EXP] > PLAYER_SKILLS[playerid][WORK_TRUCK])
				{
					format(line_str, sizeof line_str, "{666666}%s\t{666666}%s$\t{666666}%.2f Km\n", Truck_Contents[i][truck_content_NAME], number_format_thousand(Truck_Contents[i][truck_content_MONEY] + work_extra_payment), (GetPlayerDistanceFromPoint(playerid, Truck_Contents[i][truck_content_X], Truck_Contents[i][truck_content_Y], Truck_Contents[i][truck_content_Z]) * 0.01));
					strcat(dialog, line_str);
				}
				else
				{
					format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}%s$\t{CCCCCC}%.2f Km\n", Truck_Contents[i][truck_content_NAME], number_format_thousand(Truck_Contents[i][truck_content_MONEY] + work_extra_payment), (GetPlayerDistanceFromPoint(playerid, Truck_Contents[i][truck_content_X], Truck_Contents[i][truck_content_Y], Truck_Contents[i][truck_content_Z]) * 0.01));
					strcat(dialog, line_str);
				}
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona la carga", dialog, ">>", "Cancelar");
			return 1;
		}
		case DIALOG_TUNING_MENU_PART:
		{
			new vehicleid = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
			
			new caption[45];
			format(caption, sizeof caption, "Tuning - %s", VEHICLE_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			new DBResult:Result, DB_Query[250], dialog[80 * TOTAL_TUNING_PARTS];
			format(DB_Query, sizeof DB_Query, "SELECT `COMPONENTS_INFO`.`PART`, `COMPONENTS_INFO`.`PIECES` FROM `COMPONENTS_INFO`, `VEHICLE_COMPONENTS` WHERE `VEHICLE_COMPONENTS`.`MODELID` = '%d' AND `VEHICLE_COMPONENTS`.`COMPONENT_ID` = `COMPONENTS_INFO`.`ID` GROUP BY `COMPONENTS_INFO`.`PART`;", GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID]);
			Result = db_query(Database, DB_Query);
			
			format(dialog, sizeof dialog, "{CCCCCC}Categoría\t{90C3D4}Piezas necesarias\t{CCCCCC}Estimación\n");
			
			if(db_num_rows(Result) == 0) strcat(dialog, "{666666}Este vehículo no se puede tunear");
			else
			{
				new line_str[80];
				for(new i; i < db_num_rows(Result); i++ )
				{
					if(i >= TOTAL_TUNING_PARTS)
					{
						printf("---> Límite superado en array 'PLAYER_TUNING_MENU, dialog Parts' al intentar cargar de la base de datos.");
						break;
					}

					db_get_field_assoc(Result, "PART", PLAYER_TUNING_MENU[playerid][i][tuning_menu_NAME], 24);
					PLAYER_TUNING_MENU[playerid][i][tuning_menu_PIECES] = db_get_field_assoc_int(Result, "PIECES");
					format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}%d\t{CCCCCC}%s$\n", PLAYER_TUNING_MENU[playerid][i][tuning_menu_NAME], PLAYER_TUNING_MENU[playerid][i][tuning_menu_PIECES], number_format_thousand(PLAYER_TUNING_MENU[playerid][i][tuning_menu_PIECES] * 50));
					strcat(dialog, line_str);
					
					db_next_row(Result);
				}
			}
			db_free_result(Result);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_TUNING_MENU_COMPONENT:
		{
			new vehicleid = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
			
			new caption[45];
			format(caption, sizeof caption, "%s > %s", VEHICLE_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME], PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PART]);
			
			new DBResult:Result, DB_Query[300], dialog[40 * MAX_TUNING_PARTS_COMPONENTS];
			format(DB_Query, sizeof DB_Query, "SELECT `COMPONENTS_INFO`.`ID`, `COMPONENTS_INFO`.`NAME` FROM `COMPONENTS_INFO`, `VEHICLE_COMPONENTS` WHERE `COMPONENTS_INFO`.`PART` = '%s' AND `VEHICLE_COMPONENTS`.`MODELID` = '%d' AND `VEHICLE_COMPONENTS`.`COMPONENT_ID` = `COMPONENTS_INFO`.`ID`;", PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PART], GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID]);
			Result = db_query(Database, DB_Query);
			
			if(db_num_rows(Result) == 0) strcat(dialog, "{666666}No hay nada aquí");
			else
			{
				new line_str[40];
				for(new i; i < db_num_rows(Result); i++ )
				{
					if(i >= MAX_TUNING_PARTS_COMPONENTS)
					{
						printf("---> Límite superado en array 'PLAYER_TUNING_MENU, dialog Partsnames' al intentar cargar de la base de datos.");
						break;
					}
					
					PLAYER_TUNING_MENU[playerid][i][tuning_menu_ID] = db_get_field_assoc_int(Result, "ID");
					db_get_field_assoc(Result, "NAME", PLAYER_TUNING_MENU[playerid][i][tuning_menu_NAME], 24);
					
					format(line_str, sizeof line_str, "{CCCCCC}%s\n", PLAYER_TUNING_MENU[playerid][i][tuning_menu_NAME]);
					strcat(dialog, line_str);
					
					db_next_row(Result);
				}
			}
			db_free_result(Result);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_MENU:
		{
			new caption[60];
			format(caption, sizeof caption, "%s piezas disponibles - %s", number_format_thousand(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES]), VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			new dialog[450];
			format(dialog, sizeof dialog, 
			"\
				{CCCCCC}Opción\t{90C3D4}Piezas necesarias\t{CCCCCC}Estimación\n\
				{CCCCCC}Reparación completa\t{90C3D4}10\t{CCCCCC}500$\n\
			");
			
			if(IsPlayerInDynamicArea(playerid, Mechanic_Area))
			{
				new paintjobs = VehiclePaintjob( GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] );
				strcat(dialog, "{CCCCCC}Pintar vehículo\t{90C3D4}5\t{CCCCCC}250$\n");
				if(PLAYER_SKILLS[playerid][WORK_MECHANIC] >= 100)
				{
					strcat(dialog, "{CCCCCC}Eliminar componentes\n");
					strcat(dialog, "{CCCCCC}Tunear vehículo\n");
					if(paintjobs > 0) strcat(dialog, "{CCCCCC}Paintjob\t{90C3D4}15\t{CCCCCC}750$\n");
				}
				else
				{
					strcat(dialog, "{666666}Eliminar componentes\n");
					strcat(dialog, "{666666}Tunear vehículo\n");
					if(paintjobs > 0) strcat(dialog, "{666666}Paintjob\t{666666}15\t{666666}750$\n");
				}
			}

			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_REPAIR_PRICE:
		{
			new caption[60];
			format(caption, sizeof caption, "Reparar %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, "Indica el precio de la reparación.\nRango de precio: 0$ - 2.000$", ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_COLOR_PRICE:
		{
			new caption[60];
			format(caption, sizeof caption, "Pintar %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, "Indica el precio para pintar el vehículo.\nRango de precio: 0$ - 1.750$", ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_TUNING_PRICE:
		{
			new caption[60], dialog[145];
			format(caption, sizeof caption, "Tunear %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			format(dialog, sizeof dialog, "Indica el precio para tunear el vehículo.\nRango de precio: 0$ - %s$", number_format_thousand((PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES] * 50) + 2000));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_PAINTJOB_PRICE:
		{
			new caption[60];
			format(caption, sizeof caption, "Paintjob %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, "Indica el precio para el paintjob del vehículo.\nRango de precio: 0$ - 2.750$", ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_ACCEPT:
		{
			new dialog[300];
			format(dialog, sizeof dialog,
				
				"\
					{CCCCCC}El mecánico %s te ofrece:\n\
						\t%s\n\
					\n\
					{CCCCCC}Precio: %s$\n\
					¿Quieres aceptarlo?\n\
				",
					PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][pt_RP_NAME],
					PLAYER_TEMP[playerid][pt_MECHANIC_TEXT],
					number_format_thousand(PLAYER_TEMP[playerid][pt_MECHANIC_PRICE])
			);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Mecánico", dialog, "Aceptar", "Cancelar");
			return 1;
		}
		case DIALOG_MECHANIC_SELECT_COL_SLOT:
		{
			new caption[60];
			format(caption, sizeof caption, "Pintar %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "{CCCCCC}Pintar color primario\n{CCCCCC}Pintar color secundario", ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_SELECT_COLOR:
		{
			new caption[60];
			format(caption, sizeof caption, "Pintar %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			
			new dialog[15 * (sizeof(VEHICLE_COLORS) + 1) ];
			for(new i = 0; i != sizeof VEHICLE_COLORS; i++)
			{
				new line_str[15];
				format(line_str, sizeof(line_str), "{%06x}%d\n", VEHICLE_COLORS[i] >>> 8, i);
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_MECHANIC_REMOVE_COMPONEN:
		{
			new caption[60], dialog[80 * (MAX_VEHICLE_COMPONENTS + 2) ], listitem;
			format(caption, sizeof caption, "Componentes de %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			format(dialog, sizeof dialog, "{CCCCCC}Componente\t{90C3D4}Piezas\n");
			
			for(new i = 0; i != MAX_VEHICLE_COMPONENTS; i ++)
			{
				if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COMPONENTS][i]) continue;
				
				new DBResult:Result, DB_Query[60];
				format(DB_Query, sizeof DB_Query, "SELECT * FROM `COMPONENTS_INFO` WHERE `ID` = '%d';", GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COMPONENTS][i]);
				
				Result = db_query(Database, DB_Query);
			
				if(db_num_rows(Result))
				{	
					new part[24], name[24];
					db_get_field_assoc(Result, "PART", part, 24);
					db_get_field_assoc(Result, "NAME", name, 24);
					PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID] = i;
					PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_PIECES] = db_get_field_assoc_int(Result, "PIECES");
					
					new line_str[80];
					format(line_str, sizeof line_str, "{CCCCCC}%s > %s\t{90C3D4}+ %d\n", part, name, PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_PIECES]);
					strcat(dialog, line_str);
				}
				db_free_result(Result);
				listitem ++;
			}
			if(listitem == 0)
			{
				PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID] = 0;
				strcat(dialog, "{CCCCCC}Vehículo sin tunear");
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, "Eliminar", "Atrás");
			return 1;
		}
		case DIALOG_TUNING_PAINTJOB:
		{
			new caption[60], dialog[25 * 4];
			format(caption, sizeof caption, "Paintjob - %s", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			new paintjobs = VehiclePaintjob( GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_MODELID] );
			if(paintjobs == 0)
			{
				SendClientMessage(playerid, -1, "{999999}Este vehículo no soporta paintjobs.");
				ShowDialog(playerid, DIALOG_MECHANIC_MENU);
				return 1;
			}
			
			strcat(dialog, "{CCCCCC}Eliminar paintjob (+ 15 piezas)\n");
			for(new i = 0; i != paintjobs; i ++)
			{
				new line_str[25];
				format(line_str, sizeof line_str, "{CCCCCC}Paintjob %d\n", i + 1);
				strcat(dialog, line_str);
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_SELECT_TRASH_ROUTE:
		{
			new dialog[45 * (MAX_ROUTES + 1)], routes;
			format(dialog, sizeof dialog, "Ruta\tRecorrido\tBeneficios\n");
		
			new work_extra_payment;
			if(work_info[WORK_TRASH][work_info_EXTRA_PAY] > 0 && work_info[WORK_TRASH][work_info_EXTRA_PAY_EXP] > 0)
			{
				work_extra_payment = (work_info[WORK_TRASH][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_TRASH], work_info[WORK_TRASH][work_info_EXTRA_PAY_EXP])));
				if(work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT];
			
				if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
			}
			
			for(new i = 0; i != sizeof TRASH_OBJECTS; i ++)
			{
				if(!TRASH_OBJECTS[i][trash_route_VALID]) continue;
				new line_str[45];
				format(line_str, sizeof line_str, "#%d\t%.1f Km\t%s$\n", routes + 1, TRASH_OBJECTS[i][trash_route_DISTANCE] * 0.01, number_format_thousand(TRASH_OBJECTS[i][trash_route_MONEY] + work_extra_payment));
				strcat(dialog, line_str);
				
				routes ++;
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona la ruta", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_SEED_LIST:
		{
			new dialog[64 * (sizeof(seed_info) + 1)];
			format(dialog, sizeof dialog, "Nombre\tPrecio por semilla\n");
			
			for(new i = 0; i != sizeof seed_info; i ++)
			{
				new line_str[64];
				if(PLAYER_SKILLS[playerid][WORK_FARMER] >= seed_info[i][seed_info_EXP])
				{
					if(seed_info[i][seed_info_TYPE] == TYPE_LEGAL) format(line_str, sizeof line_str, "{009900}%s\t{CCCCCC}%d$\n", seed_info[i][seed_info_NAME], seed_info[i][seed_info_PRICE]);
					else format(line_str, sizeof line_str, "{FF3300}%s\t{CCCCCC}%d$\n", seed_info[i][seed_info_NAME], seed_info[i][seed_info_PRICE]);
				}
				else format(line_str, sizeof line_str, "{666666}%s\t{666666}%d$\n", seed_info[i][seed_info_NAME], seed_info[i][seed_info_PRICE]);
				
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Semillas de la vida", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_SEED_BUY:
		{
			new dialog[145];
			format(dialog, sizeof dialog, "{CCCCCC}Vale, quieres comprar semillas de %s.\n{CCCCCC}El precio por semilla es de: %d$\n\n{CCCCCC}¿Cuántas semillas quieres comprar?", seed_info[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_SEED_ID] ][seed_info_NAME], seed_info[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_SEED_ID] ][seed_info_PRICE]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Semillas de la vida", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_PLANT_PLANTS:
		{
			new dialog[95 * (sizeof(seed_info) + 1)];
			format(dialog, sizeof dialog, "Planta\tSemilla requerida\tSemillas necesarias\n");
			
			for(new i = 0; i != sizeof plant_info; i ++)
			{
				new line_str[95];
				
				if(seed_info[i][seed_info_TYPE] == TYPE_LEGAL) format(line_str, sizeof line_str, "{009900}%s\t{CCCCCC}%s\t{CCCCCC}%d\n", plant_info[i][plant_info_NAME], seed_info[i][seed_info_NAME], plant_info[i][plant_info_SEEDS]);
				else format(line_str, sizeof line_str, "{FF3300}%s\t{CCCCCC}%s\t{CCCCCC}%d\n", plant_info[i][plant_info_NAME], seed_info[i][seed_info_NAME], plant_info[i][plant_info_SEEDS]);

				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Plantar", dialog, ">>", "Salir");
		}
		case DIALOG_BLACK_MARKET:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Mercado negro", "{CCCCCC}Comprar armas\n{CCCCCC}Comprar munición para mis armas", "Comprar", "Salir");
			return 1;
		}
		case DIALOG_BLACK_MARKET_WEAPONS:
		{
			new dialog[64 * (sizeof(BLACK_MARKT_WEAPONS) + 2)];
			format(dialog, sizeof dialog, "{CCCCCC}Producto\t{CCCCCC}Precio\n");
			
			for(new i = 0; i != sizeof BLACK_MARKT_WEAPONS; i ++)
			{
				new line_str[64];
				if(BLACK_MARKT_WEAPONS[i][black_market_EXP] > CHARACTER_INFO[playerid][ch_BLACK_MARKET_LEVEL])
				{
					format(line_str, sizeof line_str, "{666666}%s\t{666666}%s$\n", WEAPON_INFO[ BLACK_MARKT_WEAPONS[i][black_market_WEAPON_ID] ][weapon_info_NAME], number_format_thousand(BLACK_MARKT_WEAPONS[i][black_market_WEAPON_PRICE]));
					strcat(dialog, line_str);
				}
				else
				{
					format(line_str, sizeof line_str, "{CCCCCC}%s\t{CCCCCC}%s$\n", WEAPON_INFO[ BLACK_MARKT_WEAPONS[i][black_market_WEAPON_ID] ][weapon_info_NAME], number_format_thousand(BLACK_MARKT_WEAPONS[i][black_market_WEAPON_PRICE]));
					strcat(dialog, line_str);
				}
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Armas", dialog, "Comprar", "Salir");
			return 1;
		}
		case DIALOG_BLACK_MARKET_SELECT_WEA:
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[95 * 15], line_str[95], listitem;
			format(dialog, sizeof dialog, "{CCCCCC}Arma\t{90C3D4}Munición\t{CCCCCC}Slot\n");
			
			for(new i; i != 13; i ++)
			{
				if(!PLAYER_WEAPONS[playerid][i][player_weapon_VALID]) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}%s\t{CCCCCC}%d\n", WEAPON_INFO[ PLAYER_WEAPONS[playerid][i][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(PLAYER_WEAPONS[playerid][i][player_weapon_AMMO]), i);
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i; 
				listitem ++;
			}
			if(listitem == 0) strcat(dialog, "{666666}No tienes armas");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona la arma a la que quieres comprarle munición", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_BLACK_MARKET_AMMO:
		{
			new dialog[145];
			format(dialog, sizeof dialog, "Arma: %s\nMunición: %s\n\nEl precio por bala es de 3$\n¿Cuánto munición quiere comprar?", WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_AMMO]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Comprar munición", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_PLAYER_WEAPONS:
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[95 * 15], line_str[95], listitem;
			format(dialog, sizeof dialog, "{CCCCCC}Arma\t{90C3D4}Munición\t{CCCCCC}Slot\n");
			
			for(new i; i != 13; i ++)
			{
				if(!PLAYER_WEAPONS[playerid][i][player_weapon_VALID]) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}%s\t{CCCCCC}%d\n", WEAPON_INFO[ PLAYER_WEAPONS[playerid][i][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(PLAYER_WEAPONS[playerid][i][player_weapon_AMMO]), i);
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i; 
				listitem ++;
			}
			strcat(dialog, "{c4290d}- Eliminar todo\n");
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = 13 + 20;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, ""DEFAULT_DIALOG_CAPTION" - Mis armas", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_PLAYER_WEAPONS_DELETE_A:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Mis armas - Eliminar todo", "¿Está seguro de que quiere eliminar todas sus armas?\nEsta opción no se puede deshacer.", "Eliminar", "Atrás");	
			return 1;
		}
		case DIALOG_PLAYER_WEAPONS_DELETE:
		{
			new dialog[150];
			format(dialog, sizeof dialog, "Arma: %s\nMunición: %s\n\n¿Está seguro de que quiere eliminar esta arma?\nEsta opción no se puede deshacer.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_AMMO]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Mis armas - Eliminar arma", dialog, "Eliminar", "Atrás");	
			return 1;
		}
		case DIALOG_ANIMS: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Animaciones", DIALOG_ANIMS_String, ">>", "X");
		case DIALOG_TRICKS_FOOD:
		{	
			new dialog[150];
			format(dialog, sizeof dialog, "%s te quiere vender algo.\n\nTipo: Alimento\nNombre: %s\nPrecio: %s$\n\n¿Quieres comprárselo?",
									PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_RP_NAME],
									PLAYER_POCKET[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA] ][player_pocket_object_NAME],
									number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE])
								);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ventas", dialog, "Aceptar", "Cancelar");	
			return 1;
		}
		case DIALOG_TRICKS_MEDICINE:
		{	
			new dialog[150];
			format(dialog, sizeof dialog, "%s te quiere vender algo.\n\nTipo: Medicamento\nCantidad: %dg\nPrecio: %s$\n\n¿Quieres comprárselo?",
									PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_RP_NAME],
									PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA],
									number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE])
								);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ventas", dialog, "Aceptar", "Cancelar");	
			return 1;
		}
		case DIALOG_TRICKS_CANNABIS:
		{	
			new dialog[150];
			format(dialog, sizeof dialog, "%s te quiere vender algo.\n\nTipo: Marihuana\nCantidad: %dg\nPrecio: %s$\n\n¿Quieres comprárselo?",
									PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_RP_NAME],
									PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA],
									number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE])
								);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ventas", dialog, "Aceptar", "Cancelar");	
			return 1;
		}
		case DIALOG_TRICKS_CRACK:
		{	
			new dialog[150];
			format(dialog, sizeof dialog, "%s te quiere vender algo.\n\nTipo: Crack\nCantidad: %dg\nPrecio: %s$\n\n¿Quieres comprárselo?",
									PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_RP_NAME],
									PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA],
									number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE])
								);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ventas", dialog, "Aceptar", "Cancelar");	
			return 1;
		}
		case DIALOG_TRICKS_WEAPON:
		{	
			new dialog[180];
			format(dialog, sizeof dialog, "%s te quiere vender algo.\n\nTipo: Arma\nNombre: %s\nMunición: %s\nPrecio: %s$\n\n¿Quieres comprárselo?",
									PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_RP_NAME],
									WEAPON_INFO[ PLAYER_WEAPONS[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA] ][player_weapon_ID] ][weapon_info_NAME],
									number_format_thousand(PLAYER_WEAPONS[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA] ][player_weapon_AMMO]),
									number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE])
								);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ventas", dialog, "Aceptar", "Cancelar");	
			return 1;
		}
		case DIALOG_VEHICLE_BOOT:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
	
			new max_slots = VEHICLE_INFO[GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][gb_vehicle_MODELID] - 400][vehicle_info_BOOT_SLOTS];
			if(max_slots > MAX_BOOT_SLOTS) max_slots = MAX_BOOT_SLOTS;
			
			new dialog[128 * (MAX_BOOT_SLOTS + 2)], line_str[128], listitem;
			format(dialog, sizeof dialog, "Arma\tMunición\tSlot\n");
			
			for(new i = 0; i != max_slots; i ++)
			{
				if(VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][i][vehicle_boot_VALID])
				{
					switch(VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][i][vehicle_boot_TYPE])
					{
						case BOOT_TYPE_WEAPON:
						{
							format(line_str, sizeof line_str, "{CCCCCC}%s\t{CCCCCC}%s\t{CCCCCC}%d\n", WEAPON_INFO[ VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][i][vehicle_boot_INT] ][weapon_info_NAME], number_format_thousand(VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][i][vehicle_boot_INT_EXTRA]), i);
							strcat(dialog, line_str);
							PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
						}
					}
					
					listitem ++;
				}
			}
			
			new caption[64];
			format(caption, sizeof caption, "Maletero de %s (%d espacios disponibles)", VEHICLE_INFO[GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][gb_vehicle_MODELID] - 400][vehicle_info_NAME], max_slots - listitem);
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = MAX_BOOT_SLOTS + 20;
			strcat(dialog, "{c4290d}- Eliminar todo\n"); listitem ++;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, ">>", "Salir");	
		}
		case DIALOG_VEHICLE_BOOT_DELETE_ALL: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Maletero - Eliminar todo", "¿Está seguro de que quiere eliminar todo de su maletero?\nEsta opción no se puede deshacer.", "Eliminar", "Cancelar");	
		case DIALOG_VEHICLE_BOOT_OPTIONS:
		{
			new caption[45];
			format(caption, sizeof caption, "Maletero - %s", WEAPON_INFO[ VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_INT] ][weapon_info_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "{CCCCCC}1. Sacar\n{CCCCCC}2. Eliminar", ">>", "Atrás");	
			return 1;
		}
		case DIALOG_VEHICLE_BOOT_DELETE:
		{
			new dialog[190];
			format(dialog, sizeof dialog, "Arma: %s\nMunición: %s\n\n¿Está seguro de que quiere eliminar esta arma de este maletero?\nEsta opción no se puede deshacer.", WEAPON_INFO[ VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_INT] ][weapon_info_NAME], number_format_thousand( VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_INT_EXTRA] ));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Maletero - Eliminar", dialog, "Eliminar", "Atrás");
			return 1;
		}
		case DIALOG_SELECT_POLICE_SKIN:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[60 * sizeof(POLICE_SKINS)], line_str[60], listitem;
			format(dialog, sizeof dialog, "{CCCCCC}Ropa\t{CCCCCC}Rango necesario\n");
			for(new i = 0; i != sizeof POLICE_SKINS; i ++)
			{
				if(POLICE_SKINS[i][police_skin_TYPE] != CHARACTER_INFO[playerid][ch_SEX]) continue;
				
				if(POLICE_SKINS[i][police_skin_RANK] > PLAYER_SKILLS[playerid][WORK_POLICE]) format(line_str, sizeof line_str, "{666666}%d\t{666666}%s\n", POLICE_SKINS[i][police_skin_SKIN], POLICE_RANKS[ POLICE_SKINS[i][police_skin_RANK] ]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d\t{CCCCCC}%s\n", POLICE_SKINS[i][police_skin_SKIN], POLICE_RANKS[ POLICE_SKINS[i][police_skin_RANK] ]);
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
				listitem ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona la ropa", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_POLICE_RADIOS:
		{
			new dialog[45 * 6], line_str[45];
			for(new i = 0; i != 6; i ++)
			{
				new players = CountPoliceRadioPlayers(i);
				
				if(PLAYER_TEMP[playerid][pt_POLICE_RADIO] == i) format(line_str, sizeof line_str, "{CCCCCC}Frecuencia %d: %d personas\n", i + 1, players);
				else format(line_str, sizeof line_str, "{666666}Frecuencia %d: %d personas\n", i, players);
				
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona la frecuencia", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_POLICE_LIST:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[128 * 15], listitem, start_pos = PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] + 1;
			format(dialog, sizeof dialog, "{CCCCCC}Nombre\t{CCCCCC}Rango\t{CCCCCC}Últ. conexión\n");
			
			new DBResult:Result, DB_Query[600];
			format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`ID`, `CUENTA`.`NAME`, `CUENTA`.`LAST_CONNECTION`, `CUENTA`.`CONNECTED`, `PLAYER_SKILLS`.`TOTAL` FROM `CUENTA`, `PLAYER_SKILLS`, `PLAYER_WORKS` WHERE `PLAYER_SKILLS`.`ID_USER` = `CUENTA`.`ID` AND `PLAYER_SKILLS`.`ID_WORK` = '%d' AND `PLAYER_WORKS`.`ID_USER` = `CUENTA`.`ID` AND `PLAYER_WORKS`.`ID_WORK` = '%d' AND `PLAYER_WORKS`.`SET` = '1' ORDER BY `CUENTA`.`CONNECTED` DESC, `PLAYER_SKILLS`.`TOTAL` DESC LIMIT %d, %d;", WORK_POLICE, WORK_POLICE, PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT], PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			Result = db_query(Database, DB_Query);
			
			for(new i; i < db_num_rows(Result); i++ )
			{
				new name[24], last_connection[24], connected, rank;
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = db_get_field_assoc_int(Result, "ID");
				db_get_field_assoc(Result, "NAME", name, 24);
				db_get_field_assoc(Result, "LAST_CONNECTION", last_connection, 24);
				connected = db_get_field_assoc_int(Result, "CONNECTED");
				rank = db_get_field_assoc_int(Result, "TOTAL");

				new line_str[128];
				if(connected) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{98f442}Conectado\n", start_pos + listitem, name, POLICE_RANKS[rank]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{CCCCCC}%s\n", start_pos + listitem, name, POLICE_RANKS[rank], last_connection);
				
				strcat(dialog, line_str);
				listitem ++;
				
				db_next_row(Result);
			}
			db_free_result(Result);
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -2;
			strcat(dialog, "{c9c9c9}- Siguiente\n"); listitem ++;
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -3;
			strcat(dialog, "{c9c9c9}- Anterior\n"); listitem ++;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Policías", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_POLICE_MODIFY:
		{
			new DBResult:Result, DB_Query[256], name[24], current_rank, bool:found;
			format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `PLAYER_SKILLS`.`TOTAL` FROM `CUENTA`, `PLAYER_SKILLS` WHERE `CUENTA`.`ID` = '%d' AND `PLAYER_SKILLS`.`ID_USER` = `CUENTA`.`ID` AND `PLAYER_SKILLS`.`ID_WORK` = '%d';", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID], WORK_POLICE);
			Result = db_query(Database, DB_Query);
			
			if(db_num_rows(Result))
			{
				db_get_field_assoc(Result, "NAME", name, 24);
				current_rank = db_get_field_assoc_int(Result, "TOTAL");
				found = true;
			}
			else found = false;
			db_free_result(Result);
			
			if(!found) return 1;
			if(current_rank > PLAYER_SKILLS[playerid][WORK_POLICE])
			{
				SendClientMessage(playerid, -1, "{999999}No puedes modificar el rango de este policía porque es un rango superior al tuyo.");
				return 1;
			}
			
			new caption[45];
			format(caption, sizeof caption, "Policía - %s", name);
			
			new dialog[45 * sizeof(POLICE_RANKS)], line_str[45];
			format(dialog, sizeof dialog, "{CCCCCC}Civil (eliminar)\n");

			for(new i = 1; i != sizeof POLICE_RANKS; i ++)
			{
				if(i > PLAYER_SKILLS[playerid][WORK_POLICE])
				{
					if(current_rank == i) format(line_str, sizeof line_str, "{666666}%s (actual)\n", POLICE_RANKS[i]);
					else format(line_str, sizeof line_str, "{666666}%s\n", POLICE_RANKS[i]);
				}
				else
				{
					if(current_rank == i) format(line_str, sizeof line_str, "{CCCCCC}%s (actual)\n", POLICE_RANKS[i]);
					else format(line_str, sizeof line_str, "{CCCCCC}%s\n", POLICE_RANKS[i]);
				}
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_POLICE_SHOP:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Equiparse", "{CCCCCC}Comprar armas\n{CCCCCC}Comprar munición para mis armas\n{CCCCCC}Comprar chaleco antibalas", "Comprar", "Salir");
			return 1;
		}
		case DIALOG_POLICE_SELECT_WEAPON:
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[95 * 15], line_str[95], listitem;
			format(dialog, sizeof dialog, "{CCCCCC}Arma\t{90C3D4}Munición\t{CCCCCC}Slot\n");
			
			for(new i; i != 13; i ++)
			{
				if(!PLAYER_WEAPONS[playerid][i][player_weapon_VALID]) continue;
				
				format(line_str, sizeof line_str, "{CCCCCC}%s\t{90C3D4}%s\t{CCCCCC}%d\n", WEAPON_INFO[ PLAYER_WEAPONS[playerid][i][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(PLAYER_WEAPONS[playerid][i][player_weapon_AMMO]), i);
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i; 
				listitem ++;
			}
			if(listitem == 0) strcat(dialog, "{666666}No tienes armas");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona la arma a la que quieres comprarle munición", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_POLICE_AMMO:
		{
			new dialog[145];
			format(dialog, sizeof dialog, "Arma: %s\nMunición: %s\n\nEl precio por bala es de 2$\n¿Cuánto munición quiere comprar?", WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_AMMO]));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Comprar munición", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_POLICE_ARMOUR:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Comprar chaleco", "El precio del chaleco antibalas es de 300$.\n¿Lo quieres comprar?", ">>", "Salir");
			return 1;
		}
		case DIALOG_POLICE_WEAPONS:
		{
			new dialog[64 * (sizeof(POLICE_SHOP_WEAPONS) + 2)];
			format(dialog, sizeof dialog, "{CCCCCC}Producto\t{CCCCCC}Precio\n");
			
			for(new i = 0; i != sizeof POLICE_SHOP_WEAPONS; i ++)
			{
				new line_str[64];
				if(POLICE_SHOP_WEAPONS[i][police_shop_RANK] > PLAYER_SKILLS[playerid][WORK_POLICE])
				{
					format(line_str, sizeof line_str, "{666666}%s\t{666666}%s$\n", WEAPON_INFO[ POLICE_SHOP_WEAPONS[i][police_shop_WEAPON_ID] ][weapon_info_NAME], number_format_thousand(POLICE_SHOP_WEAPONS[i][police_shop_WEAPON_PRICE]));
					strcat(dialog, line_str);
				}
				else
				{
					format(line_str, sizeof line_str, "{CCCCCC}%s\t{CCCCCC}%s$\n", WEAPON_INFO[ POLICE_SHOP_WEAPONS[i][police_shop_WEAPON_ID] ][weapon_info_NAME], number_format_thousand(POLICE_SHOP_WEAPONS[i][police_shop_WEAPON_PRICE]));
					strcat(dialog, line_str);
				}
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Armas", dialog, "Comprar", "Salir");
			return 1;
		}
		case DIALOG_HELP:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, ""DEFAULT_DIALOG_CAPTION" - Ayuda",
			
				"\
					{cccccc}General\n\
					{cccccc}Información\n\
					{cccccc}Personaje\n\
					{cccccc}Propiedades\n\
					{cccccc}Reportar\n\
					{cccccc}Trabajos\n\
					{cccccc}Vehículos\n\
					{cccccc}Bandas\n\
					{f4dc42}Super Usuario (SU)\n\
				"
			
			, ">>", "Salir");
			return 1;
		}
		case DIALOG_HELP_GENERAL:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - General",
			
				"\
					En "SERVER_NAME" un día completo dura tres horas reales.\n\
					\n\
					Para subir de nivel necesitas rellenar la reputación, puedes verlo gráficamente\n\
					en la barra que aparece abajo que representa tu reputación.\n\
					La reputación se aumenta cada veinticinco minutos, cuando la reputación llegue\n\
					al límite podrás subir al siguiente nivel con el comando /comprarnivel.\n\
					El pago de juego (payday) se recibe cada tres reputaciones (75 minutos).\n\
					Puedes utilizar /csave para guardar los datos de tu cuenta.\n\
					\n\
					Utiliza /estadisticas para ver tus estadísticas, utiliza /exp para ver tus habilidades.\n\
					En el nivel uno no podrás agredir a otros jugadores, tampoco podrás tener armas\n\
					hasta el nivel tres.\n\
					Utiliza /pass para cambiar la contraseña de tu cuenta.\n\
					Para ver el tiempo que te queda en la cárcel utiliza /tiempo.\n\
					\n\
					Para utilizar el canal de dudas utiliza el comando /d seguido de tu duda.\n\
					Para deshabilitar o volver a habilitar el canal de dudas usa /dudas.\n\
					\n\
				"
			
			, "Salir", "");
			return 1;
		}
		case DIALOG_HELP_INFO:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - Información",
			
				"\
					Servidor: "SERVER_NAME"\n\
					Web/foro: "SERVER_WEBSITE"\n\
					Versión: "SERVER_VERSION"\n\
					Fecha versión: "VERSION_DATE"\n\
					Revisión: "VERSION_BUILD"\n\
					Fecha revisión: "BUILD_DATE"\n\
					\n\
					"SERVER_NAME" es un servidor Roleplay nuevo por lo que actualmente\n\
					se encuentra desarrollo, puedes dejar tus sugerencias en el foro.\n\
					Actualmente al ser una versión inicial puede contener fallos.\n\
					\n\
					\n\
					Programación:\n\
					adri1\n\
					\n\
					Librerías y plugins:\n\
					0x5A656578 por crashdetect\n\
					Incognito por streamer\n\
					Y_Less por sscanf2\n\
					Zeex por zcmd\n\
					\n\
					Mapas:\n\
					mapas descargados de internet\n\
					\n\
					Agradecimientos:\n\
					administración Super FreeRoam, gta.wikia.com, wiki.sa-mp.com\n\
					TDEditor, foro SA-MP, Luis_Garcia por crear propiedades\n\
					\n\
				"
			, "Salir", "");
			return 1;
		}
		case DIALOG_HELP_CHARACTER:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - Personaje",
			
				"\
					Para poder localizar cualquier punto en San Andreas te recomandamos que compres\n\
					un GPS en cualquier tienda 24/7. Desde el GPS podrás localizarlo todo, tus vehículos,\n\
					tus propiedades, trabajos, lugares de interés, etc.\n\
					\n\
					Utiliza tu teléfono para llamar a la policía, mecánico, taxi... o para hablar con\n\
					alguien, por defecto tendrás varios contactos en la agenda pero puedes eliminarlos\n\
					o añadir más, puedes tener hasta 20 contactos, todo esto se hace desde /movil o /celular.\n\
					\n\
					En las tiendas 24/7 puedes comprar guías para saber el número de cualquier jugador.\n\
					Para evitar aparecer en la guía utiliza /sguia.\n\
					\n\
					Las barras en la esquina superior derecha representan tu nivel de hidratación y de alimentación,\n\
					si los niveles llegan muy abajo tu personaje se empezará a sentir mal y empezarás a perder vida.\n\
					Los niveles bajarán según tu actividad física, corriendo te dará sed más pronto que caminando.\n\
					Para alimentarte ve a un restaurante de cómida rápida o a un 24/7 donde podrás comprar alimentos,\n\
					que podrás consumir el cualquier momento con /alimentos o /consumir.\n\
					\n\
					Puedes dar objetos con el comando /dar, para más información utiliza /man dar.\n\
					Puedes deshacerte de tus objetos con el comando /tirar, para más información utiliza /man tirar.\n\
					Puedes vender objetos con el comando /vender, para más información utiliza /man vender.\n\
					Para consumir consumibles que lleves contigo utiliza /consumir.\n\
					\n\
					Puedes cambiar la ropa de tu personaje en cualquier tienda de ropa, también\n\
					podrás comprarte accesorios y ponertelos o quitartelos (/accesorios).\n\
					\n\
					Si tienes nivel de búsqueda o estás arrestado y mueres irás a la cárcel después de recuperarte.\n\
					Cuando te arresten los policías te pueden requisar tus pertenencias ilegales (armas y drogas).\n\
					\n\
					Utiliza /inv para ver todo lo que llevas encima.\n\
					\n\
				"
			, "Salir", "");
			return 1;
		}
		case DIALOG_HELP_PROPERTIES:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - Propiedades",
			
				"\
					Puedes encontrar diferentes propiedades en todo San Andreas, para comprarla tendrás que saber la\n\
					ID de la propiedad e ir a cualquier banco para comprarla, el dinero se descuenta de la cuenta bancaria.\n\
					\n\
					Puedes localizar tus propiedades con el GPS.\n\
					Puedes dejar pasar a cualquiera a tu propiedad, solo tiene que tocar el timbre\n\
					y tu elijes si quieres dejarlo pasar o no.\n\
					\n\
					Si quieres echar a alguien que esté dentro de tu propiedad utiliza el comando /echar.\n\
					Dentro de la propiedade sitúate en la puerta interior y pon /casa, desde ahí podras\n\
					cambiar el nombre de la propiedad para así localizarla más fácilmente en el GPS.\n\
					También podrás echar a todos los huéspedes de tu propiedad.\n\
					Si tienes un MP3 podrás poner música en él y hacer que se reproduzca para toda la gente\n\
					que haya dentro de la propiedad.\n\
					\n\
					Si quieres vender tu propiedad puedes hacerlo en \"Gobierno San Andreas\", localizaló en el GPS.\n\
					Puedes vendersela al banco al instante, pero te darán solo el 25% de lo que te costó (50% SU).\n\
					También se la puedes vender a otro jugador, dentro de un rango de precio pre-establecido.\n\
					Para vender tu propiedad a un jugador puedes ponerla en /tienda.\n\
					\n\
				"
			, "Salir", "");
			return 1;
		}
		case DIALOG_HELP_REPORT:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - Reportar",
			
				"\
					Para un reporte simple utiliza /reportar ID para reportar a un jugador.\n\
					\n\
					Para reportes más detallado debes publicarlos en el foro aportando imágenes.\n\
					Los reportes de fallos o bugs también deberás hacerlo en el foro junto con imágenes.\n\
					\n\
				"
			, "Salir", "");
			return 1;
		}
		case DIALOG_HELP_VEHICLES:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - Vehículos",
			
				"\
					GENERAL\n\
					Para arrancar o detener un vehículo utiliza /motor.\n\
					Utiliza /luces para encender o apagar las luces del vehículos.\n\
					Si tu vehículo se daña tendrás que llamar a un mecánico desde tu móvil para que lo repare.\n\
					\n\
					Cada vehículo tiene su cantidad máxima del depósito de gasolina.\n\
					Para repostar el vehículo debes ir a cualquier gasolinera, puedes localizarlas con el GPS.\n\
					También puedes comprar un bidón de gasolina para /vertir gasolina en cualquier momento.\n\
					Si tienes un MP3 puedes poner una canción en el vehículo con el comando /vmp3.\n\
					\n\
					\n\
					VEHICULOS PERSONALES\n\
					Para comprarlos ve a cualquier concesionario.\n\
					El dinero para comprarlo es el de la cuenta bancaria.\n\
					Para localizar tus vehículos utiliza el GPS.\n\
					\n\
					Utiliza /abrir para abrir las puertes de tu vehículo, utiliza /cerrar para cerrarlas.\n\
					Puedes estacionar tu vehículo con el comando /estacionar.\n\
					Cuando tu vehículo sea destruido recibirás uno nuevo en tu último estacionamiento.\n\
					Para pintar, tunear o modificar tu vehículo tendrás que hacerlo en el mecánico.\n\
					\n\
					Puedes guardar armas en el maletero del vehículo con el comando /guardar.\n\
					Para extraer armas del maletero puedes utilizar /maletero o /sacar.\n\
					\n\
					Si quieres vender tu vehículo puedes hacerlo en \"Gobierno San Andreas\", localizaló en el GPS.\n\
					Puedes venderselo al banco, pero te darán solo el 25% de lo que te costó (50% SU).\n\
					También se la puedes vender a otro jugador, dentro de un rango de precio pre-establecido.\n\
					Para vender tu vehículo a un jugador puedes ponerlo en /tienda.\n\
					Al vender tu vehículo se venderá con todo lo que haya en el maletero.\n\
					\n\
				"
			, "Salir", "");
			return 1;
		}
		case DIALOG_HELP_WORKS:
		{
			new dialog[45 * sizeof work_info], line_str[45];
			for(new i = 1; i != sizeof work_info; i ++)
			{
				format(line_str, sizeof line_str, "{CCCCCC}%c%s\n", toupper(work_info[i][work_info_NAME][0]), work_info[i][work_info_NAME][1]);
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Ayuda - Trabajos", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_HELP_CREWS:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - Bandas",
			
				"\
					{cccccc}Utiliza /banda para crear una banda o administrar la tuya.\n\
					{cccccc}Al entrar a una banda puedes conquistar territorios por todo San Andreas.\n\
					\n\
					{cccccc}Visita {f4dc42}"SERVER_WEBSITE" {CCCCCC}para más información.\n\
					\n\
				"
			
			, "Salir", "");
			return 1;
		}
		case DIALOG_HELP_SU:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ayuda - Super Usuario",
			
				"\
					{CCCCCC}Puedes comprar SU por 30 días con el comando /su.\n\
					{CCCCCC}Se compra con moneda Sd, para ver como comprar esta moneda visita nuestra web.\n\
					\n\
					{f4dc42}Ventajas\n\
					{cccccc}- Tener 3 trabajos.\n\
					{cccccc}- Tener 6 vehículos.\n\
					{cccccc}- Tener 10 accesorios.\n\
					{cccccc}- Tener 6 propiedades.\n\
					{cccccc}- No pagas seguro de propiedades ni vehículos en el Payday.\n\
					{cccccc}- No pierdes chaleco al morir.\n\
					{cccccc}- Al vender un vehículo o propiedad al banco recibes un 50%.\n\
					{cccccc}- Te recuperas el doble de rápido en el hospital.\n\
					{cccccc}- Al recuperarte tu vida es del 100%.\n\
					{cccccc}- Reducción de la condena a la mitad.\n\
					{cccccc}- Cuando un médico te cura vida al 50%.\n\
					{cccccc}- Comprar armas en mercado negro sin pertenecer a banda.\n\
					{cccccc}- Comprar armas sin esperar 5 minutos por cada compra.\n\
					{cccccc}- Pagas extras de 300$ en algunos trabajos.\n\
					\n\
					{cccccc}Visita {f4dc42}"SERVER_WEBSITE" {CCCCCC}para más información.\n\
					\n\
				"
			
			, "Salir", "");
			return 1;
		}
		case DIALOG_ADMIN_LIST:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[128 * 15], listitem, start_pos = PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] + 1;
			format(dialog, sizeof dialog, "{CCCCCC}Nombre\t{CCCCCC}Rango\t{CCCCCC}Últ. conexión\n");
			
			new DBResult:Result, DB_Query[400];
			format(DB_Query, sizeof DB_Query, "SELECT `ID`, `NAME`, `LAST_CONNECTION`, `CONNECTED`, `ADMIN_LEVEL` FROM `CUENTA` WHERE `ADMIN_LEVEL` > 0 ORDER BY `CONNECTED` DESC, `ADMIN_LEVEL` DESC LIMIT %d, %d;", PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT], PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			Result = db_query(Database, DB_Query);
			
			for(new i; i < db_num_rows(Result); i++ )
			{
				new name[24], last_connection[24], connected, rank;
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = db_get_field_assoc_int(Result, "ID");
				db_get_field_assoc(Result, "NAME", name, 24);
				db_get_field_assoc(Result, "LAST_CONNECTION", last_connection, 24);
				connected = db_get_field_assoc_int(Result, "CONNECTED");
				rank = db_get_field_assoc_int(Result, "ADMIN_LEVEL");

				new line_str[128];
				if(connected) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{98f442}Conectado\n", start_pos + listitem, name, ADMIN_LEVELS[rank]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{CCCCCC}%s\n", start_pos + listitem, name, ADMIN_LEVELS[rank], last_connection);
				
				strcat(dialog, line_str);
				listitem ++;
				
				db_next_row(Result);
			}
			db_free_result(Result);
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -2;
			strcat(dialog, "{c9c9c9}- Siguiente\n"); listitem ++;
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -3;
			strcat(dialog, "{c9c9c9}- Anterior\n"); listitem ++;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Administradores", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_ADMIN_MODIFY:
		{
			new DBResult:Result, DB_Query[256], name[24], current_rank, bool:found;
			format(DB_Query, sizeof DB_Query, "SELECT `NAME`, `ADMIN_LEVEL` FROM `CUENTA` WHERE `ID` = '%d';", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
			Result = db_query(Database, DB_Query);
			
			if(db_num_rows(Result))
			{
				db_get_field_assoc(Result, "NAME", name, 24);
				current_rank = db_get_field_assoc_int(Result, "ADMIN_LEVEL");
				found = true;
			}
			else found = false;
			db_free_result(Result);
			
			if(!found) return 1;
			if(current_rank > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL])
			{
				SendClientMessage(playerid, -1, "No puedes modificar el rango de este admin porque es un rango superior al tuyo.");
				return 1;
			}
			
			new caption[45];
			format(caption, sizeof caption, "Admin - %s", name);
			
			new dialog[45 * sizeof(ADMIN_LEVELS)], line_str[45];
			format(dialog, sizeof dialog, "{CCCCCC}Normal (eliminar)\n");

			for(new i = 1; i != sizeof ADMIN_LEVELS; i ++)
			{
				if(i > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL])
				{
					if(current_rank == i) format(line_str, sizeof line_str, "{666666}%s (actual)\n", ADMIN_LEVELS[i]);
					else format(line_str, sizeof line_str, "{666666}%s\n", ADMIN_LEVELS[i]);
				}
				else
				{
					if(current_rank == i) format(line_str, sizeof line_str, "{CCCCCC}%s (actual)\n", ADMIN_LEVELS[i]);
					else format(line_str, sizeof line_str, "{CCCCCC}%s\n", ADMIN_LEVELS[i]);
				}
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CHANGE_PASSWORD:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_PASSWORD, "Cambiar contraseña", "Introduce tu contraseña actual.", ">>", "Salir");
			return 1;
		}
		case DIALOG_CHANGE_PASSWORD_PASS:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Introduce tu nueva contraseña.\nLa contraseña debe contener entre %d-%d caracteres.", MIN_PASS_LENGTH, MAX_PASS_LENGTH);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_PASSWORD, "Cambiar contraseña", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_ANTI_CHEAT:
		{
			if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 4) return 0;
			
			new dialog[115 * sizeof(ac_Info) + 1], line_str[115];
			dialog = "Tipo\tEstado\tAccionar\tAcción\n";
			
			for(new i = 0; i != sizeof(ac_Info); i ++)
			{
				format(line_str, sizeof line_str, "%02d %s\t%s\t%d:%d\t%s\n", i, ac_Info[i][ac_Name], ac_Info[i][ac_Enabled] ? "Activado" : "Desactivado", ac_Info[i][ac_Detections], ac_Info[i][ac_Interval], ac_Info[i][ac_Kick] ? "Kick" : "Aviso");
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Anticheat", dialog, ">>", "X");
			return 1;
		}
		case DIALOG_ANTI_CHEAT_MODIFY:
		{
			if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 4) return 0;
			
			new caption[45], dialog[90];
			
			format(caption, sizeof caption, "ac %02d %s", PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM], ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Name]);
			format(dialog, sizeof dialog, "Estado\t%s\nAccionar\t(%d:%d)\nAccion\t%s", ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Enabled] ? "Activado" : "Desactivado", ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Detections], ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Interval], ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Kick] ? "Kick" : "Aviso");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST, caption, dialog, ">>", "<<");
			return 1;
		}
		case DIALOG_ANTI_CHEAT_MODIFY_DETECT:
		{
			new caption[45], dialog[200];
			
			format(caption, sizeof caption, "ac %02d %s", PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM], ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Name]);
			format(dialog, sizeof dialog, "Estado actual de accioner en: (%d:%d)\n\nSintaxis: <detecciones>:<segundos>\nDeja segundos en 0 para que sea instantáneo.\n\nEjemplo de 2 detecciones en 10 segundos: 2:10", ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Detections], ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Interval]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, dialog, ">>", "<<");
			return 1;
		}
		case DIALOG_SHOP_ARTICLE_MODIFY: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Mi anuncio", "Inserta el nuevo precio de tu artículo:\n", ">>", "<<");
		case DIALOG_SHOP_ARTICLE_REMOVE: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Eliminar anuncio", "¿Está seguro de que quiere eliminar este anuncio?\nEsta opción no se puede deshacer.", "Eliminar", "Atrás");	
		case DIALOG_SHOP_ADD:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Añadir anuncio", "{CCCCCC}Propiedad\n{CCCCCC}Vehículo\n{CCCCCC}Otros", ">>", "Salir");	
			return 1;
		}
		case DIALOG_SHOP_ADD_TEXT:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Añadir anuncio", "Introduce una breve descripción para tu anuncio.\nCaracteres: 1-24 [A-Z a-z 0-9]", ">>", "Salir");	
			return 1;
		}
		case DIALOG_SHOP_ADD_PRICE:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Añadir anuncio", "Introduce el precio para tu anuncio.\nAl publicar tu anuncio se te cobrará 500$.", ">>", "Salir");	
			return 1;
		}
		case DIALOG_CRANE_SELECT_VEHICLE:
		{
			for(new i = 0; i != MAX_LISTITEMS; i ++) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[95 * (MAX_SU_VEHICLES + 2)], total_vehicles;
			format(dialog, sizeof dialog, "{CCCCCC}Vehículo\t{90C3D4}Matrícula\t{CCCCCC}Precio\n");
			for(new i = 0; i != MAX_VEHICLES; i ++)
			{
				if(!GLOBAL_VEHICLES[i][gb_vehicle_VALID]) continue;
				if(!PLAYER_VEHICLES[i][player_vehicle_VALID]) continue;
				if(total_vehicles > MAX_SU_VEHICLES) break;
				
				if(PLAYER_VEHICLES[i][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
				{
					PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][total_vehicles] = i;
					
					new line_str[95], veh_money = (VEHICLE_INFO[GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400][vehicle_info_PRICE] / 100) + 350;
					format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}%s\t{CCCCCC}%s$\n", total_vehicles + 1, VEHICLE_INFO[ GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME], GLOBAL_VEHICLES[i][gb_vehicle_NUMBER_PLATE], number_format_thousand(veh_money));
					strcat(dialog, line_str);
					total_vehicles ++;
				}
			}
			if(total_vehicles == 0) strcat(dialog, "{CCCCCC}No tienes vehículos");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Selecciona el vehículo que quieres remolcar", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_CREATE_CREW:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Banda", "No perteneces a ninguna banda.\n\n¿Quieres crear una?\nPara crear una banda necesitas ser nivel 10, además cuesta 1.000.000$.", "Sí", "No");
			return 1;
		}
		case DIALOG_CREATE_CREW_NAME:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Crear banda", "Introduce el nombre de tu banda.\nHasta 32 caracteres.", "Continuar", "Salir");
			return 1;
		}
		case DIALOG_CREATE_CREW_COLOR:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona un color para tu banda", DIALOG_CREATE_CREW_COLOR_String, "Continuar", "Atrás");
			return 1;
		}
		case DIALOG_CREATE_CREW_CONFIRM:
		{
			new dialog[360];
			format(dialog, sizeof dialog,
					
					"\
						{CCCCCC}Nombre de la banda: %s\n\
						{CCCCCC}Color de la banda: {%06x}color %d\n\
						{CCCCCC}Coste de creación: 1.000.000$\n\
						\n\
						{CCCCCC}¿Quieres crear esta banda?\n\
						{CCCCCC}Una vez creada podrás crear rangos, modificarlos y mucho más.\n\
						\n\
					", 
						PLAYER_TEMP[playerid][pt_CREATE_CREW_NAME],
						RandomColors[ PLAYER_TEMP[playerid][pt_CREATE_CREW_COLOR] ] >>> 8, PLAYER_TEMP[playerid][pt_CREATE_CREW_COLOR] + 1
			);
					
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Crear banda", dialog, "Crear", "Salir");
			return 1;
		}
		case DIALOG_CREW_MENU:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new caption[64], dialog[360], listitem;
			format(caption, sizeof caption, "Mi banda -  {%06x}'%s'", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME]);
			
			format(dialog, sizeof dialog, "Ver miembros\n");
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_SIZE;
			listitem ++;

			if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_NAME])
			{
				strcat(dialog, "Cambiar nombre de la banda\n");
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_CHANGE_NAME;
				listitem ++;
			}
			if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CAST_MEMBERS])
			{
				strcat(dialog, "Echar a un miembro\n");
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_CAST_MEMBERS;
				listitem ++;
			}
			if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_MEMBERS])
			{
				strcat(dialog, "Cambiar rango de un miembro\n");
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_MODIFY_MEMBERS;
				listitem ++;
			}
			if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS])
			{
				strcat(dialog, "Crear rangos o modificarlos\n");
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_MODIFY_RANKS;
				listitem ++;
			}
			if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_COLOR])
			{
				strcat(dialog, "Cambiar color de la banda\n");
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_CHANGE_COLOR;
				listitem ++;
			}
			if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_DELETE])
			{
				strcat(dialog, "Eliminar la banda\n");
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_DELETE;
				listitem ++;
			}
			
			strcat(dialog, "Abandonar banda\n");
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = CREW_RANK_SIZE + 1;
			listitem ++;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_CREW_MEMBER_LIST:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new caption[64];
			format(caption, sizeof caption, "Miembros de la banda '%s'", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME]);
			
			new dialog[128 * 15], listitem, start_pos = PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] + 1;
			format(dialog, sizeof dialog, "{CCCCCC}Nombre\t{CCCCCC}Rango\t{CCCCCC}Últ. conexión\n");
			
			new DBResult:Result, DB_Query[320];
			format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `CUENTA`.`LAST_CONNECTION`, `CUENTA`.`CONNECTED`, `PLAYER_CREW`.`RANK` FROM `CUENTA`, `PLAYER_CREW` WHERE `PLAYER_CREW`.`ID_USER` = `CUENTA`.`ID` AND `PLAYER_CREW`.`ID_CREW` = '%d' ORDER BY `CUENTA`.`CONNECTED` DESC, `PLAYER_CREW`.`RANK` ASC LIMIT %d, %d;", PLAYER_CREW[playerid][player_crew_ID], PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT], PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			Result = db_query(Database, DB_Query);
			
			for(new i; i < db_num_rows(Result); i++ )
			{
				new name[24], last_connection[24], connected, rank;
				
				db_get_field_assoc(Result, "NAME", name, 24);
				db_get_field_assoc(Result, "LAST_CONNECTION", last_connection, 24);
				connected = db_get_field_assoc_int(Result, "CONNECTED");
				rank = db_get_field_assoc_int(Result, "RANK");

				new line_str[128];
				if(connected) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{98f442}Conectado\n", start_pos + listitem, name, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ rank ][crew_rank_NAME]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{CCCCCC}%s\n", start_pos + listitem, name, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ rank ][crew_rank_NAME], last_connection);
				
				strcat(dialog, line_str);
				listitem ++;
				
				db_next_row(Result);
			}
			db_free_result(Result);
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -2;
			strcat(dialog, "{c9c9c9}- Siguiente\n"); listitem ++;
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -3;
			strcat(dialog, "{c9c9c9}- Anterior\n"); listitem ++;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_CHANGE_NAME:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Nombre actual de la banda:\n\t\"%s\"\n\nIndica el nuevo nombre.\nMáximo 32 caracteres.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Cambiar nombre de la banda", dialog, "Cambiar", "Atrás");
			return 1;
		}
		case DIALOG_CREW_MEMBER_LIST_DELETE:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[128 * 15], listitem, start_pos = PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] + 1;
			format(dialog, sizeof dialog, "{CCCCCC}Nombre\t{CCCCCC}Rango\t{CCCCCC}Últ. conexión\n");
			
			new DBResult:Result, DB_Query[350];
			format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`ID`, `CUENTA`.`NAME`, `CUENTA`.`LAST_CONNECTION`, `CUENTA`.`CONNECTED`, `PLAYER_CREW`.`RANK` FROM `CUENTA`, `PLAYER_CREW` WHERE `PLAYER_CREW`.`ID_USER` = `CUENTA`.`ID` AND `PLAYER_CREW`.`ID_CREW` = '%d' ORDER BY `CUENTA`.`CONNECTED` DESC, `PLAYER_CREW`.`RANK` ASC LIMIT %d, %d;", PLAYER_CREW[playerid][player_crew_ID], PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT], PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			Result = db_query(Database, DB_Query);
			
			for(new i; i < db_num_rows(Result); i++ )
			{
				new name[24], last_connection[24], connected, rank;
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = db_get_field_assoc_int(Result, "ID");
				db_get_field_assoc(Result, "NAME", name, 24);
				db_get_field_assoc(Result, "LAST_CONNECTION", last_connection, 24);
				connected = db_get_field_assoc_int(Result, "CONNECTED");
				rank = db_get_field_assoc_int(Result, "RANK");

				new line_str[128];
				if(connected) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{98f442}Conectado\n", start_pos + listitem, name, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ rank ][crew_rank_NAME]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{CCCCCC}%s\n", start_pos + listitem, name, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ rank ][crew_rank_NAME], last_connection);
				
				strcat(dialog, line_str);
				listitem ++;
				
				db_next_row(Result);
			}
			db_free_result(Result);
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -2;
			strcat(dialog, "{c9c9c9}- Siguiente\n"); listitem ++;
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -3;
			strcat(dialog, "{c9c9c9}- Anterior\n"); listitem ++;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Echar a un miembro", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_CAST_MEMBER_CONFIRM:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Echar a un miembro", "¿Estás seguro de que quieres echar a este miembro de la banda?", "Echar", "Cancelar");
			return 1;
		}
		case DIALOG_CREW_INVITE_RANK:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[64 * MAX_CREW_RANKS], line_str[64], listitem;
			for(new i = 0; i != MAX_CREW_RANKS; i ++)
			{
				if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_VALID]) continue;
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
				if(i < PLAYER_CREW[playerid][player_crew_RANK]) format(line_str, sizeof line_str, "{666666}%d. %s\n", listitem + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\n", listitem + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				strcat(dialog, line_str);
				
				listitem ++;
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Invitar", dialog, "Invitar", "Salir");
			return 1;
		}
		case DIALOG_CREW_INVITE_ACCEPT:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Te han ofrecio unirte a una banda.\n\nBanda: %s\nRango: %s\n", CREW_INFO[ PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][1] ][crew_NAME], CREW_RANK_INFO[ PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][1] ][ PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][2] ][crew_rank_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Invitación", dialog, "Unirme", "Salir");
			return 1;
		}
		case DIALOG_CREW_RANKS:
		{
			new dialog[64 * MAX_CREW_RANKS], line_str[64];
			for(new i = 0; i != MAX_CREW_RANKS; i ++)
			{
				if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_VALID])
				{
					if(i < PLAYER_CREW[playerid][player_crew_RANK]) format(line_str, sizeof line_str, "{666666}%d. %s\n", i + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
					else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\n", i + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				}
				else
				{
					if(i < PLAYER_CREW[playerid][player_crew_RANK]) format(line_str, sizeof line_str, "{666666}%d. Slot vacío\n", i + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
					else format(line_str, sizeof line_str, "{FFFFFF}%d. Slot vacío\n", i + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				}
				strcat(dialog, line_str);
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Rangos", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_RANK_MODIFY:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Modificar rango", "Cambiar nombre del rango\nModificar permisos\nEliminar rango", ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_RANK_MODIFY_NAME:
		{
			new dialog[145];
			format(dialog, sizeof dialog, "Nombre actual del rango:\n\t\"%s\"\n\nIndica el nuevo nombre del rango.\nMáximo 32 caracteres.", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Modificar rango", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_RANK_MODIFY_PERMISS:
		{
			new caption[70];
			format(caption, sizeof caption, "Modificar permisos del rango '%s'", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME]);
			
			new dialog[64 * (CREW_RANK_SIZE + 1)], line_str[64];
			format(dialog, sizeof dialog, "Permiso\tActivado\n");
			
			for(new i = 0; i != CREW_RANK_SIZE; i ++)
			{
				if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][i]) format(line_str, sizeof line_str, "%s\t%s\n", CREW_RANKS_PERMISSIONS[i], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][i] ? "Sí" : "No");
				else format(line_str, sizeof line_str, "{666666}%s\t{666666}%s\n", CREW_RANKS_PERMISSIONS[i], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][i] ? "Sí" : "No");
				
				strcat(dialog, line_str);
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, "Cambiar", "Atrás");
			return 1;
		}
		case DIALOG_CREW_RANK_CREATE:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Crear nuevo rango", "Indica el nombre del rango.\nMáximo 32 caracteres.", "Crear", "Atrás");
			return 1;
		}
		case DIALOG_CREW_RANK_DELETE:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[64 * MAX_CREW_RANKS], line_str[64], listitem;
			for(new i = 0; i != MAX_CREW_RANKS; i ++)
			{
				if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_VALID]) continue;
				if(i == PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK]) continue;
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
				if(i < PLAYER_CREW[playerid][player_crew_RANK]) format(line_str, sizeof line_str, "{666666}%d. %s\n", listitem + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\n", listitem + 1, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				strcat(dialog, line_str);
				
				listitem ++;
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Seleccionar nuevo rango", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_RANK_DELETE_CONFIRM:
		{
			new DBResult:Result, DB_Query[128], affected_members;
			format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d' AND `RANK` = '%d';", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ID], PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK]);
			Result = db_query(Database, DB_Query);

			if(db_num_rows(Result)) affected_members = db_get_field_int(Result, 0);
			db_free_result(Result);
			
			
			new dialog[400];
			format(dialog, sizeof dialog, 
					
				"\
					Rango que se eliminará:\n\
						\t'%s'\n\
					\n\
					Miembros afectados: %d\n\
					El nuevo rango de estos miembros será:\n\
						\t'%s'\n\
					\n\
					¿Seguro que quieres eliminar el rango? Esta opción no se puede deshacer.\n\
					\n\
				",
					CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME],
					affected_members,
					CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_NEW_RANK] ][crew_rank_NAME]
			);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Eliminar rango", dialog, "Eliminar", "Cancelar");
			return 1;
		}
		case DIALOG_CREW_MODIFY_COLOR:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona el nuevo color para tu banda", DIALOG_CREATE_CREW_COLOR_String, "Cambiar", "Atrás");
			return 1;
		}
		case DIALOG_CREW_DELETE:
		{
			new DB_Query[190], affected_members, crew_territories;
			
			new DBResult:Result_memberts;
			format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ID]);
			Result_memberts = db_query(Database, DB_Query);

			if(db_num_rows(Result_memberts)) affected_members = db_get_field_int(Result_memberts, 0);
			db_free_result(Result_memberts);
			
			
			new DBResult:Result_territories;
			format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `CREW_TERRITORIES` WHERE `ID_CREW` = '%d';", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ID]);
			Result_territories = db_query(Database, DB_Query);

			if(db_num_rows(Result_territories)) crew_territories = db_get_field_int(Result_territories, 0);
			db_free_result(Result_territories);
			
			new dialog[450];
			format(dialog, sizeof dialog, 
					
				"\
					Banda: %s\n\
					Miembros: %d\n\
					Territorios: %d\n\
					\n\
					¿De verdad quieres borrar la banda?\n\
					\n\
				",
					CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME],
					affected_members,
					crew_territories
			);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Eliminar banda", dialog, "Eliminar", "Cancelar");
			return 1;
		}
		case DIALOG_CREW_LEAVE:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Abandonar banda", "¿Quieres abandonar la banda?\nEsta opción no se puede deshacer.", "Abandonar", "Cancelar");
			return 1;
		}
		case DIALOG_CREW_MODIFY_MEMBERS:
		{
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new dialog[128 * 15], listitem, start_pos = PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] + 1;
			format(dialog, sizeof dialog, "{CCCCCC}Nombre\t{CCCCCC}Rango\t{CCCCCC}Últ. conexión\n");
			
			new DBResult:Result, DB_Query[350];
			format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`ID`, `CUENTA`.`NAME`, `CUENTA`.`LAST_CONNECTION`, `CUENTA`.`CONNECTED`, `PLAYER_CREW`.`RANK` FROM `CUENTA`, `PLAYER_CREW` WHERE `PLAYER_CREW`.`ID_USER` = `CUENTA`.`ID` AND `PLAYER_CREW`.`ID_CREW` = '%d' ORDER BY `CUENTA`.`CONNECTED` DESC, `PLAYER_CREW`.`RANK` ASC LIMIT %d, %d;", PLAYER_CREW[playerid][player_crew_ID], PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT], PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			Result = db_query(Database, DB_Query);
			
			for(new i; i < db_num_rows(Result); i++ )
			{
				new name[24], last_connection[24], connected, rank;
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = db_get_field_assoc_int(Result, "ID");
				db_get_field_assoc(Result, "NAME", name, 24);
				db_get_field_assoc(Result, "LAST_CONNECTION", last_connection, 24);
				connected = db_get_field_assoc_int(Result, "CONNECTED");
				rank = db_get_field_assoc_int(Result, "RANK");

				new line_str[128];
				if(connected) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{98f442}Conectado\n", start_pos + listitem, name, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ rank ][crew_rank_NAME]);
				else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{CCCCCC}%s\t{CCCCCC}%s\n", start_pos + listitem, name, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ rank ][crew_rank_NAME], last_connection);
				
				strcat(dialog, line_str);
				listitem ++;
				
				db_next_row(Result);
			}
			db_free_result(Result);
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -2;
			strcat(dialog, "{c9c9c9}- Siguiente\n"); listitem ++;
			
			PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = -3;
			strcat(dialog, "{c9c9c9}- Anterior\n"); listitem ++;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Modificar rango de un miembro", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_MODIFY_MEMBER:
		{
			new DBResult:Result, DB_Query[256], name[24], current_rank, bool:found;
			format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `PLAYER_CREW`.`RANK` FROM `CUENTA`, `PLAYER_CREW` WHERE `CUENTA`.`ID` = '%d' AND `PLAYER_CREW`.`ID_USER` = `CUENTA`.`ID`;", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
			Result = db_query(Database, DB_Query);
			
			if(db_num_rows(Result))
			{
				db_get_field_assoc(Result, "NAME", name, 24);
				current_rank = db_get_field_assoc_int(Result, "RANK");
				found = true;
			}
			else found = false;
			db_free_result(Result);
			
			if(!found) return 1;
			if(current_rank < PLAYER_CREW[playerid][player_crew_RANK]) return SendClientMessage(playerid, -1, "{999999}No puedes modificar el rango de este miembro porque es un rango superior al tuyo.");
			if(current_rank == 0)
			{
				new DBResult:Result_count, total;
				format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d' AND `RANK` = '0';", PLAYER_CREW[playerid][player_crew_ID]);
				Result_count = db_query(Database, DB_Query);
				
				if(db_num_rows(Result_count)) total = db_get_field_int(Result_count, 0);
				db_free_result(Result_count);
				
				if(total <= 1)
				{
					SendClientMessage(playerid, -1, "{999999}No se puede modificar el rango de este miembro ya que es el único miembro con el rango fundador.");
					return 1;
				}
			}
			
			for(new i = 0; i != MAX_LISTITEMS; i++ ) PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][i] = -1;
			
			new caption[45];
			format(caption, sizeof caption, "Miembro - %s", name);
			
			new dialog[45 * CREW_RANK_SIZE], line_str[45], listitem;
			for(new i = 0; i != CREW_RANK_SIZE; i ++)
			{
				if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_VALID]) continue;
				
				if(i < PLAYER_CREW[playerid][player_crew_RANK])
				{
					if(current_rank == i) format(line_str, sizeof line_str, "{666666}%s (actual)\n", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
					else format(line_str, sizeof line_str, "{666666}%s\n", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				}
				else
				{
					if(current_rank == i) format(line_str, sizeof line_str, "{CCCCCC}%s (actual)\n", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
					else format(line_str, sizeof line_str, "{CCCCCC}%s\n", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i][crew_rank_NAME]);
				}
				strcat(dialog, line_str);
				
				PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] = i;
				listitem ++;
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_CREW_PROPERTY_CONFIRM:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Propiedad de banda", "¿Estás seguro que quieres pasar esta propiedad a banda?\nEsta opción no se puede deshacer.", ">>", "Cancelar");
			return 1;
		}
		case DIALOG_CREW_LEAVE_TERRITORY:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Abandonar territorio", "¿Estás seguro que quieres abandonar este territorio?\nEsta opción no se puede deshacer.", ">>", "Cancelar");
			return 1;
		}
		case DIALOG_CREW_LEAVE_PROPERTY:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Propiedad de banda", "¿Estás seguro que quieres liberar esta propiedad?\nEsta opción no se puede deshacer.", ">>", "Cancelar");
			return 1;
		}
		case DIALOG_POLICE_PENALTY:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "El policía %s te ha puesto una multa.\nImporte: %s$\n", PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_POLICE_PEN_PID] ][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[playerid][pt_POLICE_PEN_IM]));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Multa", dialog, "Pagar", "Salir");
			return 1;
		}
		case DIALOG_SERVER_ECO:
		{
			new dialog[256];
			format(dialog, sizeof dialog,
				
				"\
					PROPIEDADES\t%.4f\n\
					VEHICULOS\t%.4f\n\
					TOYS\t%.4f\n\
					SKINS\t%.4f\n\
					ARMAS\t%.4f\n\
					1 SD\t%d\n\
					SU\t%d Sd\n\
				",
					MULTIPLIER_PROPERITES,
					MULTIPLIER_VEHICLES,
					MULTIPLIER_TOYS,
					MULTIPLIER_SKINS,		
					MULTIPLIER_WEAPONS,
					SD_VALUE,
					SU_SD_PRICE
			);	
				
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST, "Multiplicadores", dialog, ">>", "Salir");
			return 1;
		}
		case DIALOG_SERVER_ECO_MODIFY:
		{
			new dialog[32];
			switch(PLAYER_TEMP[playerid][pt_DIALOG_ECO_SELECTED])
			{
				case 0: format(dialog, sizeof dialog, "PROPIEDADES: %f", MULTIPLIER_PROPERITES);
				case 1: format(dialog, sizeof dialog, "VEHICULOS: %f", MULTIPLIER_VEHICLES);
				case 2: format(dialog, sizeof dialog, "TOYS: %f", MULTIPLIER_TOYS);
				case 3: format(dialog, sizeof dialog, "SKINS: %f", MULTIPLIER_SKINS);
				case 4: format(dialog, sizeof dialog, "ARMAS: %f", MULTIPLIER_WEAPONS);
				case 5: format(dialog, sizeof dialog, "1 SD: %d", SD_VALUE);
				case 6: format(dialog, sizeof dialog, "Coste SU: %d Sd", SU_SD_PRICE);
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Multiplicador", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_SU_BUY:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "El precio de SU es de %d Sd\nDuración: 30 días\n\n¿Comprar?", SU_SD_PRICE);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Super Usuario", dialog, "Comprar", "Salir");
			return 1;
		}
		case DIALOG_SU:
		{
			new DBResult:Result, current_date[24];
			Result = db_query(Database, "SELECT CURRENT_TIMESTAMP;");
			
			if(db_num_rows(Result)) db_get_field(Result, 0, current_date, 24);
			db_free_result(Result);
			
			
			new dialog[256];
			format(dialog, sizeof dialog, 
				
				"\
					Fecha actual: %s\n\
					Fecha caducidad: %s\n\
					\n\
					Renuevalo 30 días más por %d Sd.\n\
					\n\
				",
					current_date,
					ACCOUNT_INFO[playerid][ac_SU_EXPIRE_DATE],
					SU_SD_PRICE
			);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Super Usuario", dialog, "Salir", "Renovar");
			return 1;
		}
		case DIALOG_SD:
		{
			new dialog[256];
			format(dialog, sizeof dialog, "Tienes %d Sd\nEl valor de 1 Sd es de %s$\n\n¿Cuántos Sd quieres convertir?\nUna vez convertido no se puede recuperar los Sd.\n", ACCOUNT_INFO[playerid][ac_SD], number_format_thousand(SD_VALUE));
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Super Dinero", dialog, "Convertir", "Salir");
			return 1;
		}
		case DIALOG_VOBJECT_MENU:
		{
			new caption[45];
			format(caption, sizeof caption, "STC - '%s'", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "1. Mis objetos\n2. Comprar objeto\n3. Añadir texto (500$)\n4. Añadir bandera de país (2.000$)\n5. Añadir panel de país (2.000$)", ">>", "Salir");
			return 1;
		}
		case DIALOG_VOBJECT_OBJECTS:
		{
			new caption[45], dialog[145 * (MAX_SU_VOBJECTS + 2)], line_str[145];
			format(caption, sizeof caption, "STC - '%s'", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
			
			format(dialog, sizeof dialog, "{CCCCCC}Objeto\t{90C3D4}Colocado\n");
			for(new i = 0; i != MAX_SU_VOBJECTS; i ++)
			{
				if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i][vobject_VALID])
				{
					if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i][vobject_ATTACHED]) format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}Sí\n", i + 1, VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i][vobject_NAME]);
					else format(line_str, sizeof line_str, "{CCCCCC}%d. %s\t{90C3D4}No\n", i + 1, VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i][vobject_NAME]);
				}
				else format(line_str, sizeof line_str, "{666666}%d. Slot vacío\n", i + 1);
				strcat(dialog, line_str);
			}
			strcat(dialog, "{c4290d}- Eliminar todo\n");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT:
		{
			new caption[45], dialog[256];
			format(caption, sizeof caption, "Objeto '%s'", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME]);
			
			switch(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_TYPE])
			{
				case VOBJECT_TYPE_OBJECT:
				{
					if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED]) format(dialog, sizeof dialog, "{CCCCCC}Guardar este objeto\n{CCCCCC}Cambiar el nombre del objeto\n{CCCCCC}Editar posición del objeto\n{CCCCCC}Colores\n{CCCCCC}Eliminar este objeto");
					else format(dialog, sizeof dialog, "{CCCCCC}Colocar este objeto\n{CCCCCC}Cambiar el nombre del objeto\n{666666}Editar posición del objeto\n{666666}Colores\n{CCCCCC}Eliminar este objeto");
				}
				case VOBJECT_TYPE_TEXT:
				{
					if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED]) format(dialog, sizeof dialog, "{CCCCCC}Guardar este objeto\n{CCCCCC}Cambiar el nombre del objeto\n{CCCCCC}Editar posición del objeto\n{CCCCCC}Texto\n{CCCCCC}Eliminar este objeto");
					else format(dialog, sizeof dialog, "{CCCCCC}Colocar este objeto\n{CCCCCC}Cambiar el nombre del objeto\n{666666}Editar posición del objeto\n{666666}Texto\n{CCCCCC}Eliminar este objeto");
				}
				case VOBJECT_TYPE_COUNTRY_FLAG, VOBJECT_TYPE_COUNTRY_PANEL:
				{
					if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED]) format(dialog, sizeof dialog, "{CCCCCC}Guardar este objeto\n{CCCCCC}Cambiar el nombre del objeto\n{CCCCCC}Editar posición del objeto\n{CCCCCC}Eliminar este objeto");
					else format(dialog, sizeof dialog, "{CCCCCC}Colocar este objeto\n{CCCCCC}Cambiar el nombre del objeto\n{666666}Editar posición del objeto\n{CCCCCC}Eliminar este objeto");
				}
			}
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_CNAME:
		{		
			new dialog[145];
			format(dialog, sizeof dialog, "Nombre actual: \"%s\"\nIndica el nuevo nombre:", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Objeto - Modificar nombre", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_COLORS:
		{
			new caption[64];
			format(caption, sizeof caption, "Colores de '%s'", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME]);
			
			new dialog[45 * MAX_VEHICLE_OBJECTS_INDEXS], line_str[45];
			for(new i = 0; i != MAX_VEHICLE_OBJECTS_INDEXS; i ++)
			{
				if(!VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_COLORS][i]) format(line_str, sizeof line_str, "{FFFFFF}Color #%d (original)\n", i + 1);
				else format(line_str, sizeof line_str, "{%06x}Color #%d\n", ARGBToRGBA(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_COLORS][i]) >>> 8, i + 1);
				
				strcat(dialog, line_str);
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_COLOR:
		{
			new caption[64];
			format(caption, sizeof caption, "Color (%d) de '%s'", PLAYER_TEMP[playerid][pt_TUNING_EDIT_COLOR_SLOT], VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME]);
			
			new dialog[145];
			format(dialog, sizeof dialog, 
					
					"\
						Color original\n\
						{%06x}Veh Color 1\n\
						{%06x}Veh Color 2\n\
						{FFFFFF}Otro (ARGB)\n\
					",
					VEHICLE_COLORS[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_COLOR_1] ] >>> 8,
					VEHICLE_COLORS[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_COLOR_2] ] >>> 8
			);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_COLOR_HEX:
		{
			new caption[64];
			format(caption, sizeof caption, "Color (%d) de '%s'", PLAYER_TEMP[playerid][pt_TUNING_EDIT_COLOR_SLOT], VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME]);
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, caption, "Introduce el color en formato AARRGGBB\nPor ejemplo: FFCCCCCC", ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_CDELETE:
		{
			new dialog[145];
			format(dialog, sizeof dialog, "¿Estás seguro que quieres borrar el siguiente objeto?\n\t\"%s\"", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Objeto - Eliminar Objeto", dialog, "Eliminar", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_DELETE_ALL: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Objeto - Eliminar todo", "¿Está seguro de que quiere eliminar todos los objetos de este vehículo?\nEsta opción no se puede deshacer.", "Eliminar", "Atrás");	
		case DIALOG_VOBJECT_TEXT_MENU:
		{
			new caption[64];
			format(caption, sizeof caption, "Texto '%s'", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME]);

			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, caption, "Editar texto\nCambiar fuente\nTamaño de letra\nNegrita\nColor de fuente", ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_TEXT:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Texto actual:\n\"%s\"\n\nIndica el nuevo texto (1-32 caracteres)\n", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_TEXT]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Modificar texto", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Fuente actual:\n\"%s\"\n\nIndica la nueva fuente (1-24 caracteres)\n", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_FONT]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Modificar fuente", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_SIZE:
		{
			new dialog[128];
			format(dialog, sizeof dialog, "Tamaño actual: %d\n\nIndica la nueva fuente (1-24 caracteres)\n", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_FONT_SIZE]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "Modificar fuente", dialog, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_COLOR:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona color", DIALOG_CREATE_CREW_COLOR_String, ">>", "Atrás");
			return 1;
		}
		case DIALOG_VOBJECT_COUNTRY:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Selecciona país",
				
				"\
					Alemania\n\
					Argentina\n\
					Austria\n\
					Belgica\n\
					Bolivia\n\
					Bulgaria\n\
					Chile\n\
					Colombia\n\
					El Salvador\n\
					España\n\
					Estonia\n\
					Francia\n\
					Guatemala\n\
					Holanda\n\
					Hungría\n\
					India\n\
					Indonesia\n\
					Irlanda\n\
					Italia\n\
					Lituania\n\
					Luxemburgo\n\
					Madagascar\n\
					Malta\n\
					Malí\n\
					México\n\
					Nigeria\n\
					Panamá\n\
					Paraguay\n\
					Perú\n\
					Polonia\n\
					Rumanía\n\
					Rusia\n\
					Ucrania\n\
					Venezuela\n\
				"
				
			, ">>", "Atrás");
			return 1;
		}
		default: return 0;
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(!isnull(inputtext))
	{
		for(new i = 0; i != strlen(inputtext); i ++)
		{
			if(inputtext[i] == '%') inputtext[i] = '#';
		}
	}
	
	switch(dialogid)
	{
		case DIALOG_INFO: return 1;
		case DIALOG_REGISTER:
		{
			if(response)
			{
				if(strlen(inputtext) < MIN_PASS_LENGTH || strlen(inputtext) > MAX_PASS_LENGTH) return ShowDialog(playerid, dialogid);
				format(ACCOUNT_INFO[playerid][ac_IP], 16, "%s", PLAYER_TEMP[playerid][pt_IP]);
				format(ACCOUNT_INFO[playerid][ac_NAME], 24, "%s", PLAYER_TEMP[playerid][pt_NAME]);
				
				new salt[16];
				getRandomSalt(salt);
				format(ACCOUNT_INFO[playerid][ac_SALT], 16, "%s", salt);
				SHA256_PassHash(inputtext, ACCOUNT_INFO[playerid][ac_SALT], ACCOUNT_INFO[playerid][ac_PASS], 64 + 1);
				
				ACCOUNT_INFO[playerid][ac_LEVEL] = 1;
				ACCOUNT_INFO[playerid][ac_REP] = 1;
				ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] = TIME_FOR_REP;
				
				ShowDialog(playerid, DIALOG_REGISTER_EMAIL);
			}
			else Kick(playerid);
			return 1;
		}
		case DIALOG_REGISTER_EMAIL:
		{
			if(!response) return Kick(playerid);
			if(strlen(inputtext) < 5) return ShowDialog(playerid, dialogid);
			if(strfind(inputtext, "@", true) == -1) return ShowDialog(playerid, dialogid);
			if(strfind(inputtext, ".", true) == -1) return ShowDialog(playerid, dialogid);
			
			new DBResult:Result, bool:email_exists, DB_Query[80];
			format(DB_Query, sizeof(DB_Query), "SELECT * FROM `CUENTA` WHERE `EMAIL` = '%q'", inputtext);
			Result = db_query(Database, DB_Query);
			if(db_num_rows(Result)) email_exists = true;
			db_free_result(Result);
			
			if(email_exists)
			{
				SendClientMessage(playerid, 0x999999AA, "Este correco electrónico ya está en uso, use otro distinto.");
				ShowDialog(playerid, dialogid);
				return 1;
			}
			format(ACCOUNT_INFO[playerid][ac_EMAIL], 32, "%s", inputtext);
			
			ApplyActorAnimation(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], "INT_SHOP", "shop_loop", 4.1, 1, 1, 1, 0, 0);
			
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][0]);
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][1]);
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][2]);

			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9]);
			
			CHARACTER_INFO[playerid][ch_SEX] = -1;
			PLAYER_TEMP[playerid][pt_REGISTER_SELECTING_SKIN] = true;
			PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] = 0;
		
			new td_str[64];
			format(td_str, sizeof td_str, "%d/%d", PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] + 1, sizeof(Intro_Skins[]));
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], td_str);
			
			SendClientMessage(playerid, -1, "{CCCCCC}Elige el sexo y la ropa de tu personaje, cuando estés listo pulsa {8ba0c1}'ESCAPE' {CCCCCC}para continuar.");
			SelectTextDrawEx(playerid, 0xe8d08fFF);
			return 1;
		}
		case DIALOG_LOGIN:
		{
			if(!response) return Kick(playerid);
			if(!strlen(inputtext)) return ShowDialog(playerid, dialogid);
			
			new password[64 + 1];
			SHA256_PassHash(inputtext, ACCOUNT_INFO[playerid][ac_SALT], password, sizeof password);
		
			if(!strcmp(password, ACCOUNT_INFO[playerid][ac_PASS], false))
			{
				LoadCharacterData(playerid);
				LoadPlayerBankAccountData(playerid);
				LoadPlayerToysData(playerid);
				LoadPlayerPocketData(playerid);
				LoadPlayerPhoneData(playerid);
				LoadPlayerGPSData(playerid);
				LoadPlayerObjectsData(playerid);
				LoadPlayerVehicles(playerid);
				LoadPlayerSkills(playerid);
				LoadPlayerWorks(playerid);
				LoadPlayerMisc(playerid);
				LoadPlayerWeaponsData(playerid);
				LoadPlayerCrewInfo(playerid);
				
				SetPlayerScore(playerid, ACCOUNT_INFO[playerid][ac_LEVEL]);
				PLAYER_TEMP[playerid][pt_DOUBT_CHANNEL_TIME] = gettime();
				ResetPlayerWeapons(playerid);
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, CHARACTER_INFO[playerid][ch_CASH]);
				SetPlayerFightingStyle(playerid, CHARACTER_INFO[playerid][ch_FIGHT_STYLE]);
				SetPlayerHealthEx(playerid, CHARACTER_INFO[playerid][ch_HEALTH]);
				SetPlayerArmourEx(playerid, CHARACTER_INFO[playerid][ch_ARMOUR]);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerColorEx(playerid, PLAYER_COLOR);
				StopAudioStreamForPlayer(playerid);
				SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], 0, 0, 0, 0, 0, 0);
				SetPlayerInterior(playerid, CHARACTER_INFO[playerid][ch_INTERIOR]);
				
				PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP] = 0;
				TogglePlayerSpectatingEx(playerid, false);
				TogglePlayerControllable(playerid, false);
				SendClientMessageEx(playerid, -1, "Bienvenido de nuevo {C4FF66}%s, {FFFFFF}tu última conexión fue el {C4FF66}%s.", PLAYER_TEMP[playerid][pt_RP_NAME], ACCOUNT_INFO[playerid][ac_LAST_CONNECTION]);
			}
			else // Error
			{
				PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP] ++;
				if(PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP] > MAX_BAD_LOGIN_ATTEMPS) return Kick(playerid);
				SendClientMessageEx(playerid, 0x999999AA, "Contraseña incorrecta, aviso %d/%d.", PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP], MAX_BAD_LOGIN_ATTEMPS);
				ShowDialog(playerid, dialogid);
			}
			return 1;
		}
		case DIALOG_DOUBT_CHANNEL_POST:
		{
			if(response) SendMessageToDoubtChannel(playerid, PLAYER_TEMP[playerid][pt_DOUBT_CHANNEL_MESSAGE]);
			return 1;
		}
		case DIALOG_FOOD_PIZZA:
		{
			if(response)
			{
				if(CHARACTER_INFO[playerid][ch_CASH] >= PIZZA_FOOD[listitem][food_PRICE])
				{
					if(CHARACTER_INFO[playerid][ch_HUNGRY] >= 99.0 && CHARACTER_INFO[playerid][ch_THIRST] >= 99.0) return SendClientMessage(playerid, -1, "{CCCCCC}¿Es que quieres reventar?");
					
					GivePlayerCash(playerid, -PIZZA_FOOD[listitem][food_PRICE]);
					Add_Hungry_Thirst(playerid, PIZZA_FOOD[listitem][food_HUNGRY], PIZZA_FOOD[listitem][food_THIRST]);
					
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					
					new action[64];
					format(action, sizeof action, "compra %s y lo consume.", PIZZA_FOOD[listitem][food_NAME]);
					Auto_SendPlayerAction(playerid, action);
					
					ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 0, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 1000);
					
					ShowDialog(playerid, dialogid);
				}
				else
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%d$ {CCCCCC}para poder comprarlo.", PIZZA_FOOD[listitem][food_PRICE] - CHARACTER_INFO[playerid][ch_CASH]);
				}
			}
			else SendClientMessageEx(playerid, -1, "Gracias por su visita a {6a98e2}%s {FFFFFF}vuelva pronto.", ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_NAME]);
			return 1;
		}
		case DIALOG_FOOD_BURGER:
		{
			if(response)
			{
				if(CHARACTER_INFO[playerid][ch_CASH] >= BURGER_SHOT_FOOD[listitem][food_PRICE])
				{
					if(CHARACTER_INFO[playerid][ch_HUNGRY] >= 99.0 && CHARACTER_INFO[playerid][ch_THIRST] >= 99.0) return SendClientMessage(playerid, -1, "{CCCCCC}¿Es que quieres reventar?");
					
					GivePlayerCash(playerid, -BURGER_SHOT_FOOD[listitem][food_PRICE]);
					Add_Hungry_Thirst(playerid, BURGER_SHOT_FOOD[listitem][food_HUNGRY], BURGER_SHOT_FOOD[listitem][food_THIRST]);
					
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					
					new action[64];
					format(action, sizeof action, "compra %s y lo consume.", BURGER_SHOT_FOOD[listitem][food_NAME]);
					Auto_SendPlayerAction(playerid, action);
					
					ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 0, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 1000);
					
					ShowDialog(playerid, dialogid);
				}
				else
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%d$ {CCCCCC}para poder comprarlo.", BURGER_SHOT_FOOD[listitem][food_PRICE] - CHARACTER_INFO[playerid][ch_CASH]);
				}
			}
			else SendClientMessageEx(playerid, -1, "Gracias por su visita a {6a98e2}%s {FFFFFF}vuelva pronto.", ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_NAME]);
			return 1;
		}
		case DIALOG_FOOD_CLUCKIN:
		{
			if(response)
			{
				if(CHARACTER_INFO[playerid][ch_CASH] >= CLUCKIN_BELL_FOOD[listitem][food_PRICE])
				{
					if(CHARACTER_INFO[playerid][ch_HUNGRY] >= 99.0 && CHARACTER_INFO[playerid][ch_THIRST] >= 99.0) return SendClientMessage(playerid, -1, "{CCCCCC}¿Es que quieres reventar?");
					
					GivePlayerCash(playerid, -CLUCKIN_BELL_FOOD[listitem][food_PRICE]);
					Add_Hungry_Thirst(playerid, CLUCKIN_BELL_FOOD[listitem][food_HUNGRY], CLUCKIN_BELL_FOOD[listitem][food_THIRST]);
					
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					
					new action[64];
					format(action, sizeof action, "compra %s y lo consume.", CLUCKIN_BELL_FOOD[listitem][food_NAME]);
					Auto_SendPlayerAction(playerid, action);
					
					ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 0, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 1000);
					
					ShowDialog(playerid, dialogid);
				}
				else
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%d$ {CCCCCC}para poder comprarlo.", CLUCKIN_BELL_FOOD[listitem][food_PRICE] - CHARACTER_INFO[playerid][ch_CASH]);
				}
			}
			else SendClientMessageEx(playerid, -1, "Gracias por su visita a {6a98e2}%s {FFFFFF}vuelva pronto.", ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_NAME]);
			return 1;
		}
		case DIALOG_PLAYER_TOYS:
		{
			if(response)
			{	
				if(listitem == MAX_PLAYER_ATTACHED_OBJECTS) return ShowDialog(playerid, DIALOG_PLAYER_TOY_DELETE_ALL);
				if(!ACCOUNT_INFO[playerid][ac_SU] && listitem >= MAX_NU_TOYS)
				{
					SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d accesorios! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_PLAYER_ATTACHED_OBJECTS);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] = listitem;
				ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
			}
			return 1;
		}
		case DIALOG_PLAYER_TOY_MENU:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: //colocar / quitar
					{
						if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED]) // tiene accesorio puesto
						{
							PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED] = false;
							RemovePlayerAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
							
							new action[45]; format(action, sizeof action, "se quita su \"%s\"", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
							Auto_SendPlayerAction(playerid, action);
						}
						else // No lo tiene puesto
						{
							if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE] == -1) return ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
							
							PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED] = true;
							RemovePlayerAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
							
							SetPlayerAttachedObject
							(
								playerid, 
								PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_MODELID],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_X],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Y],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Z],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_X],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Y],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Z],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_X],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Y],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Z],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1],
								PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2]
							);
							
							new action[45]; format(action, sizeof action, "se coloca su \"%s\"", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
							Auto_SendPlayerAction(playerid, action);
						}
					}
					case 1: ShowDialog(playerid, DIALOG_PLAYER_TOY_EDIT_NAME);
					case 2: //Configurar
					{
						if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE] == -1)
						{
							ShowDialog(playerid, DIALOG_PLAYER_TOY_SELECT_BONE);
							return 1;
						}
						ShowDialog(playerid, DIALOG_PLAYER_TOY_EDIT_BONE);
					}
					case 3: ShowDialog(playerid, DIALOG_PLAYER_TOY_COLOR_1);
					case 4: ShowDialog(playerid, DIALOG_PLAYER_TOY_COLOR_2);
					case 5: ShowDialog(playerid, DIALOG_PLAYER_TOY_CONFIRMDELETE);
				}
			}
			else ShowDialog(playerid, DIALOG_PLAYER_TOYS);
			return 1;
		}
		case DIALOG_PLAYER_TOY_EDIT_NAME:
		{
			if(response)
			{
				if(!strlen(inputtext) || strlen(inputtext) > 24)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}El nombre del accesorio debe contener de 1 a 24 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				format(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME], 24, "%s", inputtext);
				ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
			return 1;
		}
		case DIALOG_PLAYER_TOY_CONFIRMDELETE:
		{
			if(response)
			{
				new DB_Query[130];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_TOYS` WHERE `ID_USER` = '%d' AND `ID_TOY` = '%d';", ACCOUNT_INFO[playerid][ac_ID], PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ID]);
				db_query(Database, DB_Query);
				
				if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED]) RemovePlayerAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Accesorio \"%s\" eliminado.", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
				
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_VALID] = false;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ID] = 0;
				format(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME], 24, "");
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED] = false;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_MODELID] = 0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE] = 0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_X] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Y] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Z] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_X] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Y] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Z] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_X] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Y] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Z] = 0.0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1] = 0;
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2] = 0;
				PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] = 0;
				
				ShowDialog(playerid, DIALOG_PLAYER_TOYS);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
			return 1;
		}
		case DIALOG_PLAYER_TOY_SELECT_BONE:
		{
			if(response)
			{
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE] = listitem + 1;
				EditPlayerToy(playerid);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
			return 1;
		}
		case DIALOG_PLAYER_TOY_EDIT_BONE:
		{
			if(response) ShowDialog(playerid, DIALOG_PLAYER_TOY_SELECT_BONE);
			else EditPlayerToy(playerid);
			return 1;
		}
		case DIALOG_PLAYER_TOY_COLOR_1:
		{
			if(response)
			{
				if(listitem == 0) PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1] = 0;
				else PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1] = RGBAToARGB(RandomColors[listitem]);
				
				if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED]) UpdatePlayerToy(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
				SendClientMessage(playerid, -1, "{CCCCCC}Color del accesorio actualizado.");
			}
			else ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
			return 1;
		}
		case DIALOG_PLAYER_TOY_COLOR_2:
		{
			if(response)
			{
				if(listitem == 0) PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2] = 0;
				else PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2] = RGBAToARGB(RandomColors[listitem]);
				
				if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED]) UpdatePlayerToy(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
				SendClientMessage(playerid, -1, "{CCCCCC}Color del accesorio actualizado.");
			}
			else ShowDialog(playerid, DIALOG_PLAYER_TOY_MENU);
			return 1;
		}
		case DIALOG_PLAYER_TOY_DELETE_ALL:
		{
			if(response)
			{
				new DB_Query[90];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_TOYS` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				new temp_PLAYER_TOYS[Player_Toys_Info];
				for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
				{
					RemovePlayerAttachedObject(playerid, i);
					PLAYER_TOYS[playerid][i] = temp_PLAYER_TOYS;
				}
		
				SendClientMessage(playerid, -1, "{CCCCCC}Ha eliminado todos tus accesorios.");
			}
			else ShowDialog(playerid, DIALOG_PLAYER_TOYS);
			return 1;
		}
		case DIALOG_BANK:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_BANK_WITHDRAW);
					case 1: ShowDialog(playerid, DIALOG_BANK_DEPOSIT);
					case 2: ShowDialog(playerid, DIALOG_BANK_TRANSFER);
					case 3: ShowDialog(playerid, DIALOG_BANK_TRANSACTIONS);
				}
			}
			else PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
			return 1;
		}
		case DIALOG_BANK_WITHDRAW:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor positivo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] > BANK_ACCOUNT[playerid][bank_account_BALANCE])
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Saldo insuficiente.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM])
				{
					if(inputtext[0] > 10000)
					{
						PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, -1, "{CCCCCC}Las operaciones de más de {FF6633}10.000$ {CCCCCC}no se pueden realizar desde un cajero, solo en el banco.");
						ShowDialog(playerid, dialogid);
						return 1;
					}
				}
				
				BANK_ACCOUNT[playerid][bank_account_BALANCE] -= inputtext[0];
				GivePlayerCash(playerid, inputtext[0]);
				
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_WITHDRAW, inputtext[0]);
				
				SendClientMessageEx(playerid, -1, "Operación realizada con éxito, has retirado {6a98e2}%s$.", number_format_thousand(inputtext[0]));
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
			}
			else ShowDialog(playerid, DIALOG_BANK);
			return 1;
		}
		case DIALOG_BANK_DEPOSIT:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor positivo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] > CHARACTER_INFO[playerid][ch_CASH])
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Dinero insuficiente.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM])
				{
					if(inputtext[0] > 10000)
					{
						PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, -1, "{CCCCCC}Las operaciones de más de {FF6633}10.000$ {CCCCCC}no se pueden realizar desde un cajero, solo en el banco.");
						ShowDialog(playerid, dialogid);
						return 1;
					}
				}
				
				GivePlayerCash(playerid, -inputtext[0]);
				BANK_ACCOUNT[playerid][bank_account_BALANCE] += inputtext[0];
				
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_DEPOSIT, inputtext[0]);
				
				SendClientMessageEx(playerid, -1, "Operación realizada con éxito, has depositado {6a98e2}%s$.", number_format_thousand(inputtext[0]));
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
			}
			else ShowDialog(playerid, DIALOG_BANK);
			return 1;
		}
		case DIALOG_BANK_TRANSFER:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor positivo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new DBResult:Result, bool:valid_account, DB_Query[90];
				format(DB_Query, sizeof(DB_Query), "SELECT * FROM `BANK_ACCOUNTS` WHERE `ID_ACCOUNT` = '%d'", inputtext[0]);
				Result = db_query(Database, DB_Query);
				if(db_num_rows(Result)) valid_account = true;
				db_free_result(Result);
				
				if(valid_account)
				{
					PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT] = inputtext[0];
					ShowDialog(playerid, DIALOG_BANK_TRANSFER_SEND);
				}
				else
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{999999}El número de cuenta introducido no existe o no es correcto.");
					PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
				}
			}
			else ShowDialog(playerid, DIALOG_BANK);
			return 1;
		}
		case DIALOG_BANK_TRANSFER_SEND:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor positivo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] > BANK_ACCOUNT[playerid][bank_account_BALANCE])
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Saldo insuficiente.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM])
				{
					if(inputtext[0] > 10000)
					{
						PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, -1, "{CCCCCC}Las operaciones de más de {FF6633}10.000$ {CCCCCC}no se pueden realizar desde un cajero, solo en el banco.");
						ShowDialog(playerid, dialogid);
						return 1;
					}
				}
				
				BANK_ACCOUNT[playerid][bank_account_BALANCE] -= inputtext[0];
				new transfer_player_id = GetPlayerIdByBankAccountId(PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT]);
				
				new DB_Query[300], message[64];
				format(message, sizeof message, "Tranferencia recibida: +%s$", number_format_thousand(inputtext[0]));
				
				if(transfer_player_id == -1)
				{
					new DBResult:Result;
					format(DB_Query, sizeof DB_Query, "SELECT `PHONE`.`PHONE_NUMBER` FROM `PHONE`, `BANK_ACCOUNTS` WHERE `BANK_ACCOUNTS`.`ID_ACCOUNT` = '%d' AND `PHONE`.`ID_USER` = `BANK_ACCOUNTS`.`ID_USER`;", PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT]);
					
					Result = db_query(Database, DB_Query);
					
					if(db_num_rows(Result))
					{
						new phone_number = db_get_field_int(Result, 0);
						RegisterPhoneMessage(6740, phone_number, message, true);
					}
					db_free_result(Result);
				}
				else
				{
					BANK_ACCOUNT[transfer_player_id][bank_account_BALANCE] += inputtext[0];
					
					if(PLAYER_PHONE[transfer_player_id][player_phone_VALID])
					{
						RegisterPhoneMessage(6740, PLAYER_PHONE[transfer_player_id][player_phone_NUMBER], message);
						if(PLAYER_PHONE[transfer_player_id][player_phone_STATE] == PHONE_STATE_ON)
						{
							if((PLAYER_TEMP[transfer_player_id][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[transfer_player_id][pt_GAME_STATE] == GAME_STATE_DEAD))
							{
								SendClientMessageEx(transfer_player_id, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(transfer_player_id, 6740), message);
							}
						}
					}	
				}
				
				format(DB_Query, sizeof(DB_Query), "\
					UPDATE `BANK_ACCOUNTS` SET\
						`BALANCE` = BALANCE + '%d' \
					WHERE `ID_ACCOUNT` = '%d';\
					UPDATE `BANK_ACCOUNTS` SET\
						`BALANCE` = '%d' \
					WHERE `ID_ACCOUNT` = '%d';\
				",
					inputtext[0], PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT],
					BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID]
				);
				
				db_query(Database, DB_Query);
				
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_TRANSFER_SENT, inputtext[0], PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT]);
				RegisterBankAccountTransaction(PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT], BANK_TRANSACTION_TRANSFER_RECE, inputtext[0], BANK_ACCOUNT[playerid][bank_account_ID]);
				
				SendClientMessageEx(playerid, -1, "Operación realizada con éxito, has transferido {6a98e2}%s$ {FFFFFF}al número de cuenta {6a98e2}%s.", number_format_thousand(inputtext[0]), number_format_thousand(PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT]));
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT] = 0;
				PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
			}
			else
			{
				PLAYER_TEMP[playerid][pt_SELECT_BANK_TRANSFER_ACCOUNT] = 0;
				ShowDialog(playerid, DIALOG_BANK_TRANSFER);
			}
			return 1;
		}
		case DIALOG_CREATE_BANK_ACCOUNT:
		{
			if(response)
			{
				if(CHARACTER_INFO[playerid][ch_CASH] >= 500)
				{
					GivePlayerCash(playerid, -500);
					BANK_ACCOUNT[playerid][bank_account_BALANCE] = 500;
					
					new DBResult:Result, DB_Query[190];
					format(DB_Query, sizeof DB_Query,
					"\
						INSERT INTO `BANK_ACCOUNTS`\
						(\
							`ID_USER`, `BALANCE`\
						)\
						VALUES\
						(\
							'%d', '%d'\
						);\
						SELECT `ID_ACCOUNT` FROM `BANK_ACCOUNTS` WHERE `ID_USER` = '%d';\
					", ACCOUNT_INFO[playerid][ac_ID], BANK_ACCOUNT[playerid][bank_account_BALANCE], ACCOUNT_INFO[playerid][ac_ID]);
					Result = db_query(Database, DB_Query);
					
					if(db_num_rows(Result)) BANK_ACCOUNT[playerid][bank_account_ID] = db_get_field_assoc_int(Result, "ID_ACCOUNT");
					db_free_result(Result);

					RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_CREATE_ACCOUNT, 500);
					
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "Tu cuenta bancaria ha sido creada con éxito tu número de cuenta es {6a98e2}%s.", number_format_thousand(BANK_ACCOUNT[playerid][bank_account_ID]));
				}
				else
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente para crear la cuenta bancaria, te faltan {FF6633}%d$.", 500 - CHARACTER_INFO[playerid][ch_CASH]);
				}
			}
			return 1;
		}
		case DIALOG_BANK_TRANSACTIONS:
		{
			if(response) PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
			else ShowDialog(playerid, DIALOG_BANK);
			return 1;
		}
		case DIALOG_247_LIST:
		{
			if(response)
			{
				switch(Supermarket_Product_List[listitem][product_TYPE])
				{
					case PRODUCT_TYPE_FOOD:
					{
						if(CHARACTER_INFO[playerid][ch_CASH] >= Supermarket_Product_List[listitem][product_PRICE])
						{
							new slot = GetEmptyPlayerPocketSlot(playerid);
							if(slot == -1)
							{
								PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, -1, "{999999}No tienes más espacio entre tus alimentos, elimina algo con {e0d43e}/alimentos.");
								return 1;
							}
							
							GivePlayerCash(playerid, -Supermarket_Product_List[listitem][product_PRICE]);
							
							PLAYER_POCKET[playerid][slot][player_pocket_VALID] = true;
							format(PLAYER_POCKET[playerid][slot][player_pocket_object_NAME], 24, "%s", Supermarket_Product_List[listitem][product_NAME]);
							PLAYER_POCKET[playerid][slot][player_pocket_object_HUNGRY] = Supermarket_Product_List[listitem][product_HUNGRY];
							PLAYER_POCKET[playerid][slot][player_pocket_object_THIRST] = Supermarket_Product_List[listitem][product_THIRST];
							PLAYER_POCKET[playerid][slot][player_pocket_object_DRUNK] = Supermarket_Product_List[listitem][product_DRUNK];
							RegisterNewPlayerPocketObject(playerid, slot);
							
							SendClientMessageEx(playerid, -1, "Has comprado {86e03e}%s {FFFFFF}por {86e03e}%d$, {FFFFFF}para consumirlo usa {ddd67c}/alimentos.", Supermarket_Product_List[listitem][product_NAME], Supermarket_Product_List[listitem][product_PRICE]);
							PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						}
						else
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este producto.", number_format_thousand(Supermarket_Product_List[listitem][product_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
						}
					}
					case PRODUCT_TYPE_PHONE:
					{						
						if(CHARACTER_INFO[playerid][ch_CASH] >= Supermarket_Product_List[listitem][product_PRICE])
						{
							if(PLAYER_PHONE[playerid][player_phone_VALID])
							{
								SendClientMessageEx(playerid, -1, "{999999}Ya tienes un teléfono.");
								PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
								return 1;
							}
							
							GivePlayerCash(playerid, -Supermarket_Product_List[listitem][product_PRICE]);
							
							PLAYER_PHONE[playerid][player_phone_VALID] = true;
							PLAYER_PHONE[playerid][player_phone_NUMBER] = 34000000 + ACCOUNT_INFO[playerid][ac_ID];
							PLAYER_PHONE[playerid][player_phone_STATE] = PHONE_STATE_ON;
							PLAYER_PHONE[playerid][player_phone_VISIBLE_NUMBER] = true;
							RegisterNewPlayerPhone(playerid);
							
							SendClientMessageEx(playerid, -1, "Has comprado un {86e03e}%s {FFFFFF}por {86e03e}%d$, {FFFFFF}tu número es {c5e03e}%s.", Supermarket_Product_List[listitem][product_NAME], Supermarket_Product_List[listitem][product_PRICE], number_format_dash(PLAYER_PHONE[playerid][player_phone_NUMBER]));
							PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						}
						else
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este producto.", number_format_thousand(Supermarket_Product_List[listitem][product_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
						}
						
					}
					case PRODUCT_TYPE_GPS:
					{
						if(CHARACTER_INFO[playerid][ch_CASH] >= Supermarket_Product_List[listitem][product_PRICE])
						{
							if(PLAYER_OBJECT[playerid][po_GPS])
							{
								SendClientMessageEx(playerid, -1, "{999999}Ya tienes un GPS.");
								PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
								return 1;
							}
							
							GivePlayerCash(playerid, -Supermarket_Product_List[listitem][product_PRICE]);
							
							PLAYER_OBJECT[playerid][po_GPS] = true;
							SendClientMessageEx(playerid, -1, "Has comprado un {86e03e}%s {FFFFFF}por {86e03e}%d$, {FFFFFF}usa {6a98e2}/GPS {FFFFFF}para usarlo.", Supermarket_Product_List[listitem][product_NAME], Supermarket_Product_List[listitem][product_PRICE]);
							PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						}
						else
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este producto.", number_format_thousand(Supermarket_Product_List[listitem][product_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
						}
					}
					case PRODUCT_TYPE_MP3:
					{
						if(CHARACTER_INFO[playerid][ch_CASH] >= Supermarket_Product_List[listitem][product_PRICE])
						{
							if(PLAYER_OBJECT[playerid][po_MP3])
							{
								SendClientMessageEx(playerid, -1, "{999999}Ya tienes un MP3.");
								PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
								return 1;
							}
							
							GivePlayerCash(playerid, -Supermarket_Product_List[listitem][product_PRICE]);
							
							PLAYER_OBJECT[playerid][po_MP3] = true;
							SendClientMessageEx(playerid, -1, "Has comprado un {86e03e}%s {FFFFFF}por {86e03e}%d$, {FFFFFF}usa {6a98e2}/MP3 {FFFFFF}para usarlo.", Supermarket_Product_List[listitem][product_NAME], Supermarket_Product_List[listitem][product_PRICE]);
							PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						}
						else
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este producto.", number_format_thousand(Supermarket_Product_List[listitem][product_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
						}
					}
					case PRODUCT_TYPE_PHONE_RESOLVER:
					{
						if(CHARACTER_INFO[playerid][ch_CASH] >= Supermarket_Product_List[listitem][product_PRICE])
						{
							if(PLAYER_OBJECT[playerid][po_PHONE_RESOLVER])
							{
								SendClientMessageEx(playerid, -1, "{999999}Ya tienes una guía telefónica.");
								PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
								return 1;
							}
							
							GivePlayerCash(playerid, -Supermarket_Product_List[listitem][product_PRICE]);
							
							PLAYER_OBJECT[playerid][po_PHONE_RESOLVER] = true;
							SendClientMessageEx(playerid, -1, "Has comprado una {86e03e}%s {FFFFFF}por {86e03e}%d$, {FFFFFF}usa {6a98e2}/guia {FFFFFF}para usarla.", Supermarket_Product_List[listitem][product_NAME], Supermarket_Product_List[listitem][product_PRICE]);
							PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						}
						else
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este producto.", number_format_thousand(Supermarket_Product_List[listitem][product_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
						}
					}
				}
			}
			return 1;
		}
		case DIALOG_PLAYER_POCKET:
		{
			if(response)
			{
				if(listitem == MAX_PLAYER_POCKET_OBJECTS) return ShowDialog(playerid, DIALOG_PLAYER_POCKET_DELETE_ALL);
				if(!PLAYER_POCKET[playerid][listitem][player_pocket_VALID])
				{
					SendClientMessage(playerid, -1, "{999999}Este slot está vacío.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED] = listitem;
				ShowDialog(playerid, DIALOG_PLAYER_POCKET_OPTIONS);
			}
			return 1;
		}
		case DIALOG_PLAYER_POCKET_OPTIONS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: //Consumir
					{
						if(CHARACTER_INFO[playerid][ch_HUNGRY] >= 99.0 && CHARACTER_INFO[playerid][ch_THIRST] >= 99.0) 
						{
							PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED] = 0;
							SendClientMessage(playerid, -1, "{CCCCCC}¿Es que quieres reventar?");
							return 1;
						}
					
						Add_Hungry_Thirst(playerid, PLAYER_POCKET[playerid][PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]][player_pocket_object_HUNGRY], PLAYER_POCKET[playerid][PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]][player_pocket_object_THIRST]);
						GivePlayerDrunkLevel(playerid, PLAYER_POCKET[playerid][PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]][player_pocket_object_DRUNK]);
						
						new action[64];
						format(action, sizeof action, "consume %s.", PLAYER_POCKET[playerid][PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]][player_pocket_object_NAME]);
						Auto_SendPlayerAction(playerid, action);
						
						DeletePlayerPocketObject(playerid, PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]);
						PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED] = 0;
					
						ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 0, 0, 0, 0, 0, 0);
						ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 1000);
					}
					case 1: //Eliminar
					{
						SendClientMessageEx(playerid, -1, "{999999}Has eliminado \"%s\" de tus alimentos.", PLAYER_POCKET[playerid][PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]][player_pocket_object_NAME]);
						DeletePlayerPocketObject(playerid, PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED]);
						PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED] = 0;
					}
				}
			}
			else
			{
				PLAYER_TEMP[playerid][pt_POCKET_SLOT_SELECTED] = 0;
				ShowDialog(playerid, DIALOG_PLAYER_POCKET);
			}
			return 1;
		}
		case DIALOG_PLAYER_POCKET_DELETE_ALL:
		{
			if(response)
			{
				new DB_Query[90];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_POCKET` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				new temp_PLAYER_POCKET[Player_Pocket_Enum];
				for(new i = 0; i != MAX_PLAYER_POCKET_OBJECTS; i ++) PLAYER_POCKET[playerid][i] = temp_PLAYER_POCKET;
				
				SendClientMessage(playerid, -1, "{CCCCCC}Ha eliminado todo lo que tenías en tus alimentos.");
			}
			else ShowDialog(playerid, DIALOG_PLAYER_POCKET);
			return 1;
		}
		case DIALOG_PHONE:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: //Agenda
					{
						if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF)
						{
							PLAYER_PHONE[playerid][player_phone_STATE] = PHONE_STATE_ON;
							ShowDialog(playerid, dialogid);
							return 1;
						}
						ShowDialog(playerid, DIALOG_PHONE_BOOK);
					}
					case 1: //Llamar
					{
						if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}Tu teléfono está apagado, enciéndelo para usarlo.");
						ShowDialog(playerid, DIALOG_PHONE_CALL_NUMBER);
					}
					case 2: //Enviar mensaje
					{
						if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}Tu teléfono está apagado, enciéndelo para usarlo.");
						ShowDialog(playerid, DIALOG_PHONE_SMS_NUMBER);
					}
					case 3: //Ver mensajes recibidos
					{
						if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}Tu teléfono está apagado, enciéndelo para usarlo.");
						ShowDialog(playerid, DIALOG_PHONE_RECEIVED_MESSAGES);
					}
					case 4: //Ver mensajes enviados
					{
						if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}Tu teléfono está apagado, enciéndelo para usarlo.");
						ShowDialog(playerid, DIALOG_PHONE_SENT_MESSAGES);
					}
					case 5: //Tienda
					{
						if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}Tu teléfono está apagado, enciéndelo para usarlo.");
						
						ShowPlayerShop(playerid);
					}
					case 6: //Apagar
					{
						if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}Tu teléfono está apagado, enciéndelo para usarlo.");
						
						if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) EndPhoneCall(playerid);
						PLAYER_PHONE[playerid][player_phone_STATE] = PHONE_STATE_OFF;
						SendClientMessage(playerid, -1, "{999999}Has apagado tu teléfono, ahora no recibirás llamadas.");
					}
				}
			}
			return 1;
		}
		case DIALOG_PHONE_BOOK:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return ShowDialog(playerid, dialogid);
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == MAX_PHONE_CONTACTS + 10) return ShowDialog(playerid, DIALOG_PHONE_BOOK_ADD_NUMBER);
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == MAX_PHONE_CONTACTS + 20) return ShowDialog(playerid, DIALOG_PHONE_BOOK_DELETE_ALL);
				
				PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				ShowDialog(playerid, DIALOG_PHONE_BOOK_OPTIONS);
			}
			else ShowDialog(playerid, DIALOG_PHONE);
			return 1;
		}
		case DIALOG_PHONE_BOOK_ADD_NUMBER:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}Introduce un valor positivo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_ADD_NUMBER] = inputtext[0];
				ShowDialog(playerid, DIALOG_PHONE_BOOK_ADD_NAME);
			}
			else ShowDialog(playerid, DIALOG_PHONE_BOOK);
			return 1;
		}
		case DIALOG_PHONE_BOOK_ADD_NAME:
		{
			if(response)
			{
				if(isnull(inputtext))
				{ 
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(strlen(inputtext) > 24)
				{
					SendClientMessage(playerid, -1, "{999999}Caracteres: 1-24.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new slot = GetEmptyPlayerPhoneBookSlot(playerid);
				if(slot == -1) return SendClientMessage(playerid, -1, "{999999}Memoria de la agenda llena.");
			
			
				PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_VALID] = true;
				format(PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], 24, "%s", inputtext);
				PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER] = PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_ADD_NUMBER];
				RegisterNewPlayerPhoneBook(playerid, slot);
				
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "Nuevo contacto añadido a la agenda: Nombre: {6a98e2}%s {FFFFFF}Teléfono: {6a98e2}%s.", PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], number_format_dash(PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER]));
				ShowDialog(playerid, DIALOG_PHONE_BOOK);
			}
			else ShowDialog(playerid, DIALOG_PHONE_BOOK_ADD_NUMBER);
			return 1;
		}
		case DIALOG_PHONE_BOOK_OPTIONS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: //llamar
					{
						if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}Estás en una llamada.");

						switch(PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER])
						{
							case 911:
							{
								if(ACCOUNT_INFO[playerid][ac_LEVEL] < 3) return SendClientMessage(playerid, -1, "{999999}Debes ser al menos nivel 3 para llamar a la policía.");
								PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = true;
								PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] = true;
								PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION] = false;
								
								SendClientMessage(playerid, -1, "{CCCCCC}Operadora: Ha llamado a la central de policía, indícanos su nombre por favor.");
								return 1;
							}
							case 450: //Taxi
							{
								if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
								{
									PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
									DisablePlayerTaxiMark(playerid);
									SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado el taxi.");
								}
								else
								{
									PLAYER_TEMP[playerid][pt_WANT_TAXI] = true;
									SendClientMessage(playerid, -1, "{CCCCCC}Tu llamada se ha enviado a los taxistas disponibles, espera a que llegue un taxi.");
									SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a llamar a este número si ya no necesitas un taxi.");
									SendAlertToTaxiDrivers(playerid);
								}
								return 1;
							}
							case 570: //Mecanico
							{
								if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
								{
									PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
									DisablePlayerMechanicMark(playerid);
									SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado el mecánico.");
								}
								else
								{
									PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = true;
									SendClientMessage(playerid, -1, "{CCCCCC}Tu llamada se ha enviado a los mecánicos disponibles, espera a que llegue un mecánico.");
									SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a llamar a este número si ya no necesitas un mecánico.");
									SendAlertToMechanic(playerid);
								}
								return 1;
							}
							case 6740: return SendClientMessage(playerid, -1, "{CCCCCC}No vuelvas a llamar al banco, cuidado.");
							case 38350: return SendClientMessage(playerid, -1, "{CCCCCC}Aseguradora que asegura tus vehículos de mierda.");
							case 666: return SendClientMessage(playerid, -1, "{CCCCCC}Mirar a las estrellas es mirar al pasado, no mires.");
						}
						
						new to_playerid = INVALID_PLAYER_ID;
						for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
						{
							if(IsPlayerConnected(i))
							{
								if((PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL) && PLAYER_PHONE[i][player_phone_NUMBER] == PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER])
								{
									to_playerid = i;
									break;
								}
							}
						}
						
						if(to_playerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar no es correcto o está fuera de cobertura.");
						if(to_playerid == playerid) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar no es correcto.");
						if(PLAYER_PHONE[to_playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar está apagado o fuera de cobertura.");
						if(PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL]) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar está en otra llamada.");
						
						SendClientMessageEx(to_playerid, -1, "{e5f442}[Llamada entrante] {FFFFFF}%s te está llamando, para responser usa {e5f442}/responder {FFFFFF}o {e5f442}/colgar.", convertPhoneNumber(to_playerid, PLAYER_PHONE[playerid][player_phone_NUMBER]));
						PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL] = true;
						PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_INCOMING_CALL;
						PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = playerid;
						
						SendClientMessageEx(playerid, -1, "Llamando a {e5f442}%s ...", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME]);
						PLAYER_TEMP[playerid][pt_TIMERS][6] = SetTimerEx("NoCallResponse", 15000, false, "i", playerid);
						PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = true;
						PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_WAITING_RESPONSE;
						PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = to_playerid;
						PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
					}
					case 1: ShowDialog(playerid, DIALOG_PHONE_BOOK_SEND_MESSAGE);
					case 2: ShowDialog(playerid, DIALOG_PHONE_BOOK_CHANGE_NAME);
					case 3: ShowDialog(playerid, DIALOG_PHONE_BOOK_CONFIRM_DELET);
				}
			}
			else ShowDialog(playerid, DIALOG_PHONE_BOOK);
			return 1;
		}
		case DIALOG_PHONE_BOOK_CHANGE_NAME:
		{
			if(response)
			{
				if(isnull(inputtext))
				{ 
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(strlen(inputtext) > 24)
				{
					SendClientMessage(playerid, -1, "{999999}Caracteres: 1-24.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				format(PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME], 24, "%s", inputtext);
				
				new DB_Query[120];
				format(DB_Query, sizeof DB_Query, "UPDATE `PHONE_BOOK` SET `NAME` = '%q' WHERE `CONTACT_ID` = '%d';", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME], PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessage(playerid, -1, "Contacto modificado.");
				ShowDialog(playerid, DIALOG_PHONE_BOOK);
			}
			else ShowDialog(playerid, DIALOG_PHONE_BOOK_OPTIONS);
			return 1;
		}
		case DIALOG_PHONE_BOOK_CONFIRM_DELET:
		{
			if(response)
			{
				new DB_Query[120];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PHONE_BOOK` WHERE `PHONE_ID` = '%d' AND `CONTACT_ID` = '%d';", PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessageEx(playerid, -1, "Contacto {6a98e2}\"%s\" {FFFFFF}eliminado de tu agenda.", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME]);
				
				PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_VALID] = false;
				PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_ID] = 0;
				format(PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME], 24, "");
				PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER] = 0;
				
				ShowDialog(playerid, DIALOG_PHONE_BOOK);
			}
			else ShowDialog(playerid, DIALOG_PHONE_BOOK_OPTIONS);
			return 1;
		}
		case DIALOG_PHONE_BOOK_DELETE_ALL:
		{
			if(response)
			{
				new DB_Query[90];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PHONE_BOOK` WHERE `PHONE_ID` = '%d';", PLAYER_PHONE[playerid][player_phone_NUMBER]);
				db_query(Database, DB_Query);
				
				new temp_PLAYER_PHONE_BOOK[Phone_Book_Enum]; 
				for(new i = 0; i != MAX_PHONE_CONTACTS; i ++) PLAYER_PHONE_BOOK[playerid][i] = temp_PLAYER_PHONE_BOOK;
				
				SendClientMessage(playerid, -1, "{CCCCCC}Ha eliminado todos sus contactos.");
			}
			else ShowDialog(playerid, DIALOG_PHONE_BOOK);
			return 1;
		}
		case DIALOG_PHONE_CALL_NUMBER:
		{
			if(response)
			{
				if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
				if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}Estás en una llamada.");
				
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}Número no válido.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0)
				{
					SendClientMessage(playerid, -1, "{999999}El número destino no es válido.");
					ShowDialog(playerid, dialogid);
					return 1;
				}

				switch(inputtext[0])
				{
					case 911:
					{
						if(ACCOUNT_INFO[playerid][ac_LEVEL] < 3) return SendClientMessage(playerid, -1, "{999999}Debes ser al menos nivel 3 para llamar a la policía.");
						PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = true;
						PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] = true;
						PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION] = false;
						
						SendClientMessage(playerid, -1, "{CCCCCC}Operadora: Ha llamado a la central de policía, indícanos su nombre por favor.");
						return 1;
					}
					case 450: //Taxi
					{
						if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
						{
							PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
							DisablePlayerTaxiMark(playerid);
							SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado el taxi.");
						}
						else
						{
							PLAYER_TEMP[playerid][pt_WANT_TAXI] = true;
							SendClientMessage(playerid, -1, "{CCCCCC}Tu llamada se ha enviado a los taxistas disponibles, espera a que llegue un taxi.");
							SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a llamar a este número si ya no necesitas un taxi.");
							SendAlertToTaxiDrivers(playerid);
						}
						return 1;
					}
					case 570: //Mecanico
					{
						if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
						{
							PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
							DisablePlayerMechanicMark(playerid);
							SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado el mecánico.");
						}
						else
						{
							PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = true;
							SendClientMessage(playerid, -1, "{CCCCCC}Tu llamada se ha enviado a los mecánicos disponibles, espera a que llegue un mecánico.");
							SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a llamar a este número si ya no necesitas un mecánico.");
							SendAlertToMechanic(playerid);
						}
						return 1;
					}
					case 6740: return SendClientMessage(playerid, -1, "{CCCCCC}No vuelvas a llamar al banco, cuidado.");
					case 38350: return SendClientMessage(playerid, -1, "{CCCCCC}Aseguradora que asegura tus vehículos de mierda.");
					case 666: return SendClientMessage(playerid, -1, "{CCCCCC}Mirar a las estrellas es mirar al pasado, no mires.");
				}
				
				new to_playerid = INVALID_PLAYER_ID;
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if((PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL) && PLAYER_PHONE[i][player_phone_NUMBER] == inputtext[0])
						{
							to_playerid = i;
							break;
						}
					}
				}
				
				if(to_playerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar no es correcto o está fuera de cobertura.");
				if(to_playerid == playerid) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar no es correcto.");
				if(PLAYER_PHONE[to_playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar está apagado o fuera de cobertura.");
				if(PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL]) return SendClientMessage(playerid, -1, "{999999}El número al que intentas llamar está en otra llamada.");
				
				SendClientMessageEx(to_playerid, -1, "{e5f442}[Llamada entrante] {FFFFFF}%s te está llamando, para responser usa {e5f442}/responder {FFFFFF}o {e5f442}/colgar.", convertPhoneNumber(to_playerid, PLAYER_PHONE[playerid][player_phone_NUMBER]));
				PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL] = true;
				PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_INCOMING_CALL;
				PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = playerid;
				
				SendClientMessageEx(playerid, -1, "Llamando a {e5f442}%s ...", convertPhoneNumber(playerid, inputtext[0]));
				PLAYER_TEMP[playerid][pt_TIMERS][6] = SetTimerEx("NoCallResponse", 15000, false, "i", playerid);
				PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = true;
				PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_STATE_WAITING_RESPONSE;
				PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = to_playerid;
				PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
			}
			else ShowDialog(playerid, DIALOG_PHONE);
			return 1;
		}
		case DIALOG_PHONE_SMS_NUMBER:
		{
			if(response)
			{
				if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_OFF) return SendClientMessageEx(playerid, -1, "{999999}Tu teléfono está apagado, para encenderlo usa /movil.");
				if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return SendClientMessageEx(playerid, -1, "{999999}Estás en una llamada.");
				
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}Número no válido.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0)
				{
					SendClientMessage(playerid, -1, "{999999}El número destino no es válido.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new DBResult:Result, DB_Query[100], bool:phone_exists;
				format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PHONE` WHERE `PHONE_NUMBER` = '%d';", inputtext[0]);
				Result = db_query(Database, DB_Query);
				
				if(db_num_rows(Result)) phone_exists = true;
				db_free_result(Result);
				
				if(!phone_exists)
				{
					ShowDialog(playerid, dialogid);
					SendClientMessage(playerid, -1, "{999999}El número destino no es válido.");
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_PLAYER_PHONE_NUMBER_SELECTED] = inputtext[0];
				ShowDialog(playerid, DIALOG_PHONE_SMS_MESSAGE);
			}
			else ShowDialog(playerid, DIALOG_PHONE);
			return 1;
		}
		case DIALOG_PHONE_SMS_MESSAGE:
		{
			if(response)
			{
				if(isnull(inputtext)) return ShowDialog(playerid, dialogid);
				if(strlen(inputtext) > 64) return ShowDialog(playerid, dialogid);
				
				new to_playerid = INVALID_PLAYER_ID;
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if((PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_DEAD) && PLAYER_PHONE[i][player_phone_NUMBER] == PLAYER_TEMP[playerid][pt_PLAYER_PHONE_NUMBER_SELECTED])
						{
							to_playerid = i;
							break;
						}
					}
				}
				
				if(to_playerid == INVALID_PLAYER_ID) RegisterPhoneMessage(PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_TEMP[playerid][pt_PLAYER_PHONE_NUMBER_SELECTED], inputtext, true);
				else 
				{
					RegisterPhoneMessage(PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_TEMP[playerid][pt_PLAYER_PHONE_NUMBER_SELECTED], inputtext);
					if(PLAYER_PHONE[to_playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(to_playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(to_playerid, PLAYER_PHONE[playerid][player_phone_NUMBER]), inputtext);
				}
				SendClientMessageEx(playerid, -1, "Mensaje enviado a {7b9cd1}%s.", convertPhoneNumber(playerid, PLAYER_TEMP[playerid][pt_PLAYER_PHONE_NUMBER_SELECTED]));
			}
			else ShowDialog(playerid, DIALOG_PHONE_SMS_MESSAGE);
			return 1;
		}
		case DIALOG_PHONE_BOOK_SEND_MESSAGE:
		{
			if(response)
			{
				if(isnull(inputtext)) return ShowDialog(playerid, dialogid);
				if(strlen(inputtext) > 64) return ShowDialog(playerid, dialogid);
				
				new DBResult:Result, DB_Query[100], bool:phone_exists;
				format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PHONE` WHERE `PHONE_NUMBER` = '%d';", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER]);
				Result = db_query(Database, DB_Query);
				
				if(db_num_rows(Result)) phone_exists = true;
				db_free_result(Result);
				
				if(!phone_exists) return SendClientMessage(playerid, -1, "{999999}El número destino no es válido.");
				
				new to_playerid = INVALID_PLAYER_ID;
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if((PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_DEAD) && PLAYER_PHONE[i][player_phone_NUMBER] == PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER])
						{
							to_playerid = i;
							break;
						}
					}
				}
				
				if(to_playerid == INVALID_PLAYER_ID) RegisterPhoneMessage(PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER], inputtext, true);
				else
				{
					RegisterPhoneMessage(PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_PHONE_NUMBER], inputtext);
					if(PLAYER_PHONE[to_playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(to_playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(to_playerid, PLAYER_PHONE[playerid][player_phone_NUMBER]), inputtext);
				}
				SendClientMessageEx(playerid, -1, "Mensaje enviado a {7b9cd1}%s.", PLAYER_PHONE_BOOK[playerid][ PLAYER_TEMP[playerid][pt_PLAYER_PHONE_BOOK_SELECTED] ][phone_book_contact_NAME]);
			}
			else ShowDialog(playerid, DIALOG_PHONE_BOOK_OPTIONS);
			return 1;
		}
		case DIALOG_PHONE_SENT_MESSAGES:
		{
			if(!response) ShowDialog(playerid, DIALOG_PHONE);
			return 1;
		}
		case DIALOG_PHONE_RECEIVED_MESSAGES:
		{
			if(!response) ShowDialog(playerid, DIALOG_PHONE);
			return 1;
		}
		case DIALOG_CONFIRM_BUY_PROPERTY:
		{
			if(response)
			{
				if(PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_SOLD]) return SendClientMessage(playerid, -1, "{999999}Está propiedad ya está vendida.");
				if(PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_LEVEL] > ACCOUNT_INFO[playerid][ac_LEVEL]) return SendClientMessageEx(playerid, -1, "{999999}Necesitas ser como mínimo nivel %d para comprar esta propiedad.", PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_LEVEL]);
				if(PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_PRICE] > BANK_ACCOUNT[playerid][bank_account_BALANCE]) return SendClientMessage(playerid, -1, "{999999}No.");
	
				if(PLAYER_PHONE[playerid][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "PROPIEDAD COMPRADA: -%s$", number_format_thousand(PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_PRICE]));
					RegisterPhoneMessage(6740, PLAYER_PHONE[playerid][player_phone_NUMBER], message);
					if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(playerid, 6740), message);
				}
				
				BANK_ACCOUNT[playerid][bank_account_BALANCE] -= PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_PRICE];
				PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_SOLD] = true;
				PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_CREW] = false;
				PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_OWNER_ID] = ACCOUNT_INFO[playerid][ac_ID];

				new label_str[256], info[3];
				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d\n\n\
						{FFFFFF}Propietario: {C4FF66}%s\n\
						{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
					", PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_ID], ACCOUNT_INFO[playerid][ac_NAME]
				);
				UpdateDynamic3DTextLabelText(PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
				
				DestroyDynamicPickup(PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_PICKUP_ID]);
				PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_PICKUP_ID] = INVALID_STREAMER_ID;
				
				PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_PICKUP_ID] = CreateDynamicPickup(0, 1, PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_X], PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_Y], PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_Z], 0, PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_INTERIOR]);
				info[0] = PICKUP_TYPE_PROPERTY;
				info[1] = PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]; // Index
				info[2] = 2; // Pickup Exterior
				Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
		
				
				new DB_Query_update[350];
				format(DB_Query_update, sizeof(DB_Query_update), "\
					UPDATE `BANK_ACCOUNTS` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';\
					INSERT INTO `PROPERTY_OWNER` (`ID_PROPERTY`, `ID_USER`, `PROPERTY_NAME`) VALUES ('%d', '%d', '%q');\
				",
					BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID],
					PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_ID], ACCOUNT_INFO[playerid][ac_ID], PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_NAME]
				);
				db_query(Database, DB_Query_update);
						
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_BUY_PROPERTY, PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_PRICE]);
				SendClientMessageEx(playerid, -1, "{6a98e2}¡Propiedad #%d comprada! {FFFFFF}Ahora puedes ir a tu casa, si no sabes donde es puedes marcarla con el {6a98e2}/GPS.", PROPERTY_INFO[PLAYER_TEMP[playerid][pt_BUY_HOUSE_INDEX]][property_ID]);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			}
			return 1;
		}
		case DIALOG_PLAYER_GPS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER);
					case 1: ShowDialog(playerid, DIALOG_PLAYER_GPS_PROPERTIES);
					case 2: ShowDialog(playerid, DIALOG_PLAYER_GPS_VEHICLES);
					case 3: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITES);
					case 4: ShowDialog(playerid, DIALOG_PLAYER_GPS_WORKS);
					case 5:
					{
						if(PLAYER_TEMP[playerid][pt_GPS_MAP]) HidePlayerGpsMap(playerid);
						else ShowPlayerGpsMap(playerid);
					}
				}
			}
			return 1;
		}
		case DIALOG_PLAYER_GPS_PLAYER:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return ShowDialog(playerid, dialogid);
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == MAX_PLAYER_GPS_SAVES + 10) return ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER_ADD);
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == MAX_PLAYER_GPS_SAVES + 20) return ShowDialog(playerid, DIALOG_PLAYER_GPS_DELETE_ALL);
				
				PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER_OPTION);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS);
			return 1;
		}
		case DIALOG_PLAYER_GPS_PLAYER_ADD:
		{
			if(response)
			{
				if(isnull(inputtext))
				{ 
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(strlen(inputtext) > 24)
				{
					SendClientMessage(playerid, -1, "{999999}Caracteres: 1-24.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new slot = GetEmptyPlayer_GPS_Slot(playerid);
				if(slot == -1) return SendClientMessage(playerid, -1, "{999999}Memoria del GPS llena.");
			
				PLAYER_GPS[playerid][slot][player_gps_VALID] = true;
				format(PLAYER_GPS[playerid][slot][player_gps_NAME], 24, "%s", inputtext);
				GetPlayerPos(playerid, PLAYER_GPS[playerid][slot][player_gps_X], PLAYER_GPS[playerid][slot][player_gps_Y], PLAYER_GPS[playerid][slot][player_gps_Z]);
				PLAYER_GPS[playerid][slot][player_gps_WORLD] = GetPlayerVirtualWorld(playerid);
				PLAYER_GPS[playerid][slot][player_gps_INTERIOR] = GetPlayerInterior(playerid);
				RegisterNewPlayer_GPS_Site(playerid, slot);
				
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "Nuevo sitio añadido al GPS con el nombre: {6a98e2}%s.", PLAYER_GPS[playerid][slot][player_gps_NAME]);
				ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER);
			return 1;
		}
		case DIALOG_PLAYER_GPS_PLAYER_OPTION:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: SetPlayer_GPS_Checkpoint(playerid, PLAYER_GPS[playerid][PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED]][player_gps_X], PLAYER_GPS[playerid][PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED]][player_gps_Y], PLAYER_GPS[playerid][PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED]][player_gps_Z], PLAYER_GPS[playerid][PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED]][player_gps_WORLD], PLAYER_GPS[playerid][PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED]][player_gps_INTERIOR]);
					case 1: ShowDialog(playerid, DIALOG_PLAYER_GPS_CHANGE_NAME);
					case 2: ShowDialog(playerid, DIALOG_PLAYER_GPS_CONFIRM_DELET);
				}
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER);
			return 1;
		}
		case DIALOG_PLAYER_GPS_CHANGE_NAME:
		{
			if(response)
			{
				if(isnull(inputtext))
				{ 
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(strlen(inputtext) > 24)
				{
					SendClientMessage(playerid, -1, "{999999}Caracteres: 1-24.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				format(PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_NAME], 24, "%s", inputtext);
				
				new DB_Query[160];
				format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_GPS` SET `NAME` = '%q' WHERE `ID` = '%d' AND `ID_USER` = '%d';", PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_NAME], PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_ID], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "Has modificado el nombre de este lugar correctamente");
				ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER_OPTION);
			return 1;
		}
		case DIALOG_PLAYER_GPS_CONFIRM_DELET:
		{
			if(response)
			{
				new DB_Query[110];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_GPS` WHERE `ID` = '%d' AND `ID_USER` = '%d';", PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_ID], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_VALID] = false;
				PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_ID] = 0;
				format(PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_NAME], 24, "");
				PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_X] = 0.0;
				PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_Y] = 0.0;
				PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_Z] = 0.0;
				PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_WORLD] = 0;
				PLAYER_GPS[playerid][ PLAYER_TEMP[playerid][pt_GPS_PLAYER_SELECTED] ][player_gps_INTERIOR] = 0;
				
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "Has eliminado este lugar de tu GPS.");
				ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER_OPTION);
			return 1;
		}
		case DIALOG_PLAYER_GPS_DELETE_ALL:
		{
			if(response)
			{
				new DB_Query[90];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_GPS` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				new temp_PLAYER_GPS[Player_GPS_Enum]; 
				for(new i = 0; i != MAX_PLAYER_GPS_SAVES; i ++) PLAYER_GPS[playerid][i] = temp_PLAYER_GPS;
				
				SendClientMessage(playerid, -1, "{CCCCCC}Ha eliminado todos tus lugares guardados.");
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_PLAYER);
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITES:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_0);
					case 1: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_1);
					case 2: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_2);
					case 3: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_3);
					case 4: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_4);
					case 5: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_5);
					case 6: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_6);
					case 7: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_7);
					case 8: SetPlayer_GPS_Checkpoint(playerid, 1480.966918, -1772.065673, 18.795755, 0, 0);
					case 9: ShowDialog(playerid, DIALOG_PLAYER_GPS_SITE_8);
					case 10: SetPlayer_GPS_Checkpoint(playerid, 263.592102, 22.960014, 2.170951, 0, 0);
				}
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS);
			return 1;
		}
		case DIALOG_PLAYER_GPS_WORKS:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return true;
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == WORK_MEDIC) SendClientMessage(playerid, -1, "{CCCCCC}Este trabajo se puede conseguir en cualquier hospital.");
				else SetPlayer_GPS_Checkpoint(playerid, obtain_work_coords[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][obtain_work_MAP_ICON_X], obtain_work_coords[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][obtain_work_MAP_ICON_Y], obtain_work_coords[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][obtain_work_MAP_ICON_Z], 0, 0);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS);
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_0: //Hospitales
		{
			if(response) SetPlayer_GPS_Checkpoint(playerid, Hospital_Spawn_Positions[listitem][0], Hospital_Spawn_Positions[listitem][1], Hospital_Spawn_Positions[listitem][2], 0, 0);
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_SITES);
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_1 .. DIALOG_PLAYER_GPS_SITE_4, DIALOG_PLAYER_GPS_SITE_8: //EE
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return ShowDialog(playerid, DIALOG_PLAYER_GPS);
				SetPlayer_GPS_Checkpoint(playerid, ENTER_EXIT[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][ee_EXT_X], ENTER_EXIT[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][ee_EXT_Y], ENTER_EXIT[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][ee_EXT_Z], ENTER_EXIT[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][ee_EXT_WORLD], ENTER_EXIT[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][ee_EXT_INTERIOR]);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_SITES);
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_5: //Cajeros
		{
			if(response) SetPlayer_GPS_Checkpoint(playerid, ATM_BANK[listitem][atm_X], ATM_BANK[listitem][atm_Y], ATM_BANK[listitem][atm_Z], ATM_BANK[listitem][atm_WORLD], ATM_BANK[listitem][atm_INTERIOR]);
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_SITES);
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_6: //Gasolineras
		{
			if(response) SetPlayer_GPS_Checkpoint(playerid, Fuel_Stations[listitem][0], Fuel_Stations[listitem][1], Fuel_Stations[listitem][2], 0, 0);
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_SITES);
			return 1;
		}
		case DIALOG_PLAYER_GPS_SITE_7: //Concesionarios
		{
			if(response) SetPlayer_GPS_Checkpoint(playerid, SELL_VEHICLES_SHOPS_SPAWN[listitem][0], SELL_VEHICLES_SHOPS_SPAWN[listitem][1], SELL_VEHICLES_SHOPS_SPAWN[listitem][2], 0, 0);
			else ShowDialog(playerid, DIALOG_PLAYER_GPS_SITES);
			return 1;
		}
		case DIALOG_PLAYER_GPS_PROPERTIES:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_GPS_SELECTED_PROPERTY][listitem] == -1) return ShowDialog(playerid, DIALOG_PLAYER_GPS);
				
				new index = GetPropertyIndexByID(PLAYER_TEMP[playerid][pt_PLAYER_GPS_SELECTED_PROPERTY][listitem]);
				if(index != -1) SetPlayer_GPS_Checkpoint(playerid, PROPERTY_INFO[index][property_EXT_X], PROPERTY_INFO[index][property_EXT_Y], PROPERTY_INFO[index][property_EXT_Z], 0, PROPERTY_INFO[index][property_EXT_INTERIOR]);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS);
			return 1;
		}
		case DIALOG_PLAYER_GPS_VEHICLES:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return ShowDialog(playerid, DIALOG_PLAYER_GPS);
				
				if(!ACCOUNT_INFO[playerid][ac_SU])
				{
					if(!PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][player_vehicle_ACCESSIBLE])
					{
						SendClientMessage(playerid, -1, "{999999}No podrás usar este vehículo hasta que no consigas SU.");
					}
				}
				
				new Float:pos[3];
				GetVehiclePos(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem], pos[0], pos[1], pos[2]);
				SetPlayer_GPS_Checkpoint(playerid, pos[0], pos[1], pos[2], 0, 0);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_GPS);
			return 1;
		}
		case DIALOG_PROPERTY_OPTIONS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_PROPERTY_NAME);
					case 1:
					{
						new total;
						for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
						{
							if(IsPlayerConnected(i))
							{
								if( CHARACTER_INFO[i][ch_STATE] == ROLEPLAY_STATE_GUEST_PROPERTY && CHARACTER_INFO[i][ch_INTERIOR_EXTRA] == PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID])
								{
									CHARACTER_INFO[i][ch_STATE] = ROLEPLAY_STATE_NORMAL;
									CHARACTER_INFO[i][ch_INTERIOR_EXTRA] = 0;
									PLAYER_TEMP[i][pt_PROPERTY_INDEX] = -1;
									SetPlayerPosEx(i, PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_X], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Y], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Z], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_ANGLE], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_INTERIOR], 0, PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_FREEZE], false);
									StopAudioStreamForPlayer(i);
									SendClientMessageEx(i, -1, "{bad2d8}%s {FFFFFF}te ha echado de su propiedad.", PLAYER_TEMP[playerid][pt_RP_NAME]);
									total ++;
								}
							}
						}
						if(total == 0) SendClientMessage(playerid, -1, "{999999}No hay nadie en tu propiedad.");
						else SendClientMessageEx(playerid, -1, "{CCCCCC}Has echado %d personas de tu propiedad.", total);
					}
					case 2:
					{
						if(!PLAYER_OBJECT[playerid][po_MP3])
						{
							SendClientMessageEx(playerid, -1, "{999999}No tienes ningún MP3, puedes ir a cualquier 24/7 para comprar uno.");
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							return 1;
						}
						if(PLAYER_TEMP[playerid][pt_PLAYER_WAITING_MP3_HTTP]) return SendClientMessage(playerid, -1, "{999999}Espera que termine la búsqueda actual.");
						
						PLAYER_TEMP[playerid][pt_MUSIC_FOR_PROPERTY] = true;
						Auto_SendPlayerAction(playerid, "busca música en su MP3.");
						ShowDialog(playerid, DIALOG_PLAYER_MP3);
					}
					case 3:
					{
						if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
						if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_ADD_PROPERTIES]) return SendClientMessage(playerid, -1, "{999999}No tienes permiso.");
						
						
						for(new i = 0; i != MAX_TERRITORIES; i ++)
						{
							if(!TERRITORIES[i][territory_VALID]) continue;
							if(!TERRITORIES[i][territory_OCCUPIED]) continue;
							if(TERRITORIES[i][territory_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) continue;
							
							if(IsPointInDynamicArea(TERRITORIES[i][territory_AREA], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_X], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Y], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Z]))
							{
								PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] = i;
								ShowDialog(playerid, DIALOG_CREW_PROPERTY_CONFIRM);
								return 1;
							}
						}
						SendClientMessage(playerid, -1, "{999999}Esta propiedad no está dentro de un territorio de tu banda.");
					}
				}
			}
			return 1;
		}
		case DIALOG_PROPERTY_NAME:
		{
			if(response)
			{
				if(!PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_VALID]) return 1;
				if(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return 1;
				
				if(isnull(inputtext)) return ShowDialog(playerid, dialogid);
				if(strlen(inputtext) > 24)
				{
					ShowDialog(playerid, dialogid);
					SendClientMessage(playerid, 0x999999AA, "{999999}Caracteres: 1-24.");
					return 1;
				}
				
				format(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME], 24, "%s", inputtext);
				
				new DB_Query[200];
				format(DB_Query, sizeof DB_Query, "UPDATE `PROPERTY_OWNER` SET `PROPERTY_NAME` = '%q' WHERE `ID_PROPERTY` = '%d' AND `ID_USER` = '%d';", inputtext, PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessageEx(playerid, -1, "{b5d1ff}Nombre de la propiedad actualizado a '%s'.", inputtext);
			}
			else ShowDialog(playerid, DIALOG_PROPERTY_OPTIONS);
			return 1;
		}
		case DIALOG_PLAYER_MP3:
		{
			if(response)
			{
				if(isnull(inputtext)) return ShowDialog(playerid, dialogid);
				
				ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Cargando ...", "Espera mientras buscamos resultados para su búsqueda ...", "X", "");
				
				new title[100 + 1];
				title = SpaceFix(inputtext);
				new str[180]; format(str, sizeof str, "WEB_SEARCH_YB_PHP.com/search-yb.php?limit=10&song_title=%s", title);
				
				PLAYER_TEMP[playerid][pt_PLAYER_WAITING_MP3_HTTP] = true;
				HTTP(playerid, HTTP_GET, str, "", "OnPlayerSongFound");
			}
			return 1;
		}
		case DIALOG_PLAYER_MP3_RESULTS:
		{
			if(response)
			{
				new url[128];
				format(url, 128, "http://www.youtubeinmp3.com/fetch/?video=http://www.youtube.com/watch?v=%s", PLAYER_DIALOG_MP3_RESULT[playerid][listitem][videoID]);
				if(PLAYER_TEMP[playerid][pt_MUSIC_FOR_PROPERTY])
				{
					
					for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
					{
						if(IsPlayerConnected(i))
						{
							if( (CHARACTER_INFO[i][ch_STATE] == ROLEPLAY_STATE_OWN_PROPERTY || CHARACTER_INFO[i][ch_STATE] == ROLEPLAY_STATE_GUEST_PROPERTY) && CHARACTER_INFO[i][ch_INTERIOR_EXTRA] == CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA])
							{
								PlayAudioStreamForPlayer(i, url);
								SendClientMessageEx(i, -1, "{CCCCCC}Reproduciendo {90C3D4}'%s' {CCCCCC}usa {CCFF00}/stop {CCCCCC}para parar la música.", PLAYER_DIALOG_MP3_RESULT[playerid][listitem][yt_title]);
							}
						}
					}
					PLAYER_TEMP[playerid][pt_MUSIC_FOR_PROPERTY] = false;
					Auto_SendPlayerAction(playerid, "pone música en su propiedad.");
				}
				else if(PLAYER_TEMP[playerid][pt_MUSIC_FOR_VEHICLE])
				{
					
					for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(IsPlayerInAnyVehicle(i))
							{
								if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(i))
								{
									PlayAudioStreamForPlayer(i, url);
									SendClientMessageEx(i, -1, "{CCCCCC}Reproduciendo {90C3D4}'%s' {CCCCCC}usa {CCFF00}/stop {CCCCCC}para parar la música.", PLAYER_DIALOG_MP3_RESULT[playerid][listitem][yt_title]);
								}
							}
						}
					}
					PLAYER_TEMP[playerid][pt_MUSIC_FOR_VEHICLE] = false;
					if(PLAYER_VEHICLES[ GetPlayerVehicleID(playerid) ][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID]) Auto_SendPlayerAction(playerid, "pone música en su vehículo.");
					else Auto_SendPlayerAction(playerid, "pone música en el vehículo.");
				}
				else
				{
					PlayAudioStreamForPlayer(playerid, url);
					SendClientMessageEx(playerid, -1, "{CCCCCC}Reproduciendo {90C3D4}'%s' {CCCCCC}usa {CCFF00}/stop {CCCCCC}para parar la música.", PLAYER_DIALOG_MP3_RESULT[playerid][listitem][yt_title]);
					Auto_SendPlayerAction(playerid, "escucha música de su MP3 en sus auriculares.");
				}
			}
			return 1;
		}
		case DIALOG_BUY_VEHICLE:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] == INVALID_VEHICLE_ID) return 1;
				if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_TYPE] != VEHICLE_TYPE_SELL) return 1;
				if(!SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_VALID]) return 1;
				if(SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_LEVEL] > ACCOUNT_INFO[playerid][ac_LEVEL]) return 1;
				if(BANK_ACCOUNT[playerid][bank_account_ID] == 0) return 1;
				if(SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE] > BANK_ACCOUNT[playerid][bank_account_BALANCE]) return 1;
			
				new vid = AddPersonalVehicle
				(
					playerid,
					GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_MODELID],
					SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][0],
					SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][1],
					SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][2],
					SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][3],
					GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_COLOR_1],
					GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_COLOR_2],
					VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][gb_vehicle_MODELID] - 400 ][vehicle_info_MAX_GAS]
				);
				if(!vid) return SendClientMessage(playerid, -1, "{999999}No se pueden añadir más vehículos.");
				
				
				if(PLAYER_PHONE[playerid][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "VEHICULO COMPRADO: -%s$", number_format_thousand(SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE]));
					RegisterPhoneMessage(6740, PLAYER_PHONE[playerid][player_phone_NUMBER], message);
					if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(playerid, 6740), message);
				}
				
				BANK_ACCOUNT[playerid][bank_account_BALANCE] -= SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE];
				new DB_Query_update[160];
				format(DB_Query_update, sizeof(DB_Query_update), "UPDATE `BANK_ACCOUNTS` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';", BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID]);
				db_query(Database, DB_Query_update);
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_BUY_VEHICLE, SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_PRICE]);
				
				SendClientMessage(playerid, -1, "{6a98e2}¡Vehículo comprado! {FFFFFF}Utiliza {6a98e2}/ayuda vehiculos {FFFFFF}para ver que puedes hacer con tu vehículo.");
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				
				new Float:pos[4];
				pos[0] = SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][0];
				pos[1] = SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][1];
				pos[2] = SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][2];
				pos[3] = SELL_VEHICLES_SHOPS_SPAWN[ SELL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] ][sell_vehicle_SHOP] ][3];
				
				pos[0] += (2.0 * floatsin(-(pos[3] + 90.0), degrees));
				pos[1] += (2.0 * floatcos(-(pos[3] + 90.0), degrees));
				SetPlayerPosEx(playerid, pos[0], pos[1], pos[2], pos[3], 0, 0);
				
				if(!ACCOUNT_INFO[playerid][ac_SU]) ReLockPlayerVehicles(playerid);
			}
			return 1;
		}
		case DIALOG_NOTARY:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						PLAYER_TEMP[playerid][pt_NOTARY_OPTION] = 0;
						ShowDialog(playerid, DIALOG_NOTARY_SELECT_PROPERTY);
					}
					case 1:
					{
						PLAYER_TEMP[playerid][pt_NOTARY_OPTION] = 0;
						ShowDialog(playerid, DIALOG_NOTARY_SELECT_VEHICLE);
					}
					case 2:
					{
						PLAYER_TEMP[playerid][pt_NOTARY_OPTION] = 1;
						ShowDialog(playerid, DIALOG_NOTARY_SELECT_PROPERTY);
					}
					case 3:
					{
						PLAYER_TEMP[playerid][pt_NOTARY_OPTION] = 1;
						ShowDialog(playerid, DIALOG_NOTARY_SELECT_VEHICLE);
					}
				}
			}
			return 1;
		}
		case DIALOG_NOTARY_SELECT_PROPERTY:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				
				PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] = GetPropertyIndexByID(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem]);
				if(PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] == -1) return SendClientMessage(playerid, -1, "PROPIEDAD ID no encontrada.");
				
				switch(PLAYER_TEMP[playerid][pt_NOTARY_OPTION])
				{
					case 0: ShowDialog(playerid, DIALOG_PROPERTY_BANK_SELL);
					case 1: ShowDialog(playerid, DIALOG_PROPERTY_SELL_PRICE);
					case 2:
					{
						PLAYER_TEMP[playerid][pt_SHOP_ADD_TYPE] = SHOP_ARTICLE_TYPE_PROPERTY;
						PLAYER_TEMP[playerid][pt_SHOP_ADD_MODELID] = 1273;
						PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL1] = 0;
						PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL2] = 0;
						ShowDialog(playerid, DIALOG_SHOP_ADD_TEXT);
					}
				}
			}
			else
			{
				if(PLAYER_TEMP[playerid][pt_NOTARY_OPTION] == 2) ShowDialog(playerid, DIALOG_SHOP_ADD);
				else ShowDialog(playerid, DIALOG_NOTARY);
			}
			return 1;
		}
		case DIALOG_PROPERTY_BANK_SELL:
		{
			if(response)
			{
				if(!PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_VALID]) return 1;
				if(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return 1;
				if(BANK_ACCOUNT[playerid][bank_account_ID] == 0) return SendClientMessage(playerid, -1, "{999999}Necesitas tener una cuenta bancaria para vender la propiedad.");

				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_SOLD] = false;
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_CREW] = false;
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_OWNER_ID] = 0;
				format(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID]);
				
				new label_str[256], info[3];
				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
						Interior: {C4FF66}%d\n\
						{FFFFFF}Precio: {C4FF66}%s$\n\
						{FFFFFF}Nivel necesario: {C4FF66}%d\n\
						{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
					", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE]), PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_LEVEL]
				);
				UpdateDynamic3DTextLabelText(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
				
				DestroyDynamicPickup(PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_PICKUP_ID]);
				PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_PICKUP_ID] = INVALID_STREAMER_ID;
				
				PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_PICKUP_ID] = CreateDynamicPickup(1273, 1, PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_X], PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_Y], PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_Z], 0, PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_INTERIOR]);
				info[0] = PICKUP_TYPE_PROPERTY;
				info[1] = PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]; // Index
				info[2] = 2; // Pickup Exterior
				Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
				
				new Float:price, payment;
				price = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE_BASE];
				if(ACCOUNT_INFO[playerid][ac_SU]) payment = floatround( floatmul(price, 0.50) );
				else payment = floatround( floatmul(price, 0.25) );
				
				if(PLAYER_PHONE[playerid][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "PROPIEDAD VENDIDA: +%s$", number_format_thousand(payment));
					RegisterPhoneMessage(6740, PLAYER_PHONE[playerid][player_phone_NUMBER], message);
					if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(playerid, 6740), message);
				}
				
				BANK_ACCOUNT[playerid][bank_account_BALANCE] += payment;
				
				new DB_Query_update[350];
				format(DB_Query_update, sizeof(DB_Query_update), "\
					UPDATE `BANK_ACCOUNTS` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';\
					DELETE FROM `PROPERTY_OWNER` WHERE `ID_PROPERTY` = '%d' AND `ID_USER` = '%d';\
				",
					BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID],
					PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID], ACCOUNT_INFO[playerid][ac_ID]
				);
				db_query(Database, DB_Query_update);
						
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_SOLD_PROPERTY, payment);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has vendido esta propiedad, has recibido %s$ en tu cuenta bancaria.", number_format_thousand(payment));
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			
			}
			else ShowDialog(playerid, DIALOG_NOTARY_SELECT_PROPERTY);
			return 1;
		}
		case DIALOG_PROPERTY_SELL_PRICE:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0])) return ShowDialog(playerid, dialogid);
				
				new Float:price, min_price, max_price;
				price = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE];
				min_price = floatround( floatmul(price, 0.15) );
				max_price = floatround( floatmul(price, 6.0) );
				
				if(inputtext[0] < min_price || inputtext[0] > max_price)
				{
					SendClientMessage(playerid, -1, "{999999}Este precio no está dentro del rango ofrecido.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_NOTARY_PRICE] = inputtext[0];
				ShowDialog(playerid, DIALOG_PROPERTY_SELL_TO_PLAYER);
			}
			else ShowDialog(playerid, DIALOG_NOTARY_SELECT_PROPERTY);
			return 1;
		}
		case DIALOG_PROPERTY_SELL_TO_PLAYER:
		{
			if(response)
			{
				if(sscanf(inputtext, "u", inputtext[0])) return ShowDialog(playerid, dialogid);
				
				if(!IsPlayerConnected(inputtext[0])) return SendClientMessage(playerid, -1, "{999999}Error, el comprador está desconectado.");
				if(inputtext[0] == playerid) return SendClientMessage(playerid, -1, "{999999}¿Pero como te vas a vender algo a ti mismo?");
				if(PLAYER_TEMP[inputtext[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}Error, el comprador no está disponible.");
				
				if(ENTER_EXIT[ PLAYER_TEMP[inputtext[0]][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_CITY_HALL_LS) return SendClientMessage(playerid, 0x999999AA, "El comprador no está en la sala.");
				if(!IsPlayerInRangeOfPoint(inputtext[0], 3.0, -474.596282, 289.679107, 2004.584960)) return SendClientMessage(playerid, 0x999999AA, "El comprador no está en la sala.");
				if(BANK_ACCOUNT[inputtext[0]][bank_account_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "El comprador no tiene cuenta bancaria.");
				
				new DBResult:Result, DB_Query[120], player_properties;
				format(DB_Query, sizeof(DB_Query), "SELECT COUNT() AS `PROPERTIES` FROM `PROPERTY_OWNER` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[inputtext[0]][ac_ID]);
				Result = db_query(Database, DB_Query);
				if(db_num_rows(Result)) player_properties = db_get_field_assoc_int(Result, "PROPERTIES");
				db_free_result(Result);
				
				if(player_properties >= MAX_SU_PROPERTIES) return SendClientMessage(playerid, -1, "{999999}El comprador no puede adquirir más propiedades.");
				if(!ACCOUNT_INFO[inputtext[0]][ac_SU])
				{
					if(player_properties >= MAX_NU_PROPERTIES) return SendClientMessage(playerid, -1, "{999999}El comprador no puede adquirir más propiedades.");
				}
				
				if(ACCOUNT_INFO[inputtext[0]][ac_LEVEL] < 3) return SendClientMessage(playerid, -1, "{999999}Error, el comprador necesita ser al menos nivel 3.");
				if(PLAYER_TEMP[playerid][pt_NOTARY_PRICE] > BANK_ACCOUNT[inputtext[0]][bank_account_BALANCE]) return SendClientMessage(playerid, -1, "{999999}Error, el comprador no tiene el dinero que pides.");
				
				SendClientMessage(playerid, -1, "{CCCCCC}Tu oferta se ha enviado al comprador, espera para ver si la acepta.");
				
				new action[64]; format(action, sizeof action, "quiere llegar a un acuerdo con %s.", PLAYER_TEMP[inputtext[0]][pt_RP_NAME]);
				Auto_SendPlayerAction(playerid, action);
				
				PLAYER_TEMP[inputtext[0]][pt_PLAYER_PROPERTY_SELECTED] = PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED];
				PLAYER_TEMP[inputtext[0]][pt_NOTARY_PRICE] = PLAYER_TEMP[playerid][pt_NOTARY_PRICE];
				PLAYER_TEMP[inputtext[0]][pt_NOTARY_TO_PLAYER] = playerid;
				PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] = inputtext[0];
				
				ShowDialog(inputtext[0], DIALOG_SELL_CONFIRM_PROPERTY);
			}
			else ShowDialog(playerid, DIALOG_PROPERTY_SELL_PRICE);
			return 1;
		}
		case DIALOG_SELL_CONFIRM_PROPERTY:
		{
			if(response)
			{
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER])) return SendClientMessage(playerid, -1, "{999999}El vendedor se ha desconectado.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_NOTARY_TO_PLAYER] != playerid) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}Error, el vendedor no está disponible.");
				if(ENTER_EXIT[ PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_CITY_HALL_LS) return SendClientMessage(playerid, 0x999999AA, "El vendedor no está en la sala.");
				if(!IsPlayerInRangeOfPoint(PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER], 3.0, -474.596282, 289.679107, 2004.584960)) return SendClientMessage(playerid, 0x999999AA, "El vendedor no está en la sala.");
				if(BANK_ACCOUNT[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][bank_account_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "El vendedor no tiene cuenta bancaria.");
				
				// Traspasar
				new label_str[256];
				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d\n\n\
						{FFFFFF}Propietario: {C4FF66}%s\n\
						{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
					", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID], ACCOUNT_INFO[playerid][ac_NAME]
				);
				UpdateDynamic3DTextLabelText(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
				
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_OWNER_ID] = ACCOUNT_INFO[playerid][ac_ID];
				new DB_Query_update[350];
				format(DB_Query_update, sizeof(DB_Query_update), "UPDATE `PROPERTY_OWNER` SET `ID_USER` = '%d' WHERE `ID_PROPERTY` = '%d';",
					ACCOUNT_INFO[playerid][ac_ID],
					PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID]
				);
				db_query(Database, DB_Query_update);
				
				
				// Banco
				new price = PLAYER_TEMP[playerid][pt_NOTARY_PRICE], seller = PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER];
				
				if(PLAYER_PHONE[playerid][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "PROPIEDAD COMPRADA: -%s$", number_format_thousand(price));
					RegisterPhoneMessage(6740, PLAYER_PHONE[playerid][player_phone_NUMBER], message);
					if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(playerid, 6740), message);
				}
				if(PLAYER_PHONE[seller][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "PROPIEDAD VENDIDA: +%s$", number_format_thousand(price));
					RegisterPhoneMessage(6740, PLAYER_PHONE[seller][player_phone_NUMBER], message);
					if(PLAYER_PHONE[seller][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(seller, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(seller, 6740), message);
				}
				
				BANK_ACCOUNT[playerid][bank_account_BALANCE] -= price;
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_BUY_PROPERTY, price);
				
				BANK_ACCOUNT[seller][bank_account_BALANCE] += price;
				RegisterBankAccountTransaction(BANK_ACCOUNT[seller][bank_account_ID], BANK_TRANSACTION_SOLD_PROPERTY, price);
				
				
				format(DB_Query_update, sizeof(DB_Query_update), 
					"\
						UPDATE `BANK_ACCOUNT` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';\
						UPDATE `BANK_ACCOUNT` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';\
					",
						BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID],
						BANK_ACCOUNT[seller][bank_account_BALANCE], BANK_ACCOUNT[seller][bank_account_ID]
				);
				db_query(Database, DB_Query_update);
				
				
				SendClientMessageEx(playerid, -1, "{6a98e2}¡Propiedad #%d comprada! {FFFFFF}Ahora puedes ir a tu casa, si no sabes donde es puedes marcarla con el {6a98e2}/GPS.", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID]);
				SendClientMessageEx(seller, -1, "{6a98e2}¡Propiedad #%d vendida! {FFFFFF}Has recibido {d1f442}%s$ {FFFFFF}en tu cuenta bancaria.", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID], number_format_thousand(price));
				PlayerPlaySound(seller, 1058, 0.0, 0.0, 0.0);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				
				new action[64]; format(action, sizeof action, "y %s han llegado a un acuerdo.", PLAYER_TEMP[seller][pt_RP_NAME]);
				Auto_SendPlayerAction(playerid, action);
			}
			return 1;
		}
		case DIALOG_NOTARY_SELECT_VEHICLE:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				
				switch(PLAYER_TEMP[playerid][pt_NOTARY_OPTION])
				{
					case 0: ShowDialog(playerid, DIALOG_VEHICLE_BANK_SELL);
					case 1: ShowDialog(playerid, DIALOG_VEHICLE_SELL_PRICE);
					case 2:
					{
						PLAYER_TEMP[playerid][pt_SHOP_ADD_TYPE] = SHOP_ARTICLE_TYPE_VEHICLE;
						PLAYER_TEMP[playerid][pt_SHOP_ADD_MODELID] = GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID];
						PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL1] = GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_COLOR_1];
						PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL2] = GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_COLOR_2];
						ShowDialog(playerid, DIALOG_SHOP_ADD_TEXT);
					}
				}
			}
			else
			{
				if(PLAYER_TEMP[playerid][pt_NOTARY_OPTION] == 2) ShowDialog(playerid, DIALOG_SHOP_ADD);
				else ShowDialog(playerid, DIALOG_NOTARY);
			}
			return 1;
		}
		case DIALOG_VEHICLE_BANK_SELL:
		{
			if(response)
			{
				if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_VALID]) return 1;
				if(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return 1;
				if(BANK_ACCOUNT[playerid][bank_account_ID] == 0) return SendClientMessage(playerid, -1, "{999999}Necesitas tener una cuenta bancaria para vender el vehículo.");

				new Float:price, payment;
				price = VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE];
				if(ACCOUNT_INFO[playerid][ac_SU]) payment = floatround( floatmul(price, 0.50) );
				else payment = floatround( floatmul(price, 0.25) );
				
				//Destruir veh
				new DB_Query_update[350];
				format(DB_Query_update, sizeof(DB_Query_update), "DELETE FROM `PLAYER_VEHICLES` WHERE `ID` = '%d';", PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][player_vehicle_ID]);
				db_query(Database, DB_Query_update);
				
				DestroyVehicleEx(PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED]);
				
				
				if(PLAYER_PHONE[playerid][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "VEHICULO VENDIDO: +%s$", number_format_thousand(payment));
					RegisterPhoneMessage(6740, PLAYER_PHONE[playerid][player_phone_NUMBER], message);
					if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(playerid, 6740), message);
				}
				BANK_ACCOUNT[playerid][bank_account_BALANCE] += payment;
				format(DB_Query_update, sizeof(DB_Query_update), "UPDATE `BANK_ACCOUNTS` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';", BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID]);
				db_query(Database, DB_Query_update);
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_SOLD_VEHICLE, payment);
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has vendido este vehículo, has recibido %s$ en tu cuenta bancaria.", number_format_thousand(payment));
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				
				if(!ACCOUNT_INFO[playerid][ac_SU]) ReLockPlayerVehicles(playerid);
			}
			else ShowDialog(playerid, DIALOG_NOTARY_SELECT_VEHICLE);
			return 1;
		}
		case DIALOG_VEHICLE_SELL_PRICE:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0])) return ShowDialog(playerid, dialogid);
				
				new Float:price, min_price, max_price;
				price = VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE];
				min_price = floatround( floatmul(price, 0.15) );
				max_price = floatround( floatmul(price, 6.0) );
				
				if(inputtext[0] < min_price || inputtext[0] > max_price)
				{
					SendClientMessage(playerid, -1, "{999999}Este precio no está dentro del rango ofrecido.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_NOTARY_PRICE] = inputtext[0];
				ShowDialog(playerid, DIALOG_VEHICLE_SELL_TO_PLAYER);
			}
			else ShowDialog(playerid, DIALOG_NOTARY_SELECT_VEHICLE);
			return 1;
		}
		case DIALOG_VEHICLE_SELL_TO_PLAYER:
		{
			if(response)
			{
				if(sscanf(inputtext, "u", inputtext[0])) return ShowDialog(playerid, dialogid);
				
				if(!IsPlayerConnected(inputtext[0])) return SendClientMessage(playerid, -1, "{999999}Error, el comprador está desconectado.");
				if(inputtext[0] == playerid) return SendClientMessage(playerid, -1, "{999999}¿Pero como te vas a vender algo a ti mismo?");
				if(PLAYER_TEMP[inputtext[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}Error, el comprador no está disponible.");
				
				if(ENTER_EXIT[ PLAYER_TEMP[inputtext[0]][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_CITY_HALL_LS) return SendClientMessage(playerid, 0x999999AA, "El comprador no está en la sala.");
				if(!IsPlayerInRangeOfPoint(inputtext[0], 3.0, -474.596282, 289.679107, 2004.584960)) return SendClientMessage(playerid, 0x999999AA, "El comprador no está en la sala.");
				if(BANK_ACCOUNT[inputtext[0]][bank_account_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "El comprador no tiene cuenta bancaria.");
				
				new DBResult:Result, DB_Query[120], player_vehicles;
				format(DB_Query, sizeof(DB_Query), "SELECT COUNT(`ID_USER`) AS `VEHICLES` FROM `PLAYER_VEHICLES` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[inputtext[0]][ac_ID]);
				Result = db_query(Database, DB_Query);
				if(db_num_rows(Result)) player_vehicles = db_get_field_assoc_int(Result, "VEHICLES");
				db_free_result(Result);
				
				if(player_vehicles >= MAX_SU_VEHICLES) return SendClientMessage(playerid, -1, "{999999}El comprador no puede adquirir más vehículos.");
				if(!ACCOUNT_INFO[inputtext[0]][ac_SU])
				{
					if(player_vehicles >= MAX_NU_VEHICLES) return SendClientMessage(playerid, -1, "{999999}El comprador no puede adquirir más vehículos.");
				}
				
				if(ACCOUNT_INFO[inputtext[0]][ac_LEVEL] < 3) return SendClientMessage(playerid, -1, "{999999}Error, el comprador necesita ser al menos nivel 3.");
				if(PLAYER_TEMP[playerid][pt_NOTARY_PRICE] > BANK_ACCOUNT[inputtext[0]][bank_account_BALANCE]) return SendClientMessage(playerid, -1, "{999999}Error, el comprador no tiene el dinero que pides.");
				
				SendClientMessage(playerid, -1, "{CCCCCC}Tu oferta se ha enviado al comprador, espera para ver si la acepta.");
				
				new action[64]; format(action, sizeof action, "quiere llegar a un acuerdo con %s.", PLAYER_TEMP[inputtext[0]][pt_RP_NAME]);
				Auto_SendPlayerAction(playerid, action);
				
				PLAYER_TEMP[inputtext[0]][pt_PLAYER_VEHICLE_SELECTED] = PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED];
				PLAYER_TEMP[inputtext[0]][pt_NOTARY_PRICE] = PLAYER_TEMP[playerid][pt_NOTARY_PRICE];
				PLAYER_TEMP[inputtext[0]][pt_NOTARY_TO_PLAYER] = playerid;
				PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] = inputtext[0];
				
				ShowDialog(inputtext[0], DIALOG_SELL_CONFIRM_VEHICLE);
			}
			else ShowDialog(playerid, DIALOG_PROPERTY_SELL_PRICE);
			return 1;
		}
		case DIALOG_SELL_CONFIRM_VEHICLE:
		{
			if(response)
			{
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER])) return SendClientMessage(playerid, -1, "{999999}El vendedor se ha desconectado.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_NOTARY_TO_PLAYER] != playerid) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}Error, el vendedor no está disponible.");
				if(ENTER_EXIT[ PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_CITY_HALL_LS) return SendClientMessage(playerid, 0x999999AA, "El vendedor no está en la sala.");
				if(!IsPlayerInRangeOfPoint(PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER], 3.0, -474.596282, 289.679107, 2004.584960)) return SendClientMessage(playerid, 0x999999AA, "El vendedor no está en la sala.");
				if(BANK_ACCOUNT[ PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER] ][bank_account_ID] == 0) return SendClientMessage(playerid, 0x999999AA, "El vendedor no tiene cuenta bancaria.");
				
				// Traspasar
				
				PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][player_vehicle_OWNER_ID] = ACCOUNT_INFO[playerid][ac_ID];
				new DB_Query_update[350];
				format(DB_Query_update, sizeof(DB_Query_update), "UPDATE `PLAYER_VEHICLES` SET `ID_USER` = '%d' WHERE `ID` = '%d';",
					ACCOUNT_INFO[playerid][ac_ID],
					PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][player_vehicle_ID]
				);
				db_query(Database, DB_Query_update);
				
				
				// Banco
				new price = PLAYER_TEMP[playerid][pt_NOTARY_PRICE], seller = PLAYER_TEMP[playerid][pt_NOTARY_TO_PLAYER];
				
				if(PLAYER_PHONE[playerid][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "VEHICULO COMPRADO: -%s$", number_format_thousand(price));
					RegisterPhoneMessage(6740, PLAYER_PHONE[playerid][player_phone_NUMBER], message);
					if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(playerid, 6740), message);
				}
				if(PLAYER_PHONE[seller][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "VEHICULO VENDIDO: +%s$", number_format_thousand(price));
					RegisterPhoneMessage(6740, PLAYER_PHONE[seller][player_phone_NUMBER], message);
					if(PLAYER_PHONE[seller][player_phone_STATE] == PHONE_STATE_ON) SendClientMessageEx(seller, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(seller, 6740), message);
				}
				
				BANK_ACCOUNT[playerid][bank_account_BALANCE] -= price;
				RegisterBankAccountTransaction(BANK_ACCOUNT[playerid][bank_account_ID], BANK_TRANSACTION_BUY_VEHICLE, price);
				
				BANK_ACCOUNT[seller][bank_account_BALANCE] += price;
				RegisterBankAccountTransaction(BANK_ACCOUNT[seller][bank_account_ID], BANK_TRANSACTION_SOLD_VEHICLE, price);
				
				
				format(DB_Query_update, sizeof(DB_Query_update), 
					"\
						UPDATE `BANK_ACCOUNT` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';\
						UPDATE `BANK_ACCOUNT` SET `BALANCE` = '%d' WHERE `ID_ACCOUNT` = '%d';\
					",
						BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID],
						BANK_ACCOUNT[seller][bank_account_BALANCE], BANK_ACCOUNT[seller][bank_account_ID]
				);
				db_query(Database, DB_Query_update);
				
				
				SendClientMessageEx(playerid, -1, "{6a98e2}¡Vehículo %s comprado! {FFFFFF}Utiliza {6a98e2}/GPS {FFFFFF}para localizarlo.", VEHICLE_INFO[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_VEHICLE_SELECTED] ][gb_vehicle_MODELID] - 400 ][vehicle_info_NAME]);
				SendClientMessageEx(seller, -1, "{6a98e2}¡Vehículo vendido! {FFFFFF}Has recibido {d1f442}%s$ {FFFFFF}en tu cuenta bancaria.", number_format_thousand(price));
				PlayerPlaySound(seller, 1058, 0.0, 0.0, 0.0);
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				
				new action[64]; format(action, sizeof action, "y %s han llegado a un acuerdo.", PLAYER_TEMP[seller][pt_RP_NAME]);
				Auto_SendPlayerAction(playerid, action);
				
				if(!ACCOUNT_INFO[seller][ac_SU]) ReLockPlayerVehicles(seller);
				if(!ACCOUNT_INFO[playerid][ac_SU]) ReLockPlayerVehicles(playerid);
			}
			return 1;
		}
		case DIALOG_SELECT_TRUCK_TYPE:
		{
			if(response)
			{
				if(Truck_Contents[listitem][truck_content_EXP] > PLAYER_SKILLS[playerid][WORK_TRUCK])
				{
					SendClientMessageEx(playerid, -1, "{999999}Has realizado %d trabajos como camionero, necesitas %d para este viaje.", PLAYER_SKILLS[playerid][WORK_TRUCK], Truck_Contents[listitem][truck_content_EXP]);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new vehicleid = GetPlayerVehicleID(playerid);
				TRUCK_VEHICLE[vehicleid][truck_vehicle_POINT] = listitem;
				
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], "Cargando_cami¦n...");
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
				
				PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] = 35.0;
				UpdatePlayerLoadingTruckSize(playerid);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][7]);
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][9]);
				PLAYER_TEMP[playerid][pt_TIMERS][9] = SetTimerEx("TruckLoadUp", 1000, false, "ii", playerid, vehicleid);
				
				SendClientMessage(playerid, -1, "{CCCCCC}El camión se está cargando, si sales de él se cancelará el viaje.");
			}
			else
			{
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][9]);
				PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0]);
				PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1]);
				PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2]);
				PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
				SetVehicleToRespawnEx(GetPlayerVehicleID(playerid));
			}
			return 1;
		}
		case DIALOG_TUNING_MENU_PART:
		{
			if(response)
			{
				if(isnull(PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_NAME])) return 1;
				
				if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
				new Float:Vehicle_Pos[3];
				GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
				
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
				
				if(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] < PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_PIECES])
				{
					ShowDialog(playerid, dialogid);
					SendClientMessage(playerid, -1, "{999999}No tienes suficientes piezas, puedes comprar más piezas en el taller.");
					return 1;
				}
				
				format(PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PART], 24, "%s", PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_NAME]);
				PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES] = PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_PIECES];
				
				ShowDialog(playerid, DIALOG_TUNING_MENU_COMPONENT);
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_TUNING_MENU_COMPONENT:
		{
			if(response)
			{
				if(isnull(PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_NAME]) || !PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID]) return 1;
				
				if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
				new Float:Vehicle_Pos[3];
				GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
				
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
				
				if(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] < PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES])
				{
					SendClientMessage(playerid, -1, "{999999}No tienes suficientes piezas, puedes comprar más piezas en el taller.");
					return 1;
				}
				
				if(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
				{
					new vehicleid = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
					
					new slot = GetVehicleComponentType( PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID] );
					new current_component = GetVehicleComponentInSlot(vehicleid, slot);
					if(current_component) RemoveVehicleComponent(vehicleid, current_component);
					
					GLOBAL_VEHICLES[vehicleid][gb_vehicle_COMPONENTS][slot] = PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID];
					AddVehicleComponent(vehicleid, PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID]);
					
					PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] -= PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES];
					SendClientMessageEx(playerid, -1, "{CCCCCC}Componente '%s' añadido, has necesitado %d piezas.", PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_NAME], PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES]);
				}
				else
				{
					format(PLAYER_TEMP[playerid][pt_TUNING_SELECTED_COMPONENT], 24, "%s", PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_NAME]);
					PLAYER_TEMP[playerid][pt_TUNING_SELECTED_COMPONENT_ID] = PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID];
					
					ShowDialog(playerid, DIALOG_MECHANIC_TUNING_PRICE);
				}
			}
			else ShowDialog(playerid, DIALOG_TUNING_MENU_PART);
			return 1;
		}
		case DIALOG_MECHANIC_MENU:
		{
			if(response)
			{
				if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
				new Float:Vehicle_Pos[3];
				GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
				
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
				
				switch(listitem)
				{
					case 0: // Reparar
					{
						if(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] < 10) return SendClientMessage(playerid, -1, "{999999}No tienes suficientes piezas, puedes comprar más piezas en el taller.");
						
						if(gettime() < GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_LAST_REPAIR_TIME] + 300)
						{
							new time = (300-(gettime()-GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_LAST_REPAIR_TIME]));
							SendClientMessageEx(playerid, 0x999999AA, "Tienes que esperar %s minutos para volver a reparar este vehículo.", TimeConvert(time));
							return 1;
						}
						
						if(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
						{
							PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] -= 10;
							RepairVehicleEx(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], playerid);
							
							SendClientMessage(playerid, -1, "{CCCCCC}Este es tu vehículo por lo que no se cobrará.");
							SendClientMessage(playerid, -1, "{CCCCCC}Has necesitado 10 piezas para la reparacion.");
							return 1;
						}
						else
						{
							if(!PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_VALID])
							{
								if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_DRIVER] == playerid || GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_LAST_DRIVER] == playerid)
								{
									PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
									PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] -= 10;
									RepairVehicleEx(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], playerid);
									
									SendClientMessage(playerid, -1, "{CCCCCC}Eres el conductor o el último conductor de este vehículo por lo que no se cobrará.");
									SendClientMessage(playerid, -1, "{CCCCCC}Has necesitado 10 piezas para la reparacion.");
									return 1;
								}
							}
							ShowDialog(playerid, DIALOG_MECHANIC_REPAIR_PRICE);
						}
					}
					case 1:
					{
						if(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] < 5)
						{
							ShowDialog(playerid, dialogid);
							SendClientMessage(playerid, -1, "{999999}No tienes suficientes piezas, puedes comprar más piezas en el taller.");
							return 1;
						}
						
						if(!PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_VALID])
						{
							ShowDialog(playerid, dialogid);
							SendClientMessage(playerid, -1, "{999999}Solo los vehículos personales se pueden pintar.");
							return 1;
						}
						
						ShowDialog(playerid, DIALOG_MECHANIC_SELECT_COL_SLOT);
					}
					case 2:
					{
						if(100 > PLAYER_SKILLS[playerid][WORK_MECHANIC])
						{
							SendClientMessageEx(playerid, -1, "{999999}Has realizado %d reparaciones como mecánico, necesitas 100 para tunear vehículos.", PLAYER_SKILLS[playerid][WORK_MECHANIC]);
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						ShowDialog(playerid, DIALOG_MECHANIC_REMOVE_COMPONEN);
					}
					case 3:
					{
						if(100 > PLAYER_SKILLS[playerid][WORK_MECHANIC])
						{
							SendClientMessageEx(playerid, -1, "{999999}Has realizado %d reparaciones como mecánico, necesitas 100 para tunear vehículos.", PLAYER_SKILLS[playerid][WORK_MECHANIC]);
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						if(!PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_VALID])
						{
							ShowDialog(playerid, dialogid);
							SendClientMessage(playerid, -1, "{999999}Solo los vehículos personales se pueden tunear.");
							return 1;
						}
						
						ShowDialog(playerid, DIALOG_TUNING_MENU_PART);
					}
					case 4:
					{
						if(100 > PLAYER_SKILLS[playerid][WORK_MECHANIC])
						{
							SendClientMessageEx(playerid, -1, "{999999}Has realizado %d reparaciones como mecánico, necesitas 100 para paintjobs.", PLAYER_SKILLS[playerid][WORK_MECHANIC]);
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						if(!PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_VALID])
						{
							ShowDialog(playerid, dialogid);
							SendClientMessage(playerid, -1, "{999999}Solo los vehículos personales se le pueden cambiar el paintjob.");
							return 1;
						}
						ShowDialog(playerid, DIALOG_TUNING_PAINTJOB);
					}
				}
			}
			return 1;
		}
		case DIALOG_MECHANIC_REPAIR_PRICE:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
			
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}El precio no es correcto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] < 0 || inputtext[0] > 2000)
				{
					SendClientMessage(playerid, -1, "{999999}El rango del precio es: 0$ - 2.000$.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_VALID])
				{
					new buyer = GetPlayerIdFromAccountId(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID]);
					if(buyer == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo no está cerca.");
					
					new Float:mechanic_pos[3];
					GetPlayerPos(playerid, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2]);
					if(!IsPlayerInRangeOfPoint(buyer, 10.0, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2])) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo está demasiado lejos.");
					
					PLAYER_TEMP[buyer][pt_MECHANIC_PID] = playerid;
					PLAYER_TEMP[buyer][pt_MECHANIC_AID] = ACCOUNT_INFO[playerid][ac_ID];
					PLAYER_TEMP[buyer][pt_MECHANIC_PRICE] = inputtext[0];
					format(PLAYER_TEMP[buyer][pt_MECHANIC_TEXT], 64, "Reparación completa del vehículo");
					PLAYER_TEMP[buyer][pt_MECHANIC_TYPE] = MECHANIC_OPTION_REPAIR;
					PLAYER_TEMP[buyer][pt_MECHANIC_EXTRA] = 0;
					PLAYER_TEMP[buyer][pt_MECHANIC_VEHICLE_ID] = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
					PLAYER_TEMP[buyer][pt_MECHANIC_PIECES] = 10;
					PLAYER_TEMP[buyer][pt_MECHANIC_TIME] = gettime();
					
					ShowDialog(buyer, DIALOG_MECHANIC_ACCEPT);
					if(PLAYER_TEMP[buyer][pt_WANT_MECHANIC])
					{
						PLAYER_TEMP[buyer][pt_WANT_MECHANIC] = false;
						DisablePlayerMechanicMark(buyer);
					}
					
					SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido a %s reparar su vehículo por %s$.", PLAYER_TEMP[buyer][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[buyer][pt_MECHANIC_PRICE]));
				}
				else
				{
					if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_OCCUPIED])
					{
						new buyer = GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_DRIVER];
						if(buyer == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El conductor del vehículo no está cerca.");
					
						new Float:mechanic_pos[3];
						GetPlayerPos(playerid, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2]);
						if(!IsPlayerInRangeOfPoint(buyer, 10.0, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2])) return SendClientMessage(playerid, -1, "{999999}El conductor del vehículo está demasiado lejos.");
						
						PLAYER_TEMP[buyer][pt_MECHANIC_PID] = playerid;
						PLAYER_TEMP[buyer][pt_MECHANIC_AID] = ACCOUNT_INFO[playerid][ac_ID];
						PLAYER_TEMP[buyer][pt_MECHANIC_PRICE] = inputtext[0];
						format(PLAYER_TEMP[buyer][pt_MECHANIC_TEXT], 64, "Reparación completa del vehículo");
						PLAYER_TEMP[buyer][pt_MECHANIC_TYPE] = MECHANIC_OPTION_REPAIR;
						PLAYER_TEMP[buyer][pt_MECHANIC_EXTRA] = 0;
						PLAYER_TEMP[buyer][pt_MECHANIC_VEHICLE_ID] = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
						PLAYER_TEMP[buyer][pt_MECHANIC_PIECES] = 10;
						PLAYER_TEMP[buyer][pt_MECHANIC_TIME] = gettime();
						
						ShowDialog(buyer, DIALOG_MECHANIC_ACCEPT);
						if(PLAYER_TEMP[buyer][pt_WANT_MECHANIC])
						{
							PLAYER_TEMP[buyer][pt_WANT_MECHANIC] = false;
							DisablePlayerMechanicMark(buyer);
						}
						
						SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido a %s reparar el vehículo por %s$.", PLAYER_TEMP[buyer][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[buyer][pt_MECHANIC_PRICE]));
					}
					else
					{
						new buyer = GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_LAST_DRIVER];
						if(buyer == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}Este vehículo no tiene conductor.");
					
						new Float:mechanic_pos[3];
						GetPlayerPos(playerid, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2]);
						if(!IsPlayerInRangeOfPoint(buyer, 10.0, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2])) return SendClientMessage(playerid, -1, "{999999}El conductor del vehículo está demasiado lejos.");
						
						PLAYER_TEMP[buyer][pt_MECHANIC_PID] = playerid;
						PLAYER_TEMP[buyer][pt_MECHANIC_AID] = ACCOUNT_INFO[playerid][ac_ID];
						PLAYER_TEMP[buyer][pt_MECHANIC_PRICE] = inputtext[0];
						format(PLAYER_TEMP[buyer][pt_MECHANIC_TEXT], 64, "Reparación completa del vehículo");
						PLAYER_TEMP[buyer][pt_MECHANIC_TYPE] = MECHANIC_OPTION_REPAIR;
						PLAYER_TEMP[buyer][pt_MECHANIC_EXTRA] = 0;
						PLAYER_TEMP[buyer][pt_MECHANIC_VEHICLE_ID] = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
						PLAYER_TEMP[buyer][pt_MECHANIC_PIECES] = 10;
						PLAYER_TEMP[buyer][pt_MECHANIC_TIME] = gettime();
						
						ShowDialog(buyer, DIALOG_MECHANIC_ACCEPT);
						if(PLAYER_TEMP[buyer][pt_WANT_MECHANIC])
						{
							PLAYER_TEMP[buyer][pt_WANT_MECHANIC] = false;
							DisablePlayerMechanicMark(buyer);
						}
						
						SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido a %s reparar el vehículo por %s$.", PLAYER_TEMP[buyer][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[buyer][pt_MECHANIC_PRICE]));
					}
				}
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_MECHANIC_COLOR_PRICE:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
			
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}El precio no es correcto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] < 0 || inputtext[0] > 1750)
				{
					SendClientMessage(playerid, -1, "{999999}El rango del precio es: 0$ - 1.750$.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new buyer = GetPlayerIdFromAccountId(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID]);
				if(buyer == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo no está cerca.");
				
				new Float:mechanic_pos[3];
				GetPlayerPos(playerid, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2]);
				if(!IsPlayerInRangeOfPoint(buyer, 10.0, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2])) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo está demasiado lejos.");
				
				PLAYER_TEMP[buyer][pt_MECHANIC_PID] = playerid;
				PLAYER_TEMP[buyer][pt_MECHANIC_AID] = ACCOUNT_INFO[playerid][ac_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_PRICE] = inputtext[0];
				
				switch(PLAYER_TEMP[playerid][pt_MECHANIC_COLOR_SLOT])
				{
					case 0:
					{
						format(PLAYER_TEMP[buyer][pt_MECHANIC_TEXT], 64, "Pintar color primario {%06x}(%d)", VEHICLE_COLORS[ PLAYER_TEMP[playerid][pt_MECHANIC_SELECTED_COLOR] ] >>> 8, PLAYER_TEMP[playerid][pt_MECHANIC_SELECTED_COLOR]);
						PLAYER_TEMP[buyer][pt_MECHANIC_TYPE] = MECHANIC_OPTION_COLOR_1;
					}
					case 1:
					{
						format(PLAYER_TEMP[buyer][pt_MECHANIC_TEXT], 64, "Pintar color secundario {%06x}(%d)", VEHICLE_COLORS[ PLAYER_TEMP[playerid][pt_MECHANIC_SELECTED_COLOR] ] >>> 8, PLAYER_TEMP[playerid][pt_MECHANIC_SELECTED_COLOR]);
						PLAYER_TEMP[buyer][pt_MECHANIC_TYPE] = MECHANIC_OPTION_COLOR_2;
					}
				}
				
				PLAYER_TEMP[buyer][pt_MECHANIC_EXTRA] = PLAYER_TEMP[playerid][pt_MECHANIC_SELECTED_COLOR];
				PLAYER_TEMP[buyer][pt_MECHANIC_VEHICLE_ID] = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_PIECES] = 5;
				PLAYER_TEMP[buyer][pt_MECHANIC_TIME] = gettime();
				
				ShowDialog(buyer, DIALOG_MECHANIC_ACCEPT);
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido a %s pintar su vehículo por %s$.", PLAYER_TEMP[buyer][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[buyer][pt_MECHANIC_PRICE]));
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_MECHANIC_TUNING_PRICE:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
			
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}El precio no es correcto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] < 0 || inputtext[0] > ((PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES] * 50) + 2000))
				{
					SendClientMessageEx(playerid, -1, "{999999}El rango del precio es: 0$ - %s$.", number_format_thousand((PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES] * 50) + 2000));
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new buyer = GetPlayerIdFromAccountId(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID]);
				if(buyer == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo no está cerca.");
				
				new Float:mechanic_pos[3];
				GetPlayerPos(playerid, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2]);
				if(!IsPlayerInRangeOfPoint(buyer, 10.0, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2])) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo está demasiado lejos.");
				
				PLAYER_TEMP[buyer][pt_MECHANIC_PID] = playerid;
				PLAYER_TEMP[buyer][pt_MECHANIC_AID] = ACCOUNT_INFO[playerid][ac_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_PRICE] = inputtext[0];
				format(PLAYER_TEMP[buyer][pt_MECHANIC_TEXT], 64, "'%s' > '%s'", PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PART], PLAYER_TEMP[playerid][pt_TUNING_SELECTED_COMPONENT]);
				PLAYER_TEMP[buyer][pt_MECHANIC_TYPE] = MECHANIC_OPTION_TUNING;
				PLAYER_TEMP[buyer][pt_MECHANIC_EXTRA] = PLAYER_TEMP[playerid][pt_TUNING_SELECTED_COMPONENT_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_VEHICLE_ID] = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_PIECES] = PLAYER_TEMP[playerid][pt_TUNING_SELECTED_PIECES];
				PLAYER_TEMP[buyer][pt_MECHANIC_TIME] = gettime();
				
				ShowDialog(buyer, DIALOG_MECHANIC_ACCEPT);
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido a %s tunear su vehículo por %s$.", PLAYER_TEMP[buyer][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[buyer][pt_MECHANIC_PRICE]));
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_MECHANIC_PAINTJOB_PRICE:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
			
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}El precio no es correcto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] < 0 || inputtext[0] > 2750)
				{
					SendClientMessage(playerid, -1, "{999999}El rango del precio es: 0$ - 2.750$.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new buyer = GetPlayerIdFromAccountId(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID]);
				if(buyer == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo no está cerca.");
				
				new Float:mechanic_pos[3];
				GetPlayerPos(playerid, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2]);
				if(!IsPlayerInRangeOfPoint(buyer, 10.0, mechanic_pos[0], mechanic_pos[1], mechanic_pos[2])) return SendClientMessage(playerid, -1, "{999999}El dueño del vehículo está demasiado lejos.");
				
				PLAYER_TEMP[buyer][pt_MECHANIC_PID] = playerid;
				PLAYER_TEMP[buyer][pt_MECHANIC_AID] = ACCOUNT_INFO[playerid][ac_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_PRICE] = inputtext[0];
				format(PLAYER_TEMP[buyer][pt_MECHANIC_TEXT], 64, "Paintjob (%d)", PLAYER_TEMP[playerid][pt_PAINTJOB_SELECTED_ID]);
				PLAYER_TEMP[buyer][pt_MECHANIC_TYPE] = MECHANIC_OPTION_PAINTJOB;
				PLAYER_TEMP[buyer][pt_MECHANIC_EXTRA] = PLAYER_TEMP[playerid][pt_PAINTJOB_SELECTED_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_VEHICLE_ID] = PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID];
				PLAYER_TEMP[buyer][pt_MECHANIC_PIECES] = 15;
				PLAYER_TEMP[buyer][pt_MECHANIC_TIME] = gettime();
				
				ShowDialog(buyer, DIALOG_MECHANIC_ACCEPT);
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Le has ofrecido a %s cambiar el paintjob de su vehículo por %s$.", PLAYER_TEMP[buyer][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[buyer][pt_MECHANIC_PRICE]));
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_MECHANIC_ACCEPT:
		{
			if(response)
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_MECHANIC_TIME] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptarlo.");
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_MECHANIC_PID])) return SendClientMessage(playerid, -1, "{999999}El mecánico ya no está en el servidor.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_MECHANIC_AID]) return SendClientMessage(playerid, -1, "{999999}El mecánico ya no está en el servidor.");

				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_MECHANIC_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "El mecánico está demasiado lejos.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}El mecánico no está disponible.");
				
				if(PLAYER_TEMP[playerid][pt_MECHANIC_PRICE] > CHARACTER_INFO[playerid][ch_CASH])
				{
					SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{999999}La persona no tiene suficiente dinero.");
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder aceptarlo.", number_format_thousand(PLAYER_TEMP[playerid][pt_MECHANIC_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
					return 1;
				}
				if(PLAYER_TEMP[playerid][pt_MECHANIC_PIECES] > PLAYER_MISC[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][MISC_MECHANIC_PIECES])
				{
					SendClientMessage(playerid, -1, "{999999}Al mecánico no le quedan piezas para el trabajo.");
					SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{999999}La persona ha aceptado pero no tienes piezas suficientes para el trabajo.");
					return 1;
				}
				
				if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID])
				{
					SendClientMessage(playerid, -1, "{999999}El vehículo está muy lejos.");
					SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{999999}La persona ha aceptado pero el vehículo está muy lejos.");
					return 1;
				}
				if(GetVehicleDistanceFromPoint(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], pos[0], pos[1], pos[2]) > 10.0)
				{
					SendClientMessage(playerid, -1, "{999999}El vehículo está muy lejos del mecánico.");
					SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{999999}La persona ha aceptado pero estás muy lejos del vehículo.");
					return 1;
				}
				
				GivePlayerCash(playerid, -PLAYER_TEMP[playerid][pt_MECHANIC_PRICE]);
				GivePlayerCash(PLAYER_TEMP[playerid][pt_MECHANIC_PID], PLAYER_TEMP[playerid][pt_MECHANIC_PRICE]);
				
				switch(PLAYER_TEMP[playerid][pt_MECHANIC_TYPE])
				{
					case MECHANIC_OPTION_REPAIR:
					{
						PLAYER_MISC[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][MISC_MECHANIC_PIECES] -= PLAYER_TEMP[playerid][pt_MECHANIC_PIECES];
						PLAYER_SKILLS[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][WORK_MECHANIC] ++;
						
						RepairVehicleEx(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], playerid);
						SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{CCCCCC}Has necesitado 10 piezas para la reparacion.");
					}
					case MECHANIC_OPTION_COLOR_1:
					{
						PLAYER_MISC[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][MISC_MECHANIC_PIECES] -= 5;
						GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_1] = PLAYER_TEMP[playerid][pt_MECHANIC_EXTRA];
						ChangeVehicleColor(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_1], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_2]);
						
						SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{CCCCCC}Has necesitado 5 piezas para pintar el vehículo.");
					}
					case MECHANIC_OPTION_COLOR_2:
					{
						PLAYER_MISC[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][MISC_MECHANIC_PIECES] -= 5;
						GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_2] = PLAYER_TEMP[playerid][pt_MECHANIC_EXTRA];
						ChangeVehicleColor(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_1], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_2]);
						
						SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{CCCCCC}Has necesitado 5 piezas para pintar el vehículo.");
					}
					case MECHANIC_OPTION_TUNING:
					{
						new slot = GetVehicleComponentType(PLAYER_TEMP[playerid][pt_MECHANIC_EXTRA]);
						new current_component = GetVehicleComponentInSlot(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], slot);
						if(current_component) RemoveVehicleComponent(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], current_component);
						
						GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_COMPONENTS][slot] = PLAYER_TEMP[playerid][pt_MECHANIC_EXTRA];
						AddVehicleComponent(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], PLAYER_TEMP[playerid][pt_MECHANIC_EXTRA]);
						
						PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] -= PLAYER_TEMP[playerid][pt_MECHANIC_PIECES];
						SendClientMessageEx(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{CCCCCC}Has necesitado 5 piezas para tunear el vehículo.", PLAYER_TEMP[playerid][pt_MECHANIC_PIECES]);
					}
					case MECHANIC_OPTION_PAINTJOB:
					{
						GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_PAINTJOB] = PLAYER_TEMP[playerid][pt_MECHANIC_EXTRA];
						ChangeVehiclePaintjob(PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_MECHANIC_VEHICLE_ID] ][gb_vehicle_PAINTJOB]);
						SendClientMessage(playerid, -1, "{CCCCCC}Has necesitado 15 piezas para el paintjob de el vehículo.");
					}
				}
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Le has pagado %s$ al mecánico por su trabajo.", number_format_thousand(PLAYER_TEMP[playerid][pt_MECHANIC_PRICE]));
				SendClientMessageEx(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{CCCCCC}%s te ha pagado %s$ por tu trabajo.", PLAYER_TEMP[playerid][pt_RP_NAME], number_format_thousand(PLAYER_TEMP[playerid][pt_MECHANIC_PRICE]));
			}
			else
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_MECHANIC_TIME] + 30) return 1;
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_MECHANIC_PID])) return 1;
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_MECHANIC_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_MECHANIC_AID]) return 1;

				SendClientMessage(PLAYER_TEMP[playerid][pt_MECHANIC_PID], -1, "{999999}La persona no aceptó lo que le ofreciste.");
			}
			return 1;
		}
		case DIALOG_MECHANIC_SELECT_COL_SLOT:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
			
			if(response)
			{
				PLAYER_TEMP[playerid][pt_MECHANIC_COLOR_SLOT] = listitem;
				ShowDialog(playerid, DIALOG_MECHANIC_SELECT_COLOR);
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_MECHANIC_SELECT_COLOR:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
				
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
			
			if(response)
			{
				if(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] < 5) return SendClientMessage(playerid, -1, "{999999}No tienes suficientes piezas, puedes comprar más piezas en el taller.");

				if(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
				{
					PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] -= 5;
					switch(PLAYER_TEMP[playerid][pt_MECHANIC_COLOR_SLOT])
					{
						case 0: GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_1] = listitem;
						case 1: GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_2] = listitem;
					}
					ChangeVehicleColor(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_1], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COLOR_2]);
					
					SendClientMessage(playerid, -1, "{CCCCCC}Has necesitado 5 piezas para pintar el vehículo.");
				}
				else
				{
					PLAYER_TEMP[playerid][pt_MECHANIC_SELECTED_COLOR] = listitem;
					ShowDialog(playerid, DIALOG_MECHANIC_COLOR_PRICE);
				}
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_SELECT_COL_SLOT);
			return 1;
		}
		case DIALOG_MECHANIC_REMOVE_COMPONEN:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
			
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
		
			if(response)
			{
				if(100 > PLAYER_SKILLS[playerid][WORK_MECHANIC])
				{
					SendClientMessageEx(playerid, -1, "{999999}Has realizado %d reparaciones como mecánico, necesitas 100 para tunear vehículos.", PLAYER_SKILLS[playerid][WORK_MECHANIC]);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID] == 0) return ShowDialog(playerid, dialogid);
				
				RemoveVehicleComponent(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COMPONENTS][ PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID] ]);
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_COMPONENTS][ PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_ID] ] = 0;
				
				PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] += PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_PIECES];
				SendClientMessageEx(playerid, -1, "{CCCCCC}Componente eliminado, piezas ganadas: %d, piezas totales: %d.", PLAYER_TUNING_MENU[playerid][listitem][tuning_menu_PIECES], PLAYER_MISC[playerid][MISC_MECHANIC_PIECES]);
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_TUNING_PAINTJOB:
		{
			if(!GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_VALID]) return 1;
			
			new Float:Vehicle_Pos[3];
			GetVehiclePos(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2]);
			
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, Vehicle_Pos[0], Vehicle_Pos[1], Vehicle_Pos[2])) return SendClientMessage(playerid, -1, "{999999}El vehículo está demasiado lejos.");
			
			if(response)
			{
				if(100 > PLAYER_SKILLS[playerid][WORK_MECHANIC])
				{
					SendClientMessageEx(playerid, -1, "{999999}Has realizado %d reparaciones como mecánico, necesitas 100 para cambiar el paintjob de vehículos.", PLAYER_SKILLS[playerid][WORK_MECHANIC]);
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] < 15) return SendClientMessage(playerid, -1, "{999999}No tienes suficientes piezas, puedes comprar más piezas en el taller.");
				
				if(listitem == 0)
				{
					if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_PAINTJOB] == 3)
					{
						SendClientMessage(playerid, -1, "{999999}El vehículo no tiene ningún paintjob.");
						return 1;
					}
					
					GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_PAINTJOB] = 3;
					ChangeVehiclePaintjob(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_PAINTJOB]);
					
					PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] += 15;
					SendClientMessageEx(playerid, -1, "{CCCCCC}Paintjob eliminado, piezas ganadas: 15, piezas totales: %d.", PLAYER_MISC[playerid][MISC_MECHANIC_PIECES]);
					return 1;
				}
				
				if(PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID])
				{
					GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_PAINTJOB] = listitem - 1;
					ChangeVehiclePaintjob(PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] ][gb_vehicle_PAINTJOB]);
					SendClientMessage(playerid, -1, "{CCCCCC}Has necesitado 15 piezas para el paintjob de el vehículo.");
				}
				else
				{
					PLAYER_TEMP[playerid][pt_PAINTJOB_SELECTED_ID] = listitem - 1;
					ShowDialog(playerid, DIALOG_MECHANIC_PAINTJOB_PRICE);
				}
			}
			else ShowDialog(playerid, DIALOG_MECHANIC_MENU);
			return 1;
		}
		case DIALOG_SELECT_TRASH_ROUTE:
		{
			if(response)
			{
				if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID] == INVALID_PLAYER_ID)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}Necesitas un compañero para comenzar a recoger basura.");
					return 1;
				}
				
				TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_JOB_STARTED] = true;
				TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE] = listitem;
				TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_CP] = 0;
				
				SetPlayerTrashCheckpoint(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
				SetPlayerTrashCheckpoint(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
				
				CreatePlayerTrashRouteObjects(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], listitem);
				CreatePlayerTrashRouteObjects(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], listitem);
				
				SendClientMessageEx(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], -1, "Ruta {42aaf4}#%d {FFFFFF}establecida, pueden comenzar.", TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE] + 1);
				SendClientMessageEx(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], -1, "Ruta {42aaf4}#%d {FFFFFF}establecida, pueden comenzar.", TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE] + 1);
			}
			return 1;
		}
		case DIALOG_SEED_LIST:
		{
			if(response)
			{
				if(seed_info[listitem][seed_info_EXP] > PLAYER_SKILLS[playerid][WORK_FARMER]) return SendClientMessageEx(playerid, -1, "{999999}Necesitas haber plantado al menos %d plantas como agricultor para poder comprar esta semilla.", seed_info[listitem][seed_info_EXP]);
				
				PLAYER_TEMP[playerid][pt_SELECTED_BUY_SEED_ID] = listitem;
				ShowDialog(playerid, DIALOG_SEED_BUY);
			}
			return 1;
		}
		case DIALOG_SEED_BUY:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0])) return SendClientMessage(playerid, -1, "{999999}La cantidad de semillas no es correcta.");
				if(inputtext[0] <= 0 || inputtext[0] > 100000) return SendClientMessage(playerid, -1, "{999999}La cantidad de semillas no es correcta.");
				
				new price = seed_info[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_SEED_ID] ][seed_info_PRICE] * inputtext[0];
				if(price > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar las semillas.", number_format_thousand(price - CHARACTER_INFO[playerid][ch_CASH]));
				
				switch(seed_info[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_SEED_ID] ][seed_info_PLANT_TYPE])
				{
					case PLANT_TYPE_MEDICINE: PLAYER_MISC[playerid][MISC_SEED_MEDICINE] += inputtext[0];
					case PLANT_TYPE_CANNABIS: PLAYER_MISC[playerid][MISC_SEED_CANNABIS] += inputtext[0];
					case PLANT_TYPE_CRACK: PLAYER_MISC[playerid][MISC_SEED_CRACK] += inputtext[0];
				}
				
				GivePlayerCash(playerid, -price);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has comprado %s semillas de %s por %s$.", number_format_thousand(inputtext[0]), seed_info[ PLAYER_TEMP[playerid][pt_SELECTED_BUY_SEED_ID] ][seed_info_NAME], number_format_thousand(price));
			}
			else ShowDialog(playerid, DIALOG_SEED_LIST);
			return 1;
		}
		case DIALOG_PLANT_PLANTS:
		{
			if(response)
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
				if(!IsPlayerInDynamicArea(playerid, Farmer_Area)) return SendClientMessage(playerid, 0x999999AA, "No estás en la zona para plantar, está marcada en el mapa con una bandera.");
				
				switch(seed_info[listitem][seed_info_PLANT_TYPE])
				{
					case PLANT_TYPE_MEDICINE:
					{
						if(plant_info[listitem][plant_info_SEEDS] > PLAYER_MISC[playerid][MISC_SEED_MEDICINE])
						{
							SendClientMessage(playerid, -1, "{999999}No tienes las semillas necesarias para plantar esta planta.");
							return 1;
						}
						PLAYER_MISC[playerid][MISC_SEED_MEDICINE] -= plant_info[listitem][plant_info_SEEDS];
					}
					case PLANT_TYPE_CANNABIS:
					{
						if(plant_info[listitem][plant_info_SEEDS] > PLAYER_MISC[playerid][MISC_SEED_CANNABIS])
						{
							SendClientMessage(playerid, -1, "{999999}No tienes las semillas necesarias para plantar esta planta.");
							return 1;
						}
						PLAYER_MISC[playerid][MISC_SEED_CANNABIS] -= plant_info[listitem][plant_info_SEEDS];
					}
					case PLANT_TYPE_CRACK:
					{
						if(plant_info[listitem][plant_info_SEEDS] > PLAYER_MISC[playerid][MISC_SEED_CRACK])
						{
							SendClientMessage(playerid, -1, "{999999}No tienes las semillas necesarias para plantar esta planta.");
							return 1;
						}
						PLAYER_MISC[playerid][MISC_SEED_CRACK] -= plant_info[listitem][plant_info_SEEDS];
					}
				}
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Vas a plantar '%s' y vas a necesitar %d semillas.", plant_info[listitem][plant_info_NAME], plant_info[listitem][plant_info_SEEDS]);
				
				
				new Float:offset = floatdiv(PLAYER_SKILLS[playerid][WORK_FARMER], 10);
				if(offset > 30.0) offset = 30.0;
				
				PLAYER_TEMP[playerid][pt_LAST_PLANT_TIME] = gettime();
				PLAYER_TEMP[playerid][pt_PLANTING_PLANT_SELECTED] = listitem;
				PLAYER_TEMP[playerid][pt_PLANTING] = true;
				PLAYER_TEMP[playerid][pt_WORKING_IN] = WORK_FARMER;
				PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] = frandom(10.0, 8.0, 2) + offset;
				UpdatePlantSizeTextdrawPlant(playerid);
				
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2]);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3]);
				
				TogglePlayerControllable(playerid, false);
				SetCameraBehindPlayer(playerid);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Loop", 4.1, true, false, false, false, 0);
				
				KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][12]);
				PLAYER_TEMP[playerid][pt_TIMERS][12] = SetTimerEx("PlantingUp", 1000, false, "id", playerid, plant_info[listitem][plant_info_SEEDS]);

			}
			return 1;
		}
		case DIALOG_BLACK_MARKET:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(ACCOUNT_INFO[playerid][ac_LEVEL] < 6) return SendClientMessage(playerid, 0x999999AA, "Necesitas ser al menos nivel 6 para poder comprar armas.");
						if(!PLAYER_CREW[playerid][player_crew_VALID] && !ACCOUNT_INFO[playerid][ac_SU]) return SendClientMessage(playerid, 0x999999AA, "Solo puedes comprar armas aquí si perteneces a una banda o eres SU (/ayuda).");
						
						if(!ACCOUNT_INFO[playerid][ac_SU])
						{
							if(gettime() < PLAYER_TEMP[playerid][pt_LAST_BM_BUY] + 300)
							{
								new time = (300-(gettime()-PLAYER_TEMP[playerid][pt_LAST_BM_BUY]));
								SendClientMessageEx(playerid, 0x999999AA, "Tienes que esperar %s minutos para volver a comprar aquí.", TimeConvert(time));
								return 1;
							}
						}
						
						ShowDialog(playerid, DIALOG_BLACK_MARKET_WEAPONS);
					}
					case 1: ShowDialog(playerid, DIALOG_BLACK_MARKET_SELECT_WEA);
				}
			}
			return 1;
		}
		case DIALOG_BLACK_MARKET_WEAPONS:
		{
			if(response)
			{
				if(BLACK_MARKT_WEAPONS[listitem][black_market_EXP] > CHARACTER_INFO[playerid][ch_BLACK_MARKET_LEVEL])
				{
					SendClientMessageEx(playerid, -1, "{999999}Necesitas ser un cliente más habitual para que te vendan esta arma (%d/%d).", CHARACTER_INFO[playerid][ch_BLACK_MARKET_LEVEL], BLACK_MARKT_WEAPONS[listitem][black_market_EXP]);
					return 1;
				}
				
				
				if(CHARACTER_INFO[playerid][ch_CASH] >= BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_PRICE])
				{
					new weapon_slot = WEAPON_INFO[ BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_ID] ][weapon_info_SLOT];
					if(PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_ID] != 0)
					{
						SendClientMessageEx(playerid, -1, "{999999}Para comprar esta arma tienes que deshacerte de tu '%s' (%d) para tener espacio.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_ID] ][weapon_info_NAME], weapon_slot);
						return 1;
					}
					
					PLAYER_TEMP[playerid][pt_LAST_BM_BUY] = gettime();
					
					GivePlayerCash(playerid, -BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_PRICE]);
					CHARACTER_INFO[playerid][ch_BLACK_MARKET_LEVEL] ++;
					
					if(WEAPON_INFO[ BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_ID] ][weapon_info_AMMO]) GivePlayerWeaponEx(playerid, BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_ID], 50);
					else GivePlayerWeaponEx(playerid, BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_ID], 1);

					RegisterNewPlayerWeapon(playerid, weapon_slot); 
					SendClientMessageEx(playerid, -1, "{CCCCCC}Arma {98d16c}'%s' {CCCCCC}comprada por %s$.", WEAPON_INFO[ BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_ID] ][weapon_info_NAME], number_format_thousand(BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_PRICE]));
				}
				else
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar esta arma.", number_format_thousand(BLACK_MARKT_WEAPONS[listitem][black_market_WEAPON_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
				}
			}
			return 1;
		}
		case DIALOG_BLACK_MARKET_SELECT_WEA:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				
				PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				
				if(!WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_AMMO])
				{
					SendClientMessage(playerid, -1, "{999999}Este tipo de arma no necesita munición.");
					return 1;
				}
				
				ShowDialog(playerid, DIALOG_BLACK_MARKET_AMMO);
			}
			return 1;
		}
		case DIALOG_BLACK_MARKET_AMMO:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0])) return ShowDialog(playerid, dialogid);
				if(inputtext[0] <= 0 || inputtext[0] > 9999) return SendClientMessage(playerid, -1, "{999999}La cantidad de munición no es correcta.");
				
				new price = 3 * inputtext[0];
				if(price > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar la munición.", number_format_thousand(price - CHARACTER_INFO[playerid][ch_CASH]));
				
				if(PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_AMMO] + inputtext[0] > 9999)
				{
					SendClientMessage(playerid, -1, "{999999}A esta arma no le entra tanta municion.");
					return 1;
				}
				
				GivePlayerCash(playerid, -price);
				GivePlayerWeaponEx(playerid, PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID], inputtext[0]);
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has comprado {98d16c}%s {CCCCCC}balas para tu {98d16c}'%s' {CCCCCC}por %s$.", number_format_thousand(inputtext[0]), WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(price));
			}
			return 1;
		}
		case DIALOG_PLAYER_WEAPONS:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == 13 + 20) // Eliminar todo
				{
					ShowDialog(playerid, DIALOG_PLAYER_WEAPONS_DELETE_A);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				ShowDialog(playerid, DIALOG_PLAYER_WEAPONS_DELETE);
			}
			return 1;
		}
		case DIALOG_PLAYER_WEAPONS_DELETE_A:
		{
			if(response)
			{
				new DB_Query[90];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_WEAPONS` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				ResetPlayerWeaponsEx(playerid);
		
				SendClientMessage(playerid, -1, "{CCCCCC}Ha eliminado todas tus armas.");
			}
			else ShowDialog(playerid, DIALOG_PLAYER_WEAPONS);
			return 1;
		}
		case DIALOG_PLAYER_WEAPONS_DELETE:
		{
			if(response)
			{
				SendClientMessageEx(playerid, -1, "{999999}Has eliminado tu '%s' de tus armas.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_NAME]);
				RemovePlayerSlotWeapon(playerid, PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT], true);
			}
			else ShowDialog(playerid, DIALOG_PLAYER_WEAPONS);
			return 1;
		}
		case DIALOG_ANIMS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);//rendirse
		            case 1: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 0, 0);//blowjob
		            case 2: ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);//rodar
		            case 3: ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);//borracho
		            case 4: ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);//bomba
		            case 5: ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);//apuntar
		            case 6: ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);//reir
		            case 7: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);//amenazar
		            case 8: ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);//paja
		            case 9: ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);//herido
		            case 10: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);//cruzarbrazos
		            case 11: ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);//recostarse
		            case 12: ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);//crubrirse
		            case 13: ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);//vomitar
		            case 14: ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);//comer
		            case 15: ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);//despedir
		            case 16: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);//nalgada
		            case 17: ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);//agonizar
		            case 18: ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);//besar
		            case 19: ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0);//crack
		            case 20: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);//mear
		            case 21: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);//sentarse
		            case 22: ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );//fucku
		            case 23: ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000);//llamar
		            case 24: ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);//taichi
		            case 25: ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);//beber
		            case 26: ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);//boxear
		            case 27: ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);//saludar
		            case 28: ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);//llorar
		            case 29: ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);//dormir
		            case 30: ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);//rapear
		            case 31: ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);//strip
		            case 32: ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,7,5,1,1,1);//bailar
		            case 33: ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);//alentar
		            case 34: ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);//hablar
					case 35: ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 1, 1, 1, 0);//asiento
		        }
				SendClientMessage(playerid, -1, "{CCCCCC}Para detener la animacion utiliza /parar.");
			}
			return 1;
		}
		case DIALOG_TRICKS_FOOD:
		{
			if(response)
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptarlo.");
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");

				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "El vendedor está demasiado lejos.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}El vendedor no está disponible.");
				

				new to_player_slot = GetEmptyPlayerPocketSlot(playerid);
				if(to_player_slot == -1)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{999999}No tienes espacio en tus /alimentos para comprar esto.");
					return 1;
				}
				
				TransferPlayerPocketObject(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA], playerid, to_player_slot);
				
				GivePlayerCash(playerid, -PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				GivePlayerCash(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Te has gastado %s$ con esta compra.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				SendClientMessageEx(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{CCCCCC}Has ganado %s$ con esta venta.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				
				new action[64];
				format(action, sizeof action, "y %s llegan a un acuerdo.", PLAYER_TEMP[playerid][pt_RP_NAME]);
				Auto_SendPlayerAction(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], action);
			}
			else
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return 1;
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return 1;
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return 1;

				SendClientMessage(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{999999}El comprador no ha aceptado tu trato.");
			}
			return 1;
		}
		case DIALOG_TRICKS_MEDICINE:
		{
			if(response)
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptarlo.");
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");

				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "El vendedor está demasiado lejos.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}El vendedor no está disponible.");

				
				PLAYER_MISC[playerid][MISC_MEDICINE] += PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA];
				PLAYER_MISC[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][MISC_MEDICINE] -= PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA];
				
				
				GivePlayerCash(playerid, -PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				GivePlayerCash(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Te has gastado %s$ con esta compra.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				SendClientMessageEx(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{CCCCCC}Has ganado %s$ con esta venta.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				
				new action[64];
				format(action, sizeof action, "y %s llegan a un acuerdo.", PLAYER_TEMP[playerid][pt_RP_NAME]);
				Auto_SendPlayerAction(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], action);
			}
			else
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return 1;
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return 1;
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return 1;

				SendClientMessage(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{999999}El comprador no ha aceptado tu trato.");
			}
			return 1;
		}
		case DIALOG_TRICKS_CANNABIS:
		{
			if(response)
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptarlo.");
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");

				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "El vendedor está demasiado lejos.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}El vendedor no está disponible.");

				
				PLAYER_MISC[playerid][MISC_CANNABIS] += PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA];
				PLAYER_MISC[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][MISC_CANNABIS] -= PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA];
				
				
				GivePlayerCash(playerid, -PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				GivePlayerCash(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Te has gastado %s$ con esta compra.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				SendClientMessageEx(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{CCCCCC}Has ganado %s$ con esta venta.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				
				new action[64];
				format(action, sizeof action, "y %s llegan a un acuerdo.", PLAYER_TEMP[playerid][pt_RP_NAME]);
				Auto_SendPlayerAction(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], action);
			}
			else
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return 1;
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return 1;
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return 1;

				SendClientMessage(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{999999}El comprador no ha aceptado tu trato.");
			}
			return 1;
		}
		case DIALOG_TRICKS_CRACK:
		{
			if(response)
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptarlo.");
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");

				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "El vendedor está demasiado lejos.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}El vendedor no está disponible.");

				
				PLAYER_MISC[playerid][MISC_CRACK] += PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA];
				PLAYER_MISC[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][MISC_CRACK] -= PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA];
				
				
				GivePlayerCash(playerid, -PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				GivePlayerCash(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Te has gastado %s$ con esta compra.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				SendClientMessageEx(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{CCCCCC}Has ganado %s$ con esta venta.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				
				new action[64];
				format(action, sizeof action, "y %s llegan a un acuerdo.", PLAYER_TEMP[playerid][pt_RP_NAME]);
				Auto_SendPlayerAction(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], action);
			}
			else
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return 1;
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return 1;
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return 1;

				SendClientMessage(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{999999}El comprador no ha aceptado tu trato.");
			}
			return 1;
		}
		case DIALOG_TRICKS_WEAPON:
		{
			if(response)
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptarlo.");
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return SendClientMessage(playerid, -1, "{999999}El vendedor ya no está en el servidor.");

				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "El vendedor está demasiado lejos.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}El vendedor no está disponible.");

				
				if(PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA] ][player_weapon_VALID])
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{999999}Para comprar esta arma tienes que deshacerte de tu '%s' (%d) para tener espacio.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA] ][player_weapon_ID] ][weapon_info_NAME], PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA]);
					return 1;
				}
				
				TransferPlayerWeapon(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], PLAYER_TEMP[playerid][pt_TRICK_SELLER_EXTRA], playerid);
				
				GivePlayerCash(playerid, -PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				GivePlayerCash(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], PLAYER_TEMP[playerid][pt_TRICK_PRICE]);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Te has gastado %s$ con esta compra.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				SendClientMessageEx(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{CCCCCC}Has ganado %s$ con esta venta.", number_format_thousand(PLAYER_TEMP[playerid][pt_TRICK_PRICE]));
				
				new action[64];
				format(action, sizeof action, "y %s llegan a un acuerdo.", PLAYER_TEMP[playerid][pt_RP_NAME]);
				Auto_SendPlayerAction(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], action);
			}
			else
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_TRICK_TIME] + 20) return 1;
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID])) return 1;
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_TRICK_SELLER_AID]) return 1;

				SendClientMessage(PLAYER_TEMP[playerid][pt_TRICK_SELLER_PID], -1, "{999999}El comprador no ha aceptado tu trato.");
			}
			return 1;
		}
		case DIALOG_VEHICLE_BOOT:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == MAX_BOOT_SLOTS + 20)
				{
					ShowDialog(playerid, DIALOG_VEHICLE_BOOT_DELETE_ALL);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				ShowDialog(playerid, DIALOG_VEHICLE_BOOT_OPTIONS);
			}
			
		}
		case DIALOG_VEHICLE_BOOT_DELETE_ALL:
		{
			if(response)
			{
				new DB_Query[90];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `VEHICLE_BOOT` WHERE `ID_VEHICLE` = '%d';", PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][player_vehicle_ID]);
				db_query(Database, DB_Query);
				
				new temp_VEHICLE_BOOT[enum_VEHICLE_BOOT];
				for(new i = 0; i != MAX_BOOT_SLOTS; i ++) VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][i] = temp_VEHICLE_BOOT;
		
				SendClientMessage(playerid, -1, "{CCCCCC}Ha eliminado todo de este maletero.");
			}
			return 1;
		}
		case DIALOG_VEHICLE_BOOT_OPTIONS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(!VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_VALID]) return SendClientMessage(playerid, -1, "{999999}No hay nada en ese slot.");
						if(VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_TYPE] != BOOT_TYPE_WEAPON) return SendClientMessage(playerid, -1, "{999999}En ese slot no hay armas.");
						
						new to_slot = WEAPON_INFO[ VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_INT] ][weapon_info_SLOT];
						if(PLAYER_WEAPONS[playerid][to_slot][player_weapon_VALID])
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{999999}Para sacar esta arma tienes que deshacerte de tu '%s' (%d) para tener espacio.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][ to_slot ][player_weapon_ID] ][weapon_info_NAME], to_slot);
							return 1;
						}
						
						new DB_Query[64];
						format(DB_Query, sizeof DB_Query, "DELETE FROM `VEHICLE_BOOT` WHERE `ID_OBJECT` = '%d';", VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_OBJECT_ID]);
						db_query(Database, DB_Query);
						
						GivePlayerWeaponEx(playerid, VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_INT], VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_INT_EXTRA]);
						RegisterNewPlayerWeapon(playerid, to_slot);
						
						new temp_VEHICLE_BOOT[enum_VEHICLE_BOOT]; VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ] = temp_VEHICLE_BOOT;
						
						Auto_SendPlayerAction(playerid, "saca un arma del maletero de su vehículo.");
					}
					case 1: ShowDialog(playerid, DIALOG_VEHICLE_BOOT_DELETE);
				}
			}
			else ShowDialog(playerid, DIALOG_VEHICLE_BOOT);
			return 1;
		}
		case DIALOG_VEHICLE_BOOT_DELETE:
		{
			if(response)
			{
				SendClientMessageEx(playerid, -1, "{999999}Has eliminado tu '%s' de este maletero.", WEAPON_INFO[ VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_INT] ][weapon_info_NAME]);
				
				
				new DB_Query[64];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `VEHICLE_BOOT` WHERE `ID_OBJECT` = '%d';", VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ][vehicle_boot_OBJECT_ID]);
				db_query(Database, DB_Query);
				
				new temp_VEHICLE_BOOT[enum_VEHICLE_BOOT]; VEHICLE_BOOT[ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] ][ PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE_BOOT_SLOT] ] = temp_VEHICLE_BOOT;
			}
			else ShowDialog(playerid, DIALOG_VEHICLE_BOOT_OPTIONS);
			return 1;
		}
		case DIALOG_SELECT_POLICE_SKIN:
		{
			if(response)
			{
				if(!PLAYER_WORKS[playerid][WORK_POLICE]) return 1;
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				if(POLICE_SKINS[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][police_skin_RANK] > PLAYER_SKILLS[playerid][WORK_POLICE]) return ShowDialog(playerid, dialogid);
				
				SetPlayerSkin(playerid, POLICE_SKINS[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][police_skin_SKIN]);
				StartPlayerJob(playerid, WORK_POLICE);
			}
			return 1;
		}
		case DIALOG_POLICE_RADIOS:
		{
			if(response)
			{
				PLAYER_TEMP[playerid][pt_POLICE_RADIO] = listitem;
				SendClientMessageEx(playerid, -1, "Tu radio ha sido ajustada a la frecuencia %d.", listitem + 1);
			}
			return 1;
		}
		case DIALOG_POLICE_LIST:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -2) // Siguiente
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_WORKS` WHERE `ID_WORK` = '%d' AND `SET` = '1';", WORK_POLICE);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] >= GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] ++;
					ShowDialog(playerid, dialogid);
				}
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -3) //Anterior
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_WORKS` WHERE `ID_WORK` = '%d' AND `SET` = '1';", WORK_POLICE);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] <= 0) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] --;
					ShowDialog(playerid, dialogid);
				}
				else
				{
					if(PLAYER_SKILLS[playerid][WORK_POLICE] >= 4)
					{
						PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
						ShowDialog(playerid, DIALOG_POLICE_MODIFY);
					}
				}
			}
			return 1;
		}
		case DIALOG_POLICE_MODIFY:
		{
			if(response)
			{
				if(listitem > PLAYER_SKILLS[playerid][WORK_POLICE])
				{
					SendClientMessage(playerid, -1, "{999999}El rango que has seleccionado es superior al tuyo.");
					return 1;
				}					
				
				new DBResult:Result, DB_Query[256], name[24], connected, player_id, current_rank, bool:found;
				format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `CUENTA`.`CONNECTED`, `CUENTA`.`PLAYERID`, `PLAYER_SKILLS`.`TOTAL` FROM `CUENTA`, `PLAYER_SKILLS` WHERE `CUENTA`.`ID` = '%d' AND `PLAYER_SKILLS`.`ID_USER` = `CUENTA`.`ID` AND `PLAYER_SKILLS`.`ID_WORK` = '%d';", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID], WORK_POLICE);
				Result = db_query(Database, DB_Query);
				
				if(db_num_rows(Result))
				{
					db_get_field_assoc(Result, "NAME", name, 24);
					connected = db_get_field_assoc_int(Result, "CONNECTED");
					player_id = db_get_field_assoc_int(Result, "PLAYERID");
					current_rank = db_get_field_assoc_int(Result, "TOTAL");
					found = true;
				}
				else found = false;
				db_free_result(Result);
				
				if(!found) return 1;
				if(current_rank > PLAYER_SKILLS[playerid][WORK_POLICE])
				{
					SendClientMessage(playerid, -1, "{999999}No puedes modificar el rango de este policía porque es un rango superior al tuyo.");
					return 1;
				}
				
				format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_SKILLS` SET `TOTAL` = '%d' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", listitem, PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID], WORK_POLICE);
				db_query(Database, DB_Query);
				SendClientMessageEx(playerid, -1, "{CCCCCC}El nuevo rango de %s es: '%s'.", name, POLICE_RANKS[listitem]);
				
				if(listitem == 0)
				{
					format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_WORKS` SET `SET` = '0' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID], WORK_POLICE);
					db_query(Database, DB_Query);
				}
				
				if(connected)
				{
					PLAYER_SKILLS[player_id][WORK_POLICE] = listitem;
					
					if(listitem == 0)
					{
						if(PLAYER_TEMP[player_id][pt_WORKING_IN] == WORK_POLICE) EndPlayerJob(player_id);
						PLAYER_WORKS[player_id][WORK_POLICE] = false;
						SendClientMessageEx(player_id, -1, "{999999}El %s %s te ha expulsado del cuerpo de policía.", POLICE_RANKS[ PLAYER_SKILLS[playerid][WORK_POLICE] ], PLAYER_TEMP[playerid][pt_RP_NAME]);
					}
					else SendClientMessageEx(player_id, -1, "{CCCCCC}El %s %s ha modificado tu rango del cuerpo de policía a '%s'.", POLICE_RANKS[ PLAYER_SKILLS[playerid][WORK_POLICE] ], PLAYER_TEMP[playerid][pt_RP_NAME], POLICE_RANKS[listitem]);
				}
			}
			else ShowDialog(playerid, DIALOG_POLICE_LIST);
			return 1;
		}
		case DIALOG_POLICE_SHOP:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_POLICE_WEAPONS);
					case 1: ShowDialog(playerid, DIALOG_POLICE_SELECT_WEAPON);
					case 2: ShowDialog(playerid, DIALOG_POLICE_ARMOUR);
				}
			}
			return 1;
		}
		case DIALOG_POLICE_SELECT_WEAPON:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				
				PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				
				if(!WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_AMMO])
				{
					SendClientMessage(playerid, -1, "{999999}Este tipo de arma no necesita munición.");
					return 1;
				}
				
				ShowDialog(playerid, DIALOG_POLICE_AMMO);
			}
			return 1;
		}
		case DIALOG_POLICE_AMMO:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0])) return ShowDialog(playerid, dialogid);
				if(inputtext[0] <= 0 || inputtext[0] > 9999) return SendClientMessage(playerid, -1, "{999999}La cantidad de munición no es correcta.");
				
				new price = 2 * inputtext[0];
				if(price > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar la munición.", number_format_thousand(price - CHARACTER_INFO[playerid][ch_CASH]));
				
				if(PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_AMMO] + inputtext[0] > 9999)
				{
					SendClientMessage(playerid, -1, "{999999}A esta arma no le entra tanta municion.");
					return 1;
				}
				
				GivePlayerCash(playerid, -price);
				GivePlayerWeaponEx(playerid, PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID], inputtext[0]);
				
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has comprado {98d16c}%s {CCCCCC}balas para tu {98d16c}'%s' {CCCCCC}por %s$.", number_format_thousand(inputtext[0]), WEAPON_INFO[ PLAYER_WEAPONS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_DIALOG_WEAPON_SLOT] ][player_weapon_ID] ][weapon_info_NAME], number_format_thousand(price));
			}
			return 1;
		}
		case DIALOG_POLICE_ARMOUR:
		{
			if(response)
			{
				if(300 > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar la munición.", number_format_thousand(300 - CHARACTER_INFO[playerid][ch_CASH]));
				
				GetPlayerArmour(playerid, CHARACTER_INFO[playerid][ch_ARMOUR]);
				if(CHARACTER_INFO[playerid][ch_ARMOUR] > 99.5) return SendClientMessage(playerid, -1, "{999999}Ya tienes un chaleco antibalas.");
				
				SetPlayerArmourEx(playerid, 100.0);
				GivePlayerCash(playerid, -300);
				SendClientMessage(playerid, -1, "{CCCCCC}Has comprado {98d16c}chaleco antibales {CCCCCC}por 300$.");
			}
			return 1;
		}
		case DIALOG_POLICE_WEAPONS:
		{
			if(response)
			{
				if(POLICE_SHOP_WEAPONS[listitem][police_shop_RANK] > PLAYER_SKILLS[playerid][WORK_POLICE])
				{
					SendClientMessageEx(playerid, -1, "{999999}Necesitas el rango %s para poder comprar esta arma.", POLICE_RANKS[ POLICE_SHOP_WEAPONS[listitem][police_shop_RANK] ]);
					return 1;
				}
				
				
				if(CHARACTER_INFO[playerid][ch_CASH] >= POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_PRICE])
				{
					new weapon_slot = WEAPON_INFO[ POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_ID] ][weapon_info_SLOT];
					if(PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_ID] != 0)
					{
						SendClientMessageEx(playerid, -1, "{999999}Para comprar esta arma tienes que deshacerte de tu '%s' (%d) para tener espacio.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_ID] ][weapon_info_NAME], weapon_slot);
						return 1;
					}
					
					GivePlayerCash(playerid, -POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_PRICE]);
					
					if(WEAPON_INFO[ POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_ID] ][weapon_info_AMMO]) GivePlayerWeaponEx(playerid, POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_ID], 100);
					else GivePlayerWeaponEx(playerid, POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_ID], 1);

					RegisterNewPlayerWeapon(playerid, weapon_slot); 
					SendClientMessageEx(playerid, -1, "{CCCCCC}Arma {98d16c}'%s' {CCCCCC}comprada por %s$.", WEAPON_INFO[ POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_ID] ][weapon_info_NAME], number_format_thousand(POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_PRICE]));
				}
				else
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar esta arma.", number_format_thousand(POLICE_SHOP_WEAPONS[listitem][police_shop_WEAPON_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
				}
			}
			return 1;
		}
		case DIALOG_HELP:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_HELP_GENERAL);
					case 1: ShowDialog(playerid, DIALOG_HELP_INFO);
					case 2: ShowDialog(playerid, DIALOG_HELP_CHARACTER);
					case 3: ShowDialog(playerid, DIALOG_HELP_PROPERTIES);
					case 4: ShowDialog(playerid, DIALOG_HELP_REPORT);
					case 5: ShowDialog(playerid, DIALOG_HELP_WORKS);
					case 6: ShowDialog(playerid, DIALOG_HELP_VEHICLES);
					case 7: ShowDialog(playerid, DIALOG_HELP_CREWS);
					case 8: ShowDialog(playerid, DIALOG_HELP_SU);
				}
			}
			return 1;
		}
		case DIALOG_HELP_WORKS:
		{
			if(response)
			{
				new caption[45], dialog[1800], work = listitem + 1;
				format(caption, sizeof caption, "Trabajo - %c%s", toupper(work_info[work][work_info_NAME][0]), work_info[work][work_info_NAME][1]);
			
				new header[350];
				if(work_info[work][work_info_TYPE] != WORK_TYPE_FAMILY)
				{
					if(work_info[work][work_info_EXTRA_PAY] > 0 && work_info[work][work_info_EXTRA_PAY_EXP] > 0) // con paga extra
					{
						if(!work_info[work][work_info_EXTRA_PAY_LIMIT]) // sin limite
						{
							format(header, sizeof header, 
						
								"\
									Trabajo: %s\n\
									Tipo: %s\n\
									Nivel necesario: %d\n\
									Paga extra: por cada %s trabajos realizados recibes %s$ extra.\n\
									Puedes localizar donde adquirir este trabajo desde el GPS.\n\
								",
									work_info[work][work_info_NAME],
									(work_info[work][work_info_TYPE] == WORK_TYPE_NORMAL) ? ("normal") : ("complementario"),
									work_info[work][work_info_LEVEL],
									number_format_thousand(work_info[work][work_info_EXTRA_PAY_EXP]),
									number_format_thousand(work_info[work][work_info_EXTRA_PAY])
							);
						}
						else // con limite
						{
							format(header, sizeof header, 
						
								"\
									Trabajo: %s\n\
									Tipo: %s\n\
									Nivel necesario: %d\n\
									Paga extra: por cada %s trabajos realizados recibes %s$ extra con un límite de %s$.\n\
									Puedes localizar donde adquirir este trabajo desde el GPS.\n\
								",
									work_info[work][work_info_NAME],
									(work_info[work][work_info_TYPE] == WORK_TYPE_NORMAL) ? ("normal") : ("complementario"),
									work_info[work][work_info_LEVEL],
									number_format_thousand(work_info[work][work_info_EXTRA_PAY_EXP]),
									number_format_thousand(work_info[work][work_info_EXTRA_PAY]),
									number_format_thousand(work_info[work][work_info_EXTRA_PAY_LIMIT])
							);
						}
					}
					else
					{
						format(header, sizeof header, 
						
							"\
								Trabajo: %s\n\
								Tipo: %s\n\
								Nivel necesario: %d\n\
								Puedes localizar donde adquirir este trabajo desde el GPS.\n\
							",
								work_info[work][work_info_NAME],
								(work_info[work][work_info_TYPE] == WORK_TYPE_NORMAL) ? ("normal") : ("complementario"),
								work_info[work][work_info_LEVEL]
						);
					}
				}
				
				switch(work)
				{
					case WORK_TAXI:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Solo súbete a un taxi y empieza a trabajar, recibirás las llamadas de los clientes.\n\
							Las personas que hayan llamado a la central de taxi aparecerán marcados de color amarillo.\n\
							Si tienes un GPS puedes utilizar /mapa para ver las personas que necesitan un taxi.\n\
							\n\
							El taxímetro se pondrá en marcha para el primer pasajero que se suba al taxi, el precio se\n\
							mide en precio por km, puedes ajustarlo con el comando /tarifa.\n\
							\n\
							",
								header
						);
					}
					case WORK_TRUCK:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Súbete a cualquier camión de la empresa y ve a cargarlo en cualquier punto de carga.\n\
							Según tu experiencia en el trabajo podrás transportar diferentes productos de más valor.\n\
							\n\
							",
								header
						);
					}
					case WORK_MECHANIC:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Para empezar a trabajar ve al taller y utiliza /mecanico para empezar a trabajar o dejar de trabajar.\n\
							Con este trabajo podrás reparar los vehículos dañados en el taller o ir a arreglarlos por San Andreas.\n\
							Las personas que hayan llamado al mecánico aparecerán marcados en el mapa.\n\
							Si tienes un GPS puedes utilizar /mapa para ver las personas que necesitan un mecánico.\n\
							Para reparar o tunear un vehículo usa /vmenu tras elegir una opción se le ofrecerá al dueño del vehículo\n\
							en caso de ser un vehículo personal, si no se le ofrecerá al conductor o el último conductor del vehículo.\n\
							\n\
							Puedes utilizar los vehículos de tu trabajo o tu vehículo personal.\n\
							Para cualquier reparación o modificación necesitarás piezas que puedes comprar en el taller.\n\
							Para reparar o modificar un vehículo utiliza cerca del vehículo el comando /vmenu.\n\
							\n\
							En el taller también podrás pintar los vehículos.\n\
							Para tunearlos o remover componentes tendrás que haber realizado al menos 100 reparaciones en vehículos ajenos.\n\
							\n\
							",
								header
						);
					}
					case WORK_HARVESTER:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Súbete a una cosechadora y empieza a cosechar.\n\
							\n\
							",
								header
						);
					}
					case WORK_FUMIGATOR:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Súbete a un avión y empieza a fumigar.\n\
							\n\
							",
								header
						);
					}
					case WORK_TRASH:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Para este trabajo se necesitan 2 personas, uno que conduzca el camión y otro que recoja la basura.\n\
							Para empezar a trabajar sube a alguien a un camión y selecciona la ruta que queréis realizar.\n\
							\n\
							Dependiendo de tu experiencia recogerás más rápido la basura.\n\
							\n\
							",
								header
						);
					}
					case WORK_LUMBERJACK:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Para empezar a trabajar ve a los árboles asignados y empieza a talar.\n\
							Dependiendo de tu experiencia tu velocidad talando irá aumentando.\n\
							\n\
							",
								header
						);
					}
					case WORK_FARMER:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Necesitarás semillas para poder plantar que puedes comprar en la granja.\n\
							Dependiendo de tu experiencia tu velocidad plantando irá aumentando.\n\
							\n\
							Después de que la planta crezca tienes 5 minutos para recogerla si no la planta se secará y se destruirá.\n\
							Cuando termines de plantar espera a que la planta termine de crecer, para recogerla.\n\
							Una vez recogida puedes vender el producto adquirido o usarlo para consumo propio.\n\
							\n\
							Cuida tus plantas, la gente puede destuirlas si le disparan.\n\
							\n\
							",
								header
						);
					}
					case WORK_POLICE:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Los policías en servicio aparecerán de color azul.\n\
							Utiliza /policias para ver la lista de policías, los rangos capitán y comandante podrán desde aquí\n\
							bajar, subir el rango de los policías, también pueden expulsarlos del cuerpo.\n\
							\n\
							Las personas con nivel de búsqueda aparecerán marcadas en el mapa desde un color claro hasta un color rojo\n\
							dependiendo de su nivel de búsqueda. Si tienes GPS puedes utilizar /mapara para localizarlos.\n\
							\n\
							Para asignar un nivel de búsqueda a una persona utiliza el comando /nivel.\n\
							Puedes quitarle el nivel de búsqueda asignándole el nivel de búsqueda 0.\n\
							Utiliza /esposar para esposar o desesposar a alguien que tenga nivel de búsqueda.\n\
							Utiliza /revisar para ver las pertenencias del jugador esposado, utiliza /requisar para requisar las pertenencias ilegales.\n\
							Utiliza /arrestar en tu vehículo personal para detener a alguien que esté esposado.\n\
							Utiliza /ref para pedir refuerzos.\n\
							Para utiliza el megáfono utiliza /m dentro de un vehículo policial.\n\
							Para entregar a alguien con nivel de búsqueda tiene que estar arrestado en un vehículo policial\n\
							y llevarlo a cualquiera de las 3 comisarías de San Andreas al parking y utilizar /entregar.\n\
							\n\
							Para ponerte de servicio ve a cualquier comisaría y busca el vestuario para /policia.\n\
							Los policías pueden equiparse en la comisaría.\n\
							Para utilizar la radio debes estar de servicio, puedes seleccionar la frecuencia con /frecuencias, uso: !texto.\n\
							Puedes abrir cualquier puerta de la comisaría pulsando la tecla F cerca de la puerta.\n\
							Los policías recibirán la paga en el payday, su paga dependerá de su rango.\n\
							\n\
							",
								header
						);
					}
					case WORK_PIZZA:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Súbete a una moto y empieza a repartir pizzas.\n\
							\n\
							",
								header
						);
					}
					case WORK_MEDIC:
					{
						format(dialog, sizeof dialog, 
						
							"\
							%s\
							\n\
							Ponte de servicio en cualquier hospital, tras esto verás a las persons que necesiten un médico\n\
							marcadas en el mapa, ve rápido hasta ellas para poder salvarlos a tiempo.\n\
							Para salvar la vida a alguien que este herido usa /curar.\n\
							\n\
							Cuando estás de servicio solo puedes conducir ambulancias.\n\
							\n\
							",
								header
						);
					}
				}
				
				ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, caption, dialog, "Salir", "");
			}
			return 1;
		}
		case DIALOG_ADMIN_LIST:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -2) // Siguiente
				{
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] >= GetDatabasePages("SELECT COUNT() FROM `CUENTA` WHERE `ADMIN_LEVEL` > 0;", PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] ++;
					ShowDialog(playerid, dialogid);
				}
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -3) //Anterior
				{
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] <= 0) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = GetDatabasePages("SELECT COUNT() FROM `CUENTA` WHERE `ADMIN_LEVEL` > 0;", PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] --;
					ShowDialog(playerid, dialogid);
				}
				else
				{
					if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] >= 4)
					{
						PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
						ShowDialog(playerid, DIALOG_ADMIN_MODIFY);
					}
				}
			}
			return 1;
		}
		case DIALOG_ADMIN_MODIFY:
		{
			if(response)
			{
				if(listitem > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL])
				{
					SendClientMessage(playerid, -1, "El rango que has seleccionado es superior al tuyo.");
					return 1;
				}					
				
				new DBResult:Result, DB_Query[256], name[24], connected, player_id, current_rank, bool:found;
				format(DB_Query, sizeof DB_Query, "SELECT `NAME`, `CONNECTED`, `PLAYERID`, `ADMIN_LEVEL` FROM `CUENTA` WHERE `ID` = '%d';", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
				Result = db_query(Database, DB_Query);
				
				if(db_num_rows(Result))
				{
					db_get_field_assoc(Result, "NAME", name, 24);
					connected = db_get_field_assoc_int(Result, "CONNECTED");
					player_id = db_get_field_assoc_int(Result, "PLAYERID");
					current_rank = db_get_field_assoc_int(Result, "ADMIN_LEVEL");
					found = true;
				}
				else found = false;
				db_free_result(Result);
				
				if(!found) return 1;
				if(current_rank > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL])
				{
					SendClientMessage(playerid, -1, "No puedes modificar el rango de este admin porque es un rango superior al tuyo.");
					return 1;
				}
				
				format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `ADMIN_LEVEL` = '%d' WHERE `ID` = '%d';", listitem, PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
				db_query(Database, DB_Query);
				SendClientMessageEx(playerid, -1, "El nuevo rango de %s es: '%s'.", name, ADMIN_LEVELS[listitem]);
				
				if(connected)
				{
					ACCOUNT_INFO[player_id][ac_ADMIN_LEVEL] = listitem;
					SendClientMessageEx(player_id, -1, "%s cambió tu rango administrativo a: %s.", ACCOUNT_INFO[playerid][ac_NAME], ADMIN_LEVELS[listitem]);
				}
			}
			else ShowDialog(playerid, DIALOG_ADMIN_LIST);
			return 1;
		}
		case DIALOG_CHANGE_PASSWORD:
		{
			if(response)
			{
				if(!strlen(inputtext)) return ShowDialog(playerid, dialogid);
				
				new password[64 + 1];
				SHA256_PassHash(inputtext, ACCOUNT_INFO[playerid][ac_SALT], password, sizeof password);
			
				if(!strcmp(password, ACCOUNT_INFO[playerid][ac_PASS], false))
				{
					ShowDialog(playerid, DIALOG_CHANGE_PASSWORD_PASS);
					PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP] = 0;
				}
				else // Error
				{
					PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP] ++;
					if(PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP] > MAX_BAD_LOGIN_ATTEMPS) return Kick(playerid);
					SendClientMessageEx(playerid, 0x999999AA, "Contraseña incorrecta, aviso %d/%d.", PLAYER_TEMP[playerid][pt_BAD_LOGIN_ATTEMP], MAX_BAD_LOGIN_ATTEMPS);
				}
			}
			return 1;
		}
		case DIALOG_CHANGE_PASSWORD_PASS:
		{
			if(response)
			{
				if(strlen(inputtext) < MIN_PASS_LENGTH || strlen(inputtext) > MAX_PASS_LENGTH) return ShowDialog(playerid, dialogid);
				
				new salt[16];
				getRandomSalt(salt);
				format(ACCOUNT_INFO[playerid][ac_SALT], 16, "%s", salt);
				SHA256_PassHash(inputtext, ACCOUNT_INFO[playerid][ac_SALT], ACCOUNT_INFO[playerid][ac_PASS], 64 + 1);
				
				new DB_Query[160];
				format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SALT` = '%q' `PASS` = '%q' WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_SALT], ACCOUNT_INFO[playerid][ac_PASS], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessage(playerid, -1, "{CCCCCC}Tu contraseña ha sido cambiada correctamente.");
			}
			return 1;
		}
		case DIALOG_ANTI_CHEAT:
		{
			if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 4) return 1;
			
			if(response)
			{
				PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] = listitem;
				ShowDialog(playerid, DIALOG_ANTI_CHEAT_MODIFY);
			}
			return 1;
		}
		case DIALOG_ANTI_CHEAT_MODIFY:
		{
			if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 4) return 1;
			
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Enabled]) ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Enabled] = false;
						else ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Enabled] = true;
					}
					case 1: return ShowDialog(playerid, DIALOG_ANTI_CHEAT_MODIFY_DETECT);
					case 2:
					{
						if(ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Kick]) ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Kick] = false;
						else ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Kick] = true;
					}
				}
				WriteAnticheatRules();
				ShowDialog(playerid, DIALOG_ANTI_CHEAT_MODIFY);
			}
			else ShowDialog(playerid, DIALOG_ANTI_CHEAT);
			return 1;
		}
		case DIALOG_ANTI_CHEAT_MODIFY_DETECT:
		{
			if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 4) return 1;
			
			if(response)
			{
				new detections, seconds;
				if(sscanf(inputtext, "p<:>dd", detections, seconds))
				{
					SendClientMessage(playerid, -1, "Sintaxis no válida.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(detections < 1 || detections > 99999)
				{
					SendClientMessage(playerid, -1, "El número de detecciones debe ser 1 o mayor.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(seconds < 0 || seconds > 99999)
				{
					SendClientMessage(playerid, -1, "Los segundos no pueden ser un valor negativo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Detections] = detections;
				ac_Info[ PLAYER_TEMP[playerid][pt_SELECTED_AC_LISTITEM] ][ac_Interval] = seconds;
				
				WriteAnticheatRules();
				ShowDialog(playerid, DIALOG_ANTI_CHEAT_MODIFY);
			}
			else ShowDialog(playerid, DIALOG_ANTI_CHEAT_MODIFY);
			return 1;
		}
		case DIALOG_SHOP_ARTICLE_MODIFY:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}Por favor introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] < 0)
				{
					SendClientMessage(playerid, -1, "{999999}Por favor introduce un valor positivo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] > 1000000000)
				{
					SendClientMessage(playerid, -1, "{999999}El precio es demasiado alto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new DB_Query[80];
				format(DB_Query, sizeof DB_Query, "UPDATE `SHOP` SET `PRICE` = '%d' WHERE `ID` = '%d';", inputtext[0], PLAYER_TEMP[playerid][pt_SHOP_SELECTED_ARTICLE_ID]);
				db_query(Database, DB_Query);
			
				UpdatePlayerShop(playerid);
				SendClientMessage(playerid, -1, "{CCCCCC}El precio de tu artículo ha sido actualizado.");
			}
			return 1;
		}
		case DIALOG_SHOP_ARTICLE_REMOVE:
		{
			if(response)
			{
				new DB_Query[80];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `SHOP` WHERE `ID` = '%d';", PLAYER_TEMP[playerid][pt_SHOP_SELECTED_ARTICLE_ID]);
				db_query(Database, DB_Query);
			
				if(PLAYER_TEMP[playerid][pt_SHOP_COME_FROM_MY_ADS])
				{
					PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_MY_ADS;
					UpdatePlayerShop(playerid);
				}
				else
				{
					PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_ALL;
					UpdatePlayerShop(playerid);
				}
				SendClientMessage(playerid, -1, "{CCCCCC}Tu producto se ha eliminado.");
			}
			return 1;
		}
		case DIALOG_SHOP_ADD:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						PLAYER_TEMP[playerid][pt_NOTARY_OPTION] = 2;
						ShowDialog(playerid, DIALOG_NOTARY_SELECT_PROPERTY);
					}
					case 1:
					{
						PLAYER_TEMP[playerid][pt_NOTARY_OPTION] = 2;
						ShowDialog(playerid, DIALOG_NOTARY_SELECT_VEHICLE);
					}
					case 2:
					{
						PLAYER_TEMP[playerid][pt_SHOP_ADD_TYPE] = SHOP_ARTICLE_TYPE_OTHER;
						PLAYER_TEMP[playerid][pt_SHOP_ADD_MODELID] = 1314;
						PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL1] = 0;
						PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL2] = 0;
						ShowDialog(playerid, DIALOG_SHOP_ADD_TEXT);
					}
				}
			}
			return 1;
		}
		case DIALOG_SHOP_ADD_TEXT:
		{
			if(response)
			{
				if(strlen(inputtext) > 24) return ShowDialog(playerid, dialogid);
				new text[24];
				if(sscanf(inputtext, "s[24]", text)) return ShowDialog(playerid, dialogid);
				if(!td_str_legal(text)) return ShowDialog(playerid, dialogid);
				
				format(PLAYER_TEMP[playerid][pt_SHOP_ADD_TEXT], 24, "%s", inputtext);
				ShowDialog(playerid, DIALOG_SHOP_ADD_PRICE);
			}
			return 1;
		}
		case DIALOG_SHOP_ADD_PRICE:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}Por favor introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] < 0)
				{
					SendClientMessage(playerid, -1, "{999999}Por favor introduce un valor positivo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] > 1000000000)
				{
					SendClientMessage(playerid, -1, "{999999}El precio es demasiado alto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(500 > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessage(playerid, -1, "{999999}Necesitas 500$ para poner el anuncio.");
				
				AddNewAd(playerid, PLAYER_TEMP[playerid][pt_SHOP_ADD_TYPE], inputtext[0], PLAYER_TEMP[playerid][pt_SHOP_ADD_TEXT], PLAYER_TEMP[playerid][pt_SHOP_ADD_MODELID], PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL1], PLAYER_TEMP[playerid][pt_SHOP_ADD_VCOL2]);
				GivePlayerCash(playerid, -500);
				SendClientMessage(playerid, -1, "{CCCCCC}Tu anuncio se ha publicado correctamente.");
			}
			return 1;
		}
		case DIALOG_CRANE_SELECT_VEHICLE:
		{
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				
				new veh_money = (VEHICLE_INFO[GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_MODELID] - 400][vehicle_info_PRICE] / 100) + 350;
				if(veh_money > CHARACTER_INFO[playerid][ch_CASH])
				{
					SendClientMessageEx(playerid, -1, "{999999}Necesitas %s$ para remolcar este vehículo al depósito municipal.", veh_money);
					return 1;
				}
				
				if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_OCCUPIED])
				{
					SendClientMessage(playerid, -1, "{999999}No podemos remolcar tu vehículo porque hay alguien conduciéndolo.");
					return 1; 
				}
				
				new crane_point = random(sizeof(CRANE_POINTS));
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_SPAWN_X] = CRANE_POINTS[crane_point][0];
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_SPAWN_Y] = CRANE_POINTS[crane_point][1];
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_SPAWN_Z] = CRANE_POINTS[crane_point][2];
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_SPAWN_ANGLE] = CRANE_POINTS[crane_point][3];
				
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_LAST_CLOSED_TIME] = gettime();
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_PARAMS_ENGINE] = 0;
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_PARAMS_LIGHTS] = 0;
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_PARAMS_DOORS] = 1;
				UpdateVehicleParams(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem]);
				SetVehicleToRespawnEx(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem]);
				
				GivePlayerCash(playerid, -veh_money);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Tu vehículo %s ha sido remolcado hasta el depósito municipal.", VEHICLE_INFO[GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][gb_vehicle_MODELID] - 400][vehicle_info_NAME]);
			}
			return 1;
		}
		case DIALOG_CREATE_CREW:
		{
			if(response)
			{
				if(ACCOUNT_INFO[playerid][ac_LEVEL] < 10) return SendClientMessage(playerid, -1, "{999999}Necesitas ser nivel 10 para poder crear una banda.");
				ShowDialog(playerid, DIALOG_CREATE_CREW_NAME);
			}
			return 1;
		}
		case DIALOG_CREATE_CREW_NAME:
		{
			if(response)
			{
				if(strlen(inputtext) >= 32)
				{
					SendClientMessage(playerid, -1, "{999999}Como máximo puedes introducir un nombre de 32 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new crew_name[32];
				if(sscanf(inputtext, "s[32]", crew_name))
				{
					SendClientMessage(playerid, -1, "{999999}Introduce un nombre para tu banda.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				format(PLAYER_TEMP[playerid][pt_CREATE_CREW_NAME], 32, "%s", crew_name);
				ShowDialog(playerid, DIALOG_CREATE_CREW_COLOR);
			}
			return 1;
		}
		case DIALOG_CREATE_CREW_COLOR:
		{
			if(response)
			{
				PLAYER_TEMP[playerid][pt_CREATE_CREW_COLOR] = listitem;
				ShowDialog(playerid, DIALOG_CREATE_CREW_CONFIRM);
			}
			else ShowDialog(playerid, DIALOG_CREATE_CREW_NAME);
			return 1;
		}
		case DIALOG_CREATE_CREW_CONFIRM:
		{
			if(response)
			{
				new index = GetAvaibleCrewIndex();
				if(index == -1)
				{
					SendClientMessageEx(playerid, -1, "{999999}No se puede crear la banda porque no hay espacio disponible, el límite de bandas es %d.", MAX_CREWS);
					return 1;
				}
				
				if(1000000 > CHARACTER_INFO[playerid][ch_CASH])
				{
					SendClientMessage(playerid, -1, "{999999}Necesitas 1.000.000$ para crear la banda.");
					return 1;
				}
				
				GivePlayerCash(playerid, -1000000);
				CREW_INFO[index][crew_VALID] = true;
				format(CREW_INFO[index][crew_NAME], 32, "%s", PLAYER_TEMP[playerid][pt_CREATE_CREW_NAME]);
				CREW_INFO[index][crew_COLOR] = RandomColors[ PLAYER_TEMP[playerid][pt_CREATE_CREW_COLOR] ];
	
				CREW_RANK_INFO[index][0][crew_rank_VALID] = true;
				format(CREW_RANK_INFO[index][0][crew_rank_NAME], 32, "Fundador");
				
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_CHANGE_NAME] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_INVITE] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_CAST_MEMBERS] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_MODIFY_MEMBERS] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_ADD_PROPERTIES] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_DELETE_PROPERTIES] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_CHANGE_COLOR] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_LEAVE_TERRITORY] =
				CREW_RANK_INFO[index][0][crew_rank_PERMISSION][CREW_RANK_DELETE] = 1;
					
				NewCrewRegister(index);
				
				PLAYER_CREW[playerid][player_crew_VALID] = true;
				PLAYER_CREW[playerid][player_crew_ID] = CREW_INFO[index][crew_ID];
				PLAYER_CREW[playerid][player_crew_RANK] = 0;
				PLAYER_CREW[playerid][player_crew_INDEX] = index;
				
				new DB_Query[200];
				format(DB_Query, sizeof DB_Query, 
							
						"\
							DELETE FROM `PLAYER_CREW` WHERE `ID_USER` = '%d';\
							INSERT INTO `PLAYER_CREW` (`ID_USER`, `ID_CREW`, `RANK`) VALUES ('%d', '%d', '%d');\
						",
							ACCOUNT_INFO[playerid][ac_ID],
							ACCOUNT_INFO[playerid][ac_ID],
							PLAYER_CREW[playerid][player_crew_ID],
							PLAYER_CREW[playerid][player_crew_RANK]
				);
				db_query(Database, DB_Query);
				
				SendClientMessageEx(playerid, -1, "La banda {%06x}'%s' {FFFFFF}se ha creado correctamente, usa {f4f142}/banda {FFFFFF}para administrarla.", CREW_INFO[index][crew_COLOR] >>> 8, CREW_INFO[index][crew_NAME]);
			}
			return 1;
		}
		case DIALOG_CREW_MENU:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				
				switch(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem])
				{
					case CREW_RANK_SIZE: //Lista de miembros
					{
						PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] = 10;
						PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
						ShowDialog(playerid, DIALOG_CREW_MEMBER_LIST);
					}
					case CREW_RANK_CHANGE_NAME:
					{
						if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_NAME]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
						if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No se puede cambiar el nombre de la banda cuando la banda está en combate.");
						ShowDialog(playerid, DIALOG_CREW_CHANGE_NAME);
					}
					case CREW_RANK_CAST_MEMBERS:
					{
						if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CAST_MEMBERS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
						
						PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] = 10;
						PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
						ShowDialog(playerid, DIALOG_CREW_MEMBER_LIST_DELETE);
					}
					
					case CREW_RANK_MODIFY_RANKS:
					{
						if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
						
						ShowDialog(playerid, DIALOG_CREW_RANKS);
					}
					case CREW_RANK_CHANGE_COLOR:
					{
						if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_COLOR]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
						
						if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No se puede cambiar el color cuando la banda está en combate.");
						ShowDialog(playerid, DIALOG_CREW_MODIFY_COLOR);
					}
					case CREW_RANK_DELETE:
					{
						if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_DELETE]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
						
						ShowDialog(playerid, DIALOG_CREW_DELETE);
					}
					case CREW_RANK_MODIFY_MEMBERS:
					{
						if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_MEMBERS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
						
						PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] = 10;
						PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
						ShowDialog(playerid, DIALOG_CREW_MODIFY_MEMBERS);
					}
					case CREW_RANK_SIZE + 1: //Abandonar banda
					{
						if(PLAYER_CREW[playerid][player_crew_RANK] == 0)
						{
							new DB_Query[128], DBResult:Result_count, total;
							format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d' AND `RANK` = '0';", PLAYER_CREW[playerid][player_crew_ID]);
							Result_count = db_query(Database, DB_Query);
							
							if(db_num_rows(Result_count)) total = db_get_field_int(Result_count, 0);
							db_free_result(Result_count);
							
							if(total <= 1)
							{
								SendClientMessage(playerid, -1, "{999999}No puedes abandonar la banda porque eres el único miembro con el rango fundador.");
								return 1;
							}
						}
						ShowDialog(playerid, DIALOG_CREW_LEAVE);
					}
				}
			}
			return 1;
		}
		case DIALOG_CREW_MEMBER_LIST:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return ShowDialog(playerid, dialogid);
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -2) // Siguiente
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", PLAYER_CREW[playerid][player_crew_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] >= GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] ++;
					ShowDialog(playerid, dialogid);
				}
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -3) //Anterior
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", PLAYER_CREW[playerid][player_crew_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] <= 0) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] --;
					ShowDialog(playerid, dialogid);
				}
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_CHANGE_NAME:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_NAME]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No se puede cambiar el nombre de la banda cuando la banda está en combate.");
				if(strlen(inputtext) >= 32)
				{
					SendClientMessage(playerid, -1, "{999999}Como máximo puedes introducir un nombre de 32 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new crew_name[32];
				if(sscanf(inputtext, "s[32]", crew_name))
				{
					SendClientMessage(playerid, -1, "{999999}Introduce un nombre para tu banda.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				format(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME], 32, "%s", crew_name);
				
				new DB_Query[128];
				format(DB_Query, sizeof DB_Query, "UPDATE `CREW` SET `NAME` = '%q' WHERE `ID` = '%d';", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME], CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ID]);
				db_query(Database, DB_Query);
				//actualizar nombre casas pickups
				
				
				new message[145], label_str[256];
				format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s (%s) cambió el nombre de la banda a '%s'.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME], CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME]);
				SendMessageToCrewMembers(PLAYER_CREW[playerid][player_crew_ID], -1, message);
				
				
				for(new i = 0; i != MAX_PROPERTIES; i ++)
				{
					if(!PROPERTY_INFO[i][property_VALID]) continue;
					if(!PROPERTY_INFO[i][property_CREW]) continue;
					if(PROPERTY_INFO[i][property_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) continue;
		
					format
					(
						label_str, 
						sizeof label_str, 
						"\
							Propiedad {C4FF66}#%d\n\n\
							{FFFFFF}Banda: {C4FF66}%s\n\
							{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
						", PROPERTY_INFO[i][property_ID], CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME]
					);
					
					UpdateDynamic3DTextLabelText(PROPERTY_INFO[i][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
				}
				
				ShowDialog(playerid, DIALOG_CREW_MENU);
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_MEMBER_LIST_DELETE:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CAST_MEMBERS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -2) // Siguiente
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", PLAYER_CREW[playerid][player_crew_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] >= GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] ++;
					ShowDialog(playerid, dialogid);
				}
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -3) //Anterior
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", PLAYER_CREW[playerid][player_crew_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] <= 0) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] --;
					ShowDialog(playerid, dialogid);
				}
				else
				{
					PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
					
					new DBResult:Result, DB_Query[256], name[24], current_rank, bool:found;
					format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `PLAYER_CREW`.`RANK` FROM `CUENTA`, `PLAYER_CREW` WHERE `CUENTA`.`ID` = '%d' AND `PLAYER_CREW`.`ID_USER` = `CUENTA`.`ID`;", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
					Result = db_query(Database, DB_Query);
					
					if(db_num_rows(Result))
					{
						db_get_field_assoc(Result, "NAME", name, 24);
						current_rank = db_get_field_assoc_int(Result, "RANK");
						found = true;
					}
					else found = false;
					db_free_result(Result);
					
					if(!found) return 1;
					if(current_rank < PLAYER_CREW[playerid][player_crew_RANK]) return SendClientMessage(playerid, -1, "{999999}No puedes echar a este miembro porque es un rango superior al tuyo.");
					if(current_rank == 0)
					{
						new DBResult:Result_count, total;
						format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d' AND `RANK` = '0';", PLAYER_CREW[playerid][player_crew_ID]);
						Result_count = db_query(Database, DB_Query);
						
						if(db_num_rows(Result_count)) total = db_get_field_int(Result_count, 0);
						db_free_result(Result_count);
						
						if(total <= 1)
						{
							SendClientMessage(playerid, -1, "{999999}No se puede echar a este miembro ya que es el único miembro con el rango fundador.");
							return 1;
						}
					}
					
					ShowDialog(playerid, DIALOG_CREW_CAST_MEMBER_CONFIRM);
				}
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_CAST_MEMBER_CONFIRM:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CAST_MEMBERS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				new DBResult:Result, DB_Query[320], name[24], current_rank, connected, player_id, bool:found;
				format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `CUENTA`.`CONNECTED`, `CUENTA`.`PLAYERID`, `PLAYER_CREW`.`RANK` FROM `CUENTA`, `PLAYER_CREW` WHERE `CUENTA`.`ID` = '%d' AND `PLAYER_CREW`.`ID_USER` = `CUENTA`.`ID`;", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
				Result = db_query(Database, DB_Query);
				
				if(db_num_rows(Result))
				{
					db_get_field_assoc(Result, "NAME", name, 24);
					connected = db_get_field_assoc_int(Result, "CONNECTED");
					player_id = db_get_field_assoc_int(Result, "PLAYERID");
					current_rank = db_get_field_assoc_int(Result, "RANK");
					found = true;
				}
				else found = false;
				db_free_result(Result);
				
				if(!found) return 1;
				if(current_rank < PLAYER_CREW[playerid][player_crew_RANK]) return SendClientMessage(playerid, -1, "{999999}No puedes echar a este miembro porque es un rango superior al tuyo.");
				if(current_rank == 0)
				{
					new DBResult:Result_count, total;
					format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d' AND `RANK` = '0';", PLAYER_CREW[playerid][player_crew_ID]);
					Result_count = db_query(Database, DB_Query);
					
					if(db_num_rows(Result_count)) total = db_get_field_int(Result_count, 0);
					db_free_result(Result_count);
					
					if(total <= 1)
					{
						SendClientMessage(playerid, -1, "{999999}No se puede echar a este miembro ya que es el único miembro con el rango fundador.");
						return 1;
					}
				}
				
				new message[145];
				format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s (%s) ha echado a %s de la banda.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME], name);
				SendMessageToCrewMembers(PLAYER_CREW[playerid][player_crew_ID], -1, message);
			
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_CREW` WHERE `ID_USER` = '%d';", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
				db_query(Database, DB_Query);
				
				CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_MEMBERS] --;
				if(connected)
				{
					CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ONLINE_MEMBERS] --;
					SetPlayerColorEx(player_id, PLAYER_COLOR);
					if(PLAYER_TEMP[playerid][pt_LAST_TERRITORY] != INVALID_STREAMER_ID)
					{
						TextDrawHideForPlayer(player_id, Textdraws[textdraw_TERRITORY_BOX]);
						TextDrawHideForPlayer(player_id, TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_TEXTDRAW]);
					}
					PLAYER_CREW[player_id][player_crew_VALID] = false;
					PLAYER_CREW[player_id][player_crew_ID] = 0;
					PLAYER_CREW[player_id][player_crew_RANK] = 0;
					PLAYER_CREW[player_id][player_crew_INDEX] = 0;
				}
			}
			else ShowDialog(playerid, DIALOG_CREW_MEMBER_LIST_DELETE);
			return 1;
		}
		case DIALOG_CREW_INVITE_RANK:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_INVITE]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] < PLAYER_CREW[playerid][player_crew_RANK])
				{
					SendClientMessage(playerid, -1, "{999999}No puedes invitar con este rango porque es superior al tuyo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_CREW_INVITE_PID])) return SendClientMessage(playerid, -1, "{999999}El jugador está desconectado.");
				
				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_CREW_INVITE_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
				if(PLAYER_WORKS[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}Esta persona es policía y no puede tener banda.");
				if(PLAYER_CREW[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}Esta persona pertenece a otra banda.");
				if(PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes invitar a este jugador ahora.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_CREW_INVITE_AID]) return SendClientMessage(playerid, -1, "{999999}El jugador está desconectado.");
				
				SendClientMessageEx(playerid, -1, "Has ofrecido a %s unirse a la banda con el rango %s.", PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][crew_rank_NAME]);
				
				PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][pt_CREW_INVITE_INFO][0] = PLAYER_CREW[playerid][player_crew_ID];
				PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][pt_CREW_INVITE_INFO][1] = PLAYER_CREW[playerid][player_crew_INDEX];
				PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][pt_CREW_INVITE_INFO][2] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				PLAYER_TEMP[ PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] ][pt_CREW_INVITE_INFO][3] = gettime();
				ShowDialog(PLAYER_TEMP[playerid][pt_CREW_INVITE_PID], DIALOG_CREW_INVITE_ACCEPT);
			}
			return 1;
		}
		case DIALOG_CREW_INVITE_ACCEPT:
		{
			if(response)
			{
				if(!CREW_INFO[ PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][1] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}Esta banda ya no existe.");
				if(!CREW_RANK_INFO[ PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][1] ][ PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][2] ][crew_rank_VALID]) return SendClientMessage(playerid, -1, "{999999}El rango que te han ofrecio ya no existe.");
				if(gettime() > PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][3] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptar.");
				if(CREW_INFO[ PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][1] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No puedes unirte a la banda cuando la banda está en combate.");
				
				PLAYER_CREW[playerid][player_crew_VALID] = true;
				PLAYER_CREW[playerid][player_crew_ID] = PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][0];
				PLAYER_CREW[playerid][player_crew_RANK] = PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][2];
				PLAYER_CREW[playerid][player_crew_INDEX] = PLAYER_TEMP[playerid][pt_CREW_INVITE_INFO][1];
				CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_MEMBERS] ++;
				CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ONLINE_MEMBERS] ++;
				PLAYER_TEMP[playerid][pt_LAST_GOT_CREW] = gettime();
				
				new DB_Query[200];
				format(DB_Query, sizeof DB_Query, 
							
						"\
							DELETE FROM `PLAYER_CREW` WHERE `ID_USER` = '%d';\
							INSERT INTO `PLAYER_CREW` (`ID_USER`, `ID_CREW`, `RANK`) VALUES ('%d', '%d', '%d');\
						",
							ACCOUNT_INFO[playerid][ac_ID],
							ACCOUNT_INFO[playerid][ac_ID],
							PLAYER_CREW[playerid][player_crew_ID],
							PLAYER_CREW[playerid][player_crew_RANK]
				);
				db_query(Database, DB_Query);
				
				new message[145];
				format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s se ha unido a la banda con el rango %s.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME]);
				SendMessageToCrewMembers(PLAYER_CREW[playerid][player_crew_ID], -1, message);
			}
			return 1;
		}
		case DIALOG_CREW_RANKS:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(listitem < PLAYER_CREW[playerid][player_crew_RANK])
				{
					if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][listitem][crew_rank_VALID]) SendClientMessage(playerid, -1, "{999999}No puedes modificar este rango porque es un rango superior al tuyo.");
					else SendClientMessage(playerid, -1, "{999999}No puedes crear un rango en este puesto porque es superior al tuyo.");
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] = listitem;
				if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][listitem][crew_rank_VALID]) ShowDialog(playerid, DIALOG_CREW_RANK_MODIFY);
				else ShowDialog(playerid, DIALOG_CREW_RANK_CREATE);
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_RANK_MODIFY:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_CREW_RANK_MODIFY_NAME);
					case 1:
					{
						if(PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] == 0)
						{
							SendClientMessage(playerid, -1, "{999999}No se pueden modificar los permisos de este rango porque es el rango fundador.");
							return 1;
						}
						
						ShowDialog(playerid, DIALOG_CREW_RANK_MODIFY_PERMISS);
					}
					case 2:
					{
						if(PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] == 0)
						{
							SendClientMessage(playerid, -1, "{999999}No se puede eliminar este rango porque es el rango fundador.");
							return 1;
						}
						
						SendClientMessageEx(playerid, -1, "{f1df53}[Atención] {FFFFFF}Selecciona el nuevo rango para los miembros que actualmente tienen el rango {4eba18}'%s'.", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME]);
						ShowDialog(playerid, DIALOG_CREW_RANK_DELETE);
					}
				}
			}
			else ShowDialog(playerid, DIALOG_CREW_RANKS);
			return 1;
		}
		case DIALOG_CREW_RANK_MODIFY_NAME:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(strlen(inputtext) >= 32)
				{
					SendClientMessage(playerid, -1, "{999999}Como máximo puedes introducir un nombre de 32 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new rank_name[32];
				if(sscanf(inputtext, "s[32]", rank_name))
				{
					SendClientMessage(playerid, -1, "{999999}Introduce el nuevo nombre para el rango.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				SendClientMessageEx(playerid, -1, "Has modificado el nombre del rango '%s' a '%s'.", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME], rank_name);
				format(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME], 32, "%s", rank_name);
				
				new DB_Query[145];
				format(DB_Query, sizeof DB_Query, "UPDATE `CREW_RANKS` SET `RANK_NAME` = '%q' WHERE `ID` = '%d';", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_ID]);
				db_query(Database, DB_Query);
			}
			else ShowDialog(playerid, DIALOG_CREW_RANK_MODIFY);
			return 1;
		}
		case DIALOG_CREW_RANK_CREATE:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(strlen(inputtext) >= 32)
				{
					SendClientMessage(playerid, -1, "{999999}Como máximo puedes introducir un nombre de 32 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				new rank_name[32];
				if(sscanf(inputtext, "s[32]", rank_name))
				{
					SendClientMessage(playerid, -1, "{999999}Introduce un nombre para el rango.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_VALID])
				{
					SendClientMessage(playerid, -1, "{999999}Parece que alguien ya ha creado un rango en este espacio.");
					return 1;
				}
				
				
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_VALID] = true;
				format(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME], 32, "%s", rank_name);
				
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_NAME] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_INVITE] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_CAST_MEMBERS] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_MEMBERS] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_ADD_PROPERTIES] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_DELETE_PROPERTIES] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_COLOR] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_LEAVE_TERRITORY] =
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][CREW_RANK_DELETE] = 0;
				RegisterNewCrewRank(PLAYER_CREW[playerid][player_crew_INDEX], PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK]);
								
				SendClientMessageEx(playerid, -1, "El rango '%s' ha sido creado, ahora puedes editarlo y darle permisos.", rank_name);
				ShowDialog(playerid, DIALOG_CREW_RANKS);
			}
			else ShowDialog(playerid, DIALOG_CREW_RANKS);
			return 1;
		}
		case DIALOG_CREW_RANK_MODIFY_PERMISS:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][listitem])
				{
					SendClientMessage(playerid, -1, "{999999}No puedes cambiar este permiso porque tu no tienes este permiso.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][listitem]) CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][listitem] = false;
				else CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][listitem] = true;
				
				new DB_Query[120];
				format(DB_Query, sizeof DB_Query, "UPDATE `RANK_PERMISSIONS` SET `SET` = '%d' WHERE `ID_RANK` = '%d' AND `PERMISSION` = '%d';", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][listitem], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_ID], listitem);
				db_query(Database, DB_Query);
				
				ShowDialog(playerid, dialogid);
			}
			else ShowDialog(playerid, DIALOG_CREW_RANK_MODIFY);
			return 1;
		}
		case DIALOG_CREW_RANK_DELETE:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] < PLAYER_CREW[playerid][player_crew_RANK])
				{
					SendClientMessage(playerid, -1, "{999999}No puedes seleccionar este rango porque es superior al tuyo.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_CREW_SELECTED_NEW_RANK] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
				ShowDialog(playerid, DIALOG_CREW_RANK_DELETE_CONFIRM);
			}
			return 1;
		}
		case DIALOG_CREW_RANK_DELETE_CONFIRM:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_RANKS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				new DB_Query[256];
				format(DB_Query, sizeof DB_Query, 
					"\
						DELETE FROM `CREW_RANKS` WHERE `ID` = '%d';\
						UPDATE `PLAYER_CREW` SET `RANK` = '%d' WHERE `ID_CREW` = '%d' AND `RANK` = '%d';\
					",
						CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_ID],
						
						PLAYER_TEMP[playerid][pt_CREW_SELECTED_NEW_RANK],
						PLAYER_CREW[playerid][player_crew_ID],
						PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK]
				);
				db_query(Database, DB_Query);
			
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has eliminado el rango '%s'.", CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME]);
			
				new message[145];
				format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s (%s) cambió tu rango al rango '%s'.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_NEW_RANK] ][crew_rank_NAME]);
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PLAYER_CREW[i][player_crew_VALID])
						{
							if(PLAYER_CREW[i][player_crew_ID] == PLAYER_CREW[playerid][player_crew_ID])
							{
								if(PLAYER_CREW[i][player_crew_RANK] == PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK])
								{
									PLAYER_CREW[i][player_crew_RANK] = PLAYER_TEMP[playerid][pt_CREW_SELECTED_NEW_RANK];
									SendClientMessage(i, -1, message);
								}
							}
						}
					}
				}
				
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_VALID] = false;
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_ID] = 0;
				CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_NAME][0] = EOS;
				for(new i = 0; i != CREW_RANK_SIZE; i ++) CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_CREW_SELECTED_RANK] ][crew_rank_PERMISSION][i] = 0;
			
			}
			else ShowDialog(playerid, DIALOG_CREW_RANKS);
			return 1;
		}
		case DIALOG_CREW_MODIFY_COLOR:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_CHANGE_COLOR]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No se puede cambiar el color cuando la banda está en combate.");
				
				CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] = RandomColors[listitem];
				
				
				new r, g, b, a,		new_territory_color;
				HexToRGBA(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR], r, g, b, a);
				new_territory_color = RGBAToHex(r, g, b, 135);
				for(new i = 0; i != MAX_TERRITORIES; i ++)
				{
					if(!TERRITORIES[i][territory_VALID]) continue;
					if(!TERRITORIES[i][territory_OCCUPIED]) continue;
					
					if(TERRITORIES[i][territory_CREW_ID] == PLAYER_CREW[playerid][player_crew_ID])
					{
						TERRITORIES[i][territory_COLOR] = new_territory_color;
						UpdateGangZoneColor(i);
					}
				}
				
				new DB_Query[90];
				format(DB_Query, sizeof DB_Query, "UPDATE `CREW` SET `COLOR` = '%d' WHERE `ID` = '%d';", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR], CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessage(playerid, -1, "{CCCCCC}El color de la banda se ha cambiado.");
				ShowDialog(playerid, DIALOG_CREW_MENU);
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_DELETE:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_DELETE]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No se puede borrar la banda cuando está en combate.");
				
				new message[145];
				format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s (%s) ha eliminado la banda.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME]);
				
				new DB_Query[350];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `CREW` WHERE `ID` = '%d';", PLAYER_CREW[playerid][player_crew_ID]);
				db_query(Database, DB_Query);

				new tmp_CREW_INFO[enum_CREW_INFO], old_crew_id = PLAYER_CREW[playerid][player_crew_ID];
				CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ] = tmp_CREW_INFO;
				
				new tmp_CREW_RANK_INFO[enum_CREW_RANK_INFO];
				for(new i = 0; i != MAX_CREW_RANKS; i ++) CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][i] = tmp_CREW_RANK_INFO;
				
				new tmp_PLAYER_CREW[enum_PLAYER_CREW];
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PLAYER_CREW[i][player_crew_VALID])
						{
							if(PLAYER_CREW[i][player_crew_ID] == PLAYER_CREW[playerid][player_crew_ID])
							{
								SetPlayerColorEx(i, PLAYER_COLOR);
						
								if(PLAYER_TEMP[i][pt_LAST_TERRITORY] != INVALID_STREAMER_ID)
								{
									TextDrawHideForPlayer(i, Textdraws[textdraw_TERRITORY_BOX]);
									TextDrawHideForPlayer(i, TERRITORIES[ PLAYER_TEMP[i][pt_LAST_TERRITORY] ][territory_TEXTDRAW]);
								}
								PLAYER_CREW[i] = tmp_PLAYER_CREW;
								SendClientMessage(i, -1, message);
							}
						}
					}
				}
				
				for(new i = 0; i != MAX_TERRITORIES; i ++)
				{
					if(!TERRITORIES[ i ][territory_VALID]) continue;
					if(!TERRITORIES[ i ][territory_OCCUPIED]) continue;
					if(TERRITORIES[ i ][territory_CREW_ID] != old_crew_id) continue;
					
					TERRITORIES[ i ][territory_OCCUPIED] = false;
					TERRITORIES[ i ][territory_CREW_ID] = 0;
					TERRITORIES[ i ][territory_CREW_INDEX] = 0;
					TERRITORIES[ i ][territory_COLOR] = 0xCCCCCC55;
					UpdateGangZoneColor(i);
				}
				
				for(new i = 0; i != MAX_PROPERTIES; i ++)
				{
					if(!PROPERTY_INFO[i][property_VALID]) continue;
					if(!PROPERTY_INFO[i][property_CREW]) continue;
					if(PROPERTY_INFO[i][property_CREW_ID] != old_crew_id) continue;
					
					PROPERTY_INFO[ i ][property_SOLD] = false;
					PROPERTY_INFO[ i ][property_CREW] = false;
					PROPERTY_INFO[ i ][property_OWNER_ID] = 0;
					PROPERTY_INFO[ i ][property_CREW_ID] = 0;
					format(PROPERTY_INFO[ i ][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[ i ][property_ID]);
					
					new label_str[256], info[3];
					format
					(
						label_str, 
						sizeof label_str, 
						"\
							Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
							Interior: {C4FF66}%d\n\
							{FFFFFF}Precio: {C4FF66}%s$\n\
							{FFFFFF}Nivel necesario: {C4FF66}%d\n\
							{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
						", PROPERTY_INFO[ i ][property_ID], PROPERTY_INFO[ i ][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[ i ][property_PRICE]), PROPERTY_INFO[ i ][property_LEVEL]
					);
					UpdateDynamic3DTextLabelText(PROPERTY_INFO[ i ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
					
					DestroyDynamicPickup(PROPERTY_INFO[ i ][property_EXT_PICKUP_ID]);
					PROPERTY_INFO[ i ][property_EXT_PICKUP_ID] = INVALID_STREAMER_ID;
					
					PROPERTY_INFO[ i ][property_EXT_PICKUP_ID] = CreateDynamicPickup(1273, 1, PROPERTY_INFO[ i ][property_EXT_X], PROPERTY_INFO[ i ][property_EXT_Y], PROPERTY_INFO[ i ][property_EXT_Z], 0, PROPERTY_INFO[ i ][property_EXT_INTERIOR]);
					info[0] = PICKUP_TYPE_PROPERTY;
					info[1] = i; // Index
					info[2] = 2; // Pickup Exterior
					Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[ i ][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
								
					format(DB_Query, sizeof(DB_Query), "DELETE FROM `PROPERTY_TERRITORY` WHERE `ID_PROPERTY` = '%d';", PROPERTY_INFO[i][property_ID]);
					db_query(Database, DB_Query);
				}
				
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_LEAVE:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			
			if(response)
			{
				new DB_Query[128];
				if(PLAYER_CREW[playerid][player_crew_RANK] == 0)
				{
					new DBResult:Result_count, total;
					format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d' AND `RANK` = '0';", PLAYER_CREW[playerid][player_crew_ID]);
					Result_count = db_query(Database, DB_Query);
					
					if(db_num_rows(Result_count)) total = db_get_field_int(Result_count, 0);
					db_free_result(Result_count);
					
					if(total <= 1)
					{
						SendClientMessage(playerid, -1, "{999999}No puedes abandonar la banda porque eres el único miembro con el rango fundador.");
						return 1;
					}
				}
				
				new message[145];
				format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s (%s) ha abandonado la banda.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME]);
				SendMessageToCrewMembers(PLAYER_CREW[playerid][player_crew_ID], -1, message);
				
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_CREW` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				SetPlayerColorEx(playerid, PLAYER_COLOR);
				CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_MEMBERS] --;
				CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_ONLINE_MEMBERS] --;
				
				new tmp_PLAYER_CREW[enum_PLAYER_CREW];
				PLAYER_CREW[playerid] = tmp_PLAYER_CREW;
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_MODIFY_MEMBERS:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_MEMBERS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -2) // Siguiente
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", PLAYER_CREW[playerid][player_crew_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] >= GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] ++;
					ShowDialog(playerid, dialogid);
				}
				else if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -3) //Anterior
				{
					new the_query[128];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", PLAYER_CREW[playerid][player_crew_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] <= 0) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] --;
					ShowDialog(playerid, dialogid);
				}
				else
				{
					PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
					ShowDialog(playerid, DIALOG_CREW_MODIFY_MEMBER);
				}
			}
			else ShowDialog(playerid, DIALOG_CREW_MENU);
			return 1;
		}
		case DIALOG_CREW_MODIFY_MEMBER:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_MODIFY_MEMBERS]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] == -1) return 1;
				
				if(PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] < PLAYER_CREW[playerid][player_crew_RANK])
				{
					SendClientMessage(playerid, -1, "{999999}No puedes dar este rango porque es un rango superior al tuyo.");
					return 1;
				}
				
				new DBResult:Result, DB_Query[320], name[24], current_rank, connected, player_id, bool:found;
				format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `CUENTA`.`CONNECTED`, `CUENTA`.`PLAYERID`, `PLAYER_CREW`.`RANK` FROM `CUENTA`, `PLAYER_CREW` WHERE `CUENTA`.`ID` = '%d' AND `PLAYER_CREW`.`ID_USER` = `CUENTA`.`ID`;", PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
				Result = db_query(Database, DB_Query);
				
				if(db_num_rows(Result))
				{
					db_get_field_assoc(Result, "NAME", name, 24);
					connected = db_get_field_assoc_int(Result, "CONNECTED");
					player_id = db_get_field_assoc_int(Result, "PLAYERID");
					current_rank = db_get_field_assoc_int(Result, "RANK");
					found = true;
				}
				else found = false;
				db_free_result(Result);
				
				if(!found) return 1;
				if(current_rank < PLAYER_CREW[playerid][player_crew_RANK]) return SendClientMessage(playerid, -1, "{999999}No puedes modificar el rango de este miembro porque es un rango superior al tuyo.");
				if(current_rank == 0)
				{
					new DBResult:Result_count, total;
					format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d' AND `RANK` = '0';", PLAYER_CREW[playerid][player_crew_ID]);
					Result_count = db_query(Database, DB_Query);
					
					if(db_num_rows(Result_count)) total = db_get_field_int(Result_count, 0);
					db_free_result(Result_count);
					
					if(total <= 1)
					{
						SendClientMessage(playerid, -1, "{999999}No se puede modificar el rango de este miembro ya que es el único miembro con el rango fundador.");
						return 1;
					}
				}
				
				format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_CREW` SET `RANK` = '%d' WHERE `ID_USER` = '%d';", PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem], PLAYER_TEMP[playerid][pt_SELECTED_DB_AC_ID]);
				db_query(Database, DB_Query);
				
				new message[145];
				if(connected)
				{
					PLAYER_CREW[player_id][player_crew_RANK] = PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem];
					format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s (%s) cambió tu rango al rango '%s'.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][crew_rank_NAME]);
					SendClientMessage(player_id, -1, message);
				}
				
				format(message, sizeof message, "Has modificado el rango de '%s' al rango '%s'.", name, CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_TEMP[playerid][pt_PLAYER_LISTITEM][listitem] ][crew_rank_NAME]);
				SendClientMessage(playerid, -1, message);
			}
			else ShowDialog(playerid, DIALOG_CREW_MODIFY_MEMBERS);
			return 1;
		}
		case DIALOG_CREW_PROPERTY_CONFIRM:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_ADD_PROPERTIES]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(!TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_VALID]) return SendClientMessage(playerid, -1, "{999999}La propiedad no está dentro de un territorio de tu banda.");
				if(!TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_OCCUPIED]) return SendClientMessage(playerid, -1, "{999999}La propiedad no está dentro de un territorio de tu banda.");
				if(TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) return SendClientMessage(playerid, -1, "{999999}La propiedad no está dentro de un territorio de tu banda.");
				if(!IsPointInDynamicArea(TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_AREA], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_X], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Y], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Z])) return SendClientMessage(playerid, -1, "{999999}La propiedad no está dentro de un territorio de tu banda.");
				if(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Esta no es tu propiedad.");
				
				
				new index = PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED];
				PROPERTY_INFO[ index ][property_CREW] = true;
				PROPERTY_INFO[ index ][property_OWNER_ID] = 0;
				PROPERTY_INFO[ index ][property_CREW_ID] = PLAYER_CREW[playerid][player_crew_ID];
				format(PROPERTY_INFO[ index ][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[ index ][property_ID]);
				
				new label_str[256];
				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d\n\n\
						{FFFFFF}Banda: {C4FF66}%s\n\
						{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
					", PROPERTY_INFO[index][property_ID], CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME]
				);
				UpdateDynamic3DTextLabelText(PROPERTY_INFO[ index ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
				
				new DB_Query[350];
				
				format(DB_Query, sizeof(DB_Query), "INSERT INTO `PROPERTY_TERRITORY` (`ID_PROPERTY`, `ID_TERRITORY`) VALUES ('%d', '%d');", PROPERTY_INFO[ index ][property_ID], TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_ID]);
				db_query(Database, DB_Query);
				
				format(DB_Query, sizeof(DB_Query), "DELETE FROM `PROPERTY_OWNER` WHERE `ID_PROPERTY` = '%d';", PROPERTY_INFO[ index ][property_ID]);
				db_query(Database, DB_Query);
				
				new message[145];
				format(message, sizeof message, "{%06x}[Banda] {FFFFFF}%s (%s) ha añadido una nueva propiedad en %s.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR] >>> 8, PLAYER_TEMP[playerid][pt_RP_NAME], CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_NAME], TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_NAME]);
				SendMessageToCrewMembers(PLAYER_CREW[playerid][player_crew_ID], -1, message);
			}
			return 1;
		}
		case DIALOG_CREW_LEAVE_TERRITORY:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_LEAVE_TERRITORY]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(!IsPlayerInDynamicArea(playerid, TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_AREA])) return SendClientMessage(playerid, -1, "{999999}No estás en un territorio de tu banda.");
				if(TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) return SendClientMessage(playerid, -1, "{999999}No estás en un territorio de tu banda.");			
				if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No puedes abandonar territorios mientras tu banda está en combate.");
				if(TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_WAR]) return SendClientMessage(playerid, -1, "{999999}No se puede abandonar este territorio cuando está siendo conquistado.");

				TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_OCCUPIED] = false;
				TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_CREW_ID] = 0;
				TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_CREW_INDEX] = 0;
				TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_COLOR] = 0xCCCCCC55;
				UpdateGangZoneColor(PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO]);
				
				new DB_Query[350];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `CREW_TERRITORIES` WHERE `ID_TERRITORY` = '%d';", TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_ID]);
				db_query(Database, DB_Query);
				
				for(new i = 0; i != MAX_PROPERTIES; i ++)
				{
					if(!PROPERTY_INFO[i][property_VALID]) continue;
					if(!PROPERTY_INFO[i][property_CREW]) continue;
					if(PROPERTY_INFO[i][property_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) continue;
					
					if(IsPointInDynamicArea(TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_AREA], PROPERTY_INFO[i][property_EXT_X], PROPERTY_INFO[i][property_EXT_Y], PROPERTY_INFO[i][property_EXT_Z]))
					{
						PROPERTY_INFO[ i ][property_SOLD] = false;
						PROPERTY_INFO[ i ][property_CREW] = false;
						PROPERTY_INFO[ i ][property_OWNER_ID] = 0;
						PROPERTY_INFO[ i ][property_CREW_ID] = 0;
						format(PROPERTY_INFO[ i ][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[ i ][property_ID]);
						
						new label_str[256], info[3];
						format
						(
							label_str, 
							sizeof label_str, 
							"\
								Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
								Interior: {C4FF66}%d\n\
								{FFFFFF}Precio: {C4FF66}%s$\n\
								{FFFFFF}Nivel necesario: {C4FF66}%d\n\
								{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
							", PROPERTY_INFO[ i ][property_ID], PROPERTY_INFO[ i ][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[ i ][property_PRICE]), PROPERTY_INFO[ i ][property_LEVEL]
						);
						UpdateDynamic3DTextLabelText(PROPERTY_INFO[ i ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
						
						DestroyDynamicPickup(PROPERTY_INFO[ i ][property_EXT_PICKUP_ID]);
						PROPERTY_INFO[ i ][property_EXT_PICKUP_ID] = INVALID_STREAMER_ID;
						
						PROPERTY_INFO[ i ][property_EXT_PICKUP_ID] = CreateDynamicPickup(1273, 1, PROPERTY_INFO[ i ][property_EXT_X], PROPERTY_INFO[ i ][property_EXT_Y], PROPERTY_INFO[ i ][property_EXT_Z], 0, PROPERTY_INFO[ i ][property_EXT_INTERIOR]);
						info[0] = PICKUP_TYPE_PROPERTY;
						info[1] = i; // Index
						info[2] = 2; // Pickup Exterior
						Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[ i ][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
									
						format(DB_Query, sizeof(DB_Query), "DELETE FROM `PROPERTY_TERRITORY` WHERE `ID_PROPERTY` = '%d';", PROPERTY_INFO[ i ][property_ID]);
						db_query(Database, DB_Query);
					}
				}
				
				new message[145];
				format(message, sizeof message, "{f4e242}[BANDAS] {FFFFFF}La banda '%s' ha abandonado un territorio en %s.", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME], TERRITORIES[ PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] ][territory_NAME]);
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PLAYER_CREW[i][player_crew_VALID])
						{
							SendClientMessage(i, -1, message);
						}
					}
				}
			}
			return 1;
		}
		case DIALOG_CREW_LEAVE_PROPERTY:
		{
			if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
			if(!CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_VALID]) return SendClientMessage(playerid, -1, "{999999}La banda ya no existe.");
			if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_DELETE_PROPERTIES]) return SendClientMessage(playerid, 0x999999AA, "No tienes permiso.");
			
			if(response)
			{
				if(!PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_CREW]) return SendClientMessage(playerid, -1, "{999999}Esta no es una propiedad de tu banda.");
				if(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) return SendClientMessage(playerid, -1, "{999999}Esta no es una propiedad de tu banda.");
				if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No puedes liberar una propiedad cuando tu banda está en combate.");
			
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_SOLD] = false;
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_CREW] = false;
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_OWNER_ID] = 0;
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_CREW_ID] = 0;
				format(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID]);
				
				new label_str[256], info[3];
				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
						Interior: {C4FF66}%d\n\
						{FFFFFF}Precio: {C4FF66}%s$\n\
						{FFFFFF}Nivel necesario: {C4FF66}%d\n\
						{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
					", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_PRICE]), PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_LEVEL]
				);
				UpdateDynamic3DTextLabelText(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
				
				DestroyDynamicPickup(PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_PICKUP_ID]);
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_PICKUP_ID] = INVALID_STREAMER_ID;
				
				PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_PICKUP_ID] = CreateDynamicPickup(1273, 1, PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_X], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Y], PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_Z], 0, PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_INTERIOR]);
				info[0] = PICKUP_TYPE_PROPERTY;
				info[1] = PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED]; // Index
				info[2] = 2; // Pickup Exterior
				Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
							
				new DB_Query[128];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `PROPERTY_TERRITORY` WHERE `ID_PROPERTY` = '%d';", PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PLAYER_PROPERTY_SELECTED] ][property_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessage(playerid, -1, "{CCCCCC}La propiedad ha sido liberada.");
			}
			return 1;
		}
		case DIALOG_POLICE_PENALTY:
		{
			if(response)
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_POLICE_PEN_TIME] + 20) return SendClientMessage(playerid, -1, "{999999}Has tardado mucho en aceptarlo.");
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_POLICE_PEN_PID])) return SendClientMessage(playerid, -1, "{999999}El policía ya no está en el servidor.");
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_POLICE_PEN_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_POLICE_PEN_AID]) return SendClientMessage(playerid, -1, "{999999}El policía ya no está en el servidor.");

				new Float:pos[3]; GetPlayerPos(PLAYER_TEMP[playerid][pt_POLICE_PEN_PID], pos[0], pos[1], pos[2]);
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "El policía no está cerca tuya.");
				
				if(PLAYER_TEMP[playerid][pt_POLICE_PEN_IM] > CHARACTER_INFO[playerid][ch_CASH])
				{
					SendClientMessage(playerid, -1, "{999999}No tienes dinero para pagar la multa.");
					SendClientMessage(PLAYER_TEMP[playerid][pt_POLICE_PEN_PID], -1, "{999999}La persona ha aceptado la multa pero no tiene dinero para pagarla.");
					return 1;
				}
				
				GivePlayerCash(playerid, -PLAYER_TEMP[playerid][pt_POLICE_PEN_IM]);
				GivePlayerCash(PLAYER_TEMP[playerid][pt_POLICE_PEN_PID], PLAYER_TEMP[playerid][pt_POLICE_PEN_IM]/2);
				SetPlayerWantedLevelEx(playerid, 0);
				
				SendClientMessage(playerid, -1, "{CCCCCC}La multa ha sido pagada.");
				SendClientMessage(PLAYER_TEMP[playerid][pt_POLICE_PEN_PID], -1, "{CCCCCC}La persona ha pagado la multa, la mitad del importe es para ti.");
			
			}
			else
			{
				if(gettime() > PLAYER_TEMP[playerid][pt_POLICE_PEN_TIME] + 20) return 1;
				if(!IsPlayerConnected(PLAYER_TEMP[playerid][pt_POLICE_PEN_PID])) return 1;
				if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_POLICE_PEN_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_POLICE_PEN_AID]) return 1;
				
				SendClientMessage(PLAYER_TEMP[playerid][pt_POLICE_PEN_PID], -1, "{999999}La persona se ha negado a pagar la multa.");
				if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] < 6) SetPlayerWantedLevelEx(playerid, CHARACTER_INFO[playerid][ch_WANTED_LEVEL] + 1);
			}
			return 1;
		}
		case DIALOG_SERVER_ECO:
		{
			if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 1;
			
			if(response)
			{
				PLAYER_TEMP[playerid][pt_DIALOG_ECO_SELECTED] = listitem;
				ShowDialog(playerid, DIALOG_SERVER_ECO_MODIFY);
			}
			return 1;
		}
		case DIALOG_SERVER_ECO_MODIFY:
		{
			if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 1;
			
			if(response)
			{
				new Float:multiplier;
				if(sscanf(inputtext, "f", multiplier))
				{
					SendClientMessage(playerid, -1, "Sintaxis no válida.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				switch(PLAYER_TEMP[playerid][pt_DIALOG_ECO_SELECTED])
				{
					case 0: MULTIPLIER_PROPERITES = multiplier;
					case 1: MULTIPLIER_VEHICLES = multiplier;
					case 2: MULTIPLIER_TOYS = multiplier;
					case 3: MULTIPLIER_SKINS = multiplier;
					case 4: MULTIPLIER_WEAPONS = multiplier;
					case 5: SD_VALUE = floatround(multiplier);
					case 6: SU_SD_PRICE = floatround(multiplier);
				}
				
				WriteEconomyMultipliers();
				UpdateEconomy(PLAYER_TEMP[playerid][pt_DIALOG_ECO_SELECTED]);
				ShowDialog(playerid, DIALOG_SERVER_ECO);
			}
			else ShowDialog(playerid, DIALOG_SERVER_ECO);
			return 1;
		}
		case DIALOG_SU_BUY:
		{
			if(response)
			{
				if(SU_SD_PRICE > ACCOUNT_INFO[playerid][ac_SD])
				{
					SendClientMessageEx(playerid, -1, "{999999}Te faltan %d Sd para poder comprar SU.", SU_SD_PRICE - ACCOUNT_INFO[playerid][ac_SD]);
					return 1;
				}
				
				ACCOUNT_INFO[playerid][ac_SD] -= SU_SD_PRICE;
				ACCOUNT_INFO[playerid][ac_SU] = true;
				
				new DB_Query[128], DBResult:Result;
				format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SD` = '%d', `SU` = '1', `SU_EXPIRE_DATE` = DATETIME('NOW', '+30 day') WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_SD], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				format(DB_Query, sizeof DB_Query, "SELECT `SU_EXPIRE_DATE` FROM `CUENTA` WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				Result = db_query(Database, DB_Query);
				if(db_num_rows(Result)) db_get_field(Result, 0, ACCOUNT_INFO[playerid][ac_SU_EXPIRE_DATE], 24);
				db_free_result(Result);
				
				SendClientMessageEx(playerid, -1, "{b6f442}¡Felicidades! {FFFFFF}Has comprado SU por 30 días, fecha de caducidad: %s.", ACCOUNT_INFO[playerid][ac_SU_EXPIRE_DATE]);
				SendClientMessage(playerid, -1, "Puedes utilizar {eaf259}/su {FFFFFF}para ver el tiempo restante o renovar.");
				
				if(GetPlayerSkin(playerid) == CHARACTER_INFO[playerid][ch_SKIN]) SetPlayerToys(playerid);
				UnlockPlayerVehicles(playerid);
			}
			return 1;
		}
		case DIALOG_SU:
		{
			if(!response)
			{
				if(SU_SD_PRICE > ACCOUNT_INFO[playerid][ac_SD])
				{
					SendClientMessageEx(playerid, -1, "{999999}Te faltan %d Sd para poder comprar SU.", SU_SD_PRICE - ACCOUNT_INFO[playerid][ac_SD]);
					return 1;
				}
				
				ACCOUNT_INFO[playerid][ac_SD] -= SU_SD_PRICE;
				ACCOUNT_INFO[playerid][ac_SU] = true;
				
				new DB_Query[128], DBResult:Result;
				format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SD` = '%d', `SU` = '1', `SU_EXPIRE_DATE` = DATETIME(`SU_EXPIRE_DATE`, '+30 day') WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_SD], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				format(DB_Query, sizeof DB_Query, "SELECT `SU_EXPIRE_DATE` FROM `CUENTA` WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				Result = db_query(Database, DB_Query);
				if(db_num_rows(Result)) db_get_field(Result, 0, ACCOUNT_INFO[playerid][ac_SU_EXPIRE_DATE], 24);
				db_free_result(Result);
				
				SendClientMessageEx(playerid, -1, "{b6f442}¡Felicidades! {FFFFFF}Has renovado tu SU por 30 días, fecha de caducidad: %s.", ACCOUNT_INFO[playerid][ac_SU_EXPIRE_DATE]);
				SendClientMessage(playerid, -1, "Puedes utilizar {eaf259}/su {FFFFFF}para ver el tiempo restante o renovar.");
			}
			return 1;
		}
		case DIALOG_SD:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0])) return SendClientMessage(playerid, -1, "{999999}Formato no válido.");
				if(inputtext[0] <= 0) return SendClientMessage(playerid, -1, "{999999}Cantidad no válida.");
				if(inputtext[0] > ACCOUNT_INFO[playerid][ac_SD]) return SendClientMessage(playerid, -1, "{999999}No tienes esa cantidad.");
				
				new prize = SD_VALUE * inputtext[0];
				ACCOUNT_INFO[playerid][ac_SD] -= inputtext[0];
				GivePlayerCash(playerid, prize);
				
				new DB_Query[128];
				format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SD` = '%d' WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_SD], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				format(DB_Query, sizeof DB_Query, "UPDATE `PERSONAJE` SET `CASH` = '%d' WHERE `ID_USER` = '%d';", CHARACTER_INFO[playerid][ch_CASH], ACCOUNT_INFO[playerid][ac_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessageEx(playerid, -1, "Has convertido %d Sd y has recibido %s$.", inputtext[0], number_format_thousand(prize));
			}
			return 1;
		}
		case DIALOG_VOBJECT_MENU:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_VOBJECT_OBJECTS);
					case 1: //Comprar
					{
						new slot = GetVehicleFreeObjectSlot(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID]);
						if(!ACCOUNT_INFO[playerid][ac_SU] && slot >= MAX_NU_VOBJECTS)
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d objetos en vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VOBJECTS);
							ShowDialog(playerid, dialogid);
							return 1;
						}
						if(slot == -1)
						{
							SendClientMessage(playerid, -1, "{999999}No hay más espacio para objetos en este vehículo.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						PLAYER_TEMP[playerid][pt_TUNING_GARAGE_SHOP] = true;
						
						new Float:p[6];
						GetPlayerCameraPos(playerid, p[0], p[1], p[2]);
						GetPlayerCameraLookAt(playerid, p[3], p[4], p[5]);
						InterpolateCameraPos(playerid, p[0], p[1], p[2], 265.3348, 14.0199, 3.6937, 2000);
						InterpolateCameraLookAt(playerid, p[3], p[4], p[5], 268.2404, 11.4559, 2.2, 2000);
						
						TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][0]);
						TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][1]);
						TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][2]);
						TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][3]);
						TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][4]);
						PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP]);
						//PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] = 0;
						
						UpdateTuningShop(playerid);
						
						SendClientMessage(playerid, -1, "Pulsa {C4FF66}'ESCAPE' {FFFFFF}para dejar de comprar objetos.");
						SelectTextDrawEx(playerid, 0xe8d08fFF);
					}
					case 2:
					{
						new slot = GetVehicleFreeObjectSlot(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID]);
						if(!ACCOUNT_INFO[playerid][ac_SU] && slot >= MAX_NU_VOBJECTS)
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d objetos en vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VOBJECTS);
							ShowDialog(playerid, dialogid);
							return 1;
						}
						if(slot == -1)
						{
							SendClientMessage(playerid, -1, "{999999}No hay más espacio para objetos en este vehículo.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						if(500 > CHARACTER_INFO[playerid][ch_CASH])
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este objeto.", number_format_thousand(500 - CHARACTER_INFO[playerid][ch_CASH]));
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						GivePlayerCash(playerid, -500);
						
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_VALID] = true;
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_TYPE] = VOBJECT_TYPE_TEXT;
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_ID] = 0;
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_MODELID] = 19327;
						format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_NAME], 32, "Texto");
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_ATTACHED] = true;
						
						format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_text_TEXT], 32, "Mi texto");
						format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_text_FONT], 24, "Arial");
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_text_FONT_SIZE] = 24;
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_text_BOLD] = false;
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_text_FONT_COLOR] = 0xFF000000;
						
						RegisterNewVehicleObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], slot);
						UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], slot, true);
						
						SendClientMessage(playerid, -1, "{CCCCCC}El objeto de texto ha sido añadido.");
						PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] = slot;
						ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
					}
					case 3:
					{
						new slot = GetVehicleFreeObjectSlot(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID]);
						if(!ACCOUNT_INFO[playerid][ac_SU] && slot >= MAX_NU_VOBJECTS)
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d objetos en vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VOBJECTS);
							ShowDialog(playerid, dialogid);
							return 1;
						}
						if(slot == -1)
						{
							SendClientMessage(playerid, -1, "{999999}No hay más espacio para objetos en este vehículo.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						if(2000 > CHARACTER_INFO[playerid][ch_CASH])
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este objeto.", number_format_thousand(2000 - CHARACTER_INFO[playerid][ch_CASH]));
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						PLAYER_TEMP[playerid][pt_COUNTRY_TYPE] = 0;
						ShowDialog(playerid, DIALOG_VOBJECT_COUNTRY);
					}
					case 4:
					{
						new slot = GetVehicleFreeObjectSlot(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID]);
						if(!ACCOUNT_INFO[playerid][ac_SU] && slot >= MAX_NU_VOBJECTS)
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d objetos en vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VOBJECTS);
							ShowDialog(playerid, dialogid);
							return 1;
						}
						if(slot == -1)
						{
							SendClientMessage(playerid, -1, "{999999}No hay más espacio para objetos en este vehículo.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						if(2000 > CHARACTER_INFO[playerid][ch_CASH])
						{
							PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
							SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este objeto.", number_format_thousand(2000 - CHARACTER_INFO[playerid][ch_CASH]));
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						PLAYER_TEMP[playerid][pt_COUNTRY_TYPE] = 1;
						ShowDialog(playerid, DIALOG_VOBJECT_COUNTRY);
					}
				}
			}
			else
			{
				PLAYER_TEMP[playerid][pt_IN_TUNING_GARAGE] = false;
				SetVehicleVirtualWorldEx(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetVehiclePosEx(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], 246.551910, 17.474195, 2.363841);
				SetVehicleZAngle(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], 0.0);
				
				GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_PARAMS_ENGINE] = 1;
				UpdateVehicleParams(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID]);
				
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) PutPlayerInVehicleEx(playerid, PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], 0);
				
				ShowPlayerSpeedoMeter(playerid);
				SetCameraBehindPlayer(playerid);
			}
			return 1;
		}
		case DIALOG_VOBJECT_COUNTRY:
		{
			if(response)
			{
				new slot = GetVehicleFreeObjectSlot(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID]);
				if(!ACCOUNT_INFO[playerid][ac_SU] && slot >= MAX_NU_VOBJECTS)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d objetos en vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VOBJECTS);
					ShowDialog(playerid, DIALOG_VOBJECT_MENU);
					return 1;
				}
				if(slot == -1)
				{
					SendClientMessage(playerid, -1, "{999999}No hay más espacio para objetos en este vehículo.");
					ShowDialog(playerid, DIALOG_VOBJECT_MENU);
					return 1;
				}
				
				if(2000 > CHARACTER_INFO[playerid][ch_CASH])
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este objeto.", number_format_thousand(2000 - CHARACTER_INFO[playerid][ch_CASH]));
					ShowDialog(playerid, DIALOG_VOBJECT_MENU);
					return 1;
				}
				
				GivePlayerCash(playerid, -2000);
				
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_VALID] = true;
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_ID] = 0;
				if(PLAYER_TEMP[playerid][pt_COUNTRY_TYPE] == 0)
				{
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_TYPE] = VOBJECT_TYPE_COUNTRY_FLAG;
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_MODELID] = 19307;
				}
				else if(PLAYER_TEMP[playerid][pt_COUNTRY_TYPE] == 1)
				{
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_TYPE] = VOBJECT_TYPE_COUNTRY_PANEL;
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_MODELID] = 2661;
				}
				format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_NAME], 32, "Pais");
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_ATTACHED] = true;
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_COLORS][0] = listitem;
				
				RegisterNewVehicleObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], slot);
				UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], slot, true);
				
				SendClientMessage(playerid, -1, "{CCCCCC}El objeto ha sido añadido.");
				PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] = slot;
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_OBJECTS:
		{
			if(response)
			{
				if(listitem == MAX_SU_VOBJECTS) return ShowDialog(playerid, DIALOG_VOBJECT_DELETE_ALL);
				if(!VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][listitem][vobject_VALID])
				{
					SendClientMessage(playerid, -1, "{999999}Este slot está vacío, aquí puedes comprar un nuevo objeto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] = listitem;
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED])
						{
							SendClientMessage(playerid, -1, "{CCCCCC}Objeto guardado.");
							VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED] = false;
							UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT]);
							ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
						}
						else
						{
							SendClientMessage(playerid, -1, "{CCCCCC}Objeto colocado.");
							VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED] = true;
							UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
							ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
						}
					}
					case 1: ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_CNAME);
					case 2:
					{
						if(!VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED])
						{
							SendClientMessage(playerid, -1, "{999999}Debes colocar el objeto primero.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
							
						EditVehicleObject(playerid, PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT]);
					}
					case 3:
					{
						switch(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_TYPE])
						{
							case VOBJECT_TYPE_OBJECT:
							{
								if(!VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED])
								{
									SendClientMessage(playerid, -1, "{999999}Debes colocar el objeto primero.");
									ShowDialog(playerid, dialogid);
									return 1;
								}
								ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLORS);
							}
							case VOBJECT_TYPE_TEXT:
							{
								if(!VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED])
								{
									SendClientMessage(playerid, -1, "{999999}Debes colocar el objeto primero.");
									ShowDialog(playerid, dialogid);
									return 1;
								}
								ShowDialog(playerid, DIALOG_VOBJECT_TEXT_MENU);
							}
							case VOBJECT_TYPE_COUNTRY_FLAG, VOBJECT_TYPE_COUNTRY_PANEL: ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_CDELETE);
						}
					}
					case 4: ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_CDELETE);
				}
			
			}
			else
			{
				UpdateVehicleObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT]);
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECTS);
			}
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_CNAME:
		{
			if(response)
			{
				if(!strlen(inputtext) || strlen(inputtext) > 32)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}El nombre del objeto debe contener de 1 a 32 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_NAME], 32, "%s", inputtext);
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_COLORS:
		{
			if(response)
			{
				PLAYER_TEMP[playerid][pt_TUNING_EDIT_COLOR_SLOT] = listitem;
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLOR);
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_COLOR:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_COLORS][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_COLOR_SLOT] ] = 0;
						UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
						SendClientMessage(playerid, -1, "{CCCCCC}Color actualizado.");
						ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLORS);
					}
					case 1:
					{
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_COLORS][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_COLOR_SLOT] ] = RGBAToARGB(VEHICLE_COLORS[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_COLOR_1] ]);
						UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
						SendClientMessage(playerid, -1, "{CCCCCC}Color actualizado.");
						ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLORS);
					}
					case 2:
					{
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_COLORS][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_COLOR_SLOT] ] = RGBAToARGB(VEHICLE_COLORS[ GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_COLOR_2] ]);
						UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
						SendClientMessage(playerid, -1, "{CCCCCC}Color actualizado.");
						ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLORS);
					}
					case 3: ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLOR_HEX);
				}
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLORS);
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_COLOR_HEX:
		{
			if(response)
			{
				if(strlen(inputtext) < 8) return ShowDialog(playerid, dialogid);
				
				new hexcolor;
				if(sscanf(inputtext, "h", hexcolor))
				{
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_COLORS][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_COLOR_SLOT] ] = hexcolor;
				UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
				SendClientMessage(playerid, -1, "{CCCCCC}Color actualizado.");
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLORS);
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_OBJECT_COLOR);
			return 1;
		}
		case DIALOG_VOBJECT_OBJECT_CDELETE:
		{
			if(response)
			{
				if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OBJECT_ID] != INVALID_STREAMER_ID)
				{
					DestroyDynamicObject(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OBJECT_ID]);
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OBJECT_ID] = INVALID_STREAMER_ID;
				}
				
				new DB_Query[128];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `VEHICLE_OBJECTS` WHERE `ID` = '%d';", VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ID]);
				db_query(Database, DB_Query);
				
				new temp_VEHICLE_OBJECTS[e_VEHICLE_OBJECTS];
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ] = temp_VEHICLE_OBJECTS;
				
				SendClientMessage(playerid, -1, "{CCCCCC}Objeto eliminado.");
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECTS);
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			return 1;
		}
		case DIALOG_VOBJECT_DELETE_ALL:
		{
			if(response)
			{
				new DB_Query[128];
				format(DB_Query, sizeof DB_Query, "DELETE FROM `VEHICLE_OBJECTS` WHERE `ID_VEHICLE` = '%d';", PLAYER_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][player_vehicle_ID]);
				db_query(Database, DB_Query);
				
				new temp_VEHICLE_OBJECTS[e_VEHICLE_OBJECTS];
				for(new i = 0; i != MAX_SU_VOBJECTS; i ++)
				{
					if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i][vobject_OBJECT_ID] != INVALID_STREAMER_ID)
					{
						DestroyDynamicObject(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i][vobject_OBJECT_ID]);
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i][vobject_OBJECT_ID] = INVALID_STREAMER_ID;
					}
					
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][i] = temp_VEHICLE_OBJECTS;
				}
				
				SendClientMessage(playerid, -1, "{CCCCCC}Todos los objetos de este vehículo han sido eliminados.");
				ShowDialog(playerid, DIALOG_VOBJECT_OBJECTS);
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_MENU:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_VOBJECT_TEXT_TEXT);
					case 1: ShowDialog(playerid, DIALOG_VOBJECT_TEXT_FONT);
					case 2: ShowDialog(playerid, DIALOG_VOBJECT_TEXT_FONT_SIZE);
					case 3:
					{
						if(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_BOLD])
						{
							VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_BOLD] = false;
							SendClientMessage(playerid, -1, "Negrita deshabilitada.");
						}
						else
						{
							VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_BOLD] = true;
							SendClientMessage(playerid, -1, "Negrita habilitada.");
						}
						UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
						ShowDialog(playerid, dialogid);
					}
					case 4: ShowDialog(playerid, DIALOG_VOBJECT_TEXT_FONT_COLOR);
				}
			}
			else ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_TEXT:
		{
			if(response)
			{
				if(strlen(inputtext) >= 32)
				{
					SendClientMessage(playerid, -1, "{999999}Como máximo puedes introducir un texto de 32 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(sscanf(inputtext, "s[32]", inputtext))
				{
					SendClientMessage(playerid, -1, "{999999}Introduce un texto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_TEXT], 32, "%s", inputtext);
				UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
				SendClientMessage(playerid, -1, "Texto actualizado.");
			}
			ShowDialog(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT:
		{
			if(response)
			{
				if(strlen(inputtext) >= 24)
				{
					SendClientMessage(playerid, -1, "{999999}Como máximo puedes introducir una fuente de 24 caracteres.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(sscanf(inputtext, "s[24]", inputtext))
				{
					SendClientMessage(playerid, -1, "{999999}Introduce un texto.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_FONT], 24, "%s", inputtext);
				UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
				SendClientMessage(playerid, -1, "Fuente actualizada.");
			}
			ShowDialog(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_SIZE:
		{
			if(response)
			{
				if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "{999999}Introduce un valor numérico.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				if(inputtext[0] <= 0 || inputtext[0] >= 255)
				{
					SendClientMessage(playerid, -1, "{999999}Introduce un valor entre 1 y 255.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_FONT_SIZE] = inputtext[0];
				UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
				SendClientMessage(playerid, -1, "Tamaño de letra actualizado.");
			}
			ShowDialog(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}
		case DIALOG_VOBJECT_TEXT_FONT_COLOR:
		{
			if(response)
			{
				VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_text_FONT_COLOR] = RGBAToARGB(RandomColors[listitem]);
				UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT], true);
				SendClientMessage(playerid, -1, "Color de letra actualizado.");
			}
			ShowDialog(playerid, DIALOG_VOBJECT_TEXT_MENU);
			return 1;
		}
	}
	return 0;
}

GetDatabasePages(query[], limit)
{
    new DBResult:pages;
	pages = db_query(Database, query);
	
	new Float:tpages = floatdiv(floatround(db_get_field_int(pages, 0)), limit);
	db_free_result(pages);
	return floatround(tpages, floatround_ceil);
}

AddNewAd(playerid, type, price, text[], modelid, vcol1 = 0, vcol2 = 0)
{
	new Float:rots[4];
	switch(type)
	{
		case SHOP_ARTICLE_TYPE_PROPERTY: rots = Float:{345.0, 0.0, 30.0, 1.20};
		case SHOP_ARTICLE_TYPE_VEHICLE: rots = Float:{345.0, 0.0, 330.0, 1.0};
		case SHOP_ARTICLE_TYPE_OTHER: rots = Float:{0.0, 0.0, 330.0, 1.20};
	}
	
	new DB_Query[450];
	format(DB_Query, sizeof DB_Query, 
		"\
			INSERT INTO `SHOP` (`ID_USER`, `TYPE`, `PRICE`, `TEXT`, `MODELID`, `RX`, `RY`, `RZ`, `ZOOM`, `VCOL1`, `VCOL2`) VALUES ('%d', '%d', '%d', '%q', '%d', '%f', '%f', '%f', '%f', '%d', '%d');\
			DELETE FROM `SHOP` WHERE `ID` NOT IN (SELECT `ID` FROM `SHOP` ORDER BY `DATE` DESC LIMIT 300);\
		",
			ACCOUNT_INFO[playerid][ac_ID], type, price, text, modelid, rots[0], rots[1], rots[2], rots[3], vcol1, vcol2
	);
	db_query(Database, DB_Query);
	return 1;
}

forward OnPlayerSongFound(index, response_code, data[]);
public OnPlayerSongFound(index, response_code, data[])
{
	if(!PLAYER_TEMP[index][pt_PLAYER_WAITING_MP3_HTTP]) return 1;
	
	if(response_code == 200)
	{
		if(data[0] == '|' && data[1] == '[')
		{
			new start_song_pos = -1, end_song_pos = -1, delimiter_pos_info = -1, counter, tmp[yt_result];
			for(new i = 0; i != sizeof RESULT_YOUTUBE; i ++) RESULT_YOUTUBE[i] = tmp;
			
			start_song_pos = strfind(data, "|[");
			while(start_song_pos != -1)
			{
				start_song_pos = strfind(data, "|[");
				if(start_song_pos == -1) break;
				delimiter_pos_info = strfind(data, "||");
				strmid(RESULT_YOUTUBE[counter][videoID], data, start_song_pos + 2, delimiter_pos_info, 11 + 1);
				
				end_song_pos = strfind(data, "]|");
				strmid(RESULT_YOUTUBE[counter][yt_title], data, delimiter_pos_info + 2, end_song_pos, 100 + 1);
				strdel(data, 0, end_song_pos + 2);
				counter ++;
			}
			
			if(counter == 0) return SendClientMessage(index, -1, "{999999}No se encontró ningún resultado para tu búsqueda.");
			
			new dialog_title[50], dialog[120 * MAX_RESULTS], dialog_counter;
			
			for(new i = 0; i != counter; i ++)
			{
				if(isnull(RESULT_YOUTUBE[i][yt_title])) continue;
				format(PLAYER_DIALOG_MP3_RESULT[index][dialog_counter][videoID], 11 + 1, "%s", RESULT_YOUTUBE[i][videoID]);
				format(PLAYER_DIALOG_MP3_RESULT[index][dialog_counter][yt_title], 100 + 1, "%s", RESULT_YOUTUBE[i][yt_title]);
				format(dialog, sizeof dialog, "%s{CCCCCC}%d. %s\n", dialog, dialog_counter + 1, RESULT_YOUTUBE[i][yt_title]);
				dialog_counter ++;
			}
			format(dialog_title, sizeof dialog_title, "{CCCCCC}Se han encontado '%d' resultados", dialog_counter);
			ShowPlayerDialog(index, DIALOG_PLAYER_MP3_RESULTS, DIALOG_STYLE_LIST, dialog_title, dialog, "Reproducir", "Salir");
		}
		else SendClientMessage(index, -1, "{999999}El resultado obtenido no puede ser comprendido.");
	}
	else SendClientMessage(index, -1, "{999999}La búsqueda falló, inténtelo de nuevo más tarde.");
	
	PLAYER_TEMP[index][pt_PLAYER_WAITING_MP3_HTTP] = false;
	return 1;
}

GetEmptyPlayer_GPS_Slot(playerid)
{
	for(new i = 0; i != MAX_PLAYER_GPS_SAVES; i ++)
	{
		if(!PLAYER_GPS[playerid][i][player_gps_VALID]) return i;
	}
	return -1;
}

SetPlayer_GPS_Checkpoint(playerid, Float:x, Float:y, Float:z, world, interior)
{
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT] = CreateDynamicCP(x, y, z, 5.0, world, interior, playerid, 9999999999.0);
	
	new info[1];
	info[0] = CHECKPOINT_TYPE_GPS;
	Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(WORK_VEHICLES[vehicleid][work_vehicle_VALID])
		{
			if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] == WORK_TAXI)
			{
				if(TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_ENABLED])
				{
					if(IsPlayerConnected(GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER]))
					{
						if(IsValidDynamicCP(PLAYER_TEMP[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] ][pt_GPS_CHECKPOINT]))
						{
							DestroyDynamicCP(PLAYER_TEMP[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] ][pt_GPS_CHECKPOINT]);
							PLAYER_TEMP[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] ][pt_GPS_CHECKPOINT] = INVALID_STREAMER_ID;
						}
						PLAYER_TEMP[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] ][pt_GPS_CHECKPOINT] = CreateDynamicCP(x, y, z, 5.0, world, interior, GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER], 9999999999.0);
						
						new taxi_info[1];
						taxi_info[0] = CHECKPOINT_TYPE_GPS;
						Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] ][pt_GPS_CHECKPOINT], E_STREAMER_EXTRA_ID, taxi_info);
						
						Auto_SendPlayerAction(playerid, "configura su GPS y se lo muestra al taxista.");
						return 1;
					}
				}
			}
		}
	}
	
	Auto_SendPlayerAction(playerid, "configura su GPS.");
	return 1;
}
	
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	new info[2];
	Streamer_GetArrayData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID, info);
	
	switch(info[0])
	{
		case AREA_TYPE_NONE:
		{
			if(areaid == Mechanic_Area)
			{
				if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
				{
					PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
					DisablePlayerMechanicMark(playerid);
				}
			}
		}
		case AREA_TYPE_GANGZONE:
		{
			new index = info[1];
			
			if(TERRITORIES[index][territory_VALID])
			{
				PLAYER_TEMP[playerid][pt_LAST_TERRITORY] = index;
				if(PLAYER_CREW[playerid][player_crew_VALID])
				{
					if(TERRITORIES[index][territory_WAR])
					{
						SendClientMessageEx(playerid, -1, "Este territorio está siendo atacado por la banda {%06x}'%s'.", CREW_INFO[ TERRITORIES[index][territory_ATTACKER_CREW_INDEX] ][crew_COLOR] >>> 8, CREW_INFO[ TERRITORIES[index][territory_ATTACKER_CREW_INDEX] ][crew_NAME]);
						
						new r, g, b, a;
						HexToRGBA(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_COLOR], r, g, b, a);
						SetPlayerColorEx(playerid, RGBAToHex(r, g, b, 0));
						
						TextDrawShowForPlayer(playerid, Textdraws[textdraw_TERRITORY_BOX]);
						TextDrawShowForPlayer(playerid, TERRITORIES[index][territory_TEXTDRAW]);
					}
				}
			}
		}
	}

	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	new info[2];
	Streamer_GetArrayData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID, info);
	
	switch(info[0])
	{
		case AREA_TYPE_NONE:
		{
			if(areaid == Lumberjack_Area)
			{
				if(PLAYER_TEMP[playerid][pt_WORKING_IN] == WORK_LUMBERJACK)
				{
					SendClientMessage(playerid, -1, "{999999}Has abandonado el trabajo de leñador porque te has alejado demasiado de la zona.");
					EndPlayerJob(playerid);
				}
			}
			else if(areaid == Farmer_Area)
			{
				if(PLAYER_TEMP[playerid][pt_WORKING_IN] == WORK_FARMER) EndPlayerJob(playerid);
			}
			else if(areaid == Harvest_Area)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					if(PLAYER_TEMP[playerid][pt_WORKING_IN] == WORK_HARVESTER)
					{
						SendClientMessage(playerid, -1, "{CCCCCC}Has abandonado tu trabajo de cosechador porque te has alejado demasiado de la zona.");
						EndPlayerJob(playerid);
					}
				}
			}
			
			if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL)
			{
				if(areaid == Jail_Areas[0] || areaid == Jail_Areas[1] || areaid == Jail_Areas[2])
				{
					SetPlayerPosEx(playerid, JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] ][jail_X], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Y], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Z], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_ANGLE], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_INTERIOR], 0, true);
				}
			}
		}
		case AREA_TYPE_GANGZONE:
		{
			new index = info[1];
			
			if(TERRITORIES[index][territory_VALID])
			{
				if(PLAYER_CREW[playerid][player_crew_VALID])
				{
					SetPlayerColorEx(playerid, PLAYER_COLOR);
					TextDrawHideForPlayer(playerid, Textdraws[textdraw_TERRITORY_BOX]);
					TextDrawHideForPlayer(playerid, TERRITORIES[index][territory_TEXTDRAW]);
				}
			}
		}
	}
	return 1;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	new info[1];
	Streamer_GetArrayData(STREAMER_TYPE_CP, checkpointid, E_STREAMER_EXTRA_ID, info);

	switch(info[0])
	{
		case CHECKPOINT_TYPE_GPS:
		{
			DestroyDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]);
			PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT] = INVALID_STREAMER_ID;
			SendClientMessage(playerid, -1, "{a7f442}Ha llegado a su destino.");
		}
		case CHECKPOINT_TYPE_UNLOAD_TRUCK:
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(!PLAYER_WORKS[playerid][WORK_TRUCK]) return 1;
			if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRUCK) return 1;
	
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE] != VEHICLE_TYPE_WORK) return 1;
			if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] != WORK_TRUCK) return 1;
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_DELIVERED]) return 1;
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_UNLOADING]) return 1;
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_DRIVER_USER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Solo aceptaremos la carga del conductor de este camión.");
			
			DestroyDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]);
			PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = INVALID_STREAMER_ID;
			
			SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
				
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
			UpdateVehicleParams(vehicleid);
			
			TRUCK_VEHICLE[vehicleid][truck_vehicle_UNLOADING] = true;
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], "Descargando_cami¦n...");
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
				
			PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] = 40.0;
			UpdatePlayerLoadingTruckSize(playerid);
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][7]);
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][9]);
			PLAYER_TEMP[playerid][pt_TIMERS][9] = SetTimerEx("TruckUnLoadUp", 1000, false, "ii", playerid, vehicleid);
			
			SendClientMessage(playerid, -1, "{CCCCCC}El camión se está descargando.");	
		}
		case CHECKPOINT_TYPE_FINISH_TRUCK:
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(!PLAYER_WORKS[playerid][WORK_TRUCK]) return 1;
			if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRUCK) return 1;
	
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE] != VEHICLE_TYPE_WORK) return 1;
			if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] != WORK_TRUCK) return 1;
			if(!TRUCK_VEHICLE[vehicleid][truck_vehicle_DELIVERED]) return 1;
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_UNLOADING]) return 1;
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_DRIVER_USER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Solo le pagaremos al conductor que entregó la mercancía.");
			
			DestroyDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]);
			PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = INVALID_STREAMER_ID;
			
			SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
			
			new work_extra_payment;
			if(work_info[WORK_TRUCK][work_info_EXTRA_PAY] > 0 && work_info[WORK_TRUCK][work_info_EXTRA_PAY_EXP] > 0)
			{
				work_extra_payment = (work_info[WORK_TRUCK][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_TRUCK], work_info[WORK_TRUCK][work_info_EXTRA_PAY_EXP])));
				if(work_info[WORK_TRUCK][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TRUCK][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TRUCK][work_info_EXTRA_PAY_LIMIT];
			
				if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
			}
			
			GivePlayerCash(playerid, Truck_Contents[ TRUCK_VEHICLE[vehicleid][truck_vehicle_POINT] ][truck_content_MONEY] + work_extra_payment);
			PLAYER_SKILLS[playerid][WORK_TRUCK] ++;
			SendClientMessageEx(playerid, -1, "{CCCCCC}Gracias por tu trabajo, has ganado {aff21f}%s$.", number_format_thousand(Truck_Contents[ TRUCK_VEHICLE[vehicleid][truck_vehicle_POINT] ][truck_content_MONEY] + work_extra_payment));
			
			SetVehicleToRespawnEx(vehicleid);
		}
		case CHECKPOINT_TYPE_TRASH:
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
			if(!PLAYER_WORKS[playerid][WORK_TRASH]) return DestroyPlayerTrashCheckpoint(playerid);
			if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRASH) return DestroyPlayerTrashCheckpoint(playerid);
			if(!PLAYER_TEMP[playerid][pt_TRASH_PASSENGER]) return 1;
			
			new driver = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID];
			SendClientMessage(driver, -1, "{CCCCCC}Espera mientras tu compañero recoge la basura.");
			
			new Float:offset = floatdiv(PLAYER_SKILLS[playerid][WORK_TRASH], 10);
			if(offset > 30.0) offset = 30.0;
			
			PLAYER_TEMP[playerid][pt_RECYCLE_BIN_VALUE] = 10.0 + offset;
			UpdatePlayerTrashRecycleSize(playerid);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2]);
			
			TogglePlayerControllable(playerid, false);
			SetCameraBehindPlayer(playerid);
			ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.1, true, false, false, false, 0);
			
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][10]);
			PLAYER_TEMP[playerid][pt_TIMERS][10] = SetTimerEx("RecycleUp", 1000, false, "i", playerid);
		}
		case CHECKPOINT_TYPE_FINISH_TRASH:
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(!PLAYER_WORKS[playerid][WORK_TRASH]) return DestroyPlayerTrashCheckpoint(playerid);
			if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRASH) return DestroyPlayerTrashCheckpoint(playerid);
			if(!PLAYER_TEMP[playerid][pt_TRASH_DRIVER]) return 1;
			
			new route = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE];
			new money = TRASH_OBJECTS[route][trash_route_MONEY];
			
			new driver_work_extra_payment, passenger_work_extra_payment;
			if(work_info[WORK_TRASH][work_info_EXTRA_PAY] > 0 && work_info[WORK_TRASH][work_info_EXTRA_PAY_EXP] > 0)
			{
				driver_work_extra_payment = (work_info[WORK_TRASH][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_TRASH], work_info[WORK_TRASH][work_info_EXTRA_PAY_EXP])));
				if(work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT] != 0) if(driver_work_extra_payment > work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT]) driver_work_extra_payment = work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT];
				if(ACCOUNT_INFO[playerid][ac_SU]) driver_work_extra_payment += SU_WORK_EXTRA_PAY;
				
				passenger_work_extra_payment = (work_info[WORK_TRASH][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID] ][WORK_TRASH], work_info[WORK_TRASH][work_info_EXTRA_PAY_EXP])));
				if(work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT] != 0) if(passenger_work_extra_payment > work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT]) passenger_work_extra_payment = work_info[WORK_TRASH][work_info_EXTRA_PAY_LIMIT];
				if(ACCOUNT_INFO[ TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID] ][ac_SU]) passenger_work_extra_payment += SU_WORK_EXTRA_PAY;
			}
			
			GivePlayerCash(playerid, money + driver_work_extra_payment);
			SendClientMessageEx(playerid, -1, "Trabajo finalizado, has ganado %s$.", number_format_thousand(money + driver_work_extra_payment));
			PLAYER_SKILLS[playerid][WORK_TRASH] ++;
			
			GivePlayerCash(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], money + passenger_work_extra_payment);
			SendClientMessageEx(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], -1, "Trabajo finalizado, has ganado %s$.", number_format_thousand(money + passenger_work_extra_payment));
			PLAYER_SKILLS[ TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID] ][WORK_TRASH] ++;
			
			CancelTrashWork(playerid, TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
		}
		case CHECKPOINT_TYPE_LUMBERJACK:
		{
			if(PLAYER_TEMP[playerid][pt_WORKING_IN] == WORK_LUMBERJACK)
			{
				DestroyDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]);
				PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT] = INVALID_STREAMER_ID;
				
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid, 8);
				PLAYER_TEMP[playerid][pt_PLAYER_CARRYING_TREE] = false;
				ApplyAnimation(playerid, "CARRY", "putdwn05", 4.1, 0, 1, 1, 0, 0, 1);
				
				new work_extra_payment;
				if(work_info[WORK_LUMBERJACK][work_info_EXTRA_PAY] > 0 && work_info[WORK_LUMBERJACK][work_info_EXTRA_PAY_EXP] > 0)
				{
					work_extra_payment = (work_info[WORK_LUMBERJACK][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_LUMBERJACK], work_info[WORK_LUMBERJACK][work_info_EXTRA_PAY_EXP])));
					if(work_info[WORK_LUMBERJACK][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_LUMBERJACK][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_LUMBERJACK][work_info_EXTRA_PAY_LIMIT];
					
					if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
				}
				
				PLAYER_SKILLS[playerid][WORK_LUMBERJACK] ++;
				new money = minrand(120, 150) + work_extra_payment;
				GivePlayerCash(playerid, money);
				SendClientMessageEx(playerid, -1, "{CCCCCC}Gracias por tu trabajo, te hemos pagado {adf442}%d$ {CCCCCC}por esta leña.", money); 
			}
			else
			{
				DestroyDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]);
				PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT] = INVALID_STREAMER_ID;
			}
		}
		case CHECKPOINT_TYPE_PIZZA_DEL:
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
			PLAYER_TEMP[playerid][pt_PIZZA_PROCCESS] --;
			PLAYER_TEMP[playerid][pt_DELIVERED_PIZZAS] ++;
			RemovePlayerAttachedObject(playerid, 9);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			ApplyDynamicActorAnimation(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR], "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 0);
			ApplyDynamicActorAnimation(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR], "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 0);
			DestroyDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]);
			PIZZA_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][pizza_vehicle_PIZZA_POINT_DELI] = true;
			PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
			
			SendClientMessage(playerid, -1, "{CCCCCC}Genial, vuelve a subir a la moto para continuar.");
		}
		case CHECKPOINT_TYPE_PIZZA_FINISH:
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!PIZZA_VEHICLE[vehicleid][pizza_vehicle_STARTED]) return 1;
			if(PIZZA_VEHICLE[vehicleid][pizza_vehicle_DRIVER_AID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Solo le pagaremos al conductor que realizó el trabajo.");
		
			new work_extra_payment;
			if(work_info[WORK_PIZZA][work_info_EXTRA_PAY] > 0 && work_info[WORK_PIZZA][work_info_EXTRA_PAY_EXP] > 0)
			{
				work_extra_payment = (work_info[WORK_PIZZA][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_PIZZA], work_info[WORK_PIZZA][work_info_EXTRA_PAY_EXP])));
				if(work_info[WORK_PIZZA][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_PIZZA][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_PIZZA][work_info_EXTRA_PAY_LIMIT];
			
				if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
			}
			
			PLAYER_SKILLS[playerid][WORK_PIZZA] ++;
			new money = (PLAYER_TEMP[playerid][pt_DELIVERED_PIZZAS] * 200) + work_extra_payment;
			GivePlayerCash(playerid, money);
			SendClientMessageEx(playerid, -1, "{CCCCCC}Gracias por tu trabajo, has repartido %d pizzas y has ganado {adf442}%s$ {CCCCCC}.", PLAYER_TEMP[playerid][pt_DELIVERED_PIZZAS], number_format_thousand(money));
			
			EndPlayerJob(playerid);
		}
		default: return 1;
	}
	return 1;
}

RegisterNewPlayer_GPS_Site(playerid, slot)
{
	new DBResult:Result, DB_Query[340];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PLAYER_GPS`\
		(\
			`ID_USER`, `NAME`, `X`, `Y`, `Z`, `WORLD`, `INTERIOR`\
		)\
		VALUES\
		(\
			'%d', '%q', '%f', '%f', '%f', '%d', '%d'\
		);\
		SELECT MAX(`ID`) FROM `PLAYER_GPS`;\
	",
		ACCOUNT_INFO[playerid][ac_ID], PLAYER_GPS[playerid][slot][player_gps_NAME], PLAYER_GPS[playerid][slot][player_gps_X], PLAYER_GPS[playerid][slot][player_gps_Y], PLAYER_GPS[playerid][slot][player_gps_Z], PLAYER_GPS[playerid][slot][player_gps_WORLD], PLAYER_GPS[playerid][slot][player_gps_INTERIOR]
	);
	Result = db_query(Database, DB_Query);

	if(db_num_rows(Result)) PLAYER_GPS[playerid][slot][player_gps_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	return 1;
}

SetPlayerToys(playerid)
{
	for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++) RemovePlayerAttachedObject(playerid, i);
		
	for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
	{
		if(i >= MAX_NU_TOYS && !ACCOUNT_INFO[playerid][ac_SU]) break;

		if(PLAYER_TOYS[playerid][i][player_toy_VALID])
		{
			if(PLAYER_TOYS[playerid][i][player_toy_ATTACHED])
			{
				SetPlayerAttachedObject
				(
					playerid, 
					i,
					PLAYER_TOYS[playerid][ i ][player_toy_MODELID],
					PLAYER_TOYS[playerid][ i ][player_toy_BONE],
					PLAYER_TOYS[playerid][ i ][player_toy_OFFSET_X],
					PLAYER_TOYS[playerid][ i ][player_toy_OFFSET_Y],
					PLAYER_TOYS[playerid][ i ][player_toy_OFFSET_Z],
					PLAYER_TOYS[playerid][ i ][player_toy_ROT_X],
					PLAYER_TOYS[playerid][ i ][player_toy_ROT_Y],
					PLAYER_TOYS[playerid][ i ][player_toy_ROT_Z],
					PLAYER_TOYS[playerid][ i ][player_toy_SCALE_X],
					PLAYER_TOYS[playerid][ i ][player_toy_SCALE_Y],
					PLAYER_TOYS[playerid][ i ][player_toy_SCALE_Z],
					PLAYER_TOYS[playerid][ i ][player_toy_COLOR_1],
					PLAYER_TOYS[playerid][ i ][player_toy_COLOR_2]
				);
			}
		}
	}
	
	return 1;
}

UpdatePlayerToy(playerid, index)
{
	RemovePlayerAttachedObject(playerid, index);
	SetPlayerAttachedObject
	(
		playerid, 
		index,
		PLAYER_TOYS[playerid][ index ][player_toy_MODELID],
		PLAYER_TOYS[playerid][ index ][player_toy_BONE],
		PLAYER_TOYS[playerid][ index ][player_toy_OFFSET_X],
		PLAYER_TOYS[playerid][ index ][player_toy_OFFSET_Y],
		PLAYER_TOYS[playerid][ index ][player_toy_OFFSET_Z],
		PLAYER_TOYS[playerid][ index ][player_toy_ROT_X],
		PLAYER_TOYS[playerid][ index ][player_toy_ROT_Y],
		PLAYER_TOYS[playerid][ index ][player_toy_ROT_Z],
		PLAYER_TOYS[playerid][ index ][player_toy_SCALE_X],
		PLAYER_TOYS[playerid][ index ][player_toy_SCALE_Y],
		PLAYER_TOYS[playerid][ index ][player_toy_SCALE_Z],
		PLAYER_TOYS[playerid][ index ][player_toy_COLOR_1],
		PLAYER_TOYS[playerid][ index ][player_toy_COLOR_2]
	);
	return 1;
}

EditPlayerToy(playerid)
{
	if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED]) RemovePlayerAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
				
	SetPlayerAttachedObject
	(
		playerid, 
		PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_MODELID],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_X],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Y],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Z],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_X],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Y],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Z],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_X],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Y],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Z],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1],
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2]
	);
	
	SendClientMessage(playerid, -1, "{f4d442}Ajusta el accesorio y haz clic en el icono de guardar, si pulsas {aed164}'ESCAPE' {f4d442}no se guardará la configuración.");
	SendClientMessage(playerid, -1, "{f4d442}Mantén presionado {aed164}'ESPACIO' {f4d442}para mover la cámara.");
	EditAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(index != PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]) return 0;
	
    if(response)
    {
        if(fScaleX >= 1.5 || fScaleY >= 1.5 || fScaleZ >= 1.5)
	    {
	        SendClientMessage(playerid, -1, "{999999}El tamaño del accesorio es demasiado grande.");
			
			RemovePlayerAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
			if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED])
			{
				SetPlayerAttachedObject
				(
					playerid, 
					PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_MODELID],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_X],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Y],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Z],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_X],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Y],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Z],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_X],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Y],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Z],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2]
				);
			}
			return 1;
	    }
        if((fOffsetX >= 0.6 || -0.6 >= fOffsetX) || (fOffsetY >= 0.6 || -0.6 >= fOffsetY) || (fOffsetZ >= 0.6 || -0.6 >= fOffsetZ))
        {
            SendClientMessage(playerid, -1, "{999999}La posición del objeto está demasiado lejos de ti.");
			
			RemovePlayerAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
			if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED])
			{
				SetPlayerAttachedObject
				(
					playerid, 
					PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_MODELID],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_X],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Y],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Z],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_X],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Y],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Z],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_X],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Y],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Z],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1],
					PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2]
				);
			}
			return 1;
        }
        
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_X] = fOffsetX;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Y] = fOffsetY;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Z] = fOffsetZ;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_X] = fRotX;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Y] = fRotY;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Z] = fRotZ;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_X] = fScaleX;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Y] = fScaleY;
		PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Z] = fScaleZ;
		
		if(!PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED]) PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED] = true;
		
        SendClientMessageEx(playerid, -1, "{CCCCCC}Accesorio {98d16c}'%s' {CCCCCC}actualizado.", PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_NAME]);
    }
    else
    {
        RemovePlayerAttachedObject(playerid, PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT]);
		if(PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ATTACHED])
		{
			SetPlayerAttachedObject
			(
				playerid, 
				PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_MODELID],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_BONE],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_X],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Y],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_OFFSET_Z],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_X],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Y],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_ROT_Z],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_X],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Y],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_SCALE_Z],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_1],
				PLAYER_TOYS[playerid][ PLAYER_TEMP[playerid][pt_SELECTED_TOY_SLOT] ][player_toy_COLOR_2]
			);
		}
		
        SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado la edición.");
    }
    return 1;
}

ConnectDatabase()
{
	Database = db_open("SERVER/Super_RolePlay.db");
	
	if(Database == DB:0)
	{
		print("\n----------------------------------");
		print("  ¡ATENCION! No hay conexión con la base de datos.\n");
		print("----------------------------------\n");
		SendRconCommand("exit");
	}
	else
	{
		print("La conexión con la base de datos funciona.");
		db_query(Database, 
		"\
			PRAGMA FOREIGN_KEYS = ON;\
			UPDATE `CUENTA` SET `CONNECTED` = '0', PLAYERID = '-1';\
		");
	}
	return 1;
}


ClearPlayerChat(playerid)
{
	for(new i = 0; i != 32; i++) SendClientMessage(playerid, -1, " ");
	return 1;
}

RegisterBankAccountTransaction(account_id, transaction_type, ammount, extra = -1)
{
	new DB_Query[215];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `BANK_TRANSACTIONS`\
		(\
			`ID_ACCOUNT`, `TRANSACTION_TYPE`, `AMMOUNT`, `EXTRA`\
		)\
		VALUES\
		(\
			'%d', '%d', '%d', '%d'\
		);\
	", account_id, transaction_type, ammount, extra);
	db_query(Database, DB_Query);
	return 1;
}

RegisterNewPlayer(playerid)
{
	if(PLAYER_TEMP[playerid][pt_USER_EXIT]) return 0;
	
	new DBResult:Result, DB_Query[800];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `CUENTA`\
		(\
			`IP`, `NAME`, `EMAIL`, `SALT`, `PASS`, `CONNECTED`, `PLAYERID`, `TIME_FOR_REP`\
		)\
		VALUES\
		(\
			'%q', '%q', '%q', '%q', '%q', '1', '%d', '%d'\
		);\
		SELECT `ID`, `LAST_CONNECTION` FROM `CUENTA` WHERE `NAME` = '%s';\
	", ACCOUNT_INFO[playerid][ac_IP], ACCOUNT_INFO[playerid][ac_NAME], ACCOUNT_INFO[playerid][ac_EMAIL], ACCOUNT_INFO[playerid][ac_SALT], ACCOUNT_INFO[playerid][ac_PASS], playerid, TIME_FOR_REP, ACCOUNT_INFO[playerid][ac_NAME]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		ACCOUNT_INFO[playerid][ac_ID] = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "LAST_CONNECTION", ACCOUNT_INFO[playerid][ac_LAST_CONNECTION], 24);
		ACCOUNT_INFO[playerid][ac_DOUBT_CHANNEL] = true;
	}
	db_free_result(Result);
	
	DB_Query[0] = EOS;
	new DBResult:Result_reg;
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `REGISTRO`\
		(\
			`ID_USER`, `IP`, `NAME`, `EMAIL`, `SALT`, `PASS`\
		)\
		VALUES\
		(\
			'%d', '%q', '%q', '%q', '%q', '%q'\
		);\
		SELECT `DATE` FROM `REGISTRO` WHERE `ID_USER` = '%d';\
	", ACCOUNT_INFO[playerid][ac_ID], ACCOUNT_INFO[playerid][ac_IP], ACCOUNT_INFO[playerid][ac_NAME], ACCOUNT_INFO[playerid][ac_EMAIL], ACCOUNT_INFO[playerid][ac_SALT], ACCOUNT_INFO[playerid][ac_PASS], ACCOUNT_INFO[playerid][ac_ID]);
	Result_reg = db_query(Database, DB_Query);
	
	if(db_num_rows(Result_reg)) db_get_field_assoc(Result, "DATE", ACCOUNT_INFO[playerid][reg_DATE], 24);
	db_free_result(Result_reg);
	
	
	DB_Query[0] = EOS;
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PERSONAJE`\
		(\
			`ID_USER`, `SKIN`, `CASH`, `POS_X`, `POS_Y`, `POS_Z`, `ANGLE`, `SEX`\
		)\
		VALUES\
		(\
			'%d', '%d', '%d', '%f', '%f', '%f', '%f', '%d'\
		);\
	", ACCOUNT_INFO[playerid][ac_ID], CHARACTER_INFO[playerid][ch_SKIN], CHARACTER_INFO[playerid][ch_CASH], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], CHARACTER_INFO[playerid][ch_SEX]);
	db_query(Database, DB_Query);
	
	DB_Query[0] = EOS;
	format(DB_Query, sizeof DB_Query, "INSERT INTO `PLAYER_OBJECT` (`ID_USER`) VALUES ('%d');", ACCOUNT_INFO[playerid][ac_ID]);
	db_query(Database, DB_Query);
	
	PLAYER_PHONE[playerid][player_phone_VALID] = true;
	PLAYER_PHONE[playerid][player_phone_NUMBER] = 34000000 + ACCOUNT_INFO[playerid][ac_ID];
	PLAYER_PHONE[playerid][player_phone_STATE] = PHONE_STATE_ON;
	PLAYER_PHONE[playerid][player_phone_VISIBLE_NUMBER] = true;
	RegisterNewPlayerPhone(playerid);
	
	
	new slot;
	
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_VALID] = true;
	format(PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], 24, "Policía");
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER] = 911;
	RegisterNewPlayerPhoneBook(playerid, slot);
	slot ++;
	
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_VALID] = true;
	format(PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], 24, "Banco");
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER] = 6740;
	RegisterNewPlayerPhoneBook(playerid, slot);
	slot ++;
	
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_VALID] = true;
	format(PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], 24, "Aseguradora");
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER] = 38350;
	RegisterNewPlayerPhoneBook(playerid, slot);
	slot ++;
	
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_VALID] = true;
	format(PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], 24, "Taxis");
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER] = 450;
	RegisterNewPlayerPhoneBook(playerid, slot);
	slot ++;
	
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_VALID] = true;
	format(PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], 24, "Mecánico");
	PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER] = 570;
	RegisterNewPlayerPhoneBook(playerid, slot);
	slot ++;
	
	
	PLAYER_TEMP[playerid][pt_USER_EXIT] = true;
	return 1;
}

SaveUserData(playerid)
{
	if(!PLAYER_TEMP[playerid][pt_USER_EXIT] || !PLAYER_TEMP[playerid][pt_USER_LOGGED]) return 0;
	
	new DB_Query[1800];
	format(DB_Query, sizeof(DB_Query), "\
		UPDATE `CUENTA` SET \
			`IP` = '%q',\
			`NAME` = '%q',\
			`EMAIL` = '%q',\
			`SALT` = '%q',\
			`PASS` = '%q',\
			`LAST_CONNECTION` = CURRENT_TIMESTAMP,\
			`TIME-PLAYING` = '%d',\
			`LEVEL` = '%d',\
			`REP` = '%d',\
			`STATE` = '%d',\
			`DOUBT_CHANNEL` = '%d',\
			`TIME_FOR_REP` = '%d',\
			`ADMIN_LEVEL` = '%d',\
			`PAYDAY_REP` = '%d' \
		WHERE `ID` = '%d';\
		\
		UPDATE `PERSONAJE` SET \
			`SKIN` = '%d',\
			`CASH` = '%d',\
			`POS_X` = '%f',\
			`POS_Y` = '%f',\
			`POS_Z` = '%f',\
			`ANGLE` = '%f',\
			`STATE` = '%d',\
			`INTERIOR` = '%d',\
			`LOCAL_INTERIOR` = '%d',\
			`FIGHT_STYLE` = '%d',\
			`HEALTH` = '%f',\
			`ARMOUR` = '%f',\
			`SEX` = '%d',\
			`HUNGRY` = '%f',\
			`THIRST` = '%f',\
			`BLACK_MARKET_LEVEL` = '%d',\
			`WANTED_LEVEL` = '%d',\
			`POLICE_JAIL_TIME` = '%d',\
			`POLICE_JAIL_ID` = '%d' \
		WHERE `ID_USER` = '%d';\
		\
		UPDATE `BANK_ACCOUNTS` SET\
			`BALANCE` = '%d' \
		WHERE `ID_ACCOUNT` = '%d';\
		\
		UPDATE `PHONE` SET\
			`PHONE_NUMBER` = '%d',\
			`PHONE_STATE` = '%d',\
			`VISIBLE_NUMBER` = '%d' \
		WHERE `ID_USER` = '%d';\
		\
		UPDATE `PLAYER_OBJECT` SET\
			`GPS` = '%d',\
			`MP3` = '%d',\
			`PHONE_RESOLVER` = '%d' \
		WHERE `ID_USER` = '%d';\
	",
		ACCOUNT_INFO[playerid][ac_IP], ACCOUNT_INFO[playerid][ac_NAME], ACCOUNT_INFO[playerid][ac_EMAIL], ACCOUNT_INFO[playerid][ac_SALT], ACCOUNT_INFO[playerid][ac_PASS], ACCOUNT_INFO[playerid][ac_TIME_PLAYING], ACCOUNT_INFO[playerid][ac_LEVEL], ACCOUNT_INFO[playerid][ac_REP], ACCOUNT_INFO[playerid][ac_STATE], ACCOUNT_INFO[playerid][ac_DOUBT_CHANNEL], ACCOUNT_INFO[playerid][ac_TIME_FOR_REP], ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL], ACCOUNT_INFO[playerid][ac_PAYDAY_REP], ACCOUNT_INFO[playerid][ac_ID],
		CHARACTER_INFO[playerid][ch_SKIN], CHARACTER_INFO[playerid][ch_CASH], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], CHARACTER_INFO[playerid][ch_STATE], CHARACTER_INFO[playerid][ch_INTERIOR], CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA], CHARACTER_INFO[playerid][ch_FIGHT_STYLE], CHARACTER_INFO[playerid][ch_HEALTH], CHARACTER_INFO[playerid][ch_ARMOUR],  CHARACTER_INFO[playerid][ch_SEX], CHARACTER_INFO[playerid][ch_HUNGRY], CHARACTER_INFO[playerid][ch_THIRST], CHARACTER_INFO[playerid][ch_BLACK_MARKET_LEVEL], CHARACTER_INFO[playerid][ch_WANTED_LEVEL], CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME], CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID], ACCOUNT_INFO[playerid][ac_ID],
		BANK_ACCOUNT[playerid][bank_account_BALANCE], BANK_ACCOUNT[playerid][bank_account_ID],
		PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_PHONE[playerid][player_phone_STATE], PLAYER_PHONE[playerid][player_phone_VISIBLE_NUMBER], ACCOUNT_INFO[playerid][ac_ID],
		PLAYER_OBJECT[playerid][po_GPS], PLAYER_OBJECT[playerid][po_MP3], PLAYER_OBJECT[playerid][po_PHONE_RESOLVER], ACCOUNT_INFO[playerid][ac_ID]
	);
	db_query(Database, DB_Query);
	
	if(BANK_ACCOUNT[playerid][bank_account_ID] != 0)
	{
		new DBResult:Result;
		format(DB_Query, sizeof DB_Query, 
			
			"DELETE FROM `BANK_TRANSACTIONS` WHERE `ID_ACCOUNT` = '%d' AND `ID_TRANSACTION` NOT IN (SELECT `ID_TRANSACTION` FROM `BANK_TRANSACTIONS` WHERE `ID_ACCOUNT` = '%d' ORDER BY `DATE` DESC LIMIT %d);",
			
			BANK_ACCOUNT[playerid][bank_account_ID], BANK_ACCOUNT[playerid][bank_account_ID], MAX_BANK_TRANSACTIONS_DIALOG
		);
		Result = db_query(Database, DB_Query);
		db_free_result(Result);
	}
	
	if(PLAYER_PHONE[playerid][player_phone_VALID])
	{
		new DBResult:Result;
		format(DB_Query, sizeof DB_Query,
		
			"DELETE FROM `PHONE_MESSAGES` WHERE `FROM` = '%d' AND `ID_MESSAGE` NOT IN (SELECT `ID_MESSAGE` FROM `PHONE_MESSAGES` WHERE `FROM` = '%d' ORDER BY `DATE` DESC LIMIT 10);\
			 DELETE FROM `PHONE_MESSAGES` WHERE `TO` = '%d' AND `ID_MESSAGE` NOT IN (SELECT `ID_MESSAGE` FROM `PHONE_MESSAGES` WHERE `TO` = '%d' ORDER BY `DATE` DESC LIMIT 10);",
			
			PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_PHONE[playerid][player_phone_NUMBER],
			PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_PHONE[playerid][player_phone_NUMBER]
		);
		Result = db_query(Database, DB_Query);
		db_free_result(Result);
	}
	return 1;
}

SendClientMessageEx(playerid, color, form[], {Float, _}: ...) 
{
    #pragma unused form

    static
        tmp[145]
    ;
    new
        t1 = playerid,
        t2 = color
    ;
    const
        n4 = -4,
        n16 = -16,
        size = sizeof tmp
    ;
    #emit stack 28
    #emit push.c size
    #emit push.c tmp
    #emit stack n4
    #emit sysreq.c format
    #emit stack n16

    return (t1 == -1 ? (SendClientMessageToAll(t2, tmp)) : (SendClientMessage(t1, t2, tmp)) );
}

stock TimeConvert(seconds)
{
	new tmp[16];
 	new minutes = floatround(seconds/60);
  	seconds -= minutes*60;
   	format(tmp, sizeof(tmp), "%d:%02d", minutes, seconds);
   	return tmp;
}

stock TimeConvertEx(sec, &days, &hours, &minutes, &seconds)
{
	days = floatround(sec / 86400);
	hours = floatround((sec - (days * 86400)) / 3600);
	minutes = floatround((sec - (days * 86400) - (hours * 3600)) / 60);
	seconds = sec % 60;
   	return 1;
}

ProxDetector(playerid, Float:radi, string[], col1, col2, col3, col4, col5)
{
	new Float:oldposx, Float:oldposy, Float:oldposz, current_vw = GetPlayerVirtualWorld(playerid), current_int = GetPlayerInterior(playerid);
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 					
	{
		if(!IsPlayerConnected(i)) continue;
		if(!PLAYER_TEMP[i][pt_USER_LOGGED]) continue;
		if(GetPlayerVirtualWorld(i) != current_vw) continue;
		if(GetPlayerInterior(i) != current_int) continue;
		
		if(IsPlayerInRangeOfPoint(i, radi/16, oldposx, oldposy, oldposz)) SendClientMessage(i, col1, string);
		else if(IsPlayerInRangeOfPoint(i, radi/8, oldposx, oldposy, oldposz)) SendClientMessage(i, col2, string);
		else if(IsPlayerInRangeOfPoint(i, radi/4, oldposx, oldposy, oldposz)) SendClientMessage(i, col3, string);			
		else if(IsPlayerInRangeOfPoint(i, radi/2, oldposx, oldposy, oldposz)) SendClientMessage(i, col4, string);	
		else if(IsPlayerInRangeOfPoint(i, radi, oldposx, oldposy, oldposz)) SendClientMessage(i, col5, string);
	}
	return 1;
}

NearbyMessage(Float:pos_x, Float:pos_y, Float:pos_z, current_int, current_vw, Float:radi, col, string[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 					
	{
		if(!IsPlayerConnected(i)) continue;
		if(!PLAYER_TEMP[i][pt_USER_LOGGED]) continue;
		if(GetPlayerVirtualWorld(i) != current_vw) continue;
		if(GetPlayerInterior(i) != current_int) continue;
		
		if(IsPlayerInRangeOfPoint(i, radi, pos_x, pos_y, pos_z)) SendClientMessage(i, col, string);
	}
	return 1;
}

IsValidName(name[])
{
	for(new c = 0; c < strlen(name); c++)
	{
	    switch(name[c])
	    {
	        case 'A' .. 'Z', 'a' .. 'z', '_': continue;
	        default: return false;
	    }
	}
	return true;
}

KickEx(playerid, time = 0)
{
	PLAYER_TEMP[playerid][pt_KICKED] = true;
	if(!time) Kick(playerid);
	else
	{
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][0]);
		PLAYER_TEMP[playerid][pt_TIMERS][0] = SetTimerEx("KickPlayer", time, false, "i", playerid);
	}
	return 1;
}

forward KickPlayer(playerid);
public KickPlayer(playerid)
{
	return Kick(playerid);
}

RP_GetPlayerName(playerid)
{
	new name[24];
	format(name, 24, "%s", PLAYER_TEMP[playerid][pt_NAME]);
    for(new i = 0; i < 24; i++) {
		if (name[i] == '_') name[i] = ' ';
	}
 
	return name;
}

LoadCharacterData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[80];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PERSONAJE` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		CHARACTER_INFO[playerid][ch_SKIN] = db_get_field_assoc_int(Result, "SKIN");
		CHARACTER_INFO[playerid][ch_CASH] = db_get_field_assoc_int(Result, "CASH");
		/*CHARACTER_INFO[playerid][ch_POS][0] = db_get_field_assoc_float(Result, "POS_X");
		CHARACTER_INFO[playerid][ch_POS][1] = db_get_field_assoc_float(Result, "POS_Y");
		CHARACTER_INFO[playerid][ch_POS][2] = db_get_field_assoc_float(Result, "POS_Z");
		CHARACTER_INFO[playerid][ch_ANGLE] = db_get_field_assoc_float(Result, "ANGLE");
		CHARACTER_INFO[playerid][ch_STATE] = db_get_field_assoc_int(Result, "STATE");
		CHARACTER_INFO[playerid][ch_INTERIOR] = db_get_field_assoc_int(Result, "INTERIOR");
		CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = db_get_field_assoc_int(Result, "LOCAL_INTERIOR");*/
		CHARACTER_INFO[playerid][ch_FIGHT_STYLE] = db_get_field_assoc_int(Result, "FIGHT_STYLE");
		CHARACTER_INFO[playerid][ch_HEALTH] = db_get_field_assoc_float(Result, "HEALTH");
		CHARACTER_INFO[playerid][ch_ARMOUR] = db_get_field_assoc_float(Result, "ARMOUR");
		CHARACTER_INFO[playerid][ch_SEX] = db_get_field_assoc_int(Result, "SEX");
		CHARACTER_INFO[playerid][ch_HUNGRY] = db_get_field_assoc_float(Result, "HUNGRY");
		CHARACTER_INFO[playerid][ch_THIRST] = db_get_field_assoc_float(Result, "THIRST");
		CHARACTER_INFO[playerid][ch_BLACK_MARKET_LEVEL] = db_get_field_assoc_int(Result, "BLACK_MARKET_LEVEL");
		CHARACTER_INFO[playerid][ch_WANTED_LEVEL] = db_get_field_assoc_int(Result, "WANTED_LEVEL");
		CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = db_get_field_assoc_int(Result, "POLICE_JAIL_TIME");
		CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] = db_get_field_assoc_int(Result, "POLICE_JAIL_ID");
	}
	db_free_result(Result);
	return 1;
}

LoadPlayerBankAccountData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[85];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `BANK_ACCOUNTS` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		BANK_ACCOUNT[playerid][bank_account_ID] = db_get_field_assoc_int(Result, "ID_ACCOUNT");
		BANK_ACCOUNT[playerid][bank_account_BALANCE] = db_get_field_assoc_int(Result, "BALANCE");
	}
	db_free_result(Result);
	return 1;
}

LoadPlayerObjectsData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[85];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_OBJECT` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		PLAYER_OBJECT[playerid][po_GPS] = db_get_field_assoc_int(Result, "GPS");
		PLAYER_OBJECT[playerid][po_MP3] = db_get_field_assoc_int(Result, "MP3");
		PLAYER_OBJECT[playerid][po_PHONE_RESOLVER] = db_get_field_assoc_int(Result, "PHONE_RESOLVER");
	}
	db_free_result(Result);
	return 1;
}

LoadPlayerPhoneData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[100];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PHONE` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		PLAYER_PHONE[playerid][player_phone_VALID] = true;
		PLAYER_PHONE[playerid][player_phone_NUMBER] = db_get_field_assoc_int(Result, "PHONE_NUMBER");
		PLAYER_PHONE[playerid][player_phone_STATE] = db_get_field_assoc_int(Result, "PHONE_STATE");
		PLAYER_PHONE[playerid][player_phone_VISIBLE_NUMBER] = db_get_field_assoc_int(Result, "VISIBLE_NUMBER");
	}
	db_free_result(Result);
	
	
	DB_Query[0] = EOS;
	new DBResult:Result_phonebook;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PHONE_BOOK` WHERE `PHONE_ID` = '%d' LIMIT %d;", PLAYER_PHONE[playerid][player_phone_NUMBER], MAX_PHONE_CONTACTS);
	Result_phonebook = db_query(Database, DB_Query);
	
	new index;
	for(new i; i < db_num_rows(Result_phonebook); i++ )
	{
		if(index >= MAX_PHONE_CONTACTS)
		{
			printf("---> Límite superado en array 'PB' al intentar cargar de la base de datos.");
			break;
		}
		
		PLAYER_PHONE_BOOK[playerid][index][phone_book_contact_VALID] = true;
		
		PLAYER_PHONE_BOOK[playerid][index][phone_book_contact_ID] = db_get_field_assoc_int(Result_phonebook, "CONTACT_ID");
		db_get_field_assoc(Result_phonebook, "NAME", PLAYER_PHONE_BOOK[playerid][index][phone_book_contact_NAME], 24);
		PLAYER_PHONE_BOOK[playerid][index][phone_book_contact_PHONE_NUMBER] = db_get_field_assoc_int(Result_phonebook, "PHONE_NUMBER");
		
		index ++;
		db_next_row(Result_phonebook);
	}
	db_free_result(Result_phonebook);
	return 1;
}

RegisterNewPlayerPhone(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DB_Query[200];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PHONE`\
		(\
			`PHONE_NUMBER`, `ID_USER`\
		)\
		VALUES\
		(\
			'%d', '%d'\
		);\
	",
		PLAYER_PHONE[playerid][player_phone_NUMBER], ACCOUNT_INFO[playerid][ac_ID]
	);
	db_query(Database, DB_Query);
	return 1;
}

RegisterNewPlayerPhoneBook(playerid, slot)
{
	new DBResult:Result, DB_Query[300];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PHONE_BOOK`\
		(\
			`PHONE_ID`, `NAME`, `PHONE_NUMBER`\
		)\
		VALUES\
		(\
			'%d', '%q', '%d'\
		);\
		SELECT MAX(`CONTACT_ID`) FROM `PHONE_BOOK`;\
	",
		PLAYER_PHONE[playerid][player_phone_NUMBER], PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_NAME], PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_PHONE_NUMBER]
	);
	Result = db_query(Database, DB_Query);

	if(db_num_rows(Result)) PLAYER_PHONE_BOOK[playerid][slot][phone_book_contact_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	return 1;
}

RegisterPhoneMessage(from, to, message[], offline = 0)
{
	new DB_Query[300];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PHONE_MESSAGES`\
		(\
			`FROM`, `TO`, `MESSAGE`, `OFFLINE`\
		)\
		VALUES\
		(\
			'%d', '%d', '%q', '%d'\
		);\
	", from, to, message, offline);
	db_query(Database, DB_Query);
	return 1;
}


forward NoCallResponse(playerid);
public NoCallResponse(playerid)
{
	if(!PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return 0;
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] == INVALID_PLAYER_ID) return 0;
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] != CALL_STATE_WAITING_RESPONSE) return 0;
	
	EndPhoneCall(playerid);
	return 1;
}

EndPhoneCall(playerid)
{
	if(!PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) return 0;
	
	if(PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] || PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION])
	{
		PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = false;
		PLAYER_TEMP[playerid][pt_POLICE_CALL_NAME] = false;
		PLAYER_TEMP[playerid][pt_POLICE_CALL_DESCRIPTION] = false;
		return 1;
	}
	
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] == INVALID_PLAYER_ID) return 0;
	if(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] == CALL_GAME_STATE_NONE) return 0;
	
	new to_playerid = PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID];
	switch(PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE])
	{
		case CALL_STATE_WAITING_RESPONSE:
		{
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][6]);
			
			PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL] = false;
			PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_GAME_STATE_NONE;
			PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = INVALID_PLAYER_ID;
		}
		case CALL_STATE_INCOMING_CALL:
		{
			SendClientMessage(to_playerid, -1, "{999999}No respondieron el teléfono...");
			KillTimer(PLAYER_TEMP[to_playerid][pt_TIMERS][6]);
			
			PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL] = false;
			PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_GAME_STATE_NONE;
			PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = INVALID_PLAYER_ID;
		}
		case CALL_STATE_ESTABLISHED:
		{
			SendClientMessage(to_playerid, -1, "{f47d42}Llamada finalizada.");
			PLAYER_TEMP[to_playerid][pt_PLAYER_IN_CALL] = false;
			PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_GAME_STATE_NONE;
			PLAYER_TEMP[to_playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = INVALID_PLAYER_ID;
			
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(to_playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		}
	}
	
	PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL] = false;
	PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_STATE] = CALL_GAME_STATE_NONE;
	PLAYER_TEMP[playerid][pt_PLAYER_PHONE_CALL_PLAYERID] = INVALID_PLAYER_ID;
	return 1;
}

convertPhoneNumber(playerid, number)
{
	new f_string[24], bool:exists;
	for(new i = 0; i != MAX_PHONE_CONTACTS; i ++)
	{
		if(!PLAYER_PHONE_BOOK[playerid][i][phone_book_contact_VALID]) continue;
		if(number == PLAYER_PHONE_BOOK[playerid][i][phone_book_contact_PHONE_NUMBER])
		{
			exists = true;
			format(f_string, sizeof f_string, "%s", PLAYER_PHONE_BOOK[playerid][i][phone_book_contact_NAME]);
			break;
		}
	}

	if(!exists) format(f_string, sizeof f_string, "%s", number_format_dash(number));
	return f_string;
}

GetEmptyPlayerPhoneBookSlot(playerid)
{
	for(new i = 0; i != MAX_PHONE_CONTACTS; i ++)
	{
		if(!PLAYER_PHONE_BOOK[playerid][i][phone_book_contact_VALID]) return i;
	}
	return -1;
}

RegisterNewPlayerPocketObject(playerid, slot)
{
	new DBResult:Result, DB_Query[350];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PLAYER_POCKET`\
		(\
			`ID_USER`, `NAME`, `HUNGRY`, `THIRST`, `DRUNK`\
		)\
		VALUES\
		(\
			'%d', '%q', '%f', '%f', '%d'\
		);\
		SELECT MAX(`ID_OBJECT`) FROM `PLAYER_POCKET`;\
	",
		ACCOUNT_INFO[playerid][ac_ID], PLAYER_POCKET[playerid][slot][player_pocket_object_NAME], PLAYER_POCKET[playerid][slot][player_pocket_object_HUNGRY], PLAYER_POCKET[playerid][slot][player_pocket_object_THIRST], PLAYER_POCKET[playerid][slot][player_pocket_object_DRUNK]
	);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result)) PLAYER_POCKET[playerid][slot][player_pocket_object_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	return 1;
}

LoadPlayerPocketData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_POCKET` WHERE `ID_USER` = '%d' LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], MAX_PLAYER_POCKET_OBJECTS);
	Result = db_query(Database, DB_Query);
	
	new index;
	for(new i; i < db_num_rows(Result); i++ )
	{
		if(index >= MAX_PLAYER_POCKET_OBJECTS)
		{
			printf("---> Límite superado en array 'PP' al intentar cargar de la base de datos.");
			break;
		}
		
		PLAYER_POCKET[playerid][index][player_pocket_VALID] = true;
		
		PLAYER_POCKET[playerid][index][player_pocket_object_ID] = db_get_field_assoc_int(Result, "ID_OBJECT");
		db_get_field_assoc(Result, "NAME", PLAYER_POCKET[playerid][index][player_pocket_object_NAME], 24);
		PLAYER_POCKET[playerid][index][player_pocket_object_HUNGRY] = db_get_field_assoc_float(Result, "HUNGRY");
		PLAYER_POCKET[playerid][index][player_pocket_object_THIRST] = db_get_field_assoc_float(Result, "THIRST");
		PLAYER_POCKET[playerid][index][player_pocket_object_DRUNK] = db_get_field_assoc_int(Result, "DRUNK");
		
		index ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

TransferPlayerPocketObject(from_playerid, from_slot, to_playerid, to_slot)
{
	new DB_Query[130];
	format(DB_Query, sizeof(DB_Query), "UPDATE `PLAYER_POCKET` SET `ID_USER` = '%d' WHERE `ID_OBJECT` = '%d';", ACCOUNT_INFO[to_playerid][ac_ID], PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_ID]);
	db_query(Database, DB_Query);
	
	PLAYER_POCKET[to_playerid][to_slot][player_pocket_VALID] = true;
	PLAYER_POCKET[to_playerid][to_slot][player_pocket_object_ID] = PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_ID];
	format(PLAYER_POCKET[to_playerid][to_slot][player_pocket_object_NAME], 24, "%s", PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_NAME]);
	PLAYER_POCKET[to_playerid][to_slot][player_pocket_object_HUNGRY] = PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_HUNGRY];
	PLAYER_POCKET[to_playerid][to_slot][player_pocket_object_THIRST] = PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_THIRST];
	PLAYER_POCKET[to_playerid][to_slot][player_pocket_object_DRUNK] = PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_DRUNK];
	
	PLAYER_POCKET[from_playerid][from_slot][player_pocket_VALID] = false;
	PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_ID] = 0;
	format(PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_NAME], 24, "");
	PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_HUNGRY] = 0.0;
	PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_THIRST] = 0.0;
	PLAYER_POCKET[from_playerid][from_slot][player_pocket_object_DRUNK] = 0;
	return 1;
}

DeletePlayerPocketObject(playerid, slot)
{
	new DB_Query[140];
	format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_POCKET` WHERE `ID_OBJECT` = '%d' AND `ID_USER` = '%d';", PLAYER_POCKET[playerid][slot][player_pocket_object_ID], ACCOUNT_INFO[playerid][ac_ID]);
	db_query(Database, DB_Query);

	PLAYER_POCKET[playerid][slot][player_pocket_VALID] = false;
	PLAYER_POCKET[playerid][slot][player_pocket_object_ID] = 0;
	format(PLAYER_POCKET[playerid][slot][player_pocket_object_NAME], 24, "");
	PLAYER_POCKET[playerid][slot][player_pocket_object_HUNGRY] = 0.0;
	PLAYER_POCKET[playerid][slot][player_pocket_object_THIRST] = 0.0;
	PLAYER_POCKET[playerid][slot][player_pocket_object_DRUNK] = 0;
	return 1;
}

GetEmptyPlayerPocketSlot(playerid)
{
	for(new i = 0; i != MAX_PLAYER_POCKET_OBJECTS; i ++)
	{
		if(!PLAYER_POCKET[playerid][i][player_pocket_VALID]) return i;
	}
	return -1;
}

LoadPlayerGPSData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_GPS` WHERE `ID_USER` = '%d' LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], MAX_PLAYER_GPS_SAVES);
	Result = db_query(Database, DB_Query);
	
	new index;
	for(new i; i < db_num_rows(Result); i++ )
	{
		if(index >= MAX_PLAYER_GPS_SAVES)
		{
			printf("---> Límite superado en array 'P_GPS' al intentar cargar de la base de datos.");
			break;
		}
		
		PLAYER_GPS[playerid][index][player_gps_VALID] = true;
		
		PLAYER_GPS[playerid][index][player_gps_ID] = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", PLAYER_GPS[playerid][index][player_gps_NAME], 24);
		PLAYER_GPS[playerid][index][player_gps_X] = db_get_field_assoc_float(Result, "X");
		PLAYER_GPS[playerid][index][player_gps_Y] = db_get_field_assoc_float(Result, "Y");
		PLAYER_GPS[playerid][index][player_gps_Z] = db_get_field_assoc_float(Result, "Z");
		PLAYER_GPS[playerid][index][player_gps_WORLD] = db_get_field_assoc_int(Result, "WORLD");
		PLAYER_GPS[playerid][index][player_gps_INTERIOR] = db_get_field_assoc_int(Result, "INTERIOR");

		index ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

LoadPlayerToysData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_TOYS` WHERE `ID_USER` = '%d' LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], MAX_PLAYER_ATTACHED_OBJECTS);
	Result = db_query(Database, DB_Query);
	
	new index;
	for(new i; i < db_num_rows(Result); i++ )
	{
		if(index >= MAX_PLAYER_ATTACHED_OBJECTS)
		{
			printf("---> Límite superado en array 'PTOYS' al intentar cargar de la base de datos.");
			break;
		}
		
		PLAYER_TOYS[playerid][index][player_toy_VALID] = true;
		
		PLAYER_TOYS[playerid][index][player_toy_ID] = db_get_field_assoc_int(Result, "ID_TOY");
		db_get_field_assoc(Result, "NAME", PLAYER_TOYS[playerid][index][player_toy_NAME], 24);
		PLAYER_TOYS[playerid][index][player_toy_ATTACHED] = db_get_field_assoc_int(Result, "ATTACHED");
		PLAYER_TOYS[playerid][index][player_toy_MODELID] = db_get_field_assoc_int(Result, "MODELID");
		PLAYER_TOYS[playerid][index][player_toy_BONE] = db_get_field_assoc_int(Result, "BONE");
		PLAYER_TOYS[playerid][index][player_toy_OFFSET_X] = db_get_field_assoc_float(Result, "OFFSET_X");
		PLAYER_TOYS[playerid][index][player_toy_OFFSET_Y] = db_get_field_assoc_float(Result, "OFFSET_Y");
		PLAYER_TOYS[playerid][index][player_toy_OFFSET_Z] = db_get_field_assoc_float(Result, "OFFSET_Z");
		PLAYER_TOYS[playerid][index][player_toy_ROT_X] = db_get_field_assoc_float(Result, "ROT_X");
		PLAYER_TOYS[playerid][index][player_toy_ROT_Y] = db_get_field_assoc_float(Result, "ROT_Y");
		PLAYER_TOYS[playerid][index][player_toy_ROT_Z] = db_get_field_assoc_float(Result, "ROT_Z");
		PLAYER_TOYS[playerid][index][player_toy_SCALE_X] = db_get_field_assoc_float(Result, "SCALE_X");
		PLAYER_TOYS[playerid][index][player_toy_SCALE_Y] = db_get_field_assoc_float(Result, "SCALE_Y");
		PLAYER_TOYS[playerid][index][player_toy_SCALE_Z] = db_get_field_assoc_float(Result, "SCALE_Z");
		PLAYER_TOYS[playerid][index][player_toy_COLOR_1] = db_get_field_assoc_int(Result, "COLOR_1");
		PLAYER_TOYS[playerid][index][player_toy_COLOR_2] = db_get_field_assoc_int(Result, "COLOR_2");

		index ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

SavePlayerToysData(playerid)
{
	if(!PLAYER_TEMP[playerid][pt_USER_EXIT] || !PLAYER_TEMP[playerid][pt_USER_LOGGED]) return 0;
	
	for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
	{
		if(!PLAYER_TOYS[playerid][i][player_toy_VALID]) continue;
		
		new DB_Query[1000];
		format(DB_Query, sizeof(DB_Query), "\
			UPDATE `PLAYER_TOYS` SET \
				`NAME` = '%q',\
				`ATTACHED` = '%d',\
				`MODELID` = '%d',\
				`BONE` = '%d',\
				`OFFSET_X` = '%f',\
				`OFFSET_Y` = '%f',\
				`OFFSET_Z` = '%f',\
				`ROT_X` = '%f',\
				`ROT_Y` = '%f',\
				`ROT_Z` = '%f',\
				`SCALE_X` = '%f',\
				`SCALE_Y` = '%f',\
				`SCALE_Z` = '%f',\
				`COLOR_1` = '%d',\
				`COLOR_2` = '%d' \
			WHERE `ID_TOY` = '%d';\
		",
			PLAYER_TOYS[playerid][i][player_toy_NAME], PLAYER_TOYS[playerid][i][player_toy_ATTACHED],
			PLAYER_TOYS[playerid][i][player_toy_MODELID], PLAYER_TOYS[playerid][i][player_toy_BONE],
			PLAYER_TOYS[playerid][i][player_toy_OFFSET_X], PLAYER_TOYS[playerid][i][player_toy_OFFSET_Y], PLAYER_TOYS[playerid][i][player_toy_OFFSET_Z],
			PLAYER_TOYS[playerid][i][player_toy_ROT_X], PLAYER_TOYS[playerid][i][player_toy_ROT_Y], PLAYER_TOYS[playerid][i][player_toy_ROT_Z],
			PLAYER_TOYS[playerid][i][player_toy_SCALE_X], PLAYER_TOYS[playerid][i][player_toy_SCALE_Y], PLAYER_TOYS[playerid][i][player_toy_SCALE_Z],
			PLAYER_TOYS[playerid][i][player_toy_COLOR_1], PLAYER_TOYS[playerid][i][player_toy_COLOR_2],
			
			PLAYER_TOYS[playerid][i][player_toy_ID]
		);

		db_query(Database, DB_Query);
	}
	return 1;
}

GetEmptyPlayerToySlot(playerid)
{
	for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
	{
		if(!PLAYER_TOYS[playerid][i][player_toy_VALID]) return i;
	}
	return -1;
}

stock minrand(min, max) //By Alex "Y_Less" Cole
{
	return random(max - min) + min;
}

//PARA QUE PASEN 24 HORAS EN EL JUEGO EN		1 MINUTO REAL    NECESITO UN TIMER DE 125/3 MS
SetMyWorldTime(minutes_for_day)
{
	new interval = floatround(floatmul(float(minutes_for_day), floatdiv(125, 3)));

	SERVER_TIME[0] = 11;
	SERVER_TIME[1] = 0;	
	UpdateServerTimeTextDraw();
	
	SetTimer("UpdateWorldTime", interval, true);
	return 1;
}

forward UpdateWorldTime();
public UpdateWorldTime()
{
	SERVER_TIME[1] ++;
	if(SERVER_TIME[1] == 60)
	{
		SERVER_TIME[0] ++;
		if(SERVER_TIME[0] == 24) SERVER_TIME[0] = 0;
		SERVER_TIME[1] = 0;
	}
	
	UpdateServerTimeTextDraw();
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_DEAD)
			{
				SetPlayerTime(i, SERVER_TIME[0], SERVER_TIME[1]);
				SetPlayerWeather(i, SERVER_WEATHER);
			}
		}
 	}
	return 1;
}

UpdateServerTimeTextDraw()
{
	new td_str[16]; format(td_str, sizeof td_str, "%02d:%02d", SERVER_TIME[0], SERVER_TIME[1]);
	TextDrawSetString(Textdraws[textdraw_SERVER_TIME], td_str);
	return 1;
}

SendMessageToDoubtChannel(playerid, message[])
{
	new str[145];
	format(str, 145, "{6e94b2}[Dudas] {76b26e}%s (%d) [Nivel %d]: %s", PLAYER_TEMP[playerid][pt_RP_NAME], playerid, ACCOUNT_INFO[playerid][ac_LEVEL], message);
	PLAYER_TEMP[playerid][pt_DOUBT_CHANNEL_TIME] = gettime();
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if((PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_DEAD) && ACCOUNT_INFO[i][ac_DOUBT_CHANNEL])
			{
				SendClientMessage(i, 0x009999FF, str);
			}
		}
	}
	return 1;
}

stock ConvertTime_SecondsToHours(sec, &hours, &minutes, &seconds)
{
	hours = floatround(sec / 3600);
	minutes = floatround((sec - (hours * 3600)) / 60);
	seconds = sec % 60;
   	return 1;
}

CreatePlayerTextDraws(playerid)
{
	for(new i; i < sizeof(PlayerTextdraws[]); i++) PlayerTextdraws[playerid][Player_Textdraws_Enum:i] = INVALID_TEXT_DRAW;
	
	PlayerTextdraws[playerid][ptextdraw_REPUTATION][0] = CreatePlayerTextDraw(playerid, -15.000000, 443.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 0.000000, 0.500000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 650.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 140);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][0], 0);
	
	PlayerTextdraws[playerid][ptextdraw_REPUTATION][1] = CreatePlayerTextDraw(playerid, 0.000000, 443.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 0.000000, 0.500000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 0.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 5918940);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 0);

	PlayerTextdraws[playerid][ptextdraw_REPUTATION][2] = CreatePlayerTextDraw(playerid, 3.000000, 430.000000, "Siguiente_nivel:");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 0.213333, 1.010964);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], -186);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], 0);
	
	

	PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0] = CreatePlayerTextDraw(playerid, 320.000000, 380.000000, "_");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 0.400000, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 0.000000, 100.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0], 0);

	PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1] = CreatePlayerTextDraw(playerid, 272.000000, 382.000000, "_");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 0.400000, 1.127111);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 368.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], -16777123);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1], 0);
	
	PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2] = CreatePlayerTextDraw(playerid, 272.000000, 382.000000, "_");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 0.400000, 1.127111);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 270.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], -16777123);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 0);
	
	
	PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0] = CreatePlayerTextDraw(playerid, 320.000000, 350.000000, "I");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 27.410259, 5.897183);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 145);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0], 0);

	PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1] = CreatePlayerTextDraw(playerid, 320.000000, 358.000000, "Tienda");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 0.361666, 1.400889);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 90);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], 0);

	PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2] = CreatePlayerTextDraw(playerid, 320.000000, 377.000000, "COMPRAR");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 0.193666, 0.915556);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 10.000000, 34.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -201); // Money = 9306312   ,  -1459617611  No money
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], true);

	PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3] = CreatePlayerTextDraw(playerid, 363.000000, 377.000000, "SIGUIENTE");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 0.193666, 0.915556);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 10.000000, 34.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], -132);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3], true);

	PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4] = CreatePlayerTextDraw(playerid, 277.000000, 377.000000, "ANTERIOR");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 0.193666, 0.915556);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 10.000000, 34.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], -132);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4], true);

	PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5] = CreatePlayerTextDraw(playerid, 320.000000, 398.000000, "Precio:_0$~n~Ropa:_0/0");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 0.171666, 0.782815);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], -86);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], 0);

	
	PlayerTextdraws[playerid][ptextdraw_HUNGRY][0] = CreatePlayerTextDraw(playerid, 497.000000, 112.000000, "hud:radar_datefood"); //Icono comida 
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 12.000000, 10.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 4);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0], 0);

	PlayerTextdraws[playerid][ptextdraw_HUNGRY][1] = CreatePlayerTextDraw(playerid, 499.000000, 102.000000, "contorno_negro");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 0.000000, 0.699999);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 549.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1], 0);

	PlayerTextdraws[playerid][ptextdraw_HUNGRY][2] = CreatePlayerTextDraw(playerid, 500.699981, 104.000000, "barra_atras_llena");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 0.000000, 0.238333);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 546.730102, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 1414856922);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2], 0);

	PlayerTextdraws[playerid][ptextdraw_HUNGRY][3] = CreatePlayerTextDraw(playerid, 500.699981, 104.000000, "barra_que_se_llena");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 0.000000, 0.238333);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 500.699981, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 1923088639);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], 0);


	PlayerTextdraws[playerid][ptextdraw_THIRST][0] = CreatePlayerTextDraw(playerid, 556.000000, 112.000000, "hud:radar_datedrink"); //Icono bebida
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 9.000000, 10.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 4);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0], 0);

	PlayerTextdraws[playerid][ptextdraw_THIRST][1] = CreatePlayerTextDraw(playerid, 556.000000, 102.000000, "contorno_negro");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 0.000000, 0.699999);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 606.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1], 0);

	PlayerTextdraws[playerid][ptextdraw_THIRST][2] = CreatePlayerTextDraw(playerid, 557.699981, 104.000000, "barra_atras_llena");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 0.000000, 0.238333);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 603.730102, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 8173202);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2], 0);

	PlayerTextdraws[playerid][ptextdraw_THIRST][3] = CreatePlayerTextDraw(playerid, 557.699981, 104.000000, "barra_que_se_llena");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 0.000000, 0.238333);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 557.699981, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 12124080);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], 0);
	
	
	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0] = CreatePlayerTextDraw(playerid, 320.000000, 298.000000, "l");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 33.579376, 12.750882);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 172);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0], 0);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1] = CreatePlayerTextDraw(playerid, 320.000000, 316.000000, "Personaje");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], -81);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1], 0);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2] = CreatePlayerTextDraw(playerid, 290.000000, 340.000000, "_");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 0.221999, 1.558518);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 0.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], -256); // seleccionado -94);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], 0);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3] = CreatePlayerTextDraw(playerid, 290.000000, 342.000000, "hombre");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 0.221999, 1.147852);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 13.000000, 47.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], -1936945921);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3], true);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4] = CreatePlayerTextDraw(playerid, 350.000000, 340.000000, "_");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 0.221999, 1.558518);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 0.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], -256);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], 0);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5] = CreatePlayerTextDraw(playerid, 350.000000, 342.000000, "mujer");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 0.221999, 1.147852);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 13.000000, 47.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], -1936945921);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5], true);
	
	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6] = CreatePlayerTextDraw(playerid, 320.000000, 365.000000, "ropa");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 0.221999, 1.147852);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 0.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], -1936945921);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6], 0);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7] = CreatePlayerTextDraw(playerid, 362.000000, 365.000000, ">>");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 0.221999, 1.147852);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 13.000000, 23.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], -1936945921);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7], true);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8] = CreatePlayerTextDraw(playerid, 278.000000, 365.000000, "<<");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 0.221999, 1.147852);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 13.000000, 23.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], -1936945921);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8], true);

	PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9] = CreatePlayerTextDraw(playerid, 320.000000, 380.000000, "0/0");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 0.158000, 0.770370);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], -171);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], 0);

	
	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0] = CreatePlayerTextDraw(playerid, 320.000000, 159.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 0.000000, 15.033352);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 0.000000, 240.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 1869574143);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0], 0);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1] = CreatePlayerTextDraw(playerid, 320.000000, 156.000000, "Tienda");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 0.400000, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 0.000000, 240.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], -1633916417);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], 0);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2] = CreatePlayerTextDraw(playerid, 215.000000, 184.000000, "");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 80.000000, 85.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], -19201);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 5);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 0);
	PlayerTextDrawSetPreviewModel(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 18864);
	PlayerTextDrawSetPreviewRot(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2], 344.000000, 0.000000, 109.000000, 1.000000);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3] = CreatePlayerTextDraw(playerid, 217.000000, 186.000000, "");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 76.000000, 81.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], -926365441);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 5);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 0);
	PlayerTextDrawSetPreviewModel(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], Toys_Shop[0][shop_toy_model]);
	PlayerTextDrawSetPreviewRot(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], 344.000000, 0.000000, 109.000000, 1.000000);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4] = CreatePlayerTextDraw(playerid, 311.000000, 207.000000, "Modelo:__~n~Precio:__$");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 0.219000, 1.081481);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], 0);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5] = CreatePlayerTextDraw(playerid, 363.000000, 233.000000, "Comprar");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 0.188333, 1.189333);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 13.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 1855979775); // sin dinero color = -900267777
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], true);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6] = CreatePlayerTextDraw(playerid, 404.000000, 233.000000, ">>");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 0.188333, 1.189333);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 13.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], -1094795521);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6], true);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7] = CreatePlayerTextDraw(playerid, 322.000000, 233.000000, "<<");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 0.188333, 1.189333);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 13.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], -1094795521);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7], true);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8] = CreatePlayerTextDraw(playerid, 255.000000, 271.000000, "0/0");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 0.163666, 0.832593);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], -66);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], 0);

	PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9] = CreatePlayerTextDraw(playerid, 320.000000, 284.000000, "Accesorios");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 0.400000, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 0.000000, 240.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], -1633916417);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9], 0);
	
	
	PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0] = CreatePlayerTextDraw(playerid, 553.000000, 176.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 0.000000, 8.766664);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 0.000000, 108.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][0], 0);

	PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1] = CreatePlayerTextDraw(playerid, 505.000000, 181.000000, "Interior:_0/0");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 0.300000, 1.438221);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], 0);

	PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2] = CreatePlayerTextDraw(playerid, 505.000000, 206.000000, "Anterior");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 0.300000, 1.438221);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 546.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 1684301055);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2], true);

	PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3] = CreatePlayerTextDraw(playerid, 555.000000, 206.000000, "Siguiente");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 0.300000, 1.438221);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 600.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 1684301055);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3], true);

	PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4] = CreatePlayerTextDraw(playerid, 505.000000, 230.000000, "Crear");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 0.300000, 1.438221);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 533.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 1684301055);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4], true);

	PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5] = CreatePlayerTextDraw(playerid, 542.000000, 230.000000, "Cancelar");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 0.300000, 1.438221);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 583.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 1684301055);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5], true);
	
	
	PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0] = CreatePlayerTextDraw(playerid, 552.500000, 344.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 0.000000, 8.133330);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 0.000000, 108.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 150);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0], 0);

	PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1] = CreatePlayerTextDraw(playerid, 552.500000, 344.000000, "Veloc¢metro");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 0.198999, 1.015113);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 0.000000, 108.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], -556990625);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1], 0);

	PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2] = CreatePlayerTextDraw(playerid, 503.000000, 359.000000, "Vehiculo:_");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 0.244666, 1.234962);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], 0);

	PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3] = CreatePlayerTextDraw(playerid, 503.000000, 369.000000, "Gasolina:_0.0_Litros");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 0.244666, 1.234962);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], 0);

	PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4] = CreatePlayerTextDraw(playerid, 503.000000, 390.000000, "Velocidad:_0_Km/h");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 0.244666, 1.234962);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], 0);

	PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5] = CreatePlayerTextDraw(playerid, 503.000000, 401.000000, "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 0.244666, 1.234962);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], 0);
	
	
	PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0] = CreatePlayerTextDraw(playerid, 552.500000, 273.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 0.000000, 6.730331);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 0.000000, 108.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 150);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0], 0);

	PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1] = CreatePlayerTextDraw(playerid, 552.500000, 273.000000, "Tax¢metro");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 0.198999, 1.015112);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 0.000000, 108.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], -556990625);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1], 0);

	PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2] = CreatePlayerTextDraw(playerid, 503.000000, 287.000000, "Tarifa:_0$/Km");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 0.244665, 1.234961);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], 0);

	PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3] = CreatePlayerTextDraw(playerid, 503.000000, 306.000000, "Recorrido:_0.0Km");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 0.244665, 1.234961);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], 0);
	
	PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4] = CreatePlayerTextDraw(playerid, 503.000000, 317.000000, "A_pagar:_0$");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 0.244665, 1.234961);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], 0);
	
	
	PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0] = CreatePlayerTextDraw(playerid, 320.000000, 317.000000, "Cargando_cami¦n...");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 0.255666, 1.176888);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0], 0);

	PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1] = CreatePlayerTextDraw(playerid, 250.000000, 332.000000, "Borde");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 0.000000, 3.766666);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 390.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1], 0);

	PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2] = CreatePlayerTextDraw(playerid, 253.000000, 336.000000, "Abajo");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 0.000000, 2.866667);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 387.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], -594542436);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2], 0);

	PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3] = CreatePlayerTextDraw(playerid, 253.000000, 336.000000, "Sellena");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 0.000000, 2.866667);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 250.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], -594542357);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 0);
	
	
	PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0] = CreatePlayerTextDraw(playerid, 320.000000, 315.000000, "Recogiendo_basura");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 0.298999, 1.483852);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], -161);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0], 0);

	PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1] = CreatePlayerTextDraw(playerid, 320.000000, 333.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 0.000000, 0.766669);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 0.000000, 130.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 2021161125);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1], 0);

	PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2] = CreatePlayerTextDraw(playerid, 320.000000, 333.000000, "box");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 0.000000, 0.766669);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 0.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 1988896255);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 0);

	
	PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0] = CreatePlayerTextDraw(playerid, 260.000000, 350.000000, "Borde");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 0.000000, 2.633335);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 380.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 110);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0], 0);

	PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1] = CreatePlayerTextDraw(playerid, 260.000000, 353.000000, "Lleno");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 0.000000, 1.933335);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 380.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 12216722);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1], 0);

	PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2] = CreatePlayerTextDraw(playerid, 260.000000, 353.000000, "Sellena");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 0.000000, 1.933335);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 260.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 12216831);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 0);

	PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3] = CreatePlayerTextDraw(playerid, 320.000000, 335.000000, "Plantando...");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 0.213333, 1.131259);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], -111);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3], 0);
	
	
	PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0] = CreatePlayerTextDraw(playerid, 604.000000, 126.000000, "]]]]]]");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 0.491999, 1.960886);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 3);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 95);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0], 0);

	PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1] = CreatePlayerTextDraw(playerid, 604.000000, 126.000000, "_");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 0.491999, 1.960886);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 3);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], -336860171);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], 0);
	
	
	
	PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0] = CreatePlayerTextDraw(playerid, 275.000000, 325.000000, "+_Publicar_anuncio");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 0.223666, 1.139557);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 10.000000, 80.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 190);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], true);

	PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1] = CreatePlayerTextDraw(playerid, 365.000000, 325.000000, "-_Mis_anuncios");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 0.223666, 1.139557);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 10.000000, 80.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 190);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], true);

	PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2] = CreatePlayerTextDraw(playerid, 320.000000, 307.000000, "Cerrar");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 0.223666, 1.139557);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 10.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 190);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], true);

	PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3] = CreatePlayerTextDraw(playerid, 380.000000, 307.000000, "Siguiente");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 0.223666, 1.139557);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 10.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 190);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], true);

	PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4] = CreatePlayerTextDraw(playerid, 260.000000, 307.000000, "Anterior");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 0.223666, 1.139557);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 10.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 1);
	PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 190);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], 0);
	PlayerTextDrawSetSelectable(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], true);
	
	PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE] = CreatePlayerTextDraw(playerid, 320.000000, 134.000000, "-_0/0_-");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 0.169000, 0.766222);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], 0);
	
	PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER] = CreatePlayerTextDraw(playerid, 320.000000, 152.000000, "");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 0.214666, 0.936296);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], 0);

	PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO] = CreatePlayerTextDraw(playerid, 321.000000, 181.000000, "");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 0.259333, 1.181036);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], -36);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], 0);
	
	PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP] = CreatePlayerTextDraw(playerid, 320.000000, 350.000000, "Objeto:_0/0~n~Precio:_0$");
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 0.200333, 1.098074);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 2);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], -121);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], 0);
	return 1;
}

DestroyPlayerTextDraws(playerid)
{
	for(new i; i < sizeof(PlayerTextdraws[]); i++)
	{
		if(PlayerTextdraws[playerid][Player_Textdraws_Enum:i] == INVALID_TEXT_DRAW) continue;
		PlayerTextDrawDestroy(playerid, PlayerText:PlayerTextdraws[playerid][Player_Textdraws_Enum:i]);
		PlayerTextdraws[playerid][Player_Textdraws_Enum:i] = INVALID_TEXT_DRAW;
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
		PLAYER_TEMP[playerid][pt_SELECT_TEXTDRAW] = false;
	
		if(PLAYER_TEMP[playerid][pt_REGISTER_SELECTING_SKIN])
		{
			if(CHARACTER_INFO[playerid][ch_SEX] == -1)
			{
				SendClientMessage(playerid, 0x999999AA, "Antes de continuar debes indicar si eres hombre o mujer.");
				SelectTextDrawEx(playerid, 0xe8d08fFF);
				return 1;
			}
			
			TextDrawShowForPlayer(playerid, Textdraws[textdraw_LOAD_SCREEN][0]);
			CHARACTER_INFO[playerid][ch_SKIN] = Intro_Skins[CHARACTER_INFO[playerid][ch_SEX]][PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN]];
			
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][0]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][1]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][6]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9]);
			
			PLAYER_TEMP[playerid][pt_REGISTER_SELECTING_SKIN] = false;
			PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] = 0;
			
			DestroyActor(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR]);
			PLAYER_TEMP[playerid][pt_REGISTER_ACTOR] = INVALID_ACTOR_ID;
			
			/* Spawn */
			CHARACTER_INFO[playerid][ch_CASH] = minrand(5000, 7000);
			CHARACTER_INFO[playerid][ch_POS][0] = New_User_Pos[0];
			CHARACTER_INFO[playerid][ch_POS][1] = New_User_Pos[1];
			CHARACTER_INFO[playerid][ch_POS][2] = New_User_Pos[2];
			CHARACTER_INFO[playerid][ch_ANGLE] = New_User_Pos[3];
			CHARACTER_INFO[playerid][ch_FIGHT_STYLE] = 4;
			CHARACTER_INFO[playerid][ch_HEALTH] = 100.0;
			CHARACTER_INFO[playerid][ch_ARMOUR] = 0.0;
			CHARACTER_INFO[playerid][ch_HUNGRY] = 90.0;
			CHARACTER_INFO[playerid][ch_THIRST] = 95.0;
			
			SetPlayerScore(playerid, ACCOUNT_INFO[playerid][ac_LEVEL]);
			PLAYER_TEMP[playerid][pt_DOUBT_CHANNEL_TIME] = gettime();
			ResetPlayerWeapons(playerid);
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, CHARACTER_INFO[playerid][ch_CASH]);
			SetPlayerFightingStyle(playerid, CHARACTER_INFO[playerid][ch_FIGHT_STYLE]);
			SetPlayerHealthEx(playerid, CHARACTER_INFO[playerid][ch_HEALTH]);
			SetPlayerArmourEx(playerid, CHARACTER_INFO[playerid][ch_ARMOUR]);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerColorEx(playerid, PLAYER_COLOR);
			StopAudioStreamForPlayer(playerid);
			SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], 0, 0, 0, 0, 0, 0);
			SetPlayerInterior(playerid, CHARACTER_INFO[playerid][ch_INTERIOR]);
			
			RegisterNewPlayer(playerid);		
			TogglePlayerSpectatingEx(playerid, false);
			
			
			ClearPlayerChat(playerid);
			TogglePlayerControllable(playerid, false);
			SendClientMessageEx(playerid, -1, "Bienvenido {C4FF66}%s, {FFFFFF}esperemos que disfrutes en {C4FF66}"SERVER_NAME".", PLAYER_TEMP[playerid][pt_RP_NAME]);
			SendClientMessage(playerid, -1, "Si necesitas ayuda puedes utilizar el comando {C4FF66}/ayuda {FFFFFF}o puedes usar el canal de dudas con el comando {C4FF66}/d.");
			
			return 1;
		}
		
		if(PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_ENABLED])
		{
			ExitPlayerPropertyConstructor(playerid);
			return 1;
		}
		
		if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] != -1) // Tiene abierto el menú de ropa
		{
			ClosePlayerClothingMenu(playerid);
			ExitPlayerWardrobe(playerid);
		}
		
		if(PLAYER_TEMP[playerid][pt_TOYS_SHOP]) ClosePlayerToysMenu(playerid);
		
		if(PLAYER_TEMP[playerid][pt_SHOP]) HidePlayerShop(playerid);
		
		if(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_SHOP])
		{
			CancelPlayerTuningShop(playerid);
			ShowDialog(playerid, DIALOG_VOBJECT_MENU);
		}
		return 1;
	}

	if(PLAYER_TEMP[playerid][pt_SHOP] && (PLAYER_TEMP[playerid][pt_SHOP_STATE] == PLAYER_SHOP_STATE_ALL || PLAYER_TEMP[playerid][pt_SHOP_STATE] == PLAYER_SHOP_STATE_MY_ADS))
	{
		for(new i = 0; i != 6; i ++)
		{
			if(clickedid == Textdraws[textdraw_SHOP_ARTICLES_BOX][i])
			{
				if(!PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][i]) return SendClientMessage(playerid, -1, "{999999}Este anuncio ya no está disponible.");
				
				new DBResult:Result, DB_Query[64], bool:found;
				format(DB_Query, sizeof DB_Query, "SELECT `ID` FROM `SHOP` WHERE `ID` = '%d';", PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][i]);
				Result = db_query(Database, DB_Query);

				if(db_num_rows(Result)) found = true;
				db_free_result(Result);
				
				if(!found) return SendClientMessage(playerid, -1, "{999999}Este anuncio ya no está disponible.");
				PLAYER_TEMP[playerid][pt_SHOP_SELECTED_ARTICLE_ID] = PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][i];
				PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_AD;
				
				UpdatePlayerShop(playerid);
				break;
			}
		}
		return 1;
	}
	
	if(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_SHOP])
	{
		if(clickedid == Textdraws[textdraw_SHOP_TUNING][2]) //Comprar
		{
			new slot = GetVehicleFreeObjectSlot(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID]);
			if(!ACCOUNT_INFO[playerid][ac_SU] && slot >= MAX_NU_VOBJECTS)
			{
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d objetos en vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VOBJECTS);
				return 1;
			}
			if(slot == -1)
			{
				SendClientMessage(playerid, -1, "{999999}No hay más espacio para objetos en este vehículo.");
				return 1;
			}
			
			if(Tuning_Shop_Objects[ PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ][tuning_object_PRICE] > CHARACTER_INFO[playerid][ch_CASH])
			{
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar este objeto.", number_format_thousand(Tuning_Shop_Objects[ PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ][tuning_object_PRICE] - CHARACTER_INFO[playerid][ch_CASH]));
				return 1;
			}
			
			GivePlayerCash(playerid, -Tuning_Shop_Objects[ PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ][tuning_object_PRICE]);
			
			VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_VALID] = true;
			VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_TYPE] = VOBJECT_TYPE_OBJECT;
			VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_ID] = 0;
			VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_MODELID] = Tuning_Shop_Objects[ PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ][tuning_object_MODELID];
			format(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_NAME], 32, "%s", Tuning_Shop_Objects[ PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ][tuning_object_NAME]);
			VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][slot][vobject_ATTACHED] = true;
			UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], slot);
			
			RegisterNewVehicleObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], slot);
			CancelPlayerTuningShop(playerid);
			
			SendClientMessage(playerid, -1, "{f4d442}Ajusta el objeto y haz clic en el icono de guardar, si pulsas {aed164}'ESCAPE' {f4d442}no se guardará la configuración.");
			SendClientMessage(playerid, -1, "{f4d442}Mantén presionado {aed164}'W' {f4d442}para mover la cámara.");
			EditVehicleObject(playerid, PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], slot);
			return 1;
		}
		else if(clickedid == Textdraws[textdraw_SHOP_TUNING][3]) //Siguiente
		{
			if(PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] == (sizeof(Tuning_Shop_Objects) - 1)) PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] = 0;			
			else PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ++;
			UpdateTuningShop(playerid);
			return 1;
		}
		else if(clickedid == Textdraws[textdraw_SHOP_TUNING][4]) //Anterior
		{
			if(PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] == 0) PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] = sizeof(Tuning_Shop_Objects) - 1;
			else PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] --;
			UpdateTuningShop(playerid);
			return 1;
		}
		return 1;
	}
	
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_ENABLED])
	{
		if(playertextid == PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][2]) //Anterior
		{
			if(PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] == 0) PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] = sizeof(PROPERTY_INTERIORS) - 1;
			else PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] --;
			UpdatePlayerPropertyContructor(playerid);
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][3]) //Siguiente
		{
			if(PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] == (sizeof(PROPERTY_INTERIORS) - 1)) PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] = 0;			
			else PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ++;
			UpdatePlayerPropertyContructor(playerid);
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][4]) //Crear
		{
			Create_PlayerPropertyConstructo(playerid);
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][5]) //Cancelar
		{
			ExitPlayerPropertyConstructor(playerid);
			return 1;
		}
		return 1;
	}
	
	if(PLAYER_TEMP[playerid][pt_REGISTER_SELECTING_SKIN])
	{
		if(playertextid == PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][3]) // Hombre
		{
			CHARACTER_INFO[playerid][ch_SEX] = SEX_MALE;
			
			PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], -94);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2]);
			PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], -256);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4]);
			
			SetActorSkin(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], Intro_Skins[CHARACTER_INFO[playerid][ch_SEX]][PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN]], PLAYER_TEMP[playerid][pt_REGISTER_ACTOR]);
			ApplyActorAnimation(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], "INT_SHOP", "shop_loop", 4.1, 1, 1, 1, 0, 0);
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][5]) // Mujer
		{
			CHARACTER_INFO[playerid][ch_SEX] = SEX_FEMALE;
			
			PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2], -256);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][2]);
			PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4], -94);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][4]);
			
			SetActorSkin(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], Intro_Skins[CHARACTER_INFO[playerid][ch_SEX]][PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN]], PLAYER_TEMP[playerid][pt_REGISTER_ACTOR]);
			ApplyActorAnimation(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], "INT_SHOP", "shop_loop", 4.1, 1, 1, 1, 0, 0);
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][7]) // Siguiente ropa
		{
			if(CHARACTER_INFO[playerid][ch_SEX] == -1) return SendClientMessage(playerid, -1, "{999999}Primero selecciona tu género para cambiar de ropa.");
			
			if(PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] == (sizeof(Intro_Skins[]) - 1)) PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] = 0;			
			else PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] ++;
			
			new td_str[64];
			format(td_str, sizeof td_str, "%d/%d", PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] + 1, sizeof(Intro_Skins[]));
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], td_str);
			
			SetActorSkin(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], Intro_Skins[CHARACTER_INFO[playerid][ch_SEX]][PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN]], PLAYER_TEMP[playerid][pt_REGISTER_ACTOR]);
			ApplyActorAnimation(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], "INT_SHOP", "shop_loop", 4.1, 1, 1, 1, 0, 0);
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][8]) // Anterior ropa
		{
			if(CHARACTER_INFO[playerid][ch_SEX] == -1) return SendClientMessage(playerid, -1, "{999999}Primero selecciona tu género para cambiar de ropa.");
			
			if(PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] = sizeof(Intro_Skins[]) - 1;
			else PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] --;
			
			new td_str[64];
			format(td_str, sizeof td_str, "%d/%d", PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN] + 1, sizeof(Intro_Skins[]));
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_REGISTER_SKIN][9], td_str);
			
			SetActorSkin(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], Intro_Skins[CHARACTER_INFO[playerid][ch_SEX]][PLAYER_TEMP[playerid][pt_REGISTER_SELECTED_SKIN]], PLAYER_TEMP[playerid][pt_REGISTER_ACTOR]);
			ApplyActorAnimation(PLAYER_TEMP[playerid][pt_REGISTER_ACTOR], "INT_SHOP", "shop_loop", 4.1, 1, 1, 1, 0, 0);
			return 1;
		}
		return 1;
	}
	
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] != GAME_STATE_NORMAL) return 0;
	
	if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] != -1)
	{
		if(playertextid == PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2]) // Comprar
		{
			new clothe_info[3];
			switch(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE])
			{
				case INTERIOR_BINCO:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE: clothe_info = Binco_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
						case SEX_FEMALE: clothe_info = Binco_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
					}
				}
				case INTERIOR_SUBURBAN:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE: clothe_info = Suburban_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
						case SEX_FEMALE: clothe_info = Suburban_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
					}
				}
				case INTERIOR_PROLAPS:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE: clothe_info = Prolaps_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
						case SEX_FEMALE: clothe_info = Prolaps_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
					}
				}
				case INTERIOR_DIDIER_SACHS:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE: clothe_info = Didier_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
						case SEX_FEMALE: clothe_info = Didier_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
					}
				}
				case INTERIOR_VICTIM:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE: clothe_info = Victim_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
						case SEX_FEMALE: clothe_info = Victim_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
					}
				}
				case INTERIOR_ZIP:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE: clothe_info = Zip_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
						case SEX_FEMALE: clothe_info = Zip_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]];
					}
				}
			}
			
			if(CHARACTER_INFO[playerid][ch_CASH] >= clothe_info[1])
			{
				GivePlayerCash(playerid, -clothe_info[1]);
				CHARACTER_INFO[playerid][ch_SKIN] = clothe_info[0];
				
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "Gracias por comprar ropa en {6a98e2}%s {FFFFFF}vuelva pronto.", Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_NAME]);
				
				ClosePlayerClothingMenu(playerid);
				ExitPlayerWardrobe(playerid);
			}
			else
			{
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar esta ropa.", number_format_thousand(clothe_info[1] - CHARACTER_INFO[playerid][ch_CASH]));
			}
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3]) // Siguiente
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			
			switch(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE])
			{
				case INTERIOR_BINCO:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Binco_Shop_Male_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Binco_Shop_Female_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
					}
				}
				case INTERIOR_SUBURBAN:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Suburban_Shop_Male_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Suburban_Shop_Female_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
					}
				}
				case INTERIOR_PROLAPS:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Prolaps_Shop_Male_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Prolaps_Shop_Female_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
					}
				}
				case INTERIOR_DIDIER_SACHS:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Didier_Shop_Male_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Didier_Shop_Female_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
					}
				}
				case INTERIOR_VICTIM:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Victim_Shop_Male_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Victim_Shop_Female_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
					}
				}
				case INTERIOR_ZIP:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Zip_Shop_Male_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == (sizeof(Zip_Shop_Female_Skins) - 1)) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] ++;
						}
					}
				}
			}
			
			UpdateClothingShop(playerid);
			return 1;
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4]) // Anterior
		{
			PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
			
			switch(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE])
			{
				case INTERIOR_BINCO:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Binco_Shop_Male_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Binco_Shop_Female_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
					}
				}
				case INTERIOR_SUBURBAN:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Suburban_Shop_Male_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Suburban_Shop_Female_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
					}
				}
				case INTERIOR_PROLAPS:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Prolaps_Shop_Male_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Prolaps_Shop_Female_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
					}
				}
				case INTERIOR_DIDIER_SACHS:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Didier_Shop_Male_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Didier_Shop_Female_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
					}
				}
				case INTERIOR_VICTIM:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Victim_Shop_Male_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Victim_Shop_Female_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
					}
				}
				case INTERIOR_ZIP:
				{
					switch(CHARACTER_INFO[playerid][ch_SEX])
					{
						case SEX_MALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Zip_Shop_Male_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
						case SEX_FEMALE:
						{
							if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] == 0) PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = sizeof(Zip_Shop_Female_Skins) - 1;
							else PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] --;
						}
					}
				}
			}
			
			UpdateClothingShop(playerid);
			return 1;
		}
	}
	
	if(PLAYER_TEMP[playerid][pt_TOYS_SHOP])
	{
		if(playertextid == PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5]) //Comprar
		{		
			if(CHARACTER_INFO[playerid][ch_CASH] >= Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_price])
			{
				new slot = GetEmptyPlayerToySlot(playerid);
				if(!ACCOUNT_INFO[playerid][ac_SU] && slot >= MAX_NU_TOYS)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d accesorios! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_PLAYER_ATTACHED_OBJECTS);
					return 1;
				}
				if(slot == -1)
				{
					PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, -1, "{CCCCCC}No tienes más espacio para accesorios, elimina alguno si quieres comprar otro.");
					ClosePlayerToysMenu(playerid);
					return 1;
				}
								
				PLAYER_TOYS[playerid][slot][player_toy_VALID] = true;
				format(PLAYER_TOYS[playerid][slot][player_toy_NAME], 24, "%s", Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_model]);
				PLAYER_TOYS[playerid][slot][player_toy_ATTACHED] = false;
				PLAYER_TOYS[playerid][slot][player_toy_MODELID] = Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_modelid];
				PLAYER_TOYS[playerid][slot][player_toy_BONE] = -1; // Sin utilizar aún
				PLAYER_TOYS[playerid][slot][player_toy_OFFSET_X] = 0.0;
				PLAYER_TOYS[playerid][slot][player_toy_OFFSET_Y] = 0.0;
				PLAYER_TOYS[playerid][slot][player_toy_OFFSET_Z] = 0.0;
				PLAYER_TOYS[playerid][slot][player_toy_ROT_X] = 0.0;
				PLAYER_TOYS[playerid][slot][player_toy_ROT_Y] = 0.0;
				PLAYER_TOYS[playerid][slot][player_toy_ROT_Z] = 0.0;
				PLAYER_TOYS[playerid][slot][player_toy_SCALE_X] = 1.0;
				PLAYER_TOYS[playerid][slot][player_toy_SCALE_Y] = 1.0;
				PLAYER_TOYS[playerid][slot][player_toy_SCALE_Z] = 1.0;
				PLAYER_TOYS[playerid][slot][player_toy_COLOR_1] = 0;
				PLAYER_TOYS[playerid][slot][player_toy_COLOR_2] = 0;
				RegisterNewPlayerToy(playerid, slot);
				
				GivePlayerCash(playerid, -Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_price]);
				
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "Gracias por comprar accesorios en {6a98e2}%s {FFFFFF}para ponertelo usa {6a98e2}/accesorios.", ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_NAME]);
				
				ClosePlayerToysMenu(playerid);
			}
			else
			{
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "{CCCCCC}No tienes dinero suficiente, te faltan {FF6633}%s$ {CCCCCC}para poder comprar esta ropa.", number_format_thousand(Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_price] - CHARACTER_INFO[playerid][ch_CASH]));
			}
			
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6]) // Siguiente
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			
			if(PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] == (sizeof(Toys_Shop) - 1)) PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] = 0;
			else PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ++;
			
			UpdateToysShop(playerid);
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7]) // Anterior
		{
			PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
			
			if(PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] == 0) PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] = sizeof(Toys_Shop) - 1;
			else PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] --;
			
			UpdateToysShop(playerid);
		}
		
	}
	
	if(PLAYER_TEMP[playerid][pt_SHOP])
	{
		HidePlayerDialog(playerid);
		if(playertextid == PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0])
		{
			switch(PLAYER_TEMP[playerid][pt_SHOP_STATE])
			{
				case PLAYER_SHOP_STATE_ALL:
				{
					if(ACCOUNT_INFO[playerid][ac_LEVEL] < 2) return SendClientMessage(playerid, -1, "{999999}Debes ser al menos nivel 2 para publicar anuncios.");
					
					new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP]);
					if(interval < 500) return SendClientMessage(playerid, -1, "{999999}Cálmate.");
					PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP] = GetTickCount();
					
					new DBResult:Result, DB_Query[80], total_ads;
					format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `SHOP` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
					Result = db_query(Database, DB_Query);

					if(db_num_rows(Result)) total_ads = db_get_field_int(Result, 0);
					db_free_result(Result);
					
					if(total_ads >= MAX_ADS_PER_PLAYER) return SendClientMessageEx(playerid, -1, "{999999}No puedes publicar más de %d anuncios, borra alguno.", MAX_ADS_PER_PLAYER);
					
					HidePlayerShop(playerid);
					ShowDialog(playerid, DIALOG_SHOP_ADD);
				}
			}
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1])
		{
			switch(PLAYER_TEMP[playerid][pt_SHOP_STATE])
			{
				case PLAYER_SHOP_STATE_ALL:
				{
					PLAYER_TEMP[playerid][pt_SHOP_COME_FROM_MY_ADS] = true;
					PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_MY_ADS;
					UpdatePlayerShop(playerid);
				}
			}
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2])
		{
			switch(PLAYER_TEMP[playerid][pt_SHOP_STATE])
			{
				case PLAYER_SHOP_STATE_ALL: HidePlayerShop(playerid);
				case PLAYER_SHOP_STATE_MY_ADS: // Atras
				{
					new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP]);
					if(interval < 500) return SendClientMessage(playerid, -1, "{999999}Cálmate.");
					PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP] = GetTickCount();
					
					PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					PLAYER_TEMP[playerid][pt_SHOP_COME_FROM_MY_ADS] = false;
					PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_ALL;
					UpdatePlayerShop(playerid);
				}
				case PLAYER_SHOP_STATE_AD: ShowDialog(playerid, DIALOG_SHOP_ARTICLE_MODIFY);
			}
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3])
		{
			switch(PLAYER_TEMP[playerid][pt_SHOP_STATE])
			{
				case PLAYER_SHOP_STATE_ALL: // Siguiente
				{
					new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP]);
					if(interval < 500) return SendClientMessage(playerid, -1, "{999999}Cálmate.");
					PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP] = GetTickCount();
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] >= GetDatabasePages("SELECT COUNT() FROM `SHOP`;", PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] ++;
					
					UpdatePlayerShop(playerid);
				}
				case PLAYER_SHOP_STATE_MY_ADS: // Siguiente
				{
					new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP]);
					if(interval < 500) return SendClientMessage(playerid, -1, "{999999}Cálmate.");
					PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP] = GetTickCount();
					
					new the_query[80];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `SHOP` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] >= GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] ++;
					
					UpdatePlayerShop(playerid);
				}
				case PLAYER_SHOP_STATE_AD: ShowDialog(playerid, DIALOG_SHOP_ARTICLE_REMOVE);
			}
		}
		else if(playertextid == PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4])
		{
			switch(PLAYER_TEMP[playerid][pt_SHOP_STATE])
			{
				case PLAYER_SHOP_STATE_ALL: // Anterior
				{
					new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP]);
					if(interval < 500) return SendClientMessage(playerid, -1, "{999999}Cálmate.");
					PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP] = GetTickCount();
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] <= 0) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = GetDatabasePages("SELECT COUNT() FROM `SHOP`;", PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] --;
					
					UpdatePlayerShop(playerid);
				}
				case PLAYER_SHOP_STATE_MY_ADS: // Anterior
				{
					new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP]);
					if(interval < 500) return SendClientMessage(playerid, -1, "{999999}Cálmate.");
					PLAYER_TEMP[playerid][pt_ANTIFLOOD_SHOP] = GetTickCount();
					
					new the_query[80];
					format(the_query, sizeof the_query, "SELECT COUNT() FROM `SHOP` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
					
					if(PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] <= 0) PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]) - 1;
					else PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] --;
					
					UpdatePlayerShop(playerid);
				}
				case PLAYER_SHOP_STATE_AD: // Atrás
				{
					if(PLAYER_TEMP[playerid][pt_SHOP_COME_FROM_MY_ADS])
					{
						PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_MY_ADS;
						UpdatePlayerShop(playerid);
					}
					else
					{
						PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_ALL;
						UpdatePlayerShop(playerid);
					}
				}
			}
		}
	}
    return 1;
}

UpdateReputationTextDraws(playerid)
{
	new neccessary_rep = ACCOUNT_INFO[playerid][ac_LEVEL] * 3, str[64];
	
	if(ACCOUNT_INFO[playerid][ac_REP] >= neccessary_rep)
	{
		PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], 640.0, 0.0);
		PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1]);
		format(str, 128, "Usa_/comprarnivel_para_subir_al_nivel_%d_por_%d$", ACCOUNT_INFO[playerid][ac_LEVEL] + 1, ACCOUNT_INFO[playerid][ac_LEVEL] * 150);
		PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], str);
	}
	else
	{
		new Float:sizeX = floatmul(floatdiv(640.0, neccessary_rep), ACCOUNT_INFO[playerid][ac_REP]);
		PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1], sizeX, 0.0);
		PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][1]);
		format(str, 128, "Siguiente_nivel:_%d/%d", ACCOUNT_INFO[playerid][ac_REP], neccessary_rep);
		PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_REPUTATION][2], str);
	}
	return 1;
}

forward AddPlayerReputation(playerid);
public AddPlayerReputation(playerid)
{
	new neccessary_rep = ACCOUNT_INFO[playerid][ac_LEVEL] * 3;
	if(ACCOUNT_INFO[playerid][ac_REP] < neccessary_rep)
	{
		ACCOUNT_INFO[playerid][ac_REP] ++;
		UpdateReputationTextDraws(playerid);
		
		ACCOUNT_INFO[playerid][ac_PAYDAY_REP] ++;
		if(ACCOUNT_INFO[playerid][ac_PAYDAY_REP] >= REP_FOR_PAYDAY)
		{
			PlayerPayday(playerid);
			ACCOUNT_INFO[playerid][ac_PAYDAY_REP] = 0;
		}
		
		ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] = TIME_FOR_REP;
		PLAYER_TEMP[playerid][pt_TIME_PASSED_LAST_REP] = gettime() * 1000;

		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][2]);
		PLAYER_TEMP[playerid][pt_TIMERS][2] = SetTimerEx("AddPlayerReputation", ACCOUNT_INFO[playerid][ac_TIME_FOR_REP], false, "i", playerid);
		return 1;
	}
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][2]);
	return 0;
}

CMD:comprarnivel(playerid, params[])
{
	new neccessary_rep = ACCOUNT_INFO[playerid][ac_LEVEL] * 3;
	if(ACCOUNT_INFO[playerid][ac_REP] < neccessary_rep) return SendClientMessage(playerid, 0x999999AA, "Aún no tienes la suficiente reputación para subir de nivel.");
	if(ACCOUNT_INFO[playerid][ac_LEVEL] * 150 > CHARACTER_INFO[playerid][ch_CASH]) return SendClientMessageEx(playerid, 0x999999AA, "No tienes suficiente dinero para subir de nivel, te faltan {FF6633}%s$ {CCCCCC}para poder comprarlo.", number_format_thousand((ACCOUNT_INFO[playerid][ac_LEVEL] * 150) - CHARACTER_INFO[playerid][ch_CASH]));
	GivePlayerCash(playerid, -(ACCOUNT_INFO[playerid][ac_LEVEL] * 150));
	
	ACCOUNT_INFO[playerid][ac_REP] = 1;
	ACCOUNT_INFO[playerid][ac_LEVEL] ++;
	UpdateReputationTextDraws(playerid);
	SetPlayerSkillLevels(playerid);
	if(PLAYER_WORKS[playerid][WORK_POLICE]) SetPoliceRank(playerid);
	
	SendClientMessageEx(playerid, -1, "{C4FF66}¡Felicidades! {FFFFFF}Has subido al nivel %d.", ACCOUNT_INFO[playerid][ac_LEVEL]);
	SetPlayerScore(playerid, ACCOUNT_INFO[playerid][ac_LEVEL]);
	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
	
	ACCOUNT_INFO[playerid][ac_TIME_FOR_REP] = TIME_FOR_REP;
	PLAYER_TEMP[playerid][pt_TIME_PASSED_LAST_REP] = gettime() * 1000;
	
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][2]);
	PLAYER_TEMP[playerid][pt_TIMERS][2] = SetTimerEx("AddPlayerReputation", ACCOUNT_INFO[playerid][ac_TIME_FOR_REP], false, "i", playerid);
	return 1;
}

stock SetPlayerCash(playerid, ammount)
{
	CHARACTER_INFO[playerid][ch_CASH] = ammount;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, CHARACTER_INFO[playerid][ch_CASH]);
	return 1;
}

GivePlayerCash(playerid, ammount)
{
	CHARACTER_INFO[playerid][ch_CASH] += ammount;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, CHARACTER_INFO[playerid][ch_CASH]);
	return 1;
}

LoadEnterExits()
{
	new total_enterexits, label_str[256], info[3];
		
	for(new i = 0; i != sizeof ENTER_EXIT; i ++)
	{
		ENTER_EXIT[total_enterexits][ee_ID] = total_enterexits + 1;

		if(ENTER_EXIT[total_enterexits][ee_TIME_OPEN] == 0 && ENTER_EXIT[total_enterexits][ee_TIME_CLOSE] == 0) format(label_str, sizeof label_str, "{C4FF66}%s\n\n{FFFFFF}Escribe {C4FF66}/entrar {FFFFFF}para entrar", ENTER_EXIT[total_enterexits][ee_NAME]);
		else format(label_str, sizeof label_str, "{C4FF66}%s\n{FFFFFF}Horario: {C4FF66}%02d:00 - %02d:00\n\n{FFFFFF}Escribe {C4FF66}/entrar {FFFFFF}para entrar", ENTER_EXIT[total_enterexits][ee_NAME], ENTER_EXIT[total_enterexits][ee_TIME_OPEN], ENTER_EXIT[total_enterexits][ee_TIME_CLOSE]);
		
		ENTER_EXIT[total_enterexits][ee_INT_LABEL_ID] = CreateDynamic3DTextLabel("{FF6633}SALIDA\n{FFFFFF}Escribe {C4FF66}/salir {FFFFFF}para salir", 0xFFFFFFFF, ENTER_EXIT[total_enterexits][ee_INT_X], ENTER_EXIT[total_enterexits][ee_INT_Y], ENTER_EXIT[total_enterexits][ee_INT_Z] + 0.25, 10.0, .testlos = true, .worldid = ENTER_EXIT[total_enterexits][ee_INT_WORLD], .interiorid = ENTER_EXIT[total_enterexits][ee_INT_INTERIOR]);
		ENTER_EXIT[total_enterexits][ee_EXT_LABEL_ID] = CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, ENTER_EXIT[total_enterexits][ee_EXT_X], ENTER_EXIT[total_enterexits][ee_EXT_Y], ENTER_EXIT[total_enterexits][ee_EXT_Z] + 0.25, 10.0, .testlos = true, .worldid = ENTER_EXIT[total_enterexits][ee_EXT_WORLD], .interiorid = ENTER_EXIT[total_enterexits][ee_EXT_INTERIOR]);
		
		if(ENTER_EXIT[total_enterexits][ee_INT_MAPICON] != -1) ENTER_EXIT[total_enterexits][ee_INT_MAPICON_ID] = CreateDynamicMapIcon(ENTER_EXIT[total_enterexits][ee_INT_X], ENTER_EXIT[total_enterexits][ee_INT_Y], ENTER_EXIT[total_enterexits][ee_INT_Z], ENTER_EXIT[total_enterexits][ee_INT_MAPICON], -1, ENTER_EXIT[total_enterexits][ee_INT_WORLD], ENTER_EXIT[total_enterexits][ee_INT_INTERIOR]);
		if(ENTER_EXIT[total_enterexits][ee_EXT_MAPICON] != -1) ENTER_EXIT[total_enterexits][ee_EXT_MAPICON_ID] = CreateDynamicMapIcon(ENTER_EXIT[total_enterexits][ee_EXT_X], ENTER_EXIT[total_enterexits][ee_EXT_Y], ENTER_EXIT[total_enterexits][ee_EXT_Z], ENTER_EXIT[total_enterexits][ee_EXT_MAPICON], -1, ENTER_EXIT[total_enterexits][ee_EXT_WORLD], ENTER_EXIT[total_enterexits][ee_EXT_INTERIOR]);
		
		ENTER_EXIT[total_enterexits][ee_INT_PICKUP_ID] = CreateDynamicPickup(0, 1, ENTER_EXIT[total_enterexits][ee_INT_X], ENTER_EXIT[total_enterexits][ee_INT_Y], ENTER_EXIT[total_enterexits][ee_INT_Z], ENTER_EXIT[total_enterexits][ee_INT_WORLD], ENTER_EXIT[total_enterexits][ee_INT_INTERIOR]);
		ENTER_EXIT[total_enterexits][ee_EXT_PICKUP_ID] = CreateDynamicPickup(1318, 1, ENTER_EXIT[total_enterexits][ee_EXT_X], ENTER_EXIT[total_enterexits][ee_EXT_Y], ENTER_EXIT[total_enterexits][ee_EXT_Z] + 0.10, ENTER_EXIT[total_enterexits][ee_EXT_WORLD], ENTER_EXIT[total_enterexits][ee_EXT_INTERIOR]);
		
		info[0] = PICKUP_TYPE_ENTER_EXIT;
		info[1] = total_enterexits; // Index
		info[2] = 1; // Pickup Interior
		Streamer_SetArrayData(STREAMER_TYPE_PICKUP, ENTER_EXIT[total_enterexits][ee_INT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
		
		info[0] = PICKUP_TYPE_ENTER_EXIT;
		info[1] = total_enterexits; // Index
		info[2] = 2; // Pickup Exterior
		Streamer_SetArrayData(STREAMER_TYPE_PICKUP, ENTER_EXIT[total_enterexits][ee_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
		CreateInteriorActor(ENTER_EXIT[total_enterexits][ee_INTERIOR_TYPE], ENTER_EXIT[total_enterexits][ee_INT_WORLD], ENTER_EXIT[total_enterexits][ee_INT_INTERIOR]);
		
		total_enterexits ++;
	}
	return 1;
}

LoadProperties()
{
	new DBResult:Result;
	Result = db_query(Database, "SELECT `PROPERTY`.*, `PROPERTY_INFO`.* FROM `PROPERTY`, `PROPERTY_INFO` WHERE `PROPERTY_INFO`.ID_PROPERTY = `PROPERTY`.ID;");
	
	new total_houses, total_houses_free;
	for(new i = 0; i < db_num_rows(Result); i ++)
	{
		if(total_houses >= MAX_PROPERTIES)
		{
			printf("---> Límite superado en array 'PROPERTY_INFO' al intentar cargar de la base de datos.");
			break;
		}
		
		PROPERTY_INFO[total_houses][property_VALID] = true;
		PROPERTY_INFO[total_houses][property_ID] = db_get_field_assoc_int(Result, "ID");
		
		PROPERTY_INFO[total_houses][property_EXT_X] = db_get_field_assoc_float(Result, "EXT_X");
		PROPERTY_INFO[total_houses][property_EXT_Y] = db_get_field_assoc_float(Result, "EXT_Y");
		PROPERTY_INFO[total_houses][property_EXT_Z] = db_get_field_assoc_float(Result, "EXT_Z");
		PROPERTY_INFO[total_houses][property_EXT_ANGLE] = db_get_field_assoc_float(Result, "EXT_ANGLE");
		PROPERTY_INFO[total_houses][property_EXT_INTERIOR] = db_get_field_assoc_int(Result, "EXT_INTERIOR");
		PROPERTY_INFO[total_houses][property_EXT_FREEZE] = db_get_field_assoc_int(Result, "EXT_FREEZE");
		PROPERTY_INFO[total_houses][property_ID_INTERIOR] = db_get_field_assoc_int(Result, "ID_INTERIOR");
		
		PROPERTY_INFO[total_houses][property_PRICE] = db_get_field_assoc_int(Result, "PRICE");
		PROPERTY_INFO[total_houses][property_PRICE_BASE] = PROPERTY_INFO[total_houses][property_PRICE];
		PROPERTY_INFO[total_houses][property_LEVEL] = db_get_field_assoc_int(Result, "LEVEL");
		PROPERTY_INFO[total_houses][property_EXTRA] = db_get_field_assoc_int(Result, "EXTRA"); 
		
		
		new DBResult:Result_info_owner, DB_Query[600], owner[24], info[3], label_str[256], pickup_modelid;
		format(DB_Query, sizeof DB_Query, "SELECT `CUENTA`.`NAME`, `PROPERTY_OWNER`.`ID_USER`, `PROPERTY_OWNER`.`PROPERTY_NAME` FROM `CUENTA`, `PROPERTY_OWNER` WHERE `PROPERTY_OWNER`.`ID_PROPERTY` = '%d' AND `CUENTA`.`ID` = `PROPERTY_OWNER`.`ID_USER`;", PROPERTY_INFO[total_houses][property_ID]);
		Result_info_owner = db_query(Database, DB_Query);
	
		if(db_num_rows(Result_info_owner))
		{
			pickup_modelid = 0;
			PROPERTY_INFO[total_houses][property_SOLD] = true;
			PROPERTY_INFO[total_houses][property_CREW] = false;
			db_get_field_assoc(Result_info_owner, "NAME", owner, 24);
			PROPERTY_INFO[total_houses][property_OWNER_ID] = db_get_field_assoc_int(Result_info_owner, "ID_USER");
			PROPERTY_INFO[total_houses][property_CREW_ID] = 0;
			db_get_field_assoc(Result_info_owner, "PROPERTY_NAME", PROPERTY_INFO[total_houses][property_NAME], 24);

			format
			(
				label_str, 
				sizeof label_str, 
				"\
					Propiedad {C4FF66}#%d\n\n\
					{FFFFFF}Propietario: {C4FF66}%s\n\
					{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
				", PROPERTY_INFO[total_houses][property_ID], owner
			);
		}
		else
		{
			new DBResult:Result_info_crew, crew_name[24];
			format(DB_Query, sizeof DB_Query, "SELECT `CREW`.`ID`, `CREW`.`NAME` FROM `PROPERTY_TERRITORY`, `CREW` WHERE `PROPERTY_TERRITORY`.`ID_PROPERTY` = '%d' AND `CREW`.`ID` = (SELECT `CREW_TERRITORIES`.`ID_CREW` FROM `CREW_TERRITORIES` WHERE `CREW_TERRITORIES`.`ID_TERRITORY` = `PROPERTY_TERRITORY`.`ID_TERRITORY`);", PROPERTY_INFO[total_houses][property_ID]);
			Result_info_crew = db_query(Database, DB_Query);
			
			if(db_num_rows(Result_info_crew))
			{
				pickup_modelid = 0;
				PROPERTY_INFO[total_houses][property_SOLD] = true;
				PROPERTY_INFO[total_houses][property_CREW] = true;
				db_get_field_assoc(Result_info_crew, "NAME", crew_name, 24);
				PROPERTY_INFO[total_houses][property_CREW_ID] = db_get_field_assoc_int(Result_info_crew, "ID");
				PROPERTY_INFO[total_houses][property_OWNER_ID] = 0;
				format(PROPERTY_INFO[total_houses][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[total_houses][property_ID]);

				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d\n\n\
						{FFFFFF}Banda: {C4FF66}%s\n\
						{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
					", PROPERTY_INFO[total_houses][property_ID], crew_name
				);
			}
			else
			{
				pickup_modelid = 1273;
				PROPERTY_INFO[total_houses][property_SOLD] = false;
				PROPERTY_INFO[total_houses][property_OWNER_ID] = 0;
				format(PROPERTY_INFO[total_houses][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[total_houses][property_ID]);
				
				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
						Interior: {C4FF66}%d\n\
						{FFFFFF}Precio: {C4FF66}%s$\n\
						{FFFFFF}Nivel necesario: {C4FF66}%d\n\
						{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
					", PROPERTY_INFO[total_houses][property_ID], PROPERTY_INFO[total_houses][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[total_houses][property_PRICE]), PROPERTY_INFO[total_houses][property_LEVEL]
				);
				total_houses_free ++;
			}
			db_free_result(Result_info_crew);
		}
		db_free_result(Result_info_owner);
		
		
		PROPERTY_INFO[total_houses][property_EXT_LABEL_ID] = CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, PROPERTY_INFO[total_houses][property_EXT_X], PROPERTY_INFO[total_houses][property_EXT_Y], PROPERTY_INFO[total_houses][property_EXT_Z] + 0.25, 5.0, .testlos = true, .worldid = 0, .interiorid = PROPERTY_INFO[total_houses][property_EXT_INTERIOR]);
		PROPERTY_INFO[total_houses][property_INT_LABEL_ID] = CreateDynamic3DTextLabel("Escribe {C4FF66}/salir {FFFFFF}para salir\nEscribe {457ad1}/casa {FFFFFF}para más opciones", 0xFFFFFFFF, PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_X], PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_Y], PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_Z] + 0.25, 3.0, .testlos = true, .worldid = PROPERTY_INFO[total_houses][property_ID], .interiorid = PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_INTERIOR]);
		
		PROPERTY_INFO[total_houses][property_EXT_PICKUP_ID] = CreateDynamicPickup(pickup_modelid, 1, PROPERTY_INFO[total_houses][property_EXT_X], PROPERTY_INFO[total_houses][property_EXT_Y], PROPERTY_INFO[total_houses][property_EXT_Z], 0, PROPERTY_INFO[total_houses][property_EXT_INTERIOR]);
		PROPERTY_INFO[total_houses][property_INT_PICKUP_ID] = CreateDynamicPickup(0, 1, PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_X], PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_Y], PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_Z], PROPERTY_INFO[total_houses][property_ID], PROPERTY_INTERIORS[ PROPERTY_INFO[total_houses][property_ID_INTERIOR] ][property_INT_INTERIOR]);
		
		
		info[0] = PICKUP_TYPE_PROPERTY;
		info[1] = total_houses; // Index
		info[2] = 1; // Pickup Interior
		Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[total_houses][property_INT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
		
		info[0] = PICKUP_TYPE_PROPERTY;
		info[1] = total_houses; // Index
		info[2] = 2; // Pickup Exterior
		Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[total_houses][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
		
		TOTAL_PROPERTIES_LOADED ++;
		total_houses ++;
		db_next_row(Result);
	}
	db_free_result(Result);

	printf("---> Se han cargado %d propiedades, %d libres.", total_houses, total_houses_free);
	return 1;
}

GetOwnerIntProperty(id_house)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(CHARACTER_INFO[i][ch_STATE] == ROLEPLAY_STATE_OWN_PROPERTY)
			{
				if(CHARACTER_INFO[i][ch_INTERIOR_EXTRA] == id_house)
				{
					return i;
				}
			}
		}
	}
	return -1;
}

LoadCrews()
{
	new DBResult:Result, DB_Query[128];
	Result = db_query(Database, "SELECT * FROM `CREW`;");

	new total_crews;
	for(new i = 0; i < db_num_rows(Result); i ++)
	{
		if(total_crews >= MAX_CREWS)
		{
			printf("---> Límite superado en array 'CREW_INFO' al intentar cargar de la base de datos.");
			break;
		}
		
		CREW_INFO[total_crews][crew_VALID] = true;
		CREW_INFO[total_crews][crew_ID] = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", CREW_INFO[total_crews][crew_NAME], 32);
		CREW_INFO[total_crews][crew_COLOR] = db_get_field_assoc_int(Result, "COLOR");
		CREW_INFO[total_crews][crew_ONLINE_MEMBERS] = 0;
		
		new DBResult:Result_members;
		format(DB_Query, sizeof DB_Query, "SELECT COUNT() FROM `PLAYER_CREW` WHERE `ID_CREW` = '%d';", CREW_INFO[total_crews][crew_ID]);
		Result_members = db_query(Database, DB_Query);

		if(db_num_rows(Result_members)) CREW_INFO[total_crews][crew_MEMBERS] = db_get_field_int(Result_members, 0);
		db_free_result(Result_members);
		
		
		new DBResult:Result_ranks;
		format(DB_Query, sizeof DB_Query, "SELECT * FROM `CREW_RANKS` WHERE `ID_CREW` = '%d' LIMIT %d;", CREW_INFO[total_crews][crew_ID], MAX_CREW_RANKS);
		Result_ranks = db_query(Database, DB_Query);
		for(new x = 0; x < db_num_rows(Result_ranks); x ++)
		{
			new pos = db_get_field_assoc_int(Result_ranks, "RANK_POS");
			if(pos < 0 || pos > MAX_CREW_RANKS) continue;
			
			CREW_RANK_INFO[total_crews][pos][crew_rank_VALID] = true;
			CREW_RANK_INFO[total_crews][pos][crew_rank_ID] = db_get_field_assoc_int(Result_ranks, "ID");
			db_get_field_assoc(Result_ranks, "RANK_NAME", CREW_RANK_INFO[total_crews][pos][crew_rank_NAME], 32);
			
			new DBResult:Result_ranks_permissions;
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `RANK_PERMISSIONS` WHERE `ID_RANK` = '%d' LIMIT %d;", CREW_RANK_INFO[total_crews][pos][crew_rank_ID], CREW_RANK_SIZE);
			Result_ranks_permissions = db_query(Database, DB_Query);
			for(new z = 0; z < db_num_rows(Result_ranks_permissions); z ++)
			{
				new permission = db_get_field_assoc_int(Result_ranks_permissions, "PERMISSION");
				if(permission < 0 || permission > CREW_RANK_SIZE) continue;
				
				CREW_RANK_INFO[total_crews][pos][crew_rank_PERMISSION][permission] = db_get_field_assoc_int(Result_ranks_permissions, "SET");
				db_next_row(Result_ranks_permissions);
			}
			db_free_result(Result_ranks_permissions);
			db_next_row(Result_ranks);
		}
		db_free_result(Result_ranks);
		
		total_crews ++;
		db_next_row(Result);
	}
	
	db_free_result(Result);
	
	
	/*
	for(new i = 0; i != total_crews; i ++)
	{
		if(!CREW_INFO[i][crew_VALID]) continue;
		print("\n\n");
		printf("---- Index: %d, Crew ID: %d, Crew Name: %s, Crew Color: %d ----", i, CREW_INFO[i][crew_ID], CREW_INFO[i][crew_NAME], CREW_INFO[i][crew_COLOR]);
		
		for(new x = 0; x != MAX_CREW_RANKS; x ++)
		{
			if(!CREW_RANK_INFO[i][x][crew_rank_VALID]) continue;
			printf("\tRank Pos: %d, Rank ID: %d, Rank Name: %s", x, CREW_RANK_INFO[i][x][crew_rank_ID], CREW_RANK_INFO[i][x][crew_rank_NAME]);
			
			for(new z = 0; z != CREW_RANK_SIZE; z ++)
			{
				printf("\t\tPermiso: %d, Set: %d", z, CREW_RANK_INFO[i][x][crew_rank_PERMISSION][z]);
			}
		}
	}
	*/
	return 1;
}


LoadGangZones()
{
	new DBResult:Result, DB_Query[320];
	format(DB_Query, sizeof DB_Query, "SELECT * FROM `SA_ZONES` WHERE `GANG_ZONE` = '1' LIMIT %d;", MAX_TERRITORIES);
	Result = db_query(Database, DB_Query);

	new total_territories;
	for(new i = 0; i < db_num_rows(Result); i ++)
	{
		if(total_territories >= MAX_TERRITORIES)
		{
			printf("---> Límite superado en array 'TERRITORIES' al intentar cargar de la base de datos.");
			break;
		}
		
		TERRITORIES[total_territories][territory_VALID] = true;
		TERRITORIES[total_territories][territory_ID] = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", TERRITORIES[total_territories][territory_NAME], 32);
		TERRITORIES[total_territories][territory_MIN_X] = db_get_field_assoc_float(Result, "MIN_X");
		TERRITORIES[total_territories][territory_MIN_Y] = db_get_field_assoc_float(Result, "MIN_Y");
		TERRITORIES[total_territories][territory_MIN_Z] = db_get_field_assoc_float(Result, "MIN_Z");
		TERRITORIES[total_territories][territory_MAX_X] = db_get_field_assoc_float(Result, "MAX_X");
		TERRITORIES[total_territories][territory_MAX_Y] = db_get_field_assoc_float(Result, "MAX_Y");
		TERRITORIES[total_territories][territory_MAX_Z] = db_get_field_assoc_float(Result, "MAX_Z");
		TERRITORIES[total_territories][territory_WAR] = false;
		TERRITORIES[total_territories][territory_ATTACKER_CREW_INDEX] = 0;
		
		new DBResult:Result_territory_crew;
		format(DB_Query, sizeof DB_Query, "SELECT `CREW_TERRITORIES`.`ID_CREW`, `CREW`.`COLOR` FROM `CREW_TERRITORIES`, `CREW` WHERE `ID_TERRITORY` = '%d' AND `CREW`.`ID` = `CREW_TERRITORIES`.`ID_CREW`;", TERRITORIES[total_territories][territory_ID]);
		Result_territory_crew = db_query(Database, DB_Query);
		if(db_num_rows(Result_territory_crew))
		{
			TERRITORIES[total_territories][territory_OCCUPIED] = true;
			TERRITORIES[total_territories][territory_CREW_ID] = db_get_field_assoc_int(Result_territory_crew, "ID_CREW");
			new gang_color = db_get_field_assoc_int(Result_territory_crew, "COLOR");
			
			new r, g, b, a;
			HexToRGBA(gang_color, r, g, b, a);
			TERRITORIES[total_territories][territory_COLOR] = RGBAToHex(r, g, b, 135);
			
			for(new x = 0; x != MAX_CREWS; x ++)
			{
				if(!CREW_INFO[x][crew_VALID]) continue;
				
				if(CREW_INFO[x][crew_ID] == TERRITORIES[total_territories][territory_CREW_ID])
				{
					TERRITORIES[total_territories][territory_CREW_INDEX] = x;
					break;
				}
			}
		}
		else
		{
			TERRITORIES[total_territories][territory_OCCUPIED] = false;
			TERRITORIES[total_territories][territory_CREW_ID] = 0;
			TERRITORIES[total_territories][territory_CREW_INDEX] = 0;
			TERRITORIES[total_territories][territory_COLOR] = 0xCCCCCC55;
		}
		db_free_result(Result_territory_crew);
		
		
		TERRITORIES[total_territories][territory_AREA] = 	CreateDynamicCube
															(
																TERRITORIES[total_territories][territory_MIN_X],
																TERRITORIES[total_territories][territory_MIN_Y],
																TERRITORIES[total_territories][territory_MIN_Z],
																TERRITORIES[total_territories][territory_MAX_X],
																TERRITORIES[total_territories][territory_MAX_Y],
																TERRITORIES[total_territories][territory_MAX_Z],
																0, 0
															);
															
		new info[2];
		info[0] = AREA_TYPE_GANGZONE;
		info[1] = total_territories;
		Streamer_SetArrayData(STREAMER_TYPE_AREA, TERRITORIES[total_territories][territory_AREA], E_STREAMER_EXTRA_ID, info);
		
														
		TERRITORIES[total_territories][territory_GANG_ZONE] = 	GangZoneCreate
																(
																	TERRITORIES[total_territories][territory_MIN_X],
																	TERRITORIES[total_territories][territory_MIN_Y],
																	TERRITORIES[total_territories][territory_MAX_X],
																	TERRITORIES[total_territories][territory_MAX_Y]
																);
		
		TERRITORIES[total_territories][territory_TEXTDRAW] = TextDrawCreate(320.000000, 406.000000, "Conquista:_0");
		TextDrawLetterSize(TERRITORIES[total_territories][territory_TEXTDRAW], 0.286000, 1.276444);
		TextDrawAlignment(TERRITORIES[total_territories][territory_TEXTDRAW], 2);
		TextDrawColor(TERRITORIES[total_territories][territory_TEXTDRAW], -76);
		TextDrawSetShadow(TERRITORIES[total_territories][territory_TEXTDRAW], 0);
		TextDrawSetOutline(TERRITORIES[total_territories][territory_TEXTDRAW], 0);
		TextDrawBackgroundColor(TERRITORIES[total_territories][territory_TEXTDRAW], 255);
		TextDrawFont(TERRITORIES[total_territories][territory_TEXTDRAW], 1);
		TextDrawSetProportional(TERRITORIES[total_territories][territory_TEXTDRAW], 1);
		TextDrawSetShadow(TERRITORIES[total_territories][territory_TEXTDRAW], 0);
		
		total_territories ++;
		db_next_row(Result);
	}
	
	db_free_result(Result);
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	PLAYER_TEMP[playerid][pt_LAST_PICKUP_ID] = pickupid;
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] != GAME_STATE_NORMAL) return 1;
	
	if(newkeys & KEY_FIRE)
	{
		if(ACCOUNT_INFO[playerid][ac_LEVEL] == 1) ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, false, false, false, false, 0);
		return 1;
	}
	
	if(newkeys & KEY_CROUCH)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				for(new i = 0; i != sizeof San_Andreas_Barriers; i ++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 15.0, San_Andreas_Barriers[i][barrier_X], San_Andreas_Barriers[i][barrier_Y], San_Andreas_Barriers[i][barrier_Z]))
					{
						if(GetPlayerInterior(playerid) == San_Andreas_Barriers[i][barrier_INTERIOR] && GetPlayerVirtualWorld(playerid) == San_Andreas_Barriers[i][barrier_WORLD])
						{
							if(San_Andreas_Barriers[i][barrier_VEHICLE_TYPE] == VEHICLE_TYPE_WORK)
							{
								if(!PLAYER_WORKS[playerid][WORK_POLICE] && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE)
								{
									if(!PLAYER_WORKS[playerid][ San_Andreas_Barriers[i][barrier_VEHICLE_TYPE_IN] ]) break;
								}
							}
							if(IsDynamicObjectMoving(San_Andreas_Barriers[i][barrier_OBJECT_ID]) && !San_Andreas_Barriers[i][barrier_CLOSING]) break;
							
							KillTimer(San_Andreas_Barriers[i][barrier_TIMER]);
							San_Andreas_Barriers[i][barrier_TIMER] = SetTimerEx("CloseBarrier", 5000, false, "i", i);
							MoveDynamicObject(San_Andreas_Barriers[i][barrier_OBJECT_ID], San_Andreas_Barriers[i][barrier_X], San_Andreas_Barriers[i][barrier_Y], San_Andreas_Barriers[i][barrier_Z] + 0.72967 + 0.01, 0.0065, 0.0, 0.0, San_Andreas_Barriers[i][barrier_ROTATION]);
							San_Andreas_Barriers[i][barrier_CLOSING] = false;
							break;
						}
						else break;
					}
				}
				
				
				if(PLAYER_WORKS[playerid][WORK_POLICE])
				{
					if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
					{
						for(new i = 0; i != sizeof POLICE_GARAGE_DOORS; i ++)
						{
							if(IsPlayerInRangeOfPoint(playerid, 20.0, POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_X], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_Y], POLICE_GARAGE_DOORS[i][police_gdoor_CLOSED_Z]))
							{
								if(IsDynamicObjectMoving(POLICE_GARAGE_DOORS[i][police_gdoor_OBJECT_ID]) && !POLICE_GARAGE_DOORS[i][police_gdoor_CLOSING]) break;
								
								KillTimer(POLICE_GARAGE_DOORS[i][police_gdoor_TIMER]);
								POLICE_GARAGE_DOORS[i][police_gdoor_TIMER] = SetTimerEx("ClosePoliceGarageDoor", 5000, false, "i", i);
								MoveDynamicObject(POLICE_GARAGE_DOORS[i][police_gdoor_OBJECT_ID], POLICE_GARAGE_DOORS[i][police_gdoor_OPENED_X], POLICE_GARAGE_DOORS[i][police_gdoor_OPENED_Y], POLICE_GARAGE_DOORS[i][police_gdoor_OPENED_Z], POLICE_GARAGE_DOORS[i][police_gdoor_MOVE_SPEED], POLICE_GARAGE_DOORS[i][police_gdoor_OPENED_RX], POLICE_GARAGE_DOORS[i][police_gdoor_OPENED_RY], POLICE_GARAGE_DOORS[i][police_gdoor_OPENED_RZ]);
								POLICE_GARAGE_DOORS[i][police_gdoor_CLOSING] = false;
								break;
							}
						}
					}
				}	
			}
		}
		return 1;
	}
	else if(newkeys & KEY_SECONDARY_ATTACK)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			if(PLAYER_WORKS[playerid][WORK_POLICE])
			{
				for(new i = 0; i != sizeof POLICE_DOORS; i ++)
				{
					if(GetPlayerInterior(playerid) != POLICE_DOORS[i][police_door_INTERIOR] || GetPlayerVirtualWorld(playerid) != POLICE_DOORS[i][police_door_WORLD]) continue;
					if(IsDynamicObjectMoving(POLICE_DOORS[i][police_door_OBJECT_ID]) || !POLICE_DOORS[i][police_door_CLOSED]) continue;
					
					new Float:pos[4];
					
					pos[0] = POLICE_DOORS[i][police_door_X] + (1.0 * floatsin(-POLICE_DOORS[i][police_door_RZ], degrees));
					pos[1] = POLICE_DOORS[i][police_door_Y] + (1.0 * floatcos(-POLICE_DOORS[i][police_door_RZ], degrees));
					pos[2] = POLICE_DOORS[i][police_door_X] + (-1.0 * floatsin(-POLICE_DOORS[i][police_door_RZ], degrees));
					pos[3] = POLICE_DOORS[i][police_door_Y] + (-1.0 * floatcos(-POLICE_DOORS[i][police_door_RZ], degrees));
					
					if(IsPlayerInRangeOfPoint(playerid, 1.8, pos[0], pos[1], POLICE_DOORS[i][police_door_Z]))
					{
						KillTimer(POLICE_DOORS[i][police_door_TIMER]);
						POLICE_DOORS[i][police_door_TIMER] = SetTimerEx("ClosePoliceDoor", 3000, false, "i", i);
						MoveDynamicObject(POLICE_DOORS[i][police_door_OBJECT_ID], POLICE_DOORS[i][police_door_X], POLICE_DOORS[i][police_door_Y], POLICE_DOORS[i][police_door_Z] + 0.01, 0.0125, 0.0, 0.0, POLICE_DOORS[i][police_door_RZ] - 85.0);
						POLICE_DOORS[i][police_door_CLOSED] = false;
						break;
					}
					else if(IsPlayerInRangeOfPoint(playerid, 1.8, pos[2], pos[3], POLICE_DOORS[i][police_door_Z]))
					{
						KillTimer(POLICE_DOORS[i][police_door_TIMER]);
						POLICE_DOORS[i][police_door_TIMER] = SetTimerEx("ClosePoliceDoor", 3000, false, "i", i);
						MoveDynamicObject(POLICE_DOORS[i][police_door_OBJECT_ID], POLICE_DOORS[i][police_door_X], POLICE_DOORS[i][police_door_Y], POLICE_DOORS[i][police_door_Z] + 0.01, 0.0125, 0.0, 0.0, POLICE_DOORS[i][police_door_RZ] + 85.0);
						POLICE_DOORS[i][police_door_CLOSED] = false;
						break;
					}
				}
			}
		}
		return 1;
	}
	else if(newkeys & KEY_NO)
	{
		if(IsPlayerInDynamicArea(playerid, Lumberjack_Area))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				if(PLAYER_TEMP[playerid][pt_WORKING_IN] == WORK_LUMBERJACK)
				{
					if(PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] == -1)
					{
						if(PLAYER_TEMP[playerid][pt_PLAYER_CARRYING_TREE]) return SendClientMessage(playerid, -1, "{CCCCCC}Ve a llevar la leña al punto marcado para talar más árboles.");
						
						for(new i = 0; i != sizeof LUMBER_TREES; i ++)
						{
							if(IsPlayerInRangeOfPoint(playerid, 2.0, LUMBER_TREES[i][lumber_tree_X], LUMBER_TREES[i][lumber_tree_Y], LUMBER_TREES[i][lumber_tree_Z]))
							{
								if(LUMBER_TREES[i][lumber_tree_STATE] == LUMBER_TREE_STATE_NORMAL)
								{
									TogglePlayerControllable(playerid, false);
									SetCameraBehindPlayer(playerid);
									ApplyAnimation(playerid, "CHAINSAW", "WEAPON_csaw", 4.1, true, false, false, false, 0);
									LUMBER_TREES[i][lumber_tree_STATE] = LUMBER_TREE_STATE_CUTTING;
									PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] = i;
									
									new Float:offset = floatdiv(PLAYER_SKILLS[playerid][WORK_LUMBERJACK], 10);
									if(offset > 30.0) offset = 30.0;
									
									PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE_PROG] = frandom(10.0, 8.0, 2) + offset;
									
									RemovePlayerAttachedObject(playerid, 9);
									SetPlayerAttachedObject(playerid, 9, 341, 6);
									SetPlayerArmedWeapon(playerid, 0);
									
									new label_str[256];
									format(label_str, sizeof label_str, "{f46530}Árbol (%d)\n\n{FFFFFF}Talando... {CCCCCC}(%.1f%%)", PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE], PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE_PROG]);
									UpdateDynamic3DTextLabelText(LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_LABEL], -1, label_str);
									
									KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][11]);
									PLAYER_TEMP[playerid][pt_TIMERS][11] = SetTimerEx("LumberjackUp", 2000, false, "ii", playerid, PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE]);
								}
								break;
							}
						}
					}
				}
			}
		}
		return 1;
	}
	return 1;
}

forward ClosePoliceDoor(i);
public ClosePoliceDoor(i)
{
	POLICE_DOORS[i][police_door_CLOSED] = true;
	MoveDynamicObject(POLICE_DOORS[i][police_door_OBJECT_ID], POLICE_DOORS[i][police_door_X], POLICE_DOORS[i][police_door_Y], POLICE_DOORS[i][police_door_Z], 0.0125, 0.0, 0.0, POLICE_DOORS[i][police_door_RZ]);
	return 1;
}

forward ClosePoliceGarageDoor(index);
public ClosePoliceGarageDoor(index)
{
	POLICE_GARAGE_DOORS[index][police_gdoor_CLOSING] = true;
	MoveDynamicObject(POLICE_GARAGE_DOORS[index][police_gdoor_OBJECT_ID], POLICE_GARAGE_DOORS[index][police_gdoor_CLOSED_X], POLICE_GARAGE_DOORS[index][police_gdoor_CLOSED_Y], POLICE_GARAGE_DOORS[index][police_gdoor_CLOSED_Z], POLICE_GARAGE_DOORS[index][police_gdoor_MOVE_SPEED], POLICE_GARAGE_DOORS[index][police_gdoor_CLOSED_RX], POLICE_GARAGE_DOORS[index][police_gdoor_CLOSED_RY], POLICE_GARAGE_DOORS[index][police_gdoor_CLOSED_RZ]);
	return 1;
}

forward CloseBarrier(i);
public CloseBarrier(i)
{
	San_Andreas_Barriers[i][barrier_CLOSING] = true;
	MoveDynamicObject(San_Andreas_Barriers[i][barrier_OBJECT_ID], San_Andreas_Barriers[i][barrier_X], San_Andreas_Barriers[i][barrier_Y], San_Andreas_Barriers[i][barrier_Z] + 0.72967, 0.0065, 0.0, -90.0, San_Andreas_Barriers[i][barrier_ROTATION]);
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(PLAYER_TEMP[playerid][pt_KICKED]) return 1;
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] != GAME_STATE_NORMAL) return 1;
	
	new player_state = GetPlayerState(playerid);
	if(player_state == PLAYER_STATE_SPAWNED || player_state == PLAYER_STATE_SPECTATING) return 1;
	
	new player_action = GetPlayerSpecialAction(playerid), Float:player_health, Float:player_armour;
	GetPlayerHealth(playerid, player_health);
	GetPlayerArmour(playerid, player_armour);
	
	if(ac_Info[CHEAT_PLAYER_HEALTH][ac_Enabled])
	{
		if(player_health > CHARACTER_INFO[playerid][ch_HEALTH] + 5.0)
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_IMMUNITY])
			{
				if(!ac_Info[CHEAT_PLAYER_HEALTH][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_HEALTH);
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_HEALTH][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_HEALTH][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_HEALTH);
				}
			}
		}
	}
	
	if(ac_Info[CHEAT_PLAYER_ARMOUR][ac_Enabled])
	{
		if(player_armour > CHARACTER_INFO[playerid][ch_ARMOUR] + 5.0)
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_IMMUNITY])
			{
				if(!ac_Info[CHEAT_PLAYER_ARMOUR][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_ARMOUR);
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_ARMOUR][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_ARMOUR][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_ARMOUR);
				}
			}
		}
	}
	
	if(ac_Info[CHEAT_JETPACK][ac_Enabled])
	{
		if(player_action == SPECIAL_ACTION_USEJETPACK)
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_JETPACK][p_ac_info_IMMUNITY])
			{
				if(!ac_Info[CHEAT_JETPACK][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_JETPACK);
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_JETPACK][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_JETPACK][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_JETPACK][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_JETPACK][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_JETPACK][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_JETPACK][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_JETPACK][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_JETPACK);
				}
			}
		}
	}
	
	new Keys, up_down, left_right;
	GetPlayerKeys(playerid, Keys, up_down, left_right); 
	
	new Float:dis, Float:vehicle_health, vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) dis = GetPlayerDistanceFromPoint(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2]);
	else
	{
		dis = GetVehicleDistanceFromPoint(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][0], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][1], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2]);
		GetVehicleHealth(vehicleid, vehicle_health);
	}
	
	if(ac_Info[CHEAT_UNOCCUPIED_VEHICLE][ac_Enabled])
	{
		if(vehicleid)
		{
			if(floatabs(dis) > 20.0)
			{
				if(player_state == PLAYER_STATE_PASSENGER)
				{
					if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] == INVALID_PLAYER_ID)
					{
						GLOBAL_VEHICLES[vehicleid][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
					}
				}
			}
		}
	}
	
	if(ac_Info[CHEAT_HIGH_POS][ac_Enabled])
	{
		if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY])
		{
			if(floatabs(dis) > 60.0 && CHARACTER_INFO[playerid][ch_POS][2] > -97.0)
			{
				if(player_state == PLAYER_STATE_PASSENGER)
				{
					if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] == INVALID_PLAYER_ID)
					{
						if(!ac_Info[CHEAT_HIGH_POS][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_HIGH_POS, dis);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_HIGH_POS][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_HIGH_POS][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_HIGH_POS, dis);
						}
					}
				}
				else
				{
					if(!ac_Info[CHEAT_HIGH_POS][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_HIGH_POS, dis);
					else
					{
						if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_HIGH_POS][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_DETECTIONS] = 0;
						else PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_DETECTIONS] ++;
						
						PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_LAST_DETECTION] = gettime();
						if(PLAYER_AC_INFO[playerid][CHEAT_HIGH_POS][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_HIGH_POS][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_HIGH_POS, dis);
					}
				}
			}
		}
	}

	switch(player_state)
	{
		case PLAYER_STATE_ONFOOT:
		{
			if(ac_Info[CHEAT_PLAYER_SPEED][ac_Enabled])
			{
				if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_SPEED][p_ac_info_IMMUNITY])
				{
					new Float:speed = GetPlayerSpeed(playerid);
					if(speed > 1000)
					{
						if(!ac_Info[CHEAT_PLAYER_SPEED][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_SPEED, speed);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_SPEED][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_SPEED][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_SPEED][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_SPEED][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_PLAYER_SPEED][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_SPEED][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_SPEED][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_SPEED, speed);
						}
					}
				}
			}
			
			if(ac_Info[CHEAT_POS][ac_Enabled])
			{
				if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY])
				{
					if(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && GetPlayerSurfingObjectID(playerid) == INVALID_OBJECT_ID && player_action != SPECIAL_ACTION_ENTER_VEHICLE && player_action != SPECIAL_ACTION_EXIT_VEHICLE)
					{
						if(floatabs(dis) > 6.0 && CHARACTER_INFO[playerid][ch_POS][2] > -97.0)
						{
							if(!ac_Info[CHEAT_POS][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_POS, dis);
							else
							{
								if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_POS][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_DETECTIONS] = 0;
								else PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_DETECTIONS] ++;
								
								PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_LAST_DETECTION] = gettime();
								if(PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_POS][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_POS, dis);
							}
						}
					}
				}
			}
			
			if(up_down || left_right)
			{
				switch(Keys)
				{
					case KEY_SPRINT:
					{
						PLAYER_TEMP[playerid][pt_PED_STATE] = PED_SPRINTING;
						PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_DISCOUNT_TIME] = 5;
					}
					case KEY_WALK:
					{
						PLAYER_TEMP[playerid][pt_PED_STATE] = PED_WALKING;
						PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_DISCOUNT_TIME] = 10;
					}
					default:
					{
						PLAYER_TEMP[playerid][pt_PED_STATE] = PED_RUNNING;
						PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_DISCOUNT_TIME] = 20;
					}
				}
			}
			else PLAYER_TEMP[playerid][pt_PED_STATE] = PED_STOPPED;
		}
		case PLAYER_STATE_DRIVER:
		{	
			new Float:Vehicle_Speed = GetVehicleSpeed(vehicleid);
			
			if(ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Enabled])
			{
				if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_IMMUNITY])
				{
					if(Vehicle_Speed > 1000)
					{
						if(!ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_SPEED_HACK);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_SPEED_HACK);
						}
					}
				}
			}
			
			if(ac_Info[CHEAT_VEHICLE_HEALTH][ac_Enabled])
			{
				if(vehicle_health > (GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] + 20.0))
				{
					if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_IMMUNITY])
					{						
						if(!ac_Info[CHEAT_VEHICLE_HEALTH][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_HEALTH, (GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] + 5.0) - vehicle_health);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_VEHICLE_HEALTH][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_VEHICLE_HEALTH][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_HEALTH);
						}
					}
				}
			}
			
			if(ac_Info[CHEAT_POS][ac_Enabled])
			{
				if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY])
				{
					if(Vehicle_Speed < 20.0 && floatabs(dis) >= 10.0 && GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2] > -97.0)
					{
						if(!ac_Info[CHEAT_POS][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_POS, dis);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_POS][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_POS][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_POS, dis);
						}
					}
				}
			}
			
			if(ac_Info[CHEAT_VEHICLE_NOFUEL][ac_Enabled])
			{
				if(Keys == KEY_SPRINT)
				{
					if(!GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] && Vehicle_Speed > 60 && GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2] > -97.0 && VEHICLE_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400][vehicle_info_ENGINE])
					{
						if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_IMMUNITY])
						{
							if(!ac_Info[CHEAT_VEHICLE_NOFUEL][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_NOFUEL);
							else
							{
								if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_VEHICLE_NOFUEL][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_DETECTIONS] = 0;
								else PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_DETECTIONS] ++;
								
								PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_LAST_DETECTION] = gettime();
								if(PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_VEHICLE_NOFUEL][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_NOFUEL);
							}
						}
					}
				}
			}
			
			if(IsPlayerInBike(playerid))
			{
				if(Keys == KEY_SPRINT)
				{
					PLAYER_TEMP[playerid][pt_PED_STATE] = PED_BYCICLING;
					PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_DISCOUNT_TIME] = 10;
				}
				else
				{
					PLAYER_TEMP[playerid][pt_PED_STATE] = PED_STOPPED;
					PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_DISCOUNT_TIME] = 20;
				}
			}
			else
			{
				PLAYER_TEMP[playerid][pt_PED_STATE] = PED_STOPPED;
				PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_DISCOUNT_TIME] = 20;
			}
		}
	}
	
	CHARACTER_INFO[playerid][ch_HEALTH] = player_health;
	CHARACTER_INFO[playerid][ch_ARMOUR] = player_armour;
	GetPlayerPos(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2]);
	if(vehicleid)
	{
		GetVehiclePos(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][0], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][1], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2]);
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = vehicle_health;
	}
	
	return 1;
}

IsPlayerInBike(playerid)
{
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model == 481 || model == 509 || model == 510) return true;
	return false;
}

SetPlayerPosEx(playerid, Float:x, Float:y, Float:z, Float:angle, interior, world, freeze = 0, addoffset = 0)
{
	PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_IMMUNITY] = gettime() + 5;
	
	if(addoffset)
	{
		x += (1.5 * floatsin(-angle, degrees));
		y += (1.5 * floatcos(-angle, degrees));
	}
	
	CHARACTER_INFO[playerid][ch_POS][0] = x;
	CHARACTER_INFO[playerid][ch_POS][1] = y;
	CHARACTER_INFO[playerid][ch_POS][2] = z;
	CHARACTER_INFO[playerid][ch_ANGLE] = angle;
	
	SetPlayerPos(playerid, x, y, z);
	SetPlayerFacingAngle(playerid, angle);
	SetPlayerInterior(playerid, interior);
	SetPlayerVirtualWorld(playerid, world);
	SetCameraBehindPlayer(playerid);
	
	if(freeze)
	{
		TogglePlayerControllable(playerid, false);
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
		PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
	}
	return 1;
}

forward TogglePlayerControl(playerid, bool:controlable);
public TogglePlayerControl(playerid, bool:controlable)
{
	return TogglePlayerControllable(playerid, controlable);
}


GetNearestHospitalForPlayer(playerid)
{
	new Float:distance = 99999.0,
        Float:tmp_distance,
        closest = -1; 

    for(new i = 0; i < sizeof Hospital_Spawn_Positions; i++) 
    { 
        tmp_distance = GetPlayerDistanceFromPoint(playerid, Hospital_Spawn_Positions[i][0], Hospital_Spawn_Positions[i][1], Hospital_Spawn_Positions[i][2]); 
        if (tmp_distance < distance) 
        { 
            distance = tmp_distance; 
            closest = i;
        } 
    }
	return closest;
}


/*
new Float:Hospital_1_Rooms[][4] =  
{ 
	{1956.842041, 1160.172607, -5.208699, 271.393920},
	{1955.839355, 1166.306152, -5.208699, 270.912200},
	{1956.226684, 1172.363159, -5.208699, 267.923767}
}; */

GetHospitalSpawnPosition(hospital, &Float:x, &Float:y, &Float:z, &Float:angle, &interior, &local_interior, &rp_state)
{
	x = Hospital_Spawn_Positions[hospital][0];
	y = Hospital_Spawn_Positions[hospital][1];
	z = Hospital_Spawn_Positions[hospital][2];
	angle = Hospital_Spawn_Positions[hospital][3];
	interior = 0;
	local_interior = 0;
	rp_state = ROLEPLAY_STATE_NORMAL;
	
	/*switch(hospital)
	{
		case 1:
		{
			new room = random(sizeof(Hospital_1_Rooms));
			x = Hospital_1_Rooms[room][0];
			y = Hospital_1_Rooms[room][1];
			z = Hospital_1_Rooms[room][2];
			angle = Hospital_1_Rooms[room][3];
			interior = 10;
			local_interior = 1;
			rp_state = ROLEPLAY_STATE_INTERIOR;
		}
		default:
		{
			x = Hospital_Spawn_Positions[hospital][0];
			y = Hospital_Spawn_Positions[hospital][1];
			z = Hospital_Spawn_Positions[hospital][2];
			angle = Hospital_Spawn_Positions[hospital][3];
			interior = 0;
			local_interior = 0;
			rp_state = ROLEPLAY_STATE_NORMAL;
		}
	}*/
	return 1;
}

UpdateHospitalSizeTextdrawLife(playerid)
{
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2], 270.0 + ( PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] * 0.98), 0.000000);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2]);
	return 1;
}

forward HealthUp(playerid);
public HealthUp(playerid)
{
	if(CHARACTER_INFO[playerid][ch_STATE] != ROLEPLAY_STATE_HOSPITAL) return 1;
	
	if(PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] < 100.0)
	{
		if(ACCOUNT_INFO[playerid][ac_SU]) PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] += 10.0;
		else PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] += 5.0;
		
		if(PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] > 100.0) PLAYER_TEMP[playerid][pt_HOSPITAL_LIFE] = 100.0;
		UpdateHospitalSizeTextdrawLife(playerid);
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][4]);
		PLAYER_TEMP[playerid][pt_TIMERS][4] = SetTimerEx("HealthUp", 1000, false, "i", playerid);
	}
	else
	{
		if(ACCOUNT_INFO[playerid][ac_SU]) CHARACTER_INFO[playerid][ch_HEALTH] = 100.0;
		else CHARACTER_INFO[playerid][ch_HEALTH] = 50.0;
		
		SetPlayerHealthEx(playerid, CHARACTER_INFO[playerid][ch_HEALTH]);
		
		ClearPlayerChat(playerid);
		SendClientMessage(playerid, -1, "{CCCCCC}Te has recuperado.");
		new price = ACCOUNT_INFO[playerid][ac_LEVEL] * 200;
		if(price > 1200) price = 1200;
		price += minrand(100, 200);
		
		if(price > CHARACTER_INFO[playerid][ch_CASH])
		{
			price = CHARACTER_INFO[playerid][ch_CASH];
			if(price < 0) price = 0;
		}

		SendClientMessageEx(playerid, -1, "{CCCCCC}El coste de los servicios médicos ofrecidos es de {98d16c}%s$", number_format_thousand(price));
		GivePlayerCash(playerid, -price);
		PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][0]);
		PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][1]);
		PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HOSPITAL][2]);
		CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = 0;
		PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] = -1;
		
		if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0 || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED)
		{
			CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_JAIL;
			if(ACCOUNT_INFO[playerid][ac_SU]) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 150 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
			else CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 300 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
			CHARACTER_INFO[playerid][ch_WANTED_LEVEL] = 0;
			CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] = 0;
			PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME] = gettime();
			SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] ][jail_X], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Y], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Z], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_ANGLE], 0, 0, 0, 0, 0, 0);
			CHARACTER_INFO[playerid][ch_INTERIOR] = JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_INTERIOR];
			
			new time = CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] - (gettime() - PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME]);
			SendClientMessageEx(playerid, -1, "{CCCCCC}Te quedan %s minutos de condena.", TimeConvert(time));
		}
		else
		{
			GetHospitalSpawnPosition(PLAYER_TEMP[playerid][pt_HOSPITAL], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], CHARACTER_INFO[playerid][ch_INTERIOR], CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA], CHARACTER_INFO[playerid][ch_STATE]);
			SetSpawnInfo(playerid, NO_TEAM, CHARACTER_INFO[playerid][ch_SKIN], CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], 0, 0, 0, 0, 0, 0);
		}
		PLAYER_TEMP[playerid][pt_PLAYER_FINISH_HOSPITAL] = true;
		TogglePlayerSpectatingEx(playerid, false);
	}
	return 1;
}

TogglePlayerSpectatingEx(playerid, bool:spectate)
{
	PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_SPECTATE][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_TEMP[playerid][pt_PLAYER_SPECTATE] = spectate;
	return TogglePlayerSpectating(playerid, spectate);
}

CreateInteriorActor(interior_type, world, interior)
{
	if(interior_type == INTERIOR_NO_INFO) return 0;
	
	new skin, Float:pos[4];
	
	switch(interior_type)
	{
		/*case INTERIOR_GENERAL_HOSPITAL:
		{
			skin 	= 308;
			pos[0]	= 1969.236572;
			pos[1]	= 1169.541259;
			pos[2]	= -5.208700;
			pos[3]	= 178.0;
		}*/
		case INTERIOR_BINCO:
		{
			skin 	= 119;
			pos[0]	= 208.376373;
			pos[1]	= -98.703956;
			pos[2]	= 1005.257812;
			pos[3]	= 180.0;
		}
		case INTERIOR_SUBURBAN:
		{
			skin 	= 191;
			pos[0]	= 203.826187;
			pos[1]	= -41.667518;
			pos[2]	= 1001.804687;
			pos[3]	= 180.0;
		}
		case INTERIOR_PROLAPS:
		{
			skin 	= 190;
			pos[0]	= 207.139907;
			pos[1]	= -127.805473;
			pos[2]	= 1003.507812;
			pos[3]	= 180.0;
		}
		case INTERIOR_DIDIER_SACHS:
		{
			skin 	= 169;
			pos[0]	= 204.275909;
			pos[1]	= -157.829010;
			pos[2]	= 1000.523437;
			pos[3]	= 180.0;
		}
		case INTERIOR_VICTIM:
		{
			skin 	= 217;
			pos[0]	= 204.853225;
			pos[1]	= -8.764448;
			pos[2]	= 1001.210937;
			pos[3]	= 270.0;
		}
		case INTERIOR_ZIP:
		{
			skin 	= 211;
			pos[0]	= 162.226135;
			pos[1]	= -81.191978;
			pos[2]	= 1001.804687;
			pos[3]	= 180.0;
		}
		case INTERIOR_247:
		{
			skin 	= 184;
			pos[0]	= -27.483411;
			pos[1]	= -91.628837;
			pos[2]	= 1003.546875;
			pos[3]	= 0.0;
		}
		case INTERIOR_PIZZA:
		{
			skin 	= 155;
			pos[0] 	= 375.114501;
			pos[1] 	= -117.272621;
			pos[2] 	= 1001.492187;
			pos[3]	= 180.0;
		}
		case INTERIOR_CLUCKIN_BELL:
		{
			skin 	= 167;
			pos[0] 	= 368.652679;
			pos[1] 	= -4.492218;
			pos[2] 	= 1001.851562;
			pos[3]	= 180.0;
		}
		case INTERIOR_BURGER_SHOT:
		{
			skin 	= 205;
			pos[0] 	= 376.114227;
			pos[1] 	= -65.848991;
			pos[2] 	= 1001.507812;
			pos[3]	= 180.0;
		}
		case INTERIOR_BANK_LS:
		{
			skin 	= 59;
			pos[0] 	= 1407.526489;
			pos[1] 	= 1321.833496;
			pos[2] 	= 1501.091918;
			pos[3]	= 180.0;
		}
		case INTERIOR_BANK_SF:
		{
			skin 	= 59;
			pos[0] 	= 1104.802001;
			pos[1] 	= 1531.275634;
			pos[2] 	= 1452.475097;
			pos[3]	= 180.0;
		}
		case INTERIOR_BANK_LV:
		{
			skin 	= 59;
			pos[0] 	= 2692.497558;
			pos[1] 	= -610.933593;
			pos[2] 	= -71.658203;
			pos[3]	= 90.0;
		}
		case INTERIOR_CITY_HALL_LS:
		{
			skin 	= 186;
			pos[0] 	= -474.572387;
			pos[1] 	= 287.982879;
			pos[2] 	= 2004.584960;
			pos[3]	= 0.0;
		}
		case INTERIOR_UNITY_STATION:
		{
			skin 	= 184;
			pos[0] 	= 1489.038818;
			pos[1] 	= 1305.631591;
			pos[2] 	= 1093.296386;
			pos[3]	= 270.0;
		}
		case INTERIOR_TRUCK:
		{
			skin 	= 127;
			pos[0] 	= 1297.120117;
			pos[1] 	= -66.351226;
			pos[2] 	= 1002.497375;
			pos[3]	= 0.0;
		}
	}
	CreateDynamicActor(skin, pos[0], pos[1], pos[2], pos[3], true, 100.0, world, interior);
	return 1;
}

GetBuyPropertySiteIndexByIntTyp(interior_type)
{
	for(new i = 0; i != sizeof BUY_PROPERTIES_SITES; i ++)
	{
		if(BUY_PROPERTIES_SITES[i][site_INTERIOR_TYPE] == interior_type) return i;
	}
	return -1;
}

GetBankLocalIndexByIntType(interior_type)
{
	for(new i = 0; i != sizeof Bank_Interior_Positions; i ++)
	{
		if(Bank_Interior_Positions[i][bank_INTERIOR_TYPE] == interior_type) return i;
	}
	return -1;
}

GetFastFoodLocalIndexByIntType(interior_type)
{
	for(new i = 0; i != sizeof Fast_Food_Positions; i ++)
	{
		if(Fast_Food_Positions[i][fast_food_INTERIOR_TYPE] == interior_type) return i;
	}
	return -1;
}

GetClothingShopIndexByIntType(interior_type)
{
	for(new i = 0; i != sizeof Clothing_Shop_Positions; i ++)
	{
		if(Clothing_Shop_Positions[i][clothing_shop_INTERIOR_TYPE] == interior_type) return i;
	}
	return -1;
}

ShowToysShopTextdraws(playerid)
{
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9]);
	return 1;
}

HideToysShopTextdraws(playerid)
{
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][6]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][7]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][9]);
	return 1;
}

ClosePlayerToysMenu(playerid)
{
	SetPlayerVirtualWorld(playerid, ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INT_WORLD] );
	TogglePlayerControllable(playerid, true);
	
	HideToysShopTextdraws(playerid);
	//PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] = 0;
	PLAYER_TEMP[playerid][pt_TOYS_SHOP] = false;
	CancelSelectTextDrawEx(playerid);
	return 1;
}

RegisterNewPlayerToy(playerid, slot)
{
	new DBResult:Result, DB_Query[800];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PLAYER_TOYS`\
		(\
			`ID_USER`, `NAME`, `ATTACHED`, `MODELID`, `BONE`, `OFFSET_X`, `OFFSET_Y`, `OFFSET_Z`, `ROT_X`, `ROT_Y`, `ROT_Z`, `SCALE_X`, `SCALE_Y`, `SCALE_Z`, `COLOR_1`, `COLOR_2`\
		)\
		VALUES\
		(\
			'%d', '%q', '%d', '%d', '%d', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d'\
		);\
		SELECT MAX(`ID_TOY`) FROM `PLAYER_TOYS`;\
	",
		ACCOUNT_INFO[playerid][ac_ID],
		PLAYER_TOYS[playerid][slot][player_toy_NAME], PLAYER_TOYS[playerid][slot][player_toy_ATTACHED], PLAYER_TOYS[playerid][slot][player_toy_MODELID], PLAYER_TOYS[playerid][slot][player_toy_BONE],
		PLAYER_TOYS[playerid][slot][player_toy_OFFSET_X], PLAYER_TOYS[playerid][slot][player_toy_OFFSET_Y], PLAYER_TOYS[playerid][slot][player_toy_OFFSET_Z],
		PLAYER_TOYS[playerid][slot][player_toy_ROT_X], PLAYER_TOYS[playerid][slot][player_toy_ROT_Y], PLAYER_TOYS[playerid][slot][player_toy_ROT_Z],
		PLAYER_TOYS[playerid][slot][player_toy_SCALE_X], PLAYER_TOYS[playerid][slot][player_toy_SCALE_Y], PLAYER_TOYS[playerid][slot][player_toy_SCALE_Z],
		PLAYER_TOYS[playerid][slot][player_toy_COLOR_1], PLAYER_TOYS[playerid][slot][player_toy_COLOR_2]
	);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result)) PLAYER_TOYS[playerid][slot][player_toy_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	return 1;
}


UpdateToysShop(playerid)
{
	if(!PLAYER_TEMP[playerid][pt_TOYS_SHOP]) return 0;
	
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][1], ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_NAME]);
	PlayerTextDrawSetPreviewModel(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3], Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_modelid]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][3]);
	
	new td_str[128]; format(td_str, sizeof td_str, "Modelo:_%s~n~Precio:_%s$", Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_model], number_format_thousand( Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_price] ));
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][4], td_str);
	
	
	if(CHARACTER_INFO[playerid][ch_CASH] < Toys_Shop[ PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] ][shop_toy_price]) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], -900267777);
	else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5], 1855979775);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][5]);
	
	format(td_str, sizeof td_str, "%d/%d", PLAYER_TEMP[playerid][pt_TOYS_SHOP_TOY_SELECTED] + 1, sizeof(Toys_Shop));
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TOYS_SHOP][8], td_str);
	return 1;
}


ShowClothingShopTextdraws(playerid)
{
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5]);
	return 1;
}

HideClothingShopTextdraws(playerid)
{
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][3]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][4]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5]);
	return 1;
}

ClosePlayerClothingMenu(playerid)
{
	CHARACTER_INFO[playerid][ch_POS][0] = Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_X];
	CHARACTER_INFO[playerid][ch_POS][1] = Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_Y];
	CHARACTER_INFO[playerid][ch_POS][2] = Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_Z];
	CHARACTER_INFO[playerid][ch_ANGLE] = Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_ANGLE];
	SetPlayerSkin(playerid, CHARACTER_INFO[playerid][ch_SKIN]);
	TogglePlayerControllable(playerid, true);
	
	HideClothingShopTextdraws(playerid);
	PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] = 0;
	PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] = -1;
	CancelSelectTextDrawEx(playerid);
	return 1;
}

ExitPlayerWardrobe(playerid)
{
	SetPlayerPosEx(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], CHARACTER_INFO[playerid][ch_ANGLE], ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INT_INTERIOR], ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INT_WORLD], false, true);
	return 1;
}

UpdateClothingShop(playerid)
{
	if(PLAYER_TEMP[playerid][pt_CLOTHING_SHOP] == -1) return 0;
	
	new cost, textdraw_str[128];
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][1], Clothing_Shop_Positions[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP]][clothing_shop_NAME]);
	
	switch(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE])
	{
		case INTERIOR_BINCO:
		{
			switch(CHARACTER_INFO[playerid][ch_SEX])
			{
				case SEX_MALE:
				{
					SetPlayerSkin(playerid, Binco_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Binco_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Binco_Shop_Male_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
				case SEX_FEMALE:
				{
					SetPlayerSkin(playerid, Binco_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Binco_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Binco_Shop_Female_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
			}
		}
		case INTERIOR_SUBURBAN:
		{
			switch(CHARACTER_INFO[playerid][ch_SEX])
			{
				case SEX_MALE:
				{
					SetPlayerSkin(playerid, Suburban_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Suburban_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Suburban_Shop_Male_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
				case SEX_FEMALE:
				{
					SetPlayerSkin(playerid, Suburban_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Suburban_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Suburban_Shop_Female_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
			}
		}
		case INTERIOR_PROLAPS:
		{
			switch(CHARACTER_INFO[playerid][ch_SEX])
			{
				case SEX_MALE:
				{
					SetPlayerSkin(playerid, Prolaps_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Prolaps_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Prolaps_Shop_Male_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
				case SEX_FEMALE:
				{
					SetPlayerSkin(playerid, Prolaps_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Prolaps_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Prolaps_Shop_Female_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
			}
		}
		case INTERIOR_DIDIER_SACHS:
		{
			switch(CHARACTER_INFO[playerid][ch_SEX])
			{
				case SEX_MALE:
				{
					SetPlayerSkin(playerid, Didier_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Didier_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Didier_Shop_Male_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
				case SEX_FEMALE:
				{
					SetPlayerSkin(playerid, Didier_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Didier_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Didier_Shop_Female_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
			}
		}
		case INTERIOR_VICTIM:
		{
			switch(CHARACTER_INFO[playerid][ch_SEX])
			{
				case SEX_MALE:
				{
					SetPlayerSkin(playerid, Victim_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Victim_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Victim_Shop_Male_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
				case SEX_FEMALE:
				{
					SetPlayerSkin(playerid, Victim_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Victim_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Victim_Shop_Female_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
			}
		}
		case INTERIOR_ZIP:
		{
			switch(CHARACTER_INFO[playerid][ch_SEX])
			{
				case SEX_MALE:
				{
					SetPlayerSkin(playerid, Zip_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Zip_Shop_Male_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Zip_Shop_Male_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
				case SEX_FEMALE:
				{
					SetPlayerSkin(playerid, Zip_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][0]);
					cost = Zip_Shop_Female_Skins[PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN]][2];
					
					if(CHARACTER_INFO[playerid][ch_CASH] < cost) PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], -1459617611);
					else PlayerTextDrawBoxColor(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2], 9306312);
					
					format(textdraw_str, sizeof textdraw_str, "Precio:_%s$~n~Ropa:_%d/%d", number_format_thousand(cost), PLAYER_TEMP[playerid][pt_CLOTHING_SHOP_SELECTED_SKIN] + 1, sizeof(Zip_Shop_Female_Skins));
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][5], textdraw_str);
				}
			}
		}
	}
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_CLOTHING_SHOP][2]);
	return 1;
}

stock number_format_thousand(e_number) /* By adri1 - SFR3 4.3 */
{
	new f_string[24], bool:negative;
	format(f_string, sizeof f_string, "%d", e_number);
	if(e_number < 0)
	{
		negative = true;
		strdel(f_string, 0, 1);
	}
	
	new numbers = strlen(f_string);
	while(numbers > 3)
	{
		numbers -= 3;
		strins(f_string, ".", numbers);
	}
	
	if(negative) strins(f_string, "-", 0);
	return f_string;
}

stock number_format_dash(e_number) /* By adri1 - SFR3 4.3 */
{
	new f_string[24], bool:negative;
	format(f_string, sizeof f_string, "%d", e_number);
	if(e_number < 0)
	{
		negative = true;
		strdel(f_string, 0, 1);
	}
	
	new numbers = strlen(f_string);
	while(numbers > 3)
	{
		numbers -= 3;
		strins(f_string, "-", numbers);
	}
	
	if(negative) strins(f_string, "- ", 0);
	return f_string;
}

SelectTextDrawEx(playerid, color)
{
	PLAYER_TEMP[playerid][pt_SELECT_TEXTDRAW] = true;
	return SelectTextDraw(playerid, color);
}

CancelSelectTextDrawEx(playerid)
{
	PLAYER_TEMP[playerid][pt_SELECT_TEXTDRAW] = false;
	return CancelSelectTextDraw(playerid);
}

UpdatePlayerHud(playerid)
{
	if(!PLAYER_TEMP[playerid][pt_HUD_TEXTDRAWS]) return 0;
	
	new Float:size;
	
	size = 500.699981 + (CHARACTER_INFO[playerid][ch_HUNGRY] * 0.46030121);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3], size, 0.000000);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3]);
	
	size = 557.699981 + (CHARACTER_INFO[playerid][ch_THIRST] * 0.46030121);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3], size, 0.000000);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3]);
	return 1;
}

#define INTERVAL_HUNGRY_THIRST_DOWN	2 // 2 segundos de timer

#define THIRST_HOURS_STOPPED	9 // 9 horas parado si agua esta a 100 va a 0
#define HUNGRY_HOURS_STOPPED	12 // 12 horas parado si alimentacion esta a 100 va a 0

#define THIRST_HOURS_WALKING	6 // 6 horas andando si agua esta a 100 va a 0
#define HUNGRY_HOURS_WALKING	8 // 8 horas andando si alimentacion esta a 100 va a 0

#define THIRST_HOURS_RUNNING	2 // 2 horas corriendo si agua esta a 100 va a 0
#define HUNGRY_HOURS_RUNNING	4 // 4 horas corriendo si alimentacion esta a 100 va a 0

#define THIRST_HOURS_SPRINTING	1 // 1 horas esprintando si agua esta a 100 va a 0
#define HUNGRY_HOURS_SPRINTING	2 // 2 horas esprintando si alimentacion esta a 100 va a 0

#define THIRST_HOURS_BYCICLING	3
#define HUNGRY_HOURS_BYCICLING	6

forward HungryThirstDown(playerid);
public HungryThirstDown(playerid)
{
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] != GAME_STATE_NORMAL) return HidePlayerHud(playerid);
	if(!PLAYER_TEMP[playerid][pt_HUD_TEXTDRAWS]) return HidePlayerHud(playerid);
	
	if(ACCOUNT_INFO[playerid][ac_SU])
	{
		if(gettime() - PLAYER_TEMP[playerid][pt_LAST_SU_CHECK] > 300)
		{
			CheckPlayerSuperUser(playerid);
		}
	}
	
	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0 && CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_NORMAL && !PLAYER_TEMP[playerid][pt_CUFFED])
	{
		if(gettime() - PLAYER_TEMP[playerid][pt_LAST_SET_WANTED_LEVEL] > 300)
		{
			if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] == 1)
			{
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has perdido de vista a la policía.");
				SetPlayerWantedLevelEx(playerid, 0);
			}
			else SetPlayerWantedLevelEx(playerid, CHARACTER_INFO[playerid][ch_WANTED_LEVEL] - 1);
		}
	}
	
	switch(PLAYER_TEMP[playerid][pt_PED_STATE])
	{
		case PED_STOPPED:
		{
			CHARACTER_INFO[playerid][ch_THIRST] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(THIRST_HOURS_STOPPED, 36));
			CHARACTER_INFO[playerid][ch_HUNGRY] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(HUNGRY_HOURS_STOPPED, 36));
		}
		case PED_WALKING:
		{
			CHARACTER_INFO[playerid][ch_THIRST] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(THIRST_HOURS_WALKING, 36));
			CHARACTER_INFO[playerid][ch_HUNGRY] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(HUNGRY_HOURS_WALKING, 36));
		}
		case PED_RUNNING:
		{
			CHARACTER_INFO[playerid][ch_THIRST] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(THIRST_HOURS_RUNNING, 36));
			CHARACTER_INFO[playerid][ch_HUNGRY] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(HUNGRY_HOURS_RUNNING, 36));
		}
		case PED_SPRINTING:
		{
			CHARACTER_INFO[playerid][ch_THIRST] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(THIRST_HOURS_SPRINTING, 36));
			CHARACTER_INFO[playerid][ch_HUNGRY] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(HUNGRY_HOURS_SPRINTING, 36));
		}
		case PED_BYCICLING:
		{
			CHARACTER_INFO[playerid][ch_THIRST] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(THIRST_HOURS_BYCICLING, 36));
			CHARACTER_INFO[playerid][ch_HUNGRY] -= floatdiv(float(INTERVAL_HUNGRY_THIRST_DOWN), floatmul(HUNGRY_HOURS_BYCICLING, 36));
		}
	}
	
	if(CHARACTER_INFO[playerid][ch_THIRST] <= 0.5) CHARACTER_INFO[playerid][ch_THIRST] = 0.5;
	if(CHARACTER_INFO[playerid][ch_HUNGRY] <= 0.5) CHARACTER_INFO[playerid][ch_HUNGRY] = 0.5;
	
	if((gettime() - PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_TIME]) > PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_DISCOUNT_TIME])
	{
		if(CHARACTER_INFO[playerid][ch_THIRST] < 20.0)
		{
			CHARACTER_INFO[playerid][ch_HEALTH] -= 2.5;
			
			if(CHARACTER_INFO[playerid][ch_THIRST] <= 1.0 || CHARACTER_INFO[playerid][ch_HEALTH] <= 0.5)
			{
				SendClientMessage(playerid, -1, "{CCCCCC}Te has desmayado por deshidratación.");
				SetPlayerHealthEx(playerid, 0.0);
				CHARACTER_INFO[playerid][ch_THIRST] = 75.0;
				return 1;
			}
			
			PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_TIME] = gettime();
			SetPlayerHealthEx(playerid, CHARACTER_INFO[playerid][ch_HEALTH]);
			
			if(!PLAYER_TEMP[playerid][pt_THIRST_MESSAGE])
			{
				SendClientMessage(playerid, -1, "{CCCCCC}Tienes sed, si no bebes agua pronto acabarás mueriendo.");
				PLAYER_TEMP[playerid][pt_THIRST_MESSAGE] = true;
			}
		}
		
		if(CHARACTER_INFO[playerid][ch_HUNGRY] < 20.0)
		{
			CHARACTER_INFO[playerid][ch_HEALTH] -= 1.5;
			
			if(CHARACTER_INFO[playerid][ch_HUNGRY] <= 1.0 || CHARACTER_INFO[playerid][ch_HEALTH] <= 0.5)
			{
				SendClientMessage(playerid, -1, "{CCCCCC}Te has desmayado por hambre.");
				SetPlayerHealthEx(playerid, 0.0);
				CHARACTER_INFO[playerid][ch_HUNGRY] = 55.0;
				return 1;
			}
			
			PLAYER_TEMP[playerid][pt_HUNGRY_THIRST_TIME] = gettime();
			SetPlayerHealthEx(playerid, CHARACTER_INFO[playerid][ch_HEALTH]);
			
			if(!PLAYER_TEMP[playerid][pt_HUNGRY_MESSAGE])
			{
				SendClientMessage(playerid, -1, "{CCCCCC}Tienes hambre, si no comes nada pronto acabarás mueriendo.");
				PLAYER_TEMP[playerid][pt_HUNGRY_MESSAGE] = true;
			}
		}
	}
	
	UpdatePlayerHud(playerid);
	return 1;
}

ShowPlayerHud(playerid)
{
	PLAYER_TEMP[playerid][pt_HUD_TEXTDRAWS] = true;
	UpdatePlayerHud(playerid);
	
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_SERVER_TIME]);
	
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3]);
	
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3]);
	
	PLAYER_TEMP[playerid][pt_TIMERS][5] = SetTimerEx("HungryThirstDown", INTERVAL_HUNGRY_THIRST_DOWN * 1000, true, "i", playerid);
	return 1;
}

HidePlayerHud(playerid)
{
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][5]);
	PLAYER_TEMP[playerid][pt_HUD_TEXTDRAWS] = false;
	
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SERVER_TIME]);
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_HUNGRY][3]);
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_THIRST][3]);
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1]);
	return 1;
}

is_open(hour, open, close)
{
	if(open > close)
	{
		if( ( (hour >= open) && (hour < 24) ) || ( (hour >= 0) && (hour < close) ) )
		{													
			return true;			
		}
		else
		{
			return false;
		}
	}
	else if(open < close)
	{
		if((hour >= open) && (hour < close))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	return false;
}

Add_Hungry_Thirst(playerid, Float:hungry, Float:thirst)
{
	CHARACTER_INFO[playerid][ch_HUNGRY] += hungry;
	if(CHARACTER_INFO[playerid][ch_HUNGRY] > 30.0) PLAYER_TEMP[playerid][pt_HUNGRY_MESSAGE] = false;
	if(CHARACTER_INFO[playerid][ch_HUNGRY] > 100.0) CHARACTER_INFO[playerid][ch_HUNGRY] = 100.0;
	
	CHARACTER_INFO[playerid][ch_THIRST] += thirst;
	if(CHARACTER_INFO[playerid][ch_THIRST] > 30.0) PLAYER_TEMP[playerid][pt_THIRST_MESSAGE] = false;
	if(CHARACTER_INFO[playerid][ch_THIRST] > 100.0) CHARACTER_INFO[playerid][ch_THIRST] = 100.0;
	
	UpdatePlayerHud(playerid);
	return 1;
}

SetActorSkin(actorid, skin, &actor)
{
	actor = INVALID_ACTOR_ID;
	
    new Float:x, Float:y, Float:z, Float:a, vw;
    GetActorPos(actorid, x, y, z); 
    GetActorFacingAngle(actorid, a);
	vw = GetActorVirtualWorld(actorid);
    DestroyActor(actorid); 
    actor = CreateActor(skin, x, y, z, a);
	SetActorVirtualWorld(actor, vw);
	return 1;
}

GetPlayerIdByBankAccountId(account_id)
{
	for(new i = 0; i != sizeof(BANK_ACCOUNT); i ++)
	{
		if(BANK_ACCOUNT[i][bank_account_ID] == 0) continue;
		if(BANK_ACCOUNT[i][bank_account_ID] == account_id) return i;
	}
	return -1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(PLAYER_TEMP[playerid][pt_KICKED]) return 1;
	
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_NORMAL)
	{
		if(newstate != PLAYER_STATE_SPAWNED && oldstate != PLAYER_STATE_SPAWNED)
		{
			if(ac_Info[CHEAT_STATE_SPAMMER][ac_Enabled])
			{
				if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY])
				{
					new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_STATE]);
					
					if(interval < 50)
					{
						if(!ac_Info[CHEAT_STATE_SPAMMER][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_STATE_SPAMMER, float(interval));
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_STATE_SPAMMER][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_STATE_SPAMMER][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_STATE_SPAMMER, float(interval));
						}
					}
					PLAYER_TEMP[playerid][pt_ANTIFLOOD_STATE] = GetTickCount();
				}
			}
		}
	}
	
    if(newstate == PLAYER_STATE_DRIVER)
    {
		new vehicleid = GetPlayerVehicleID(playerid);
		if(ac_Info[CHEAT_OCCUPIED_VEHICLE_ENTER][ac_Enabled])
		{
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_OCCUPIED] && GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] != INVALID_PLAYER_ID)
			{
				if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_OCCUPIED_VEHICLE_ENTER][p_ac_info_IMMUNITY])
				{
					if(!ac_Info[CHEAT_OCCUPIED_VEHICLE_ENTER][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_OCCUPIED_VEHICLE_ENTER);
					else
					{
						if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_OCCUPIED_VEHICLE_ENTER][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_OCCUPIED_VEHICLE_ENTER][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_OCCUPIED_VEHICLE_ENTER][p_ac_info_DETECTIONS] = 0;
						else PLAYER_AC_INFO[playerid][CHEAT_OCCUPIED_VEHICLE_ENTER][p_ac_info_DETECTIONS] ++;
						
						PLAYER_AC_INFO[playerid][CHEAT_OCCUPIED_VEHICLE_ENTER][p_ac_info_LAST_DETECTION] = gettime();
						if(PLAYER_AC_INFO[playerid][CHEAT_OCCUPIED_VEHICLE_ENTER][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_OCCUPIED_VEHICLE_ENTER][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_OCCUPIED_VEHICLE_ENTER);
					}
					
					PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] = INVALID_VEHICLE_ID;
					return 1;
				}
			}
		}
		
		SetPlayerArmedWeapon(playerid, 0);
		PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
		PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
		PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] = vehicleid;
		
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] = playerid;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_DRIVER] = playerid;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_OCCUPIED] = true;
		
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS] && VEHICLE_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400][vehicle_info_DRIVER_DOOR]) //cerrado
		{
			if(gettime() - GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_CLOSED_TIME] > 5) // Si el tiempo que paso desde que cerro es mayor a 5
			{
				if(ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Enabled])
				{
					if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_IMMUNITY])
					{
						if(!ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_DOORS);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_DOORS);
						}
					}
				}
			}
		}
		
		switch(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE])
		{
			case VEHICLE_TYPE_SELL:
			{
				PLAYER_TEMP[playerid][pt_SELECTED_BUY_VEHICLE_ID] = vehicleid;
				
				new DBResult:Result, DB_Query[120], player_vehicles;
				format(DB_Query, sizeof(DB_Query), "SELECT COUNT(`ID_USER`) AS `VEHICLES` FROM `PLAYER_VEHICLES` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
				Result = db_query(Database, DB_Query);
				if(db_num_rows(Result)) player_vehicles = db_get_field_assoc_int(Result, "VEHICLES");
				db_free_result(Result);
				
				
				if(player_vehicles >= MAX_SU_VEHICLES) return SendClientMessageEx(playerid, -1, "{999999}No puedes comprar más vehículos, el límite es %d.", MAX_SU_VEHICLES);
				if(!ACCOUNT_INFO[playerid][ac_SU])
				{
					if(player_vehicles >= MAX_NU_VEHICLES)
					{
						SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VEHICLES);
						return 1;
					}
				}
				
				ShowDialog(playerid, DIALOG_BUY_VEHICLE);
				return 1;
			}
			case VEHICLE_TYPE_WORK:
			{
				if(!PLAYER_WORKS[playerid][ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ])
				{
					if(ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Enabled])
					{
						if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_IMMUNITY])
						{
							if(!ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
							else
							{
								if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] = 0;
								else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] ++;
								
								PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] = gettime();
								if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
							}
						}
					}
					return 1;
				}
				
				if(PLAYER_TEMP[playerid][pt_WORKING_IN] && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_VEHICLES[vehicleid][work_vehicle_WORK])
				{
					if(ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Enabled])
					{
						if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_IMMUNITY])
						{
							if(!ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
							else
							{
								if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] = 0;
								else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] ++;
								
								PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] = gettime();
								if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
							}
						}
					}
					return 1;
				}
				
				if(WORK_VEHICLES[vehicleid][work_vehicle_NEED_DUTY])
				{
					if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_VEHICLES[vehicleid][work_vehicle_WORK])
					{
						if(ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Enabled])
						{
							if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_IMMUNITY])
							{
								if(!ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
								else
								{
									if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] = 0;
									else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] ++;
									
									PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] = gettime();
									if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
								}
							}
						}
						return 1;
					}
				}
				
				if(WORK_VEHICLES[vehicleid][work_vehicle_EXP] > PLAYER_SKILLS[playerid][ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ])
				{
					if(ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Enabled])
					{
						if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_IMMUNITY])
						{
							if(!ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
							else
							{
								if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] = 0;
								else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] ++;
								
								PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_LAST_DETECTION] = gettime();
								if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_WORK][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_VEHICLE_WORK][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_WORK);
							}
						}
					}
					return 1;
				}
				
				switch(WORK_VEHICLES[vehicleid][work_vehicle_WORK])
				{
					case WORK_TAXI, WORK_HARVESTER, WORK_FUMIGATOR: StartPlayerJob(playerid, WORK_VEHICLES[vehicleid][work_vehicle_WORK], vehicleid);
					case WORK_TRUCK:
					{
						if(TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADED])
						{
							if(TRUCK_VEHICLE[vehicleid][truck_vehicle_DRIVER_USER_ID] != ACCOUNT_INFO[playerid][ac_ID])
							{
								SendClientMessage(playerid, -1, "{999999}No eres el conductor de este camión.");
								RemovePlayerFromVehicle(playerid);
								return 1;
							}
							else StartPlayerJob(playerid, WORK_VEHICLES[vehicleid][work_vehicle_WORK], vehicleid);
						}
						else StartPlayerJob(playerid, WORK_VEHICLES[vehicleid][work_vehicle_WORK], vehicleid);
					}
					case WORK_TRASH:
					{
						if(TRASH_VEHICLES[vehicleid][trash_vehicle_JOB_STARTED])
						{
							if(TRASH_VEHICLES[vehicleid][trash_vehicle_DRIVER_ID] != playerid)
							{
								SendClientMessage(playerid, -1, "{999999}No eres el conductor de este camión.");
								RemovePlayerFromVehicle(playerid);
								return 1;
							}
							
							SetPlayerTrashCheckpoint(playerid, vehicleid);
						}
						else
						{
							if(PLAYER_TEMP[playerid][pt_TRASH_DRIVER] || PLAYER_TEMP[playerid][pt_TRASH_PASSENGER])
							{
								SendClientMessage(playerid, -1, "{999999}Ya estás trabajando con otro compañero.");
								RemovePlayerFromVehicle(playerid);
								return 1;
							}
							
							PLAYER_TEMP[playerid][pt_TRASH_DRIVER] = true;
							PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] = vehicleid;
							TRASH_VEHICLES[vehicleid][trash_vehicle_DRIVER_ID] = playerid;
							
							if(TRASH_VEHICLES[vehicleid][trash_vehicle_PASSENGER_ID] == INVALID_PLAYER_ID) SendClientMessage(playerid, -1, "{CCCCCC}Necesitas un compañero para empezar con el trabajo.");
							else ShowDialog(playerid, DIALOG_SELECT_TRASH_ROUTE);
						}
					}
					case WORK_PIZZA:
					{
						if(PIZZA_VEHICLE[vehicleid][pizza_vehicle_STARTED])
						{
							if(PIZZA_VEHICLE[vehicleid][pizza_vehicle_DRIVER_AID] != ACCOUNT_INFO[playerid][ac_ID])
							{
								if(GetVehicleDistanceFromPoint(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_X], GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Y], GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Z]) < 20.0)
								{
									SetVehicleToRespawnEx(vehicleid);
								}
								
								SendClientMessage(playerid, -1, "{999999}No eres el conductor de esta moto.");
								RemovePlayerFromVehicle(playerid);
								return 1;
							}
							
							if(!PLAYER_TEMP[playerid][pt_PIZZA_PROCCESS])
							{
								SendClientMessage(playerid, -1, "{CCCCCC}Ya has repartido todas las pizzas, vuelve a la pizzería para cobrar.");
								SetPlayer_Pizza_Checkpoint(playerid, -1);
							}
							else
							{
								SendClientMessageEx(playerid, -1, "{CCCCCC}Te quedan %d pizzas por repartir.", PLAYER_TEMP[playerid][pt_PIZZA_PROCCESS]);
								if(PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT_DELI])
								{
									PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT] = randomEx(sizeof(PIZZA_DELIVERY_POINT), PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT]);
									PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT_DELI] = false;
								}
								SetPlayer_Pizza_Checkpoint(playerid, PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT]);
							}
						}
						else
						{
							PIZZA_VEHICLE[vehicleid][pizza_vehicle_STARTED] = true;
							PIZZA_VEHICLE[vehicleid][pizza_vehicle_DRIVER_AID] = ACCOUNT_INFO[playerid][ac_ID];
							PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZAS] = minrand(3, 6);
							PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT] = random( sizeof(PIZZA_DELIVERY_POINT) );
							PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT_DELI] = false;
							PLAYER_TEMP[playerid][pt_PIZZA_PROCCESS] = PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZAS];
							PLAYER_TEMP[playerid][pt_DELIVERED_PIZZAS] = 0;
							
							SendClientMessageEx(playerid, -1, "{CCCCCC}Esta moto tiene %d pizzas, repartelas todas y vuelve a la pizzería para cobrar.", PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZAS]);
							SetPlayer_Pizza_Checkpoint(playerid, PIZZA_VEHICLE[vehicleid][pizza_vehicle_PIZZA_POINT]);
						}
					}
				}
			}
		}
		if(VEHICLE_INFO[GetVehicleModel(vehicleid) - 400][vehicle_info_VALID] && !PLAYER_TEMP[playerid][pt_IN_TUNING_GARAGE]) ShowPlayerSpeedoMeter(playerid);
		
		if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
		{
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] == VEHICLE_STATE_NORMAL)
			{
				PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
				DisablePlayerTaxiMark(playerid);
				
				SendClientMessage(playerid, -1, "{999999}Tu taxi se ha cancelado porque te has subido a un vehículo.");
			}
		}
		if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
		{
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] == VEHICLE_STATE_NORMAL)
			{
				PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
				DisablePlayerMechanicMark(playerid);
				
				SendClientMessage(playerid, -1, "{999999}Tu mecánico se ha cancelado porque te has subido a un vehículo.");
			}
		}
    }
	else if(newstate == PLAYER_STATE_PASSENGER)
	{
		SetPlayerArmedWeapon(playerid, 0);
		PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
		
		new vehicleid = GetPlayerVehicleID(playerid);
		PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] = vehicleid;
		
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS] && VEHICLE_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400][vehicle_info_PASSENGER_DOOR]) //cerrado
		{
			if(gettime() - GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_CLOSED_TIME] > 5) // Si el tiempo que paso desde que cerro es mayor a 5
			{
				if(ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Enabled])
				{
					if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_IMMUNITY])
					{
						if(!ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_DOORS);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_PLAYER_VEHICLE_DOORS][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_PLAYER_VEHICLE_DOORS);
						}
					}
				}
			}
		}
		
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE] == VEHICLE_TYPE_WORK)
		{
			switch(WORK_VEHICLES[vehicleid][work_vehicle_WORK])
			{
				case WORK_TAXI:
				{
					if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] == INVALID_PLAYER_ID) return 1;
					if(TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_ENABLED])
					{
						if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
						{
							PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
							DisablePlayerTaxiMark(playerid);
						}
						return 1;
					}
					
					ShowPlayerTaxiMeter(playerid);
					if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
					{
						PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
						DisablePlayerTaxiMark(playerid);
					}
					
					TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_ENABLED] = true;
					GetVehiclePos(vehicleid, TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_Z]);
					KillTimer(TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_TIMER]);
					TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_TIMER] = SetTimerEx("UpdateVehicleTaximeter", 4000, true, "iii", vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER], playerid);
				}
				case WORK_TRASH:
				{
					if(!PLAYER_WORKS[playerid][WORK_TRASH])
					{
						SendClientMessageEx(playerid, -1, "{999999}Necesitas ser %s para poder conducir este vehículo.", work_info[ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ][work_info_NAME]);
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
					
					if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRASH)
					{
						SendClientMessage(playerid, -1, "{999999}No estás de servicio como basurero, ve a vestirte en el puesto de la entrada del vertedero.");
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
					
					if(TRASH_VEHICLES[vehicleid][trash_vehicle_JOB_STARTED])
					{
						if(TRASH_VEHICLES[vehicleid][trash_vehicle_PASSENGER_ID] != playerid)
						{
							SendClientMessage(playerid, -1, "{999999}No eres el acompañante de este camión.");
							RemovePlayerFromVehicle(playerid);
							return 1;
						}
						
						SetPlayerTrashCheckpoint(playerid, vehicleid);
					}
					else
					{
						if(PLAYER_TEMP[playerid][pt_TRASH_DRIVER] || PLAYER_TEMP[playerid][pt_TRASH_PASSENGER])
						{
							SendClientMessage(playerid, -1, "{999999}Ya estás trabajando con otro compañero.");
							RemovePlayerFromVehicle(playerid);
							return 1;
						}
						
						PLAYER_TEMP[playerid][pt_TRASH_PASSENGER] = true;
						PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] = vehicleid;
						TRASH_VEHICLES[vehicleid][trash_vehicle_PASSENGER_ID] = playerid;
						
						if(TRASH_VEHICLES[vehicleid][trash_vehicle_DRIVER_ID] == INVALID_PLAYER_ID) SendClientMessage(playerid, -1, "{CCCCCC}Necesitas un compañero para empezar con el trabajo.");
						else ShowDialog(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], DIALOG_SELECT_TRASH_ROUTE);
					}
				}
			}
		}
		
		if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
		{
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] == VEHICLE_STATE_NORMAL)
			{
				PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
				DisablePlayerTaxiMark(playerid);
				
				SendClientMessage(playerid, -1, "{999999}Tu taxi se ha cancelado porque te has subido a un vehículo.");
			}
		}
		if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
		{
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] == VEHICLE_STATE_NORMAL)
			{
				PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
				DisablePlayerMechanicMark(playerid);
				
				SendClientMessage(playerid, -1, "{999999}Tu mecánico se ha cancelado porque te has subido a un vehículo.");
			}
		}
	}
	else if(newstate == PLAYER_STATE_SPECTATING)
	{
		if(!PLAYER_TEMP[playerid][pt_PLAYER_SPECTATE])
		{
			if(ac_Info[CHEAT_SPECTATE][ac_Enabled])
			{
				if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_SPECTATE][p_ac_info_IMMUNITY])
				{
					if(!ac_Info[CHEAT_SPECTATE][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_SPECTATE);
					else
					{
						if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_SPECTATE][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_SPECTATE][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_SPECTATE][p_ac_info_DETECTIONS] = 0;
						else PLAYER_AC_INFO[playerid][CHEAT_SPECTATE][p_ac_info_DETECTIONS] ++;
						
						PLAYER_AC_INFO[playerid][CHEAT_SPECTATE][p_ac_info_LAST_DETECTION] = gettime();
						if(PLAYER_AC_INFO[playerid][CHEAT_SPECTATE][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_SPECTATE][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_SPECTATE);
					}
				}
			}
		}
	}
	
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
		if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] != INVALID_VEHICLE_ID)
		{
			KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][7]);
			
			
			GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
			GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_DRIVER] = INVALID_PLAYER_ID;
			GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_LAST_DRIVER] = playerid;
			GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_OCCUPIED] = false;
			
			StopAudioStreamForPlayer(playerid);
			HidePlayerSpeedoMeter(playerid);
			
			if(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_TYPE] == VEHICLE_TYPE_WORK)
			{
				switch(WORK_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][work_vehicle_WORK])
				{
					case WORK_TAXI, WORK_HARVESTER, WORK_FUMIGATOR, WORK_TRUCK: EndPlayerJob(playerid);
					case WORK_PIZZA:
					{
						if(PIZZA_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][pizza_vehicle_STARTED])
						{
							if(PLAYER_TEMP[playerid][pt_PIZZA_PROCCESS])
							{
								new Float:distance =	GetPlayerDistanceFromPoint
																(
																	playerid,
																	PIZZA_DELIVERY_POINT[ PIZZA_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][pizza_vehicle_PIZZA_POINT] ][0],
																	PIZZA_DELIVERY_POINT[ PIZZA_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][pizza_vehicle_PIZZA_POINT] ][1],
																	PIZZA_DELIVERY_POINT[ PIZZA_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][pizza_vehicle_PIZZA_POINT] ][2]
																);
										
								if(distance > 20.0)
								{
									SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a subir a la moto, aún estás muy lejos del cliente.");
									if(IsValidDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]))
									{
										DestroyDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]);
										PLAYER_TEMP[playerid][pt_PIZZA_ACTOR] = INVALID_STREAMER_ID;
									}
									if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]))
									{
										DestroyDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]);
										PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
									}
								}
								else
								{
									if(IsPlayerInDynamicCP(playerid, PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]))
									{
										PLAYER_TEMP[playerid][pt_PIZZA_PROCCESS] --;
										PLAYER_TEMP[playerid][pt_DELIVERED_PIZZAS] ++;
										RemovePlayerAttachedObject(playerid, 9);
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
										ApplyDynamicActorAnimation(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR], "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 0);
										ApplyDynamicActorAnimation(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR], "FOOD", "EAT_Pizza", 4.1, false, true, true, false, 0);
										DestroyDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]);
										PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
										PIZZA_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][pizza_vehicle_PIZZA_POINT_DELI] = true;
										SendClientMessage(playerid, -1, "Genial, vuelve a subir a la moto para continuar.");
									}
									else
									{
										SetPlayerArmedWeapon(playerid, 0);
										SetPlayerAttachedObject(playerid, 9, 1582, 6, 0.094, 0.077999, -0.165999, 72.0, 8.799999, 9.899992, 0.73, 0.774999, 1.0);
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
									}
								}
							}
							else
							{
								if(IsValidDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]))
								{
									DestroyDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]);
									PLAYER_TEMP[playerid][pt_PIZZA_ACTOR] = INVALID_STREAMER_ID;
								}
								if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]))
								{
									DestroyDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]);
									PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
								}
								SendClientMessage(playerid, -1, "Vuelve a subir a la moto y ve a la pizzería para cobrar.");
							}
						}
					}
				}
			}
			if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] == PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID])
			{
				if(PLAYER_TEMP[playerid][pt_TRASH_DRIVER])
				{
					if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_JOB_STARTED])
					{
						if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID] == playerid) SendClientMessage(playerid, -1, "{CCCCCC}Si quieres dejar de trabajar ve al vertedero y ponte tu ropa.");
					}
					else
					{
						TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID] = INVALID_PLAYER_ID;
						PLAYER_TEMP[playerid][pt_TRASH_DRIVER] = false;
						PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] = INVALID_VEHICLE_ID;
					}
				}
			}
		}
	}
	else if(oldstate == PLAYER_STATE_PASSENGER)
	{
		if(PLAYER_TEMP[playerid][pt_TAXI_METER_ENABLED])
		{
			new driver = GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_DRIVER];
			
			new work_extra_payment;
			if(work_info[WORK_TAXI][work_info_EXTRA_PAY] > 0 && work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP] > 0)
			{
				work_extra_payment = (work_info[WORK_TAXI][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ driver ][WORK_TAXI], work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP])));
				if(work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT];
			
				if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
			}
			PLAYER_SKILLS[driver][WORK_TAXI] ++;
			
			SendClientMessageEx(driver, -1, "{CCCCCC}Has ganado %s$ con este viaje.", number_format_thousand(TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_PAYMENT] + work_extra_payment));
			GivePlayerCash(driver, TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_PAYMENT] + work_extra_payment);
			GivePlayerCash(playerid, -TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_PAYMENT]);
			
			SendClientMessageEx(playerid, -1, "{CCCCCC}El taxi te costó %s$.", number_format_thousand(TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_PAYMENT]));
			ResetVehicleTaxiMeter(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID]);
			HidePlayerTaxiMeter(playerid);
			UpdatePlayerTaxiMeterTextdraws(driver);
			
			
			new passenger = GetVehicleFirstPassenger( PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] );
			if(passenger != INVALID_PLAYER_ID)
			{
				ShowPlayerTaxiMeter(passenger);
				if(PLAYER_TEMP[passenger][pt_WANT_TAXI])
				{
					PLAYER_TEMP[passenger][pt_WANT_TAXI] = false;
					DisablePlayerTaxiMark(passenger);
				}
				
				TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_ENABLED] = true;
				GetVehiclePos(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID], TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_OLD_Z]);
				KillTimer(TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_TIMER]);
				TAXI_METER_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][veh_taxi_meter_TIMER] = SetTimerEx("UpdateVehicleTaximeter", 4000, true, "iii", PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID], GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_DRIVER], passenger);
			}
		}
		if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] == PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID])
		{
			if(PLAYER_TEMP[playerid][pt_TRASH_PASSENGER])
			{
				if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_JOB_STARTED])
				{
					if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID] == playerid)
					{
						if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_CP] >= TRASH_OBJECTS[ TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE] ][trash_route_OBJECTS]) SendClientMessage(playerid, -1, "{CCCCCC}Sube al camión para volver al vertedero y recibir la paga.");
						else
						{
							new cp = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_CP];
							new route = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE];
							new Float:distance =	GetPlayerDistanceFromPoint
													(
														playerid,
														TRASH_OBJECTS[ route ][trash_object_X][ cp ],
														TRASH_OBJECTS[ route ][trash_object_Y][ cp ],
														TRASH_OBJECTS[ route ][trash_object_Z][ cp ]
													);
							
							if(distance > 10.0) SendClientMessage(playerid, -1, "{CCCCCC}Vuelve a subir al camión, aún estás demasiado lejos del punto de recogida.");
							else
							{
								if(IsPlayerInDynamicCP(playerid, PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT]))
								{
									if(!PLAYER_WORKS[playerid][WORK_TRASH]) return DestroyPlayerTrashCheckpoint(playerid);
									if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRASH) return DestroyPlayerTrashCheckpoint(playerid);
									if(!PLAYER_TEMP[playerid][pt_TRASH_PASSENGER]) return 1;
									
									new driver = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID];
									SendClientMessage(driver, -1, "{CCCCCC}Espera mientras tu compañero recoge la basura.");
									
									new Float:offset = floatdiv(PLAYER_SKILLS[playerid][WORK_TRASH], 10);
									if(offset > 30.0) offset = 30.0;
									
									PLAYER_TEMP[playerid][pt_RECYCLE_BIN_VALUE] = 10.0 + offset;
									UpdatePlayerTrashRecycleSize(playerid);
									PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0]);
									PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1]);
									PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2]);
									
									TogglePlayerControllable(playerid, false);
									SetCameraBehindPlayer(playerid);
									ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.1, true, false, false, false, 0);
									
									KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][10]);
									PLAYER_TEMP[playerid][pt_TIMERS][10] = SetTimerEx("RecycleUp", 1000, false, "i", playerid);
									return 1;
								}
								SendClientMessage(playerid, -1, "{CCCCCC}Recoge la basura y vuelve al camión para continuar.");
							}
						}
					}
				}
				else
				{
					TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID] = INVALID_PLAYER_ID;
					PLAYER_TEMP[playerid][pt_TRASH_PASSENGER] = false;
					PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] = INVALID_VEHICLE_ID;
				}
			}
		}
	}
    return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	
	if(PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_NORMAL)
	{
		if(ac_Info[CHEAT_VEHICLE_ENTER_SPAMMER][ac_Enabled])
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_ENTER_SPAMMER][p_ac_info_IMMUNITY])
			{
				new interval = GetTickDiff(GetTickCount(), PLAYER_TEMP[playerid][pt_ANTIFLOOD_ENTER_VEHICLE]);
				
				if(interval < 50)
				{
					if(!ac_Info[CHEAT_VEHICLE_ENTER_SPAMMER][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_ENTER_SPAMMER, float(interval));
					else
					{
						if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_ENTER_SPAMMER][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_VEHICLE_ENTER_SPAMMER][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_ENTER_SPAMMER][p_ac_info_DETECTIONS] = 0;
						else PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_ENTER_SPAMMER][p_ac_info_DETECTIONS] ++;
						
						PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_ENTER_SPAMMER][p_ac_info_LAST_DETECTION] = gettime();
						if(PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_ENTER_SPAMMER][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_VEHICLE_ENTER_SPAMMER][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_ENTER_SPAMMER, float(interval));
					}
				}
				PLAYER_TEMP[playerid][pt_ANTIFLOOD_ENTER_VEHICLE] = GetTickCount();
			}
		}
	}
	
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK)
	{
		SetPlayerPosEx(playerid, PLAYER_TEMP[playerid][pt_INJURED_POS][0], PLAYER_TEMP[playerid][pt_INJURED_POS][1], PLAYER_TEMP[playerid][pt_INJURED_POS][2], PLAYER_TEMP[playerid][pt_INJURED_POS][3], 0, 0);
		ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.1, true, 0, 0, 1, 0, 1);
		return 1;
	}
	
	new Float:sx, Float:sy, Float:sz;
	GetPlayerPos(playerid, sx, sy, sz);
	
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] == WORK_MEDIC)
	{
		if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] != WORK_MEDIC)
		{
			SendClientMessage(playerid, -1, "{999999}Estando de servicio como médico solo puedes llevar ambulancias.");
			RemovePlayerFromVehicle(playerid);
			SetPlayerPos(playerid, sx, sy, sz);
			return 1;
		}
	}
	
	if(!ispassenger)
	{
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_OCCUPIED])
		{
			if(PLAYER_VEHICLES[vehicleid][player_vehicle_VALID])
			{
				if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID])
				{
					if(ACCOUNT_INFO[playerid][ac_LEVEL] <= 2)
					{
						SendClientMessage(playerid, -1, "{999999}No puedes robar vehículos con un nivel tan bajo.");
						RemovePlayerFromVehicle(playerid);
						SetPlayerPos(playerid, sx, sy, sz);
						
						TogglePlayerControllable(playerid, false);
						KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
						PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 5000, false, "ib", playerid, true);
						return 1;
					}
				}
			}
			else
			{
				if(ACCOUNT_INFO[playerid][ac_LEVEL] <= 2)
				{
					SendClientMessage(playerid, -1, "{999999}No puedes robar vehículos con un nivel tan bajo.");
					RemovePlayerFromVehicle(playerid);
					SetPlayerPos(playerid, sx, sy, sz);
					
					TogglePlayerControllable(playerid, false);
					KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
					PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 5000, false, "ib", playerid, true);
					return 1;
				}
			}
			
			PLAYER_AC_INFO[playerid][CHEAT_OCCUPIED_VEHICLE_ENTER][p_ac_info_IMMUNITY] = gettime() + 10;
		}
		
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE] == VEHICLE_TYPE_WORK)
		{
			if(!PLAYER_WORKS[playerid][ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ])
			{
				SendClientMessageEx(playerid, -1, "{999999}Necesitas ser %s para poder conducir este vehículo.", work_info[ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ][work_info_NAME]);
				RemovePlayerFromVehicle(playerid);
				SetPlayerPos(playerid, sx, sy, sz);
				return 1;
			}
			
			if(PLAYER_TEMP[playerid][pt_WORKING_IN] && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_VEHICLES[vehicleid][work_vehicle_WORK])
			{
				SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
				RemovePlayerFromVehicle(playerid);
				SetPlayerPos(playerid, sx, sy, sz);
				return 1;
			}
			
			if(WORK_VEHICLES[vehicleid][work_vehicle_NEED_DUTY])
			{
				if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_VEHICLES[vehicleid][work_vehicle_WORK])
				{
					SendClientMessageEx(playerid, -1, "{999999}Necesitas estar de servicio como %s para poder conducir este vehículo.", work_info[ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ][work_info_NAME]);
					RemovePlayerFromVehicle(playerid);
					SetPlayerPos(playerid, sx, sy, sz);
					return 1;
				}
			}
			
			if(WORK_VEHICLES[vehicleid][work_vehicle_EXP] > PLAYER_SKILLS[playerid][ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ])
			{
				SendClientMessageEx(playerid, -1, "{999999}Necesitas más experiencia en este trabajo para llevar este vehículo. (%d/%d)", PLAYER_SKILLS[playerid][ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ], WORK_VEHICLES[vehicleid][work_vehicle_EXP]);
				RemovePlayerFromVehicle(playerid);
				SetPlayerPos(playerid, sx, sy, sz);
				return 1;
			}
		}
	}
	else
	{
		if(WORK_VEHICLES[vehicleid][work_vehicle_VALID] && WORK_VEHICLES[vehicleid][work_vehicle_WORK] == WORK_TRASH)
		{
			if(!PLAYER_WORKS[playerid][WORK_TRASH])
			{
				SendClientMessageEx(playerid, -1, "{999999}Necesitas ser %s para poder entrar a este vehículo.", work_info[ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ][work_info_NAME]);
				RemovePlayerFromVehicle(playerid);
				SetPlayerPos(playerid, sx, sy, sz);
				return 1;
			}
			
			if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_VEHICLES[vehicleid][work_vehicle_WORK])
			{
				SendClientMessageEx(playerid, -1, "{999999}Necesitas estar de servicio como %s para poder conducir este vehículo.", work_info[ WORK_VEHICLES[vehicleid][work_vehicle_WORK] ][work_info_NAME]);
				RemovePlayerFromVehicle(playerid);
				SetPlayerPos(playerid, sx, sy, sz);
				return 1;
			}
		}
	}
	return 1;
}

AddTestVehicle(bool:static_veh, modelid, Float:X, Float:Y, Float:Z, Float:Angle, Color1, Color2)
{
	new vehicle_id = INVALID_VEHICLE_ID;
	if(static_veh) vehicle_id = AddStaticVehicleEx(modelid, X, Y, Z, Angle, Color1, Color2, -1, false);
	else vehicle_id = CreateVehicle(modelid, X, Y, Z, Angle, Color1, Color2, -1, false);
	
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_VALID] = true;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_TYPE] = VEHICLE_TYPE_TEST;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] = modelid;
	format(GLOBAL_VEHICLES[vehicle_id][gb_vehicle_NUMBER_PLATE], 32, "Test Vehicle");
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X] = X;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y] = Y;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z] = Z;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_ANGLE] = Angle;
	
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][0] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X];
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][1] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y];
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][2] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z];
	
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_HEALTH] = 1000.0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_PANELS] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_DOORS] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_LIGHTS] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_TIRES] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_1] = Color1;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_2] = Color2;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PAINTJOB] = 3; // No paintjob
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS] = VEHICLE_INFO[modelid - 400][vehicle_info_MAX_GAS];
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_GAS] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS];
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_INTERIOR] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_WORLD] = 0;
	
	SetVehicleToRespawnEx(vehicle_id);
	return vehicle_id;
}

AddPersonalVehicle(playerid, modelid, Float:X, Float:Y, Float:Z, Float:Angle, Color1, Color2, Float:max_gas)
{
	new vehicle_id = INVALID_VEHICLE_ID;
	vehicle_id = CreateVehicle(modelid, X, Y, Z, Angle, Color1, Color2, -1);
	
	if(vehicle_id == INVALID_VEHICLE_ID) return false;
	
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_VALID] = true;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_TYPE] = VEHICLE_TYPE_PERSONAL;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] = modelid;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X] = X;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y] = Y;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z] = Z;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_ANGLE] = Angle;
	
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][0] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X];
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][1] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y];
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][2] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z];
	
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_HEALTH] = 1000.0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_PANELS] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_DOORS] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_LIGHTS] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_TIRES] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_1] = Color1;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_2] = Color2;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PAINTJOB] = 3; // No paintjob
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS] = max_gas;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_GAS] = max_gas;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_INTERIOR] = 0;
	GLOBAL_VEHICLES[vehicle_id][gb_vehicle_WORLD] = 0;
	
	PLAYER_VEHICLES[vehicle_id][player_vehicle_VALID] = true;
	PLAYER_VEHICLES[vehicle_id][player_vehicle_OWNER_ID] = ACCOUNT_INFO[playerid][ac_ID];
	RegisterNewPlayerVehicle(playerid, vehicle_id);
	
	SetVehicleToRespawnEx(vehicle_id);
	return vehicle_id;
}

RegisterNewPlayerVehicle(playerid, vehicleid)
{
	new DBResult:Result, DB_Query[400];
	format
	(
		DB_Query, sizeof DB_Query,
		"\
			INSERT INTO `PLAYER_VEHICLES`\
			(\
				`ID_USER`, `MODELID`, `SPAWN_X`, `SPAWN_Y`, `SPAWN_Z`, `SPAWN_ANGLE`, `COLOR_1`, `COLOR_2`, `GAS`, `MAX_GAS`\
			)\
			VALUES\
			(\
				'%d', '%d', '%f', '%f', '%f', '%f', '%d', '%d', '%f', '%f'\
			);\
			SELECT MAX(`ID`) FROM `PLAYER_VEHICLES`;\
		", 
		ACCOUNT_INFO[playerid][ac_ID],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_X],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Y],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Z],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_ANGLE],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_COLOR_1],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_COLOR_2],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS],
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS]
	);
	Result = db_query(Database, DB_Query);

	if(db_num_rows(Result))
	{
		PLAYER_VEHICLES[vehicleid][player_vehicle_ID] = db_get_field_int(Result, 0);
		format(GLOBAL_VEHICLES[vehicleid][gb_vehicle_NUMBER_PLATE], 32, "%04d %c%c%c", PLAYER_VEHICLES[vehicleid][player_vehicle_ID], getRandomLetter(), getRandomLetter(), getRandomLetter());
		
		DB_Query[0] = EOS;
		format
		(
			DB_Query, sizeof DB_Query, 
			"\
				INSERT INTO `PLAYER_VEHICLE_COMPONENTS` (`ID_VEHICLE`) VALUES ('%d');\
				UPDATE `PLAYER_VEHICLES` SET `PLATE` = '%q' WHERE `ID` = '%d';\
			",
				PLAYER_VEHICLES[vehicleid][player_vehicle_ID],
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_NUMBER_PLATE], PLAYER_VEHICLES[vehicleid][player_vehicle_ID]
		);
		db_query(Database, DB_Query);
	}
	db_free_result(Result);
	
	return 1;
}

LoadPlayerVehicles(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[360];
	format(DB_Query, sizeof(DB_Query), "SELECT `PLAYER_VEHICLES`.*, `PLAYER_VEHICLE_COMPONENTS`.* FROM `PLAYER_VEHICLES`, `PLAYER_VEHICLE_COMPONENTS` WHERE `PLAYER_VEHICLES`.`ID_USER` = '%d' AND `PLAYER_VEHICLE_COMPONENTS`.`ID_VEHICLE` = `PLAYER_VEHICLES`.`ID` ORDER BY `PLAYER_VEHICLES`.`ID` DESC LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], MAX_SU_VEHICLES);
	Result = db_query(Database, DB_Query);
	
	new total_vehicles;
	for(new i; i < db_num_rows(Result); i++ )
	{
		if(total_vehicles >= MAX_SU_VEHICLES)
		{
			printf("---> MAX_SU_VEHICLES superado al cargar de base de datos.");
			break;
		}
		
		new modelid, Float:pos[4], color[2];
		modelid = db_get_field_assoc_int(Result, "MODELID");
		pos[0] = db_get_field_assoc_float(Result, "SPAWN_X");
		pos[1] = db_get_field_assoc_float(Result, "SPAWN_Y");
		pos[2] = db_get_field_assoc_float(Result, "SPAWN_Z");
		pos[3] = db_get_field_assoc_float(Result, "SPAWN_ANGLE");
		color[0] = db_get_field_assoc_int(Result, "COLOR_1");
		color[1] = db_get_field_assoc_int(Result, "COLOR_2");
		
		new vehicle_id = INVALID_VEHICLE_ID;
		vehicle_id = CreateVehicle
		(
			modelid,
			pos[0],
			pos[1],
			pos[2],
			pos[3],
			color[0],
			color[1],
			-1
		);
		
		if(vehicle_id == INVALID_VEHICLE_ID)
		{
			db_free_result(Result);
			return false;
		}
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_VALID] = true;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_TYPE] = VEHICLE_TYPE_PERSONAL;
		
		PLAYER_VEHICLES[vehicle_id][player_vehicle_VALID] = true;
		PLAYER_VEHICLES[vehicle_id][player_vehicle_OWNER_ID] = ACCOUNT_INFO[playerid][ac_ID];
		PLAYER_VEHICLES[vehicle_id][player_vehicle_ID] = db_get_field_assoc_int(Result, "ID");
		PLAYER_VEHICLES[vehicle_id][player_vehicle_ACCESSIBLE] = true;
		
		db_get_field_assoc(Result, "PLATE", GLOBAL_VEHICLES[vehicle_id][gb_vehicle_NUMBER_PLATE], 32);
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] = modelid;
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X] = pos[0];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y] = pos[1];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z] = pos[2];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_ANGLE] = pos[3];
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][0] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_X];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][1] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Y];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_POS][2] = GLOBAL_VEHICLES[vehicle_id][gb_vehicle_SPAWN_Z];
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_HEALTH] = db_get_field_assoc_float(Result, "HEALTH");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_PANELS] = db_get_field_assoc_int(Result, "DAMAGE_PANELS");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_DOORS] = db_get_field_assoc_int(Result, "DAMAGE_DOORS");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_LIGHTS] = db_get_field_assoc_int(Result, "DAMAGE_LIGHTS");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DAMAGE_TIRES] = db_get_field_assoc_int(Result, "DAMAGE_TIRES");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_1] = color[0];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COLOR_2] = color[1];
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PAINTJOB] = db_get_field_assoc_int(Result, "PAINTJOB");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MAX_GAS] = db_get_field_assoc_float(Result, "MAX_GAS");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_GAS] = db_get_field_assoc_float(Result, "GAS");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PARAMS_DOORS] = db_get_field_assoc_int(Result, "CLOSED");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_STATE] = db_get_field_assoc_int(Result, "STATE");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_INTERIOR] = db_get_field_assoc_int(Result, "INTERIOR");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_WORLD] = db_get_field_assoc_int(Result, "WORLD");
		
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][0] = db_get_field_assoc_int(Result, "SLOT_0");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][1] = db_get_field_assoc_int(Result, "SLOT_1");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][2] = db_get_field_assoc_int(Result, "SLOT_2");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][3] = db_get_field_assoc_int(Result, "SLOT_3");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][4] = db_get_field_assoc_int(Result, "SLOT_4");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][5] = db_get_field_assoc_int(Result, "SLOT_5");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][6] = db_get_field_assoc_int(Result, "SLOT_6");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][7] = db_get_field_assoc_int(Result, "SLOT_7");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][8] = db_get_field_assoc_int(Result, "SLOT_8");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][9] = db_get_field_assoc_int(Result, "SLOT_9");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][10] = db_get_field_assoc_int(Result, "SLOT_10");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][11] = db_get_field_assoc_int(Result, "SLOT_11");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][12] = db_get_field_assoc_int(Result, "SLOT_12");
		GLOBAL_VEHICLES[vehicle_id][gb_vehicle_COMPONENTS][13] = db_get_field_assoc_int(Result, "SLOT_13");
		
		if(!ACCOUNT_INFO[playerid][ac_SU]) 
		{
			if(total_vehicles >= MAX_NU_VEHICLES)
			{
				GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PARAMS_DOORS] = 1;
				PLAYER_VEHICLES[vehicle_id][player_vehicle_ACCESSIBLE] = false;
			}
		}
		
		new DBResult:Result_vobjects, vobjects;
		format(DB_Query, sizeof(DB_Query), "SELECT * FROM `VEHICLE_OBJECTS` WHERE `ID_VEHICLE` = '%d' LIMIT %d;", PLAYER_VEHICLES[vehicle_id][player_vehicle_ID], MAX_SU_VOBJECTS);
		Result_vobjects = db_query(Database, DB_Query);

		for(new z; z < db_num_rows(Result_vobjects); z++ )
		{
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_VALID] = true;
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_ID] = db_get_field_assoc_int(Result_vobjects, "ID");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_TYPE] = db_get_field_assoc_int(Result_vobjects, "TYPE");
			db_get_field_assoc(Result_vobjects, "NAME", VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_NAME], 32);
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_MODELID] = db_get_field_assoc_int(Result_vobjects, "MODELID");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_OFFSET][0] = db_get_field_assoc_float(Result_vobjects, "OFF_X");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_OFFSET][1] = db_get_field_assoc_float(Result_vobjects, "OFF_Y");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_OFFSET][2] = db_get_field_assoc_float(Result_vobjects, "OFF_Z");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_ROT][0] = db_get_field_assoc_float(Result_vobjects, "ROT_X");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_ROT][1] = db_get_field_assoc_float(Result_vobjects, "ROT_Y");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_ROT][2] = db_get_field_assoc_float(Result_vobjects, "ROT_Z");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_ATTACHED] = db_get_field_assoc_int(Result_vobjects, "ATTACHED");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_COLORS][0] = db_get_field_assoc_int(Result_vobjects, "COLOR_0");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_COLORS][1] = db_get_field_assoc_int(Result_vobjects, "COLOR_1");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_COLORS][2] = db_get_field_assoc_int(Result_vobjects, "COLOR_2");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_COLORS][3] = db_get_field_assoc_int(Result_vobjects, "COLOR_3");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_COLORS][4] = db_get_field_assoc_int(Result_vobjects, "COLOR_4");
			db_get_field_assoc(Result_vobjects, "TEXT", VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_text_TEXT], 32);
			db_get_field_assoc(Result_vobjects, "FONT", VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_text_FONT], 24);
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_text_FONT_SIZE] = db_get_field_assoc_int(Result_vobjects, "FONT_SIZE");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_text_BOLD] = db_get_field_assoc_int(Result_vobjects, "FONT_BOLD");
			VEHICLE_OBJECTS[vehicle_id][vobjects][vobject_text_FONT_COLOR] = db_get_field_assoc_int(Result_vobjects, "FONT_COLOR");
			UpdateVehicleAttachedObject(vehicle_id, vobjects, true);
			
			vobjects ++;
			db_next_row(Result_vobjects);
		}
		db_free_result(Result_vobjects);
		
		SetVehicleToRespawnEx(vehicle_id);

		
		
		new max_slots = VEHICLE_INFO[GLOBAL_VEHICLES[vehicle_id][gb_vehicle_MODELID] - 400][vehicle_info_BOOT_SLOTS];
		if(max_slots > 0)
		{
			new DBResult:boot_Result, boot_DB_Query[90], boot_slot;
			format(boot_DB_Query, sizeof(boot_DB_Query), "SELECT * FROM `VEHICLE_BOOT` WHERE `ID_VEHICLE` = '%d' LIMIT %d;", PLAYER_VEHICLES[vehicle_id][player_vehicle_ID], max_slots);
			boot_Result = db_query(Database, boot_DB_Query);
			for(new x; x < db_num_rows(boot_Result); x++ )
			{
				VEHICLE_BOOT[vehicle_id][boot_slot][vehicle_boot_VALID] = true;
				VEHICLE_BOOT[vehicle_id][boot_slot][vehicle_boot_OBJECT_ID] = db_get_field_assoc_int(boot_Result, "ID_OBJECT");
				VEHICLE_BOOT[vehicle_id][boot_slot][vehicle_boot_TYPE] = db_get_field_assoc_int(boot_Result, "TYPE");
				VEHICLE_BOOT[vehicle_id][boot_slot][vehicle_boot_INT] = db_get_field_assoc_int(boot_Result, "INT");
				VEHICLE_BOOT[vehicle_id][boot_slot][vehicle_boot_INT_EXTRA] = db_get_field_assoc_int(boot_Result, "INT_EXTRA");
				
				boot_slot ++;
				db_next_row(boot_Result);
			}
			db_free_result(boot_Result);
		}
		
		total_vehicles ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

SavePlayerVehicles(playerid, destroy = false)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	for(new i = 0; i != MAX_VEHICLES; i ++)
	{
		if(!PLAYER_VEHICLES[i][player_vehicle_VALID]) continue;
		if(PLAYER_VEHICLES[i][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) continue;
		
		GetVehiclePos(i, GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_X], GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_Y], GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_Z]);
		GetVehicleZAngle(i, GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_ANGLE]);
		GetVehicleHealth(i, GLOBAL_VEHICLES[i][gb_vehicle_HEALTH]);
		if(GLOBAL_VEHICLES[i][gb_vehicle_HEALTH] > 1000.0) GLOBAL_VEHICLES[i][gb_vehicle_HEALTH] = 1000.0;
		if(GLOBAL_VEHICLES[i][gb_vehicle_HEALTH] < MIN_VEHICLE_HEALTH) GLOBAL_VEHICLES[i][gb_vehicle_HEALTH] = MIN_VEHICLE_HEALTH;
		GetVehicleDamageStatus(i, GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_PANELS], GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_DOORS], GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_LIGHTS], GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_TIRES]);
		GLOBAL_VEHICLES[i][gb_vehicle_WORLD] = 0; /*GetVehicleVirtualWorld(i);*/
		
		new DB_Query[1800];
		format(DB_Query, sizeof DB_Query,
		"\
			UPDATE `PLAYER_VEHICLES` SET \
				`PLATE` = '%q',\
				`MODELID` = '%d',\
				`SPAWN_X` = '%f',\
				`SPAWN_Y` = '%f',\
				`SPAWN_Z` = '%f',\
				`SPAWN_ANGLE` = '%f',\
				`HEALTH` = '%f',\
				`DAMAGE_PANELS` = '%d',\
				`DAMAGE_DOORS` = '%d',\
				`DAMAGE_LIGHTS` = '%d',\
				`DAMAGE_TIRES` = '%d',\
				`COLOR_1` = '%d',\
				`COLOR_2` = '%d',\
				`PAINTJOB` = '%d',\
				`GAS` = '%f',\
				`MAX_GAS` = '%f',\
				`CLOSED` = '%d',\
				`INTERIOR` = '%d',\
				`WORLD` = '%d',\
				`STATE` = '%d' \
			WHERE `ID` = '%d';\
		",
			GLOBAL_VEHICLES[i][gb_vehicle_NUMBER_PLATE],
			GLOBAL_VEHICLES[i][gb_vehicle_MODELID],
			GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_X],
			GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_Y],
			GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_Z],
			GLOBAL_VEHICLES[i][gb_vehicle_SPAWN_ANGLE],
			GLOBAL_VEHICLES[i][gb_vehicle_HEALTH],
			GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_PANELS],
			GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_DOORS],
			GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_LIGHTS],
			GLOBAL_VEHICLES[i][gb_vehicle_DAMAGE_TIRES],
			GLOBAL_VEHICLES[i][gb_vehicle_COLOR_1],
			GLOBAL_VEHICLES[i][gb_vehicle_COLOR_2],
			GLOBAL_VEHICLES[i][gb_vehicle_PAINTJOB],
			GLOBAL_VEHICLES[i][gb_vehicle_GAS],
			GLOBAL_VEHICLES[i][gb_vehicle_MAX_GAS],
			GLOBAL_VEHICLES[i][gb_vehicle_PARAMS_DOORS],
			GLOBAL_VEHICLES[i][gb_vehicle_INTERIOR],
			GLOBAL_VEHICLES[i][gb_vehicle_WORLD],
			GLOBAL_VEHICLES[i][gb_vehicle_STATE],
			
			PLAYER_VEHICLES[i][player_vehicle_ID]
		);
		db_query(Database, DB_Query);
		
		for(new x = 0; x != MAX_VEHICLE_COMPONENTS; x ++)
		{
			DB_Query[0] = EOS;
			
			format(DB_Query, sizeof DB_Query,
			"\
				UPDATE `PLAYER_VEHICLE_COMPONENTS` SET \
					`SLOT_0` = '%d',\
					`SLOT_1` = '%d',\
					`SLOT_2` = '%d',\
					`SLOT_3` = '%d',\
					`SLOT_4` = '%d',\
					`SLOT_5` = '%d',\
					`SLOT_6` = '%d',\
					`SLOT_7` = '%d',\
					`SLOT_8` = '%d',\
					`SLOT_9` = '%d',\
					`SLOT_10` = '%d',\
					`SLOT_11` = '%d',\
					`SLOT_12` = '%d',\
					`SLOT_13` = '%d' \
				WHERE `ID_VEHICLE` = '%d';\
			",
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][0],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][1],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][2],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][3],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][4],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][5],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][6],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][7],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][8],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][9],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][10],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][11],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][12],
				GLOBAL_VEHICLES[i][gb_vehicle_COMPONENTS][13],
				
				PLAYER_VEHICLES[i][player_vehicle_ID]
			);
			db_query(Database, DB_Query);
		}
		
		if(destroy) DestroyVehicleEx(i);
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWNED] = true;
	
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] < MIN_VEHICLE_HEALTH) GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = MIN_VEHICLE_HEALTH;
	
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE] == VEHICLE_TYPE_WORK)
	{
		if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] == WORK_TRASH)
		{
			if(TRASH_VEHICLES[vehicleid][trash_vehicle_JOB_STARTED])
			{
				CancelTrashWork(TRASH_VEHICLES[vehicleid][trash_vehicle_DRIVER_ID], TRASH_VEHICLES[vehicleid][trash_vehicle_PASSENGER_ID], vehicleid);
			}
		}
		
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] = frandom(GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS] / 3, 2);
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = 1000.0;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_PANELS] = 0;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_DOORS] = 0;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_LIGHTS] = 0;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_TIRES] = 0;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] = INVALID_PLAYER_ID;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_DRIVER] = INVALID_PLAYER_ID;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_OCCUPIED] = false;
		
		switch(WORK_VEHICLES[vehicleid][work_vehicle_WORK])
		{
			case WORK_TAXI: ResetVehicleTaxiMeter(vehicleid);
			case WORK_TRUCK: ResetTruckInfo(vehicleid);
			case WORK_TRASH: ResetTrashInfo(vehicleid);
			case WORK_PIZZA: ResetPizzaInfo(vehicleid);
		}
	}
	SetVehicleNumberPlate(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_NUMBER_PLATE]);
	SetVehicleHealthEx(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH]);
	UpdateVehicleDamageStatus(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_PANELS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_DOORS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_LIGHTS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_TIRES]);
    ChangeVehicleColor(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_COLOR_1], GLOBAL_VEHICLES[vehicleid][gb_vehicle_COLOR_2]);
	ChangeVehiclePaintjob(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_PAINTJOB]);
	SetVehiclePosEx(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_X], GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Y], GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Z]);
	SetVehicleZAngle(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_ANGLE]);
	LinkVehicleToInteriorEx(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_INTERIOR]);
	SetVehicleVirtualWorldEx(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_WORLD]);
	AddVehicleComponents(vehicleid);
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_LIGHTS] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ALARM] = 0;
	if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_BONNET] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_BOOT] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_OBJECTIVE] = 0;
	UpdateVehicleParams(vehicleid);
	return 1;
}

UpdateVehicleParams(vehicleid)
{
	return SetVehicleParamsEx(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE], GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_LIGHTS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ALARM], GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_BONNET], GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_BOOT], GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_OBJECTIVE]);
}

SetVehicleHealthEx(vehicleid, Float:health, forplayerid = INVALID_PLAYER_ID)
{
	if(forplayerid != INVALID_PLAYER_ID) PLAYER_AC_INFO[forplayerid][CHEAT_VEHICLE_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = health;
	SetVehicleHealth(vehicleid, health);
	return 1;
}

RepairVehicleEx(vehicleid, forplayerid = INVALID_PLAYER_ID)
{
	if(forplayerid != INVALID_PLAYER_ID) PLAYER_AC_INFO[forplayerid][CHEAT_VEHICLE_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_REPAIR_TIME] = gettime();
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = 1000.0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_PANELS] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_DOORS] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_LIGHTS] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_TIRES] = 0;
	SetVehicleHealthEx(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH]);
	RepairVehicle(vehicleid);
	return 1;
}

SetVehiclePosEx(vehicleid, Float:x, Float:y, Float:z)
{
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][0] = x;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][1] = y;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2] = z;
	return SetVehiclePos(vehicleid, x, y, z);
}

LinkVehicleToInteriorEx(vehicleid, interior)
{
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_INTERIOR] = interior;
	return LinkVehicleToInterior(vehicleid, interior);
}

SetVehicleToRespawnEx(vehicleid)
{
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWNED] = false;
	return SetVehicleToRespawn(vehicleid);
}

public OnVehicleDeath(vehicleid, killerid)
{
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWNED] = false;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] = INVALID_PLAYER_ID;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_DRIVER] = INVALID_PLAYER_ID;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_OCCUPIED] = false;
	
	switch(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE])
	{
		case VEHICLE_TYPE_TEST: DestroyVehicleEx(vehicleid);
		case VEHICLE_TYPE_PERSONAL:
		{
			if(VEHICLE_INFO[GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400][vehicle_info_VALID])
			{
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] = VEHICLE_STATE_DAMAGED;
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = MIN_VEHICLE_HEALTH;
			}
			else
			{
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = 1000.0;
			}
			
			new playerid = GetPlayerIdFromAccountId(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID]);
			if(playerid != INVALID_PLAYER_ID)
			{
				if(PLAYER_PHONE[playerid][player_phone_VALID])
				{
					new message[64]; format(message, sizeof message, "Vehículo de sustitución entregado en últ. estacionamiento.");
					RegisterPhoneMessage(38350, PLAYER_PHONE[playerid][player_phone_NUMBER], message);
					if(PLAYER_PHONE[playerid][player_phone_STATE] == PHONE_STATE_ON)
					{
						if((PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_NORMAL || PLAYER_TEMP[playerid][pt_GAME_STATE] == GAME_STATE_DEAD))
						{
							SendClientMessageEx(playerid, -1, "{e5f442}[Nuevo mensaje recibido] {b7dd80}Remitente: {FFFFFF}%s {b7dd80}Mensaje: {FFFFFF}%s", convertPhoneNumber(playerid, 38350), message);
						}
					}
				}
			}
		}
		default:
		{
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] = VEHICLE_STATE_NORMAL;
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] = frandom(GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS], GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS] / 3, 2);
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = 1000.0;
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_PANELS] = 0;
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_DOORS] = 0;
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_LIGHTS] = 0;
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_DAMAGE_TIRES] = 0;
		}
	}
    return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_VALID])
	{
		if(ac_Info[CHEAT_UNOCCUPIED_VEHICLE][ac_Enabled])
		{
			if(PLAYER_TEMP[playerid][pt_KICKED]) return 0;
			
			new Float:veh_x, Float:veh_y, Float:veh_z, Float:veh_dis;
			GetVehiclePos(vehicleid, veh_x, veh_y, veh_z);
			veh_dis = GetVehicleDistanceFromPoint(vehicleid, new_x, new_y, new_z);
			
			if(gettime() > GLOBAL_VEHICLES[vehicleid][gb_vehicle_TP_IMMUNITY] && GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWNED])
			{
				if(veh_dis > 20.0 && veh_z > -70.0)
				{
					if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_IMMUNITY])
					{
						if(!ac_Info[CHEAT_UNOCCUPIED_VEHICLE][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_UNOCCUPIED_VEHICLE, veh_dis);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_UNOCCUPIED_VEHICLE][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_UNOCCUPIED_VEHICLE][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_UNOCCUPIED_VEHICLE][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_UNOCCUPIED_VEHICLE, veh_dis);
						}
					}
					
					SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
					return 0;
				}
			} 
		}
		
		new Float:spawn_distance = GetVehicleDistanceFromPoint(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_X], GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Y], GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Z]);
		switch(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE])
		{
			case VEHICLE_TYPE_SELL:
			{
				if(spawn_distance > 10.0) SetVehicleToRespawnEx(vehicleid);
			}
			case VEHICLE_TYPE_WORK:
			{
				if(TRASH_VEHICLES[vehicleid][trash_vehicle_JOB_STARTED]) return 1;
				if(spawn_distance < 25.0)
				{
					if(spawn_distance > 10.0) SetVehicleToRespawnEx(vehicleid);
				}
			}
		}
	}
    return 1;
}

GetPlayerIdFromAccountId(accountid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(ACCOUNT_INFO[i][ac_ID] == accountid)
			{
				return i;
			}
		}
	}
	return INVALID_PLAYER_ID;
}

#define NECESSARY_TIME_BETWEEN_WORKS	600 //segundos
CMD:trabajar(playerid, params[])
{	
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	
	if(gettime() < PLAYER_TEMP[playerid][pt_LAST_GOT_WORK_TIME] + NECESSARY_TIME_BETWEEN_WORKS)
	{
		new time = NECESSARY_TIME_BETWEEN_WORKS - (gettime() - PLAYER_TEMP[playerid][pt_LAST_GOT_WORK_TIME]);
		SendClientMessageEx(playerid, -1, "{999999}Debes de esperar %s minutos para conseguir otro trabajo.", TimeConvert(time));
		return 1;
	}

	new player_jobs = CountPlayerJobs(playerid);
	if(ACCOUNT_INFO[playerid][ac_SU])
	{
		if(player_jobs >= MAX_SU_WORKS)
		{
			SendClientMessageEx(playerid, -1, "{CCCCCC}Actualmente tienes %d trabajos, usa /renunciar para dejar un trabajo.", player_jobs);
			return 1;
		}
	}
	else
	{
		if(player_jobs >= MAX_NU_WORKS)
		{
			SendClientMessageEx(playerid, -1, "{CCCCCC}Actualmente tienes %d trabajos, usa /renunciar para dejar un trabajo.", player_jobs);
			SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d trabajos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_WORKS);
			return 1;
		}
	}
	
	for(new i = 0; i != sizeof obtain_work_coords; i ++)
	{
		if(work_info[i][work_info_TYPE] == WORK_TYPE_FAMILY) continue;
		
		if(GetPlayerInterior(playerid) == obtain_work_coords[i][obtain_work_INTERIOR])
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, obtain_work_coords[i][obtain_work_X], obtain_work_coords[i][obtain_work_Y], obtain_work_coords[i][obtain_work_Z]))
			{
				if(work_info[i][work_info_LEVEL] > ACCOUNT_INFO[playerid][ac_LEVEL])
				{
					SendClientMessageEx(playerid, -1, "Necesitas ser al menos nivel %d para obtener este trabajo.", work_info[i][work_info_LEVEL]);
					return 1;
				}
				
				if(PLAYER_WORKS[playerid][i])
				{
					SendClientMessageEx(playerid, -1, "{999999}Ya eres %s.", work_info[i][work_info_NAME]);
					return 1;
				}
				
				if(i == WORK_POLICE && PLAYER_CREW[playerid][player_crew_VALID])
				{
					SendClientMessage(playerid, -1, "{999999}No puedes ser policía porque perteneces a una banda.");
					return 1;
				}
				
				new DB_Query[256];
				format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_WORKS` SET `SET` = '1' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", ACCOUNT_INFO[playerid][ac_ID], i);
				db_query(Database, DB_Query);
				
				if(i == WORK_POLICE) SetPoliceRank(playerid);
				
				PLAYER_WORKS[playerid][i] = true;
				PLAYER_TEMP[playerid][pt_LAST_GOT_WORK_TIME] = gettime();
				SendClientMessageEx(playerid, -1, "{b6f442}¡Felicidades! {FFFFFF}Has conseguido tu trabajo de %s.", work_info[i][work_info_NAME]);
				SendClientMessage(playerid, -1, "Puedes utilizar {eaf259}/ayuda trabajos {FFFFFF}para ver como trabajar aquí.");
				return 1;
			}
		}
	}
	
	SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	return 1;
}

CMD:dimitir(playerid, params[])
{
	new player_jobs = CountPlayerJobs(playerid);
	if(!player_jobs) return SendClientMessage(playerid, -1, "{999999}No tienes ningún trabajo.");
	
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	new work;
	if(sscanf(params, "d", work))
	{
		new works[32 * sizeof(work_info)], line_str[32], count;
		for(new i = 1; i != sizeof(work_info); i ++)
		{
			if(PLAYER_WORKS[playerid][i])
			{
				if(count > 0) strcat(works, ", ");
				
				format(line_str, sizeof line_str, "%s (%d)", work_info[i][work_info_NAME], i);
				strcat(works, line_str);
				
				count ++;
			}
		}
		SendClientMessageEx(playerid, -1, "{CCCCCC}Tus trabajos: %s", works);
		SendClientMessage(playerid, -1, "{CCCCCC}Utiliza /renunciar <id del trabajo>");
		return 1;
	}
	
	if(work < 1 || work >= sizeof work_info) return SendClientMessage(playerid, -1, "El trabajo no es válido.");
	
	if(!PLAYER_WORKS[playerid][work]) return SendClientMessageEx(playerid, -1, "{999999}No eres %s.", work_info[work][work_info_NAME]);
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] == work) return SendClientMessage(playerid, -1, "{999999}Ahora mismo estás de servicio en ese trabajo, deja de trabajar para abandonar el trabajo.");
	
	new DB_Query[256];
	format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_WORKS` SET `SET` = '0' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", ACCOUNT_INFO[playerid][ac_ID], work);
	db_query(Database, DB_Query);
					
	if(work == WORK_POLICE)
	{
		format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_SKILLS` SET `TOTAL` = '0' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", ACCOUNT_INFO[playerid][ac_ID], work);
		db_query(Database, DB_Query);
				
		PLAYER_SKILLS[playerid][work] = 0;
	}
	
	SendClientMessageEx(playerid, -1, "{CCCCCC}Has abandonado tu trabajo de %s.", work_info[work][work_info_NAME]);
	PLAYER_WORKS[playerid][work] = false;
	return 1;
}

CMD:renunciar(playerid, params[])
{
	return cmd_dimitir(playerid, params);
}

CMD:abrir(playerid, params[])
{
	new vehicleid = INVALID_VEHICLE_ID;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) vehicleid = GetPlayerVehicleID(playerid);
	else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) vehicleid = GetPlayerCameraTargetVehicle(playerid);
		
	if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás en tu vehículo o cerca de él para abrirlo.");
	if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
	if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
	
	if(!ACCOUNT_INFO[playerid][ac_SU] && !PLAYER_VEHICLES[vehicleid][player_vehicle_ACCESSIBLE])
	{
		SendClientMessage(playerid, -1, "{999999}Este vehículo está bloqueado, desbloquealo con SU.");
		SendClientMessageEx(playerid, -1, "{CCCCCC}¡Los jugadores {b1fc6f}SU {CCCCCC}pueden tener hasta %d vehículos! Usa {fffb49}/ayuda {CCCCCC}si quieres ser {b1fc6f}SU.", MAX_SU_VEHICLES);
		return 1;
	}
	
	if(!GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS]) return SendClientMessage(playerid, -1, "{CCCCCC}Las puertas de tu vehículo ya están abiertas.");
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS] = 0;
	UpdateVehicleParams(vehicleid);
	Auto_SendPlayerAction(playerid, "ha abierto las puertas de su vehículo.");
	return 1;
}

CMD:cerrar(playerid, params[])
{
	new vehicleid = INVALID_VEHICLE_ID;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) vehicleid = GetPlayerVehicleID(playerid);
	else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) vehicleid = GetPlayerCameraTargetVehicle(playerid);
		
	if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás en tu vehículo o cerca de él para abrirlo.");
	if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
	if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS]) return SendClientMessage(playerid, -1, "{CCCCCC}Las puertas de tu vehículo ya están cerradas.");
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_CLOSED_TIME] = gettime();
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS] = 1;
	UpdateVehicleParams(vehicleid);
	Auto_SendPlayerAction(playerid, "ha cerrado las puertas de su vehículo.");
	return 1;
}

CMD:aparcar(playerid, params[])
{
	new vehicleid = INVALID_VEHICLE_ID;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) vehicleid = GetPlayerVehicleID(playerid);
		
	if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás en tu vehículo para aparcarlo.");
	if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
	if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
	
	new Float:pos[3], Float:angle;
	GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
	GetVehicleZAngle(vehicleid, angle);
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_X] = pos[0];
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Y] = pos[1];
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_Z] = pos[2];
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_SPAWN_ANGLE] = angle;
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_CLOSED_TIME] = gettime();
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_LIGHTS] = 0;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_DOORS] = 1;
	UpdateVehicleParams(vehicleid);
	SendClientMessage(playerid, -1, "{CCCCCC}Has estacionado tu vehículo, cuando sea destruido volverá a aparecer aquí.");
	return 1;
}

CMD:estacionar(playerid, params[])
{
	return cmd_aparcar(playerid, params);
}

CMD:luces(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_LIGHTS])
		{
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_LIGHTS] = 0;
			UpdateVehicleParams(vehicleid);
			
			if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID]) Auto_SendPlayerAction(playerid, "ha apagado las luces de su vehículo.");
			else Auto_SendPlayerAction(playerid, "ha apagado las luces de el vehículo.");
		}
		else
		{
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_LIGHTS] = 1;
			UpdateVehicleParams(vehicleid);
			
			if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID]) Auto_SendPlayerAction(playerid, "ha encendido las luces de su vehículo.");
			else Auto_SendPlayerAction(playerid, "ha encendido las luces de el vehículo.");
		}
	}
	else SendClientMessage(playerid, -1, "{999999}No estás conduciendo ningún vehículo.");
	return 1;
}

CMD:motor(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE] == VEHICLE_TYPE_WORK)
		{
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADING]) return SendClientMessage(playerid, -1, "{999999}Debes esperar a que se cargue el camión para arrancar.");
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_UNLOADING]) return SendClientMessage(playerid, -1, "{999999}Debes esperar a que se descargue el camión para arrancar.");
		}
		
		if(PLAYER_TEMP[playerid][pt_IN_TUNING_GARAGE]) return SendClientMessage(playerid, -1, "{999999}Termina primero.");
		
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][7]);
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE])
		{
			PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_IMMUNITY] = gettime() + 15;
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
			UpdateVehicleParams(vehicleid);
			
			if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID]) Auto_SendPlayerAction(playerid, "ha detenido su vehículo.");
			else Auto_SendPlayerAction(playerid, "ha detenido el vehículo.");
		}
		else
		{
			SendClientMessage(playerid, -1, "{CCCCCC}Arrancando el motor del vehículo...");
			PLAYER_TEMP[playerid][pt_TIMERS][7] = SetTimerEx("StartVehicleEngine", 1000, false, "ii", playerid, vehicleid);
		}
	}
	else SendClientMessage(playerid, -1, "{999999}No estás conduciendo ningún vehículo.");
	return 1;
}

CMD:arrancar(playerid, params[])
{
	return cmd_motor(playerid, params);
}

forward StartVehicleEngine(playerid, vehicleid);
public StartVehicleEngine(playerid, vehicleid)
{
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] == VEHICLE_STATE_DAMAGED) return Auto_SendPlayerAction(playerid, "intentó arrancar el vehículo pero el motor está dañado.");
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] <= 0.1) return Auto_SendPlayerAction(playerid, "intentó arrancar el vehículo pero no tiene gasolina.");
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 1;
	UpdateVehicleParams(vehicleid);
	
	if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] == ACCOUNT_INFO[playerid][ac_ID]) Auto_SendPlayerAction(playerid, "ha arrancado su vehículo.");
	else Auto_SendPlayerAction(playerid, "ha arrancado el vehículo.");
	return 1;
}

AddVehicleComponents(vehicleid)
{
	for(new i = 0; i != MAX_VEHICLE_COMPONENTS; i ++)
	{
		RemoveVehicleComponent(vehicleid, i);
		
		if(!GLOBAL_VEHICLES[vehicleid][gb_vehicle_COMPONENTS][i]) continue;
		AddVehicleComponent(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_COMPONENTS][i]);
	}
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit) // Entra
    {
		SendClientMessage(playerid, -1, " ");
		SendClientMessage(playerid, -1, "{CCCCCC}Solo puedes tunear vehículos en el mecánico, búscalo con el /GPS.");
		SendClientMessage(playerid, -1, "{ffff35}[ATENCION] {CCCCCC}Si realizas alguna modificación al vehículo en este garaje serás expulsado.");
    }
	else
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(vehicleid != INVALID_VEHICLE_ID)
		{
			ChangeVehicleColor(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_COLOR_1], GLOBAL_VEHICLES[vehicleid][gb_vehicle_COLOR_2]);
			ChangeVehiclePaintjob(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_PAINTJOB]);
			AddVehicleComponents(vehicleid);
		}
	}
    return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(ac_Info[CHEAT_CAR_MOD][ac_Enabled])
	{
		if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_IMMUNITY])
		{
			if(!ac_Info[CHEAT_CAR_MOD][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_CAR_MOD);
			else
			{
				if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_CAR_MOD][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_DETECTIONS] = 0;
				else PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_DETECTIONS] ++;
				
				PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_LAST_DETECTION] = gettime();
				if(PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_CAR_MOD][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_CAR_MOD);
			}
		}
	}
    return 0;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(ac_Info[CHEAT_CAR_MOD][ac_Enabled])
	{
		if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_IMMUNITY])
		{
			if(!(-1 < paintjobid < 3) && paintjobid != 255)
			{
				if(!ac_Info[CHEAT_CAR_MOD][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_CAR_MOD);
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_CAR_MOD][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_CAR_MOD][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_CAR_MOD][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_CAR_MOD);
				}
			}
		}
	}
	return 1;
}

DestroyVehicleEx(vehicleid)
{
	if(!GLOBAL_VEHICLES[vehicleid][gb_vehicle_VALID]) return false;
	
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] != INVALID_PLAYER_ID)
	{
		PLAYER_AC_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] ][CHEAT_VEHICLE_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
		PLAYER_AC_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] ][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	}
	
	if(DestroyVehicle(vehicleid))
	{
		new temp_GLOBAL_VEHICLES[Global_Vehicles_Info]; GLOBAL_VEHICLES[vehicleid] = temp_GLOBAL_VEHICLES;
		new temp_PLAYER_VEHICLES[Player_Vehicles_Info]; PLAYER_VEHICLES[vehicleid] = temp_PLAYER_VEHICLES;
		new temp_SELL_VEHICLES[SELL_VEHICLES_Enum]; SELL_VEHICLES[vehicleid] = temp_SELL_VEHICLES;
		
		new temp_VEHICLE_BOOT[enum_VEHICLE_BOOT];
		for(new i = 0; i != MAX_BOOT_SLOTS; i ++) VEHICLE_BOOT[vehicleid][i] = temp_VEHICLE_BOOT;

		new temp_VEHICLE_OBJECTS[e_VEHICLE_OBJECTS];
		for(new i = 0; i != MAX_SU_VOBJECTS; i ++)
		{
			if(VEHICLE_OBJECTS[vehicleid][i][vobject_OBJECT_ID] != INVALID_STREAMER_ID) DestroyDynamicObject(VEHICLE_OBJECTS[vehicleid][i][vobject_OBJECT_ID]);
			VEHICLE_OBJECTS[vehicleid][i] = temp_VEHICLE_OBJECTS;
		}
		
		return true;
	}
	return false;
}

stock getRandomLetter() 
{
    return 65 + random(25);
}

ShowPlayerSpeedoMeter(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 0;
	new vehicleid = GetPlayerVehicleID(playerid), modelid = GetVehicleModel(vehicleid);
	if(!VEHICLE_INFO[modelid - 400][vehicle_info_VALID]) return 0;
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][8]);
	
	new td_str[64];
	format(td_str, sizeof td_str, "Veh¢culo:~y~_%s", VEHICLE_INFO[modelid - 400][vehicle_info_NAME]);
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2], td_str);
	
	format(td_str, sizeof td_str, "Gasolina:~y~_%.1f_Litros", GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS]);
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], td_str);
	
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], "Velocidad:~y~_0_Km/h");
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], "~w~IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII");
	
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5]);
	
	PLAYER_TEMP[playerid][pt_FUEL_DOWN_TIME] = gettime();
	PLAYER_TEMP[playerid][pt_TIMERS][8] = SetTimerEx("UpdatePlayerSpeedo", 250, true, "iif", playerid, vehicleid, VEHICLE_INFO[modelid - 400][vehicle_info_MAX_VEL]);
	return 1;
}

HidePlayerSpeedoMeter(playerid)
{
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][8]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5]);
	return 1;
}

forward UpdatePlayerSpeedo(playerid, vehicleid, Float:maxvel);
public UpdatePlayerSpeedo(playerid, vehicleid, Float:maxvel)
{
	if(vehicleid != GetPlayerVehicleID(playerid))
	{
		HidePlayerSpeedoMeter(playerid);
		ShowPlayerSpeedoMeter(playerid);
		
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER] = INVALID_PLAYER_ID;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_LAST_DRIVER] = playerid;
		GLOBAL_VEHICLES[vehicleid][gb_vehicle_OCCUPIED] = false;
		PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] = GetPlayerVehicleID(playerid);
		GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][gb_vehicle_OCCUPIED] = true;
		return 0;
	}
	
	new Float:vel = GetVehicleSpeed(vehicleid);
	
	if(ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Enabled])
	{
		if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_IMMUNITY])
		{
			if(vel > maxvel + 100.0)
			{
				if(!ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_SPEED_HACK);
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_SPEED_HACK][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_VEHICLE_SPEED_HACK][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_VEHICLE_SPEED_HACK);
				}
			}
		}
	}
	
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] == VEHICLE_STATE_NORMAL)
	{
		GetVehicleHealth(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH]);
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] < MIN_VEHICLE_HEALTH)
		{	
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_STATE] = VEHICLE_STATE_DAMAGED;
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH] = MIN_VEHICLE_HEALTH;
			SetVehicleHealthEx(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_HEALTH], playerid);
				
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
			UpdateVehicleParams(vehicleid);
			SendClientMessage(playerid, -1, "{CCCCCC}El motor del vehículo está demasiado dañado, llama a un mecánico.");
		}
	}
	
	if(gettime() > PLAYER_TEMP[playerid][pt_FUEL_DOWN_TIME] + 5)
	{
		if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE])
		{
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] -= floatmul(floatdiv(vel, maxvel), 0.1);
			
			if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] <= 0.1)
			{
				PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_IMMUNITY] = gettime() + 15;
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] = 0.0;
				GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
				UpdateVehicleParams(vehicleid);
				
				SendClientMessage(playerid, -1, "{999999}El vehículo se ha quedado sin gasolina...");
			}
		}
		PLAYER_TEMP[playerid][pt_FUEL_DOWN_TIME] = gettime();
	}
	
	new td_str[64];
	format(td_str, 64, "Gasolina:~y~_%.1f_Litros", GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS]);
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][3], td_str);
	
	format(td_str, 64, "Velocidad:~y~_%d_Km/h", floatround(vel));
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][4], td_str);

    new start = floatround( floatdiv(vel, floatdiv(maxvel, 33.0)) );
    format(td_str, 64, "~y~IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII");
    if(start < 33) strins(td_str, "~w~", 3 + start);
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SPEEDO_METER][5], td_str);
	
	GetVehiclePos(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][0], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][1], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2]);
	return 1;
}

stock Float:GetVehicleSpeed(vehicleid)
{
    new Float:vx, Float:vy, Float:vz;
    GetVehicleVelocity(vehicleid, vx, vy, vz);
	new Float:vel = floatmul(floatsqroot(floatadd(floatadd(floatpower(vx, 2), floatpower(vy, 2)),  floatpower(vz, 2))), 181.5);
	return vel;
}

UpdatePlayerPropertyContructor(playerid)
{
	SetPlayerPosEx
	(
		playerid, 
		PROPERTY_INTERIORS[ PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ][property_INT_X],
		PROPERTY_INTERIORS[ PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ][property_INT_Y],
		PROPERTY_INTERIORS[ PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ][property_INT_Z],
		PROPERTY_INTERIORS[ PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ][property_INT_ANGLE],
		PROPERTY_INTERIORS[ PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ][property_INT_INTERIOR],
		0, false, true
	);
	
	new td_str[45]; format(td_str, sizeof td_str, "Interior:_%d/%d", PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] + 1, sizeof PROPERTY_INTERIORS);
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][1], td_str);
	SelectTextDrawEx(playerid, 0xe8d08fFF);
	return 1;
}

ExitPlayerPropertyConstructor(playerid)
{
	CancelSelectTextDrawEx(playerid);
	PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_ENABLED] = false;
	
	SetPlayerPosEx
	(
		playerid, 
		PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_X],
		PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_Y],
		PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_Z],
		PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_ANG],
		PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_INT],
		0, false, true
	);
	
	for(new i = 0; i != 6; i ++) PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][i]);
	return 1;
}

Create_PlayerPropertyConstructo(playerid)
{
	new slot = GetEmptyPropertySlot();
	if(slot == -1)
	{
		SendClientMessage(playerid, -1, "No hay mas slots.");
		ExitPlayerPropertyConstructor(playerid);
		return 1;
	}
	
	PROPERTY_INFO[slot][property_VALID] = true;
	PROPERTY_INFO[slot][property_EXT_X] = PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_X];
	PROPERTY_INFO[slot][property_EXT_Y] = PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_Y];
	PROPERTY_INFO[slot][property_EXT_Z] = PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_Z];
	PROPERTY_INFO[slot][property_EXT_ANGLE] = PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_ANG];
	PROPERTY_INFO[slot][property_EXT_INTERIOR] = PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_INT];
	PROPERTY_INFO[slot][property_EXT_FREEZE] = false;
	PROPERTY_INFO[slot][property_ID_INTERIOR] = PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO];
	
	PROPERTY_INFO[slot][property_SOLD] = false;
	PROPERTY_INFO[slot][property_OWNER_ID] = 0;
	PROPERTY_INFO[slot][property_PRICE] = PROPERTY_INTERIORS[ PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ][property_creator_PRICE];
	PROPERTY_INFO[slot][property_LEVEL] = PROPERTY_INTERIORS[ PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_INTERIO] ][property_creator_LEVEL];
	PROPERTY_INFO[slot][property_EXTRA] = 0;
	
	
	new DBResult:Result, DB_Query[600];
	format
	(
		DB_Query, sizeof DB_Query,
		"\
			INSERT INTO `PROPERTY`\
			(\
				`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`\
			)\
			VALUES\
			(\
				'%f', '%f', '%f', '%f', '%d', '%d', '%d'\
			);\
			SELECT MAX(`ID`) FROM `PROPERTY`;\
		", 
		PROPERTY_INFO[slot][property_EXT_X], PROPERTY_INFO[slot][property_EXT_Y], PROPERTY_INFO[slot][property_EXT_Z], PROPERTY_INFO[slot][property_EXT_ANGLE], PROPERTY_INFO[slot][property_EXT_INTERIOR], PROPERTY_INFO[slot][property_EXT_FREEZE],
		PROPERTY_INFO[slot][property_ID_INTERIOR]
	);
	Result = db_query(Database, DB_Query);

	if(db_num_rows(Result)) PROPERTY_INFO[slot][property_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	
	DB_Query[0] = EOS;
	format
	(
		DB_Query, sizeof DB_Query,
		"\
			INSERT INTO `PROPERTY_INFO`\
			(\
				`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`\
			)\
			VALUES\
			(\
				'%d', '%d', '%d', '%d'\
			);\
		", 
		PROPERTY_INFO[slot][property_ID], PROPERTY_INFO[slot][property_PRICE], PROPERTY_INFO[slot][property_LEVEL], PROPERTY_INFO[slot][property_EXTRA]
	);
	db_query(Database, DB_Query);
	
	new label_str[256];
	format(PROPERTY_INFO[slot][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[slot][property_ID]);
	format
	(
		label_str, 
		sizeof label_str, 
		"\
			Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
			Interior: {C4FF66}%d\n\
			{FFFFFF}Precio: {C4FF66}%s$\n\
			{FFFFFF}Nivel necesario: {C4FF66}%d\n\
			{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
		", PROPERTY_INFO[slot][property_ID], PROPERTY_INFO[slot][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[slot][property_PRICE]), PROPERTY_INFO[slot][property_LEVEL]
	);

	PROPERTY_INFO[slot][property_EXT_LABEL_ID] = CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, PROPERTY_INFO[slot][property_EXT_X], PROPERTY_INFO[slot][property_EXT_Y], PROPERTY_INFO[slot][property_EXT_Z] + 0.25, 5.0, .testlos = true, .worldid = 0, .interiorid = PROPERTY_INFO[slot][property_EXT_INTERIOR]);
	PROPERTY_INFO[slot][property_INT_LABEL_ID] = CreateDynamic3DTextLabel("Usa {C4FF66}/salir {FFFFFF}para salir.", 0xFFFFFFFF, PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_X], PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_Y], PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_Z] + 0.25, 3.0, .testlos = true, .worldid = PROPERTY_INFO[slot][property_ID], .interiorid = PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_INTERIOR]);

	PROPERTY_INFO[slot][property_EXT_PICKUP_ID] = CreateDynamicPickup(1273, 1, PROPERTY_INFO[slot][property_EXT_X], PROPERTY_INFO[slot][property_EXT_Y], PROPERTY_INFO[slot][property_EXT_Z], 0, PROPERTY_INFO[slot][property_EXT_INTERIOR]);
	PROPERTY_INFO[slot][property_INT_PICKUP_ID] = CreateDynamicPickup(0, 1, PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_X], PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_Y], PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_Z], PROPERTY_INFO[slot][property_ID], PROPERTY_INTERIORS[ PROPERTY_INFO[slot][property_ID_INTERIOR] ][property_INT_INTERIOR]);

	new info[3];
	info[0] = PICKUP_TYPE_PROPERTY;
	info[1] = slot; // Index
	info[2] = 1; // Pickup Interior
	Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[slot][property_INT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);

	info[0] = PICKUP_TYPE_PROPERTY;
	info[1] = slot; // Index
	info[2] = 2; // Pickup Exterior
	Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[slot][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);

	TOTAL_PROPERTIES_LOADED ++;

	SendClientMessageEx(playerid, -1, "PROPIEDAD %d AÑADIDA.", PROPERTY_INFO[slot][property_ID]);
	SendClientMessageEx(playerid, -1, "PROPIEDADES: %d/%d", TOTAL_PROPERTIES_LOADED, MAX_PROPERTIES);
	ExitPlayerPropertyConstructor(playerid);
	return 1;
}

GetEmptyPropertySlot()
{
	for(new i = 0; i != MAX_PROPERTIES; i ++)
	{
		if(!PROPERTY_INFO[i][property_VALID]) return i;
	}
	return -1;
}

SpaceFix(text[])
{
	new str[100 + 1]; format(str, sizeof str, "%s", text);
    for(new i = 0; i < strlen(str); i++) 
	{
		if(str[i] == ' ') str[i] = '+';
	}
	return str;
}

GivePlayerDrunkLevel(playerid, ammount)
{
	return SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + ammount);
}

/*RotateDynamicObject(objectid, Float:rotX, Float:rotY, Float:rotZ, Float:Speed)
{
	
		Rotation Speeds:
		0.01 - Very very slow speed
		1.00 - Normal speed
		5.00 - Fast speed
	
	new Float:X, Float:Y, Float:Z;
	new Float:SpeedConverted = floatdiv(floatmul(Speed, 0.01), 2);
	
	if(IsDynamicObjectMoving(objectid)) StopDynamicObject(objectid);
	GetDynamicObjectPos(objectid, X, Y, Z);
	SetDynamicObjectPos(objectid, X, Y, Z + 0.01);
	MoveDynamicObject(objectid, X, Y, Z, SpeedConverted, rotX, rotY, rotZ);
	return 1;
}*/

stock Float:frandom(Float:max, Float:min, dp)
{
	new
		Float:mul = floatpower(10.0, dp),
		imin = floatround(min * mul),
		imax = floatround(max * mul);
	return float(random(imax - imin) + imin) / mul;
}


ResetVehicleTaxiMeter(vehicleid)
{
	KillTimer(TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_TIMER]);
	TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_ENABLED] = false;
	TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_PAYMENT] = 0;
	TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_X] = 0.0;
	TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_Y] = 0.0;
	TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_Z] = 0.0;
	TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_DISTANCE] = 0.0;
	return 1;
}

ShowPlayerTaxiMeter(playerid)
{
	UpdatePlayerTaxiMeterTextdraws(playerid);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3]);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4]);
	PLAYER_TEMP[playerid][pt_TAXI_METER_ENABLED] = true;
	return 1;
}

UpdatePlayerTaxiMeterTextdraws(playerid)
{
	new td_str[128], vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	
	format(td_str, sizeof td_str, "Tarifa:_~y~%d$/Km", TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_PRICE]);
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2], td_str);
	
	format(td_str, sizeof td_str, "Recorrido:_~y~%.1fKm", TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_DISTANCE]);
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3], td_str);
	
	format(td_str, sizeof td_str, "A_pagar:_~y~%s$", number_format_thousand(TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_PAYMENT]));
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4], td_str);
	return 1;
}

forward UpdateVehicleTaximeter(taxi, driver, passenger);
public UpdateVehicleTaximeter(taxi, driver, passenger)
{
	new driver_vehicle = GetPlayerVehicleID(driver), passenger_vehicle = GetPlayerVehicleID(passenger);
	
	if(!IsPlayerConnected(driver))
	{
		SendClientMessageEx(passenger, -1, "{CCCCCC}El taxi te costó %s$.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]));		
		GivePlayerCash(passenger, -TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]);
		
		ResetVehicleTaxiMeter(taxi);
		HidePlayerTaxiMeter(passenger);
		return 1;
	}
	if(!IsPlayerConnected(passenger))
	{		
		new work_extra_payment;
		if(work_info[WORK_TAXI][work_info_EXTRA_PAY] > 0 && work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP] > 0)
		{
			work_extra_payment = (work_info[WORK_TAXI][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ driver ][WORK_TAXI], work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP])));
			if(work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT];
		
			if(ACCOUNT_INFO[driver][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
		}
		PLAYER_SKILLS[driver][WORK_TAXI] ++;
		
		SendClientMessageEx(driver, -1, "{CCCCCC}Has ganado %s$ con este viaje.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment));
		GivePlayerCash(driver, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment);
		
		ResetVehicleTaxiMeter(taxi);
		UpdatePlayerTaxiMeterTextdraws(driver);
		
		new new_passenger = GetVehicleFirstPassenger(taxi);
		if(new_passenger != INVALID_PLAYER_ID)
		{
			ShowPlayerTaxiMeter(new_passenger);
			if(PLAYER_TEMP[new_passenger][pt_WANT_TAXI])
			{
				PLAYER_TEMP[new_passenger][pt_WANT_TAXI] = false;
				DisablePlayerTaxiMark(new_passenger);
			}
			
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_ENABLED] = true;
			GetVehiclePos(taxi, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Z]);
			KillTimer(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER]);
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER] = SetTimerEx("UpdateVehicleTaximeter", 4000, true, "iii", taxi, GLOBAL_VEHICLES[taxi][gb_vehicle_DRIVER], new_passenger);
		}
		return 1;
	}
	
	if(driver_vehicle != taxi)
	{
		new work_extra_payment;
		if(work_info[WORK_TAXI][work_info_EXTRA_PAY] > 0 && work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP] > 0)
		{
			work_extra_payment = (work_info[WORK_TAXI][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ driver ][WORK_TAXI], work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP])));
			if(work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT];
		
			if(ACCOUNT_INFO[driver][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
		}
		PLAYER_SKILLS[driver][WORK_TAXI] ++;
		
		SendClientMessageEx(driver, -1, "{CCCCCC}Has ganado %s$ con este viaje.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment));
		SendClientMessageEx(passenger, -1, "{CCCCCC}El taxi te costó %s$.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]));
		
		GivePlayerCash(driver, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment);
		GivePlayerCash(passenger, -TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]);
		
		ResetVehicleTaxiMeter(taxi);
		HidePlayerTaxiMeter(driver);
		HidePlayerTaxiMeter(passenger);
		return 1;
	}
	if(passenger_vehicle != taxi)
	{
		new work_extra_payment;
		if(work_info[WORK_TAXI][work_info_EXTRA_PAY] > 0 && work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP] > 0)
		{
			work_extra_payment = (work_info[WORK_TAXI][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ driver ][WORK_TAXI], work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP])));
			if(work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT];
			
			if(ACCOUNT_INFO[driver][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
		}
		PLAYER_SKILLS[driver][WORK_TAXI] ++;
		
		SendClientMessageEx(driver, -1, "{CCCCCC}Has ganado %s$ con este viaje.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment));
		SendClientMessageEx(passenger, -1, "{CCCCCC}El taxi te costó %s$.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]));
		
		GivePlayerCash(driver, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment);
		GivePlayerCash(passenger, -TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]);
		
		ResetVehicleTaxiMeter(taxi);
		HidePlayerTaxiMeter(passenger);
		UpdatePlayerTaxiMeterTextdraws(driver);
		
		new new_passenger = GetVehicleFirstPassenger(taxi);
		if(new_passenger != INVALID_PLAYER_ID)
		{
			ShowPlayerTaxiMeter(new_passenger);
			if(PLAYER_TEMP[new_passenger][pt_WANT_TAXI])
			{
				PLAYER_TEMP[new_passenger][pt_WANT_TAXI] = false;
				DisablePlayerTaxiMark(new_passenger);
			}
			
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_ENABLED] = true;
			GetVehiclePos(taxi, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Z]);
			KillTimer(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER]);
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER] = SetTimerEx("UpdateVehicleTaximeter", 4000, true, "iii", taxi, GLOBAL_VEHICLES[taxi][gb_vehicle_DRIVER], new_passenger);
		}
		return 1;
	}
	
	if(GetPlayerState(driver) != PLAYER_STATE_DRIVER)
	{
		new work_extra_payment;
		if(work_info[WORK_TAXI][work_info_EXTRA_PAY] > 0 && work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP] > 0)
		{
			work_extra_payment = (work_info[WORK_TAXI][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ driver ][WORK_TAXI], work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP])));
			if(work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT];
			
			if(ACCOUNT_INFO[driver][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
		}
		PLAYER_SKILLS[driver][WORK_TAXI] ++;
		
		SendClientMessageEx(driver, -1, "{CCCCCC}Has ganado %s$ con este viaje.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment));
		SendClientMessageEx(passenger, -1, "{CCCCCC}El taxi te costó %s$.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]));
		
		GivePlayerCash(driver, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment);
		GivePlayerCash(passenger, -TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]);
		
		ResetVehicleTaxiMeter(taxi);
		HidePlayerTaxiMeter(driver);
		HidePlayerTaxiMeter(passenger);
		return 1;
	}
	if(GetPlayerState(passenger) != PLAYER_STATE_PASSENGER)
	{
		new work_extra_payment;
		if(work_info[WORK_TAXI][work_info_EXTRA_PAY] > 0 && work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP] > 0)
		{
			work_extra_payment = (work_info[WORK_TAXI][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ driver ][WORK_TAXI], work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP])));
			if(work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT];
		
			if(ACCOUNT_INFO[driver][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
		}
		PLAYER_SKILLS[driver][WORK_TAXI] ++;
		
		SendClientMessageEx(driver, -1, "{CCCCCC}Has ganado %s$ con este viaje.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment));
		SendClientMessageEx(passenger, -1, "{CCCCCC}El taxi te costó %s$.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]));
		
		GivePlayerCash(driver, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment);
		GivePlayerCash(passenger, -TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]);
		
		ResetVehicleTaxiMeter(taxi);
		HidePlayerTaxiMeter(passenger);
		UpdatePlayerTaxiMeterTextdraws(driver);
		
		new new_passenger = GetVehicleFirstPassenger(taxi);
		if(new_passenger != INVALID_PLAYER_ID)
		{
			ShowPlayerTaxiMeter(new_passenger);
			if(PLAYER_TEMP[new_passenger][pt_WANT_TAXI])
			{
				PLAYER_TEMP[new_passenger][pt_WANT_TAXI] = false;
				DisablePlayerTaxiMark(new_passenger);
			}
			
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_ENABLED] = true;
			GetVehiclePos(taxi, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Z]);
			KillTimer(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER]);
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER] = SetTimerEx("UpdateVehicleTaximeter", 4000, true, "iii", taxi, GLOBAL_VEHICLES[taxi][gb_vehicle_DRIVER], new_passenger);
		}
		return 1;
	}
	
	new Float:distance = GetVehicleDistanceFromPoint(taxi, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Z]) * 0.01;

	if(CHARACTER_INFO[passenger][ch_CASH] < TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT])
	{
		new work_extra_payment;
		if(work_info[WORK_TAXI][work_info_EXTRA_PAY] > 0 && work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP] > 0)
		{
			work_extra_payment = (work_info[WORK_TAXI][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[ driver ][WORK_TAXI], work_info[WORK_TAXI][work_info_EXTRA_PAY_EXP])));
			if(work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_TAXI][work_info_EXTRA_PAY_LIMIT];
		
			if(ACCOUNT_INFO[driver][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
		}
		PLAYER_SKILLS[driver][WORK_TAXI] ++;
		
		SendClientMessageEx(driver, -1, "{CCCCCC}Has ganado %s$ con este viaje.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment));
		SendClientMessage(driver, -1, "{999999}El pasajero no tiene suficiente dinero para seguir pagando el viaje.");
		GivePlayerCash(driver, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] + work_extra_payment);
		
		SendClientMessageEx(passenger, -1, "{CCCCCC}El taxi te costó %s$.", number_format_thousand(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]));
		SendClientMessage(passenger, -1, "{999999}No tienes suficiente dinero para seguir pagando el viaje.");
		GivePlayerCash(passenger, -TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT]);
		if(CHARACTER_INFO[passenger][ch_CASH] < 0) SetPlayerCash(passenger, 0);
		RemovePlayerFromVehicle(passenger);
		
		ResetVehicleTaxiMeter(taxi);
		HidePlayerTaxiMeter(passenger);
		UpdatePlayerTaxiMeterTextdraws(driver);
		
		new new_passenger = GetVehicleFirstPassenger(taxi);
		if(new_passenger != INVALID_PLAYER_ID)
		{
			ShowPlayerTaxiMeter(new_passenger);
			if(PLAYER_TEMP[new_passenger][pt_WANT_TAXI])
			{
				PLAYER_TEMP[new_passenger][pt_WANT_TAXI] = false;
				DisablePlayerTaxiMark(new_passenger);
			}
			
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_ENABLED] = true;
			GetVehiclePos(taxi, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Z]);
			KillTimer(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER]);
			TAXI_METER_VEHICLE[taxi][veh_taxi_meter_TIMER] = SetTimerEx("UpdateVehicleTaximeter", 4000, true, "iii", taxi, GLOBAL_VEHICLES[taxi][gb_vehicle_DRIVER], new_passenger);
		}
		return 1;
	}
	
	TAXI_METER_VEHICLE[taxi][veh_taxi_meter_DISTANCE] += distance;
	TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PAYMENT] = TAXI_METER_VEHICLE[taxi][veh_taxi_meter_PRICE] * floatround(TAXI_METER_VEHICLE[taxi][veh_taxi_meter_DISTANCE], floatround_round);
	
	GetVehiclePos(taxi, TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[taxi][veh_taxi_meter_OLD_Z]);
	
	UpdatePlayerTaxiMeterTextdraws(driver);
	UpdatePlayerTaxiMeterTextdraws(passenger);
	return 1;
}

HidePlayerTaxiMeter(playerid)
{
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][3]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TAXI_METER][4]);
	PLAYER_TEMP[playerid][pt_TAXI_METER_ENABLED] = false;
	return 1;
}

SendAlertToTaxiDrivers(playerid)
{
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER) continue;
				if(!PLAYER_WORKS[i][WORK_TAXI]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_TAXI) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, 0xf2f224FF);
				SendClientMessageEx(i, -1, "Hay un nuevo cliente solicitando un taxi, distancia: {b9f442}%.2f Km.", (GetPlayerDistanceFromPoint(i, pos[0], pos[1], pos[2]) * 0.01));
			}
		}
	}
	return 1;
}

DisablePlayerTaxiMark(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER) continue;
				if(!PLAYER_WORKS[i][WORK_TAXI]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_TAXI) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, PLAYER_COLOR);
			}
		}
	}
	return 1;
}

SetTaxiPlayerMarkers(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(PLAYER_TEMP[i][pt_WANT_TAXI])
				{
					SetPlayerMarkerForPlayer(playerid, i, 0xf2f224FF);
				}
			}
		}
	}
	return 1;
}

SetMechanicPlayerMarkers(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(PLAYER_TEMP[i][pt_WANT_MECHANIC])
				{
					SetPlayerMarkerForPlayer(playerid, i, 0xf4c242FF);
				}
			}
		}
	}
	return 1;
}

SendAlertToMechanic(playerid)
{
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(!PLAYER_WORKS[i][WORK_MECHANIC]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_MECHANIC) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, 0xf4c242FF);
				SendClientMessageEx(i, -1, "Hay un nuevo cliente solicitando un mecánico, distancia: {b9f442}%.2f Km.", (GetPlayerDistanceFromPoint(i, pos[0], pos[1], pos[2]) * 0.01));
			}
		}
	}
	return 1;
}

DisablePlayerMechanicMark(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(!PLAYER_WORKS[i][WORK_MECHANIC]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_MECHANIC) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, PLAYER_COLOR);
			}
		}
	}
	return 1;
}

SetNormalPlayerMarkers(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerMarkerForPlayer(playerid, i, PLAYER_TEMP[i][pt_PLAYER_COLOR]);
		}
	}
	return 1;
}

SavePlayerWorks(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DB_Query[150];
	format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_WORKS` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	db_query(Database, DB_Query);
	
	for(new i = 1; i != sizeof(PLAYER_WORKS[]); i ++)
	{
		DB_Query[0] = EOS;
		format(DB_Query, sizeof DB_Query, "INSERT INTO `PLAYER_WORKS` (`ID_USER`, `ID_WORK`, `SET`) VALUES ('%d', '%d', '%d');", ACCOUNT_INFO[playerid][ac_ID], i, PLAYER_WORKS[playerid][i]);
		db_query(Database, DB_Query);
	}
	return 1;
}

LoadPlayerCrewInfo(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90], bool:found;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_CREW` WHERE `ID_USER` = '%d' LIMIT 1;", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		PLAYER_CREW[playerid][player_crew_VALID] = true;
		PLAYER_CREW[playerid][player_crew_ID] = db_get_field_assoc_int(Result, "ID_CREW");
		PLAYER_CREW[playerid][player_crew_RANK] = db_get_field_assoc_int(Result, "RANK");
		
		for(new i = 0; i != MAX_CREWS; i ++)
		{
			if(!CREW_INFO[i][crew_VALID]) continue;
			
			if(CREW_INFO[i][crew_ID] == PLAYER_CREW[playerid][player_crew_ID])
			{
				PLAYER_CREW[playerid][player_crew_INDEX] = i;
				CREW_INFO[i][crew_ONLINE_MEMBERS] ++;
				found = true;
				break;
			}
		}
		
		if(!found)
		{
			PLAYER_CREW[playerid][player_crew_VALID] = false;
			PLAYER_CREW[playerid][player_crew_ID] = 0;
			PLAYER_CREW[playerid][player_crew_RANK] = 0;
			PLAYER_CREW[playerid][player_crew_INDEX] = 0;
			SendClientMessage(playerid, -1, "{999999}La banda a la que pertenecías ya no existe.");
			
			format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_CREW` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
			db_query(Database, DB_Query);
		}
	}
	else PLAYER_CREW[playerid][player_crew_VALID] = false;
	db_free_result(Result);
	return 1;
}

LoadPlayerWorks(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90], player_works;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_WORKS` WHERE `ID_USER` = '%d' LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], sizeof(PLAYER_WORKS[]));
	Result = db_query(Database, DB_Query);
	
	for(new i; i < db_num_rows(Result); i++ )
	{
		new work = db_get_field_assoc_int(Result, "ID_WORK");
		PLAYER_WORKS[playerid][work] = db_get_field_assoc_int(Result, "SET");
		if(PLAYER_WORKS[playerid][work])
		{
			if(!ACCOUNT_INFO[playerid][ac_SU])
			{
				if(player_works >= MAX_NU_WORKS)
				{
					PLAYER_WORKS[playerid][work] = false;
					break;
				}
			}
			player_works ++;
		}
		
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

SavePlayerSkills(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DB_Query[150];
	format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_SKILLS` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	db_query(Database, DB_Query);
	
	for(new i = 1; i != sizeof(PLAYER_SKILLS[]); i ++)
	{
		DB_Query[0] = EOS;
		format(DB_Query, sizeof DB_Query, "INSERT INTO `PLAYER_SKILLS` (`ID_USER`, `ID_WORK`, `TOTAL`) VALUES ('%d', '%d', '%d');", ACCOUNT_INFO[playerid][ac_ID], i, PLAYER_SKILLS[playerid][i]);
		db_query(Database, DB_Query);
	}
	return 1;
}

LoadPlayerSkills(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_SKILLS` WHERE `ID_USER` = '%d' LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], sizeof(PLAYER_SKILLS[]));
	Result = db_query(Database, DB_Query);
	
	for(new i; i < db_num_rows(Result); i++ )
	{
		new work = db_get_field_assoc_int(Result, "ID_WORK");
		PLAYER_SKILLS[playerid][work] = db_get_field_assoc_int(Result, "TOTAL");
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

SavePlayerMisc(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DB_Query[150];
	format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_MISC` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	db_query(Database, DB_Query);
	
	for(new i = 0; i != sizeof(PLAYER_MISC[]); i ++)
	{
		DB_Query[0] = EOS;
		format(DB_Query, sizeof DB_Query, "INSERT INTO `PLAYER_MISC` (`ID_USER`, `ID`, `EXTRA`) VALUES ('%d', '%d', '%d');", ACCOUNT_INFO[playerid][ac_ID], i, PLAYER_MISC[playerid][i]);
		db_query(Database, DB_Query);
	}
	return 1;
}

LoadPlayerMisc(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_MISC` WHERE `ID_USER` = '%d' LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], sizeof(PLAYER_MISC[]));
	Result = db_query(Database, DB_Query);
	
	for(new i; i < db_num_rows(Result); i++ )
	{
		new index = db_get_field_assoc_int(Result, "ID");
		PLAYER_MISC[playerid][index] = db_get_field_assoc_int(Result, "EXTRA");
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

ResetTruckInfo(vehicleid)
{
	new tmp_TRUCK_VEHICLE[TRUCK_VEHICLE_Info]; TRUCK_VEHICLE[vehicleid] = tmp_TRUCK_VEHICLE;
	return 1;
}

ResetPizzaInfo(vehicleid)
{
	new tmp_PIZZA_VEHICLE[PIZZA_VEHICLE_Info]; PIZZA_VEHICLE[vehicleid] = tmp_PIZZA_VEHICLE;
	return 1;
}

ResetTrashInfo(vehicleid)
{
	new tmp_TRASH_VEHICLES[TRASH_VEHICLES_INFO]; TRASH_VEHICLES[vehicleid] = tmp_TRASH_VEHICLES;
	
	TRASH_VEHICLES[vehicleid][trash_vehicle_DRIVER_ID] = INVALID_PLAYER_ID;
	TRASH_VEHICLES[vehicleid][trash_vehicle_PASSENGER_ID] = INVALID_PLAYER_ID;
	return 1;
}

forward TruckLoadUp(playerid, vehicleid);
public TruckLoadUp(playerid, vehicleid)
{
	if(PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] < 100.0)
	{
		PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] += 10.0;
		if(PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] > 100.0) PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] = 100.0;
		
		UpdatePlayerLoadingTruckSize(playerid);
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][9]);
		PLAYER_TEMP[playerid][pt_TIMERS][9] = SetTimerEx("TruckLoadUp", 1000, false, "ii", playerid, vehicleid);
		return 1;
	}
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 1;
	UpdateVehicleParams(vehicleid);
	
	TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADED] = true;
	TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADING] = false;
	TRUCK_VEHICLE[vehicleid][truck_vehicle_DELIVERED] = false;
	
	SendClientMessage(playerid, -1, "{CCCCCC}El camión ha sido cargado, dirígite al checkpoint para entregar la mercancía.");
	SetPlayerTruckCheckpoint(playerid, vehicleid);
	return 1;
}

forward TruckUnLoadUp(playerid, vehicleid);
public TruckUnLoadUp(playerid, vehicleid)
{
	if(PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] < 100.0)
	{
		PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] += 10.0;
		if(PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] > 100.0) PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] = 100.0;
		
		UpdatePlayerLoadingTruckSize(playerid);
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][9]);
		PLAYER_TEMP[playerid][pt_TIMERS][9] = SetTimerEx("TruckUnLoadUp", 1000, false, "ii", playerid, vehicleid);
		return 1;
	}
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 1;
	UpdateVehicleParams(vehicleid);
	
	TRUCK_VEHICLE[vehicleid][truck_vehicle_UNLOADING] = false;
	TRUCK_VEHICLE[vehicleid][truck_vehicle_DELIVERED] = true;
	
	SendClientMessage(playerid, -1, "{CCCCCC}La mercancía ha sido entregada, regresa al punto de partida para cobrar.");
	SetPlayerTruckCheckpoint(playerid, vehicleid);
	return 1;
}

SetPlayerTruckCheckpoint(playerid, vehicleid)
{
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	
	if(TRUCK_VEHICLE[vehicleid][truck_vehicle_DELIVERED])
	{
		PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = CreateDynamicCP(-481.952117, -521.362060, 25.691177, 5.0, 0, 0, playerid, 9999999999.0);
		
		new info[1];
		info[0] = CHECKPOINT_TYPE_FINISH_TRUCK;
		Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	}
	else
	{
		PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = CreateDynamicCP(Truck_Contents[ TRUCK_VEHICLE[vehicleid][truck_vehicle_POINT] ][truck_content_X], Truck_Contents[ TRUCK_VEHICLE[vehicleid][truck_vehicle_POINT] ][truck_content_Y], Truck_Contents[ TRUCK_VEHICLE[vehicleid][truck_vehicle_POINT] ][truck_content_Z], 5.0, 0, 0, playerid, 9999999999.0);
		
		new info[1];
		info[0] = CHECKPOINT_TYPE_UNLOAD_TRUCK;
		Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	}
	return 1;
}

UpdatePlayerLoadingTruckSize(playerid)
{
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3], 253.0 + ( PLAYER_TEMP[playerid][pt_TRUCK_LOADING_VALUE] * 1.34), 0.000000);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
	return 1;
}

CMD:basurero(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_TRASH]) return SendClientMessage(playerid, -1, "{999999}No eres basurero.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_NONE && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_TRASH)
	{
		SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
		return 1;
	}
	
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -1906.577514, -1756.457519, 22.079319)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(!PLAYER_TEMP[playerid][pt_WORKING_IN]) StartPlayerJob(playerid, WORK_TRASH);
	else EndPlayerJob(playerid);
	return 1;
}

CMD:vmenu(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_MECHANIC]) return SendClientMessage(playerid, -1, "{999999}No eres mecánico.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_MECHANIC) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como mecánico.");
	
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	new vehicleid = GetPlayerCameraTargetVehicle(playerid);
	if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás cerca de ningún vehículo.");
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE]) return SendClientMessage(playerid, -1, "{999999}Para trabajar sobre el vehículo el motor debe estar apagado.");
	
	PLAYER_TEMP[playerid][pt_SELECTED_MECHANIC_VEHICLE_ID] = vehicleid;
	ShowDialog(playerid, DIALOG_MECHANIC_MENU);
	return 1;
}

CMD:policia(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_NONE && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE)
	{
		SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
		return 1;
	}
	
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 253.280288, 76.219017, 1003.640625) || IsPlayerInRangeOfPoint(playerid, 1.0, 266.547180, 119.652816, 1004.617187) || IsPlayerInRangeOfPoint(playerid, 1.0, 217.816406, 187.667922, 1003.031250))
	{
		if(!PLAYER_TEMP[playerid][pt_WORKING_IN]) ShowDialog(playerid, DIALOG_SELECT_POLICE_SKIN);
		else EndPlayerJob(playerid); 
		return 1;
	}
	
	SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	return 1;
}

CMD:talar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_LUMBERJACK]) return SendClientMessage(playerid, -1, "{999999}No eres leñador.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_NONE && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_LUMBERJACK)
	{
		SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
		return 1;
	}
	
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -527.670349, -97.338562, 63.176174)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(!PLAYER_TEMP[playerid][pt_WORKING_IN]) StartPlayerJob(playerid, WORK_LUMBERJACK);
	else EndPlayerJob(playerid);
	return 1;
}

CMD:mecanico(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_MECHANIC]) return SendClientMessage(playerid, -1, "{999999}No eres mecánico.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_NONE && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_MECHANIC)
	{
		SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
		return 1;
	}
	
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -89.087181, -1184.843627, 2.940625)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(!PLAYER_TEMP[playerid][pt_WORKING_IN]) StartPlayerJob(playerid, WORK_MECHANIC);
	else EndPlayerJob(playerid);
	return 1;
}

CMD:medico(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_MEDIC]) return SendClientMessage(playerid, -1, "{999999}No eres médico.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_NONE && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_MEDIC)
	{
		SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
		return 1;
	}
	
	if(ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_INTERIOR_TYPE] != INTERIOR_HOSPITAL) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -2029.751342, -114.503044, 1035.171875)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(!PLAYER_TEMP[playerid][pt_WORKING_IN]) StartPlayerJob(playerid, WORK_MEDIC);
	else EndPlayerJob(playerid);
	return 1;
}

CMD:pizzero(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_PIZZA]) return SendClientMessage(playerid, -1, "{999999}No eres pizzero, el trabajo se consigue dentro de la pizzería.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_NONE && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_PIZZA)
	{
		SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
		return 1;
	}
	
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, 2097.355712, -1818.040771, 13.382812)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(!PLAYER_TEMP[playerid][pt_WORKING_IN]) StartPlayerJob(playerid, WORK_PIZZA);
	else EndPlayerJob(playerid);
	return 1;
}

CMD:semillas(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_FARMER]) return SendClientMessage(playerid, -1, "{999999}No eres agricultor.");
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, 1566.521606, 31.370532, 24.16406)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	ShowDialog(playerid, DIALOG_SEED_LIST);
	return 1;
}

CMD:plantar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_FARMER]) return SendClientMessage(playerid, -1, "{999999}No eres agricultor.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] && PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_FARMER)
	{
		SendClientMessageEx(playerid, -1, "{999999}Tienes que dejar de estar de servicio como %s primero.", work_info[ PLAYER_TEMP[playerid][pt_WORKING_IN] ][work_info_NAME]);
		return 1;
	}
	
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInDynamicArea(playerid, Farmer_Area)) return SendClientMessage(playerid, 0x999999AA, "No estás en la zona para plantar, está marcada en el mapa con una bandera.");
	if(PLAYER_TEMP[playerid][pt_PLANTING]) return SendClientMessage(playerid, 0x999999AA, "Ahora mismo ya estás plantando algo.");
	
	if(gettime() < PLAYER_TEMP[playerid][pt_LAST_PLANT_TIME] + 60)
	{
		new time = (60-(gettime()-PLAYER_TEMP[playerid][pt_LAST_PLANT_TIME]));
		SendClientMessageEx(playerid, 0x999999AA, "Tienes que esperar %s minutos para volver a plantar.", TimeConvert(time));
		return 1;
	}
	
	if(GetPlayerPlantedPlants(playerid) > 10) return SendClientMessage(playerid, 0x999999AA, "Por favor, recoge tus otras plantas para poder plantar más.");
	
	for(new i = 0; i != MAX_PLANTS; i ++)
	{
		if(!PLANTS[i][plant_VALID]) continue;
		
		new Float:pos[3];
		GetDynamicObjectPos(PLANTS[i][plant_OBJECT_ID], pos[0], pos[1], pos[2]);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, pos[0], pos[1], pos[2]))
		{
			SendClientMessage(playerid, -1, "{999999}Aquí ya hay una planta, aléjate un poco para plantar.");
			return 1;
		}
	}
	
	ShowDialog(playerid, DIALOG_PLANT_PLANTS);
	return 1;
}

CMD:piezas(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_MECHANIC]) return SendClientMessage(playerid, -1, "{999999}No eres mecánico.");
	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{999999}No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, -80.710136, -1193.329956, 2.947619)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/piezas {FFFFFF}[cantidad]");
	if(params[0] <= 0) return SendClientMessage(playerid, -1, "Error: {C4FF66}/piezas {FFFFFF}[cantidad > 0]");
	
	new price = params[0] * 50;
	if(price > CHARACTER_INFO[playerid][ch_CASH])
	{
		SendClientMessageEx(playerid, -1, "{999999}Necesitas %s$ para poder comprar %d piezas.", number_format_thousand(price), params[0]);
		return 1;
	}
	
	GivePlayerCash(playerid, -price);
	PLAYER_MISC[playerid][MISC_MECHANIC_PIECES] += params[0];
	
	SendClientMessageEx(playerid, -1, "{CCCCCC}Has comprado %s piezas por %s$, ahora tienes %s piezas.", number_format_thousand(params[0]), number_format_thousand(price), number_format_thousand(PLAYER_MISC[playerid][MISC_MECHANIC_PIECES]));
	return 1;
}

VehiclePaintjob(modelid)
{
	switch(modelid)
	{
		case 483: return 1;
		case 534..536: return 3;
		case 558..562: return 3;
		case 565, 567: return 3;
		case 575: return 2;
		case 576: return 3;
	}
	return false;
}

Set_HARVEST_Checkpoint(playerid)
{
	if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT]))
	{
		DestroyDynamicRaceCP(PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	
	if(PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] == sizeof(HARVEST_CHECKPOINTS) - 1)
	{
		PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT] =	CreateDynamicRaceCP
														(
															1,
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] ][0],
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] ][1],
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] ][2],
															0.0,
															0.0,
															0.0,
															5.0, 
															0,
															0,
															playerid
														);
	}
	else
	{
		PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT] =	CreateDynamicRaceCP
														(
															0,
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] ][0],
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] ][1],
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] ][2],
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] + 1 ][0],
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] + 1 ][1],
															HARVEST_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] + 1 ][2],
															5.0, 
															0,
															0,
															playerid
														);
	}
	
	new info[1];
	info[0] = CHECKPOINT_TYPE_HARVEST;
	Streamer_SetArrayData(STREAMER_TYPE_RACE_CP, PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	
	return 1;
}

Set_FUMIGATOR_Checkpoint(playerid)
{
	if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT]))
	{
		DestroyDynamicRaceCP(PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	
	if(PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] == sizeof(FUMIGATOR_CHECKPOINTS) - 1)
	{
		PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT] =	CreateDynamicRaceCP
														(
															4,
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] ][0],
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] ][1],
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] ][2],
															0.0,
															0.0,
															0.0,
															10.0, 
															0,
															0,
															playerid,
															999999.0
														);
	}
	else
	{
		PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT] =	CreateDynamicRaceCP
														(
															3,
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] ][0],
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] ][1],
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] ][2],
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] + 1 ][0],
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] + 1 ][1],
															FUMIGATOR_CHECKPOINTS[ PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] + 1 ][2],
															10.0, 
															0,
															0,
															playerid,
															999999.0
														);
	}
	
	new info[1];
	info[0] = CHECKPOINT_TYPE_FUMIGATOR;
	Streamer_SetArrayData(STREAMER_TYPE_RACE_CP, PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	
	return 1;
}

public OnPlayerEnterDynamicRaceCP(playerid, checkpointid)
{
	new info[1];
	Streamer_GetArrayData(STREAMER_TYPE_RACE_CP, checkpointid, E_STREAMER_EXTRA_ID, info);
	
	switch(info[0])
	{
		case CHECKPOINT_TYPE_HARVEST:
		{
			if(PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] == sizeof(HARVEST_CHECKPOINTS) - 1)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(vehicleid == INVALID_VEHICLE_ID) return 1;
				
				new work_extra_payment;
				if(work_info[WORK_HARVESTER][work_info_EXTRA_PAY] > 0 && work_info[WORK_HARVESTER][work_info_EXTRA_PAY_EXP] > 0)
				{
					work_extra_payment = (work_info[WORK_HARVESTER][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_HARVESTER], work_info[WORK_HARVESTER][work_info_EXTRA_PAY_EXP])));
					if(work_info[WORK_HARVESTER][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_HARVESTER][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_HARVESTER][work_info_EXTRA_PAY_LIMIT];
					
					if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
				}
				
				new money = minrand(350, 410) + WORK_HARVESTER;
				GivePlayerCash(playerid, money);
				
				PLAYER_SKILLS[playerid][WORK_HARVESTER] ++;
				SendClientMessageEx(playerid, -1, "{CCCCCC}Has ganado %s$ con esta cosecha.", number_format_thousand(money));
				
				EndPlayerJob(playerid);
				return 1;
			}
			
			new str[50];
			format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~n~~w~~h~checkpoint_~y~%d/%d", PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] + 1, sizeof(HARVEST_CHECKPOINTS));
			GameTextForPlayer(playerid, str, 2000, 3);
			
			PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] ++;
			Set_HARVEST_Checkpoint(playerid);
		}
		case CHECKPOINT_TYPE_FUMIGATOR:
		{
			if(PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] == sizeof(FUMIGATOR_CHECKPOINTS) - 1)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(vehicleid == INVALID_VEHICLE_ID) return 1;
				
				new work_extra_payment;
				if(work_info[WORK_FUMIGATOR][work_info_EXTRA_PAY] > 0 && work_info[WORK_FUMIGATOR][work_info_EXTRA_PAY_EXP] > 0)
				{
					work_extra_payment = (work_info[WORK_FUMIGATOR][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_FUMIGATOR], work_info[WORK_FUMIGATOR][work_info_EXTRA_PAY_EXP])));
					if(work_info[WORK_FUMIGATOR][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_FUMIGATOR][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_FUMIGATOR][work_info_EXTRA_PAY_LIMIT];
				
					if(ACCOUNT_INFO[playerid][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
				}
				
				new money = minrand(1200, 1500) + work_extra_payment;
				GivePlayerCash(playerid, money);
				
				PLAYER_SKILLS[playerid][WORK_FUMIGATOR] ++;
				SendClientMessageEx(playerid, -1, "{CCCCCC}Gracias por fumigar nuestros cielos, has ganado %s$.", number_format_thousand(money));
				
				EndPlayerJob(playerid);
				return 1;
			}
			
			new str[50];
			format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~n~~w~~h~checkpoint_~y~%d/%d", PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] + 1, sizeof(FUMIGATOR_CHECKPOINTS));
			GameTextForPlayer(playerid, str, 2000, 3);
			
			PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] ++;
			Set_FUMIGATOR_Checkpoint(playerid);
		}
	}
	return 1;
}

SetPlayerTrashCheckpoint(playerid, vehicleid)
{
	DestroyPlayerTrashCheckpoint(playerid);
	
	new cp = TRASH_VEHICLES[ vehicleid ][trash_vehicle_CP];
	new route = TRASH_VEHICLES[ vehicleid ][trash_vehicle_ROUTE];
	
	if(cp >= TRASH_OBJECTS[route][trash_route_OBJECTS])
	{
		PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT] = CreateDynamicCP(-1872.575073, -1720.129394, 22.30542, 5.0, 0, 0, playerid, 9999999999.0);
		new info[1];
		info[0] = CHECKPOINT_TYPE_FINISH_TRASH;
		Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	}
	else
	{
		PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT] = CreateDynamicCP(TRASH_OBJECTS[ route ][trash_object_X][ cp ], TRASH_OBJECTS[ route ][trash_object_Y][ cp ], TRASH_OBJECTS[ route ][trash_object_Z][ cp ], 1.5, 0, 0, playerid, 9999999999.0);
		
		new info[1];
		info[0] = CHECKPOINT_TYPE_TRASH;
		Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	}
	return 1;
}

DestroyPlayerTrashCheckpoint(playerid)
{
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	return 1;
}

CancelTrashWork(driver, mate, vehicleid)
{
	DestroyPlayerTrashCheckpoint(driver);
	DestroyPlayerTrashCheckpoint(mate);
	
	DestroyPlayerTrashRouteObjects(driver);
	DestroyPlayerTrashRouteObjects(mate);
	
	PLAYER_TEMP[driver][pt_TRASH_DRIVER] = false;
	PLAYER_TEMP[driver][pt_TRASH_PASSENGER] = false;
	PLAYER_TEMP[driver][pt_TRASH_VEHICLE_ID] = INVALID_VEHICLE_ID;
	
	PLAYER_TEMP[mate][pt_TRASH_DRIVER] = false;
	PLAYER_TEMP[mate][pt_TRASH_PASSENGER] = false;
	PLAYER_TEMP[mate][pt_TRASH_VEHICLE_ID] = INVALID_VEHICLE_ID;
	
	KillTimer(PLAYER_TEMP[mate][pt_TIMERS][10]);
	PlayerTextDrawHide(mate, PlayerTextdraws[mate][ptextdraw_RECYCLE_TRASH][0]);
	PlayerTextDrawHide(mate, PlayerTextdraws[mate][ptextdraw_RECYCLE_TRASH][1]);
	PlayerTextDrawHide(mate, PlayerTextdraws[mate][ptextdraw_RECYCLE_TRASH][2]);
	ClearAnimations(mate);
	TogglePlayerControllable(mate, true);
	
	ResetTrashInfo(vehicleid);
	SetVehicleToRespawnEx(vehicleid);
	return 1;
}

UpdatePlayerTrashRecycleSize(playerid)
{
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2], 0.0, PLAYER_TEMP[playerid][pt_RECYCLE_BIN_VALUE] * 1.3);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2]);
	return 1;
}

forward RecycleUp(playerid);
public RecycleUp(playerid)
{
	if(PLAYER_TEMP[playerid][pt_RECYCLE_BIN_VALUE] < 100.0)
	{
		PLAYER_TEMP[playerid][pt_RECYCLE_BIN_VALUE] += 15.0;
		if(PLAYER_TEMP[playerid][pt_RECYCLE_BIN_VALUE] > 100.0) PLAYER_TEMP[playerid][pt_RECYCLE_BIN_VALUE] = 100.0;
		
		ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.1, true, false, false, false, 0);
		UpdatePlayerTrashRecycleSize(playerid);
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][10]);
		PLAYER_TEMP[playerid][pt_TIMERS][10] = SetTimerEx("RecycleUp", 1000, false, "i", playerid);
		return 1;
	}
	
	TogglePlayerControllable(playerid, true);
	ClearAnimations(playerid);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_RECYCLE_TRASH][2]);
	
	new driver = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID];
	new cp = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_CP];
	new route = TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE];
	
	DestroyDynamicObject(TRASH_PLAYER_OBJECTS[playerid][cp]);
	TRASH_PLAYER_OBJECTS[playerid][cp] = INVALID_STREAMER_ID;
	
	DestroyDynamicObject(TRASH_PLAYER_OBJECTS[driver][cp]);
	TRASH_PLAYER_OBJECTS[driver][cp] = INVALID_STREAMER_ID;
	
	CreatePlayerFlashObject(
								playerid, 
								TRASH_OBJECTS[ route ][trash_object_X][ cp ],
								TRASH_OBJECTS[ route ][trash_object_Y][ cp ],
								TRASH_OBJECTS[ route ][trash_object_Z][ cp ] - 1.5
							);
	
	CreatePlayerFlashObject(
								driver, 
								TRASH_OBJECTS[ route ][trash_object_X][ cp ],
								TRASH_OBJECTS[ route ][trash_object_Y][ cp ],
								TRASH_OBJECTS[ route ][trash_object_Z][ cp ] - 1.5
							);
							
	PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
	
	TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_CP] ++;
	if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_CP] >= TRASH_OBJECTS[ TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_ROUTE] ][trash_route_OBJECTS])
	{
		SendClientMessage(playerid, -1, "{CCCCCC}Sube al camión para volver al vertedero y recibir la paga.");
		SendClientMessage(driver, -1, "{CCCCCC}Espera a que se suba tu compañero y vuelve al vertedero para recibir la paga.");
	}
	else SendClientMessage(playerid, -1, "{CCCCCC}Sube al camión y sigue con la ruta.");

	SetPlayerTrashCheckpoint(driver, PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
	SetPlayerTrashCheckpoint(playerid, PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
	
	Streamer_Update(driver);
	Streamer_Update(playerid);
	return 1;
}

CancelLumberjackWork(playerid)
{
	if(PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] != -1)
	{
		DestroyDynamicObject(LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_OBJECT_ID]);
		LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_OBJECT_ID] = CreateDynamicObject(LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_MODELID], LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_X], LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_Y], LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_Z], LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_RX], LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_RY], LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_RZ], 0, 0);
		LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_STATE] = LUMBER_TREE_STATE_NORMAL;
		
		new label_str[256];
		format(label_str, sizeof label_str, "{f46530}Árbol (%d)\n\n{FFFFFF}Pulsa {f9d834}~k~~CONVERSATION_NO~ {FFFFFF}para talar el árbol.", PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE]);
		UpdateDynamic3DTextLabelText(LUMBER_TREES[ PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] ][lumber_tree_LABEL], -1, label_str);
	}
	
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	
	RemovePlayerAttachedObject(playerid, 8);
	RemovePlayerAttachedObject(playerid, 9);
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][11]);
	//ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	TogglePlayerControllable(playerid, true);
	PLAYER_TEMP[playerid][pt_PLAYER_CARRYING_TREE] = false;
	PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] = -1;
	SetPlayerToys(playerid);
	return 1;
}

forward LumberjackUp(playerid, tree);
public LumberjackUp(playerid, tree)
{
	if(PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE_PROG] < 100.0)
	{
		PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE_PROG] += frandom(12.0, 8.0, 2);
		if(PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE_PROG] > 100.0) PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE_PROG] = 100.0;
		
		SetPlayerArmedWeapon(playerid, 9);
		ApplyAnimation(playerid, "CHAINSAW", "WEAPON_csaw", 4.1, true, false, false, false, 0);
		
		new label_str[256];
		format(label_str, sizeof label_str, "{f46530}Árbol (%d)\n\n{FFFFFF}Talando... {CCCCCC}(%.1f%%)", tree, PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE_PROG]);
		UpdateDynamic3DTextLabelText(LUMBER_TREES[ tree ][lumber_tree_LABEL], -1, label_str);
		
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][11]);
		PLAYER_TEMP[playerid][pt_TIMERS][11] = SetTimerEx("LumberjackUp", 2000, false, "ii", playerid, tree);
		return 1;
	}
	
	GetPlayerFacingAngle(playerid, CHARACTER_INFO[playerid][ch_ANGLE]);
	SetDynamicObjectRot(LUMBER_TREES[ tree ][lumber_tree_OBJECT_ID], LUMBER_TREES[ tree ][lumber_tree_RX], LUMBER_TREES[ tree ][lumber_tree_RY], CHARACTER_INFO[playerid][ch_ANGLE]);	
	MoveDynamicObject(LUMBER_TREES[ tree ][lumber_tree_OBJECT_ID], LUMBER_TREES[ tree ][lumber_tree_X], LUMBER_TREES[ tree ][lumber_tree_Y], LUMBER_TREES[ tree ][lumber_tree_Z] + 0.01, 0.0065, -85.0, 0.0, CHARACTER_INFO[playerid][ch_ANGLE]);
	RemovePlayerAttachedObject(playerid, 9);
	SetPlayerAttachedObject(playerid, 9, 341, 1, -0.172999, -0.165, -0.053999, 0.0, -7.599999, -9.6);
	
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][11]);
	PLAYER_TEMP[playerid][pt_TIMERS][11] = SetTimerEx("ContinueTreeAnimation", 1400, false, "iif", playerid, tree, CHARACTER_INFO[playerid][ch_ANGLE]);
	
	ClearAnimations(playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	TogglePlayerControllable(playerid, true);	
	return 1;
}

forward ContinueTreeAnimation(playerid, tree, Float:rotation);
public ContinueTreeAnimation(playerid, tree, Float:rotation)
{
	new Float:pos[3];
	pos[0] = LUMBER_TREES[ tree ][lumber_tree_X];
	pos[1] = LUMBER_TREES[ tree ][lumber_tree_Y];
	pos[2] = LUMBER_TREES[ tree ][lumber_tree_Z];
	
	pos[0] += (1.5 * floatsin(-rotation, degrees));
	pos[1] += (1.5 * floatcos(-rotation, degrees));
	
	CreateFlashObject(pos[0], pos[1], pos[2] - 0.4);
	DestroyDynamicObject(LUMBER_TREES[ tree ][lumber_tree_OBJECT_ID]);
	PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
	
	LUMBER_TREES[ tree ][lumber_tree_OBJECT_ID] = CreateDynamicObject(841, pos[0], pos[1], pos[2] + 0.2, 0.0, 0.0, rotation, 0, 0);
	
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	PLAYER_TEMP[playerid][pt_PLAYER_CARRYING_TREE] = true;
	PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] = -1;
	
	RemovePlayerAttachedObject(playerid, 8);
	SetPlayerAttachedObject(playerid, 8, 19793, 6, 0.077999, 0.043999, -0.170999, -13.799953, 79.70, 0.0);
	
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT] = CreateDynamicCP(-504.353912, -88.591995, 62.086818, 5.0, 0, 0, playerid, 9999999999.0);
	
	new info[1];
	info[0] = CHECKPOINT_TYPE_LUMBERJACK;
	Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	
	SendClientMessage(playerid, -1, "{CCCCCC}Ve a llevar la leña al punto marcado para recibir la paga.");
	
	
	LUMBER_TREES[ tree ][lumber_tree_GROW_COUNTER] = 90;
	new label_str[256];
	format(label_str, sizeof label_str, "{f46530}Árbol (%d)\n\n{999999}(%s)", tree, TimeConvert(LUMBER_TREES[ tree ][lumber_tree_GROW_COUNTER]));
	UpdateDynamic3DTextLabelText(LUMBER_TREES[ tree ][lumber_tree_LABEL], -1, label_str);
	
	LUMBER_TREES[ tree ][lumber_tree_STATE] = LUMBER_TREE_STATE_CUTTED;
	KillTimer(LUMBER_TREES[ tree ][lumber_tree_GROW_TIMER]);
	LUMBER_TREES[ tree ][lumber_tree_GROW_TIMER] = SetTimerEx("GrowTreeUp", 1000, false, "i", tree);
	
	Streamer_Update(playerid);
	return 1;
}

forward GrowTreeUp(tree);
public GrowTreeUp(tree)
{
	if(LUMBER_TREES[ tree ][lumber_tree_STATE] != LUMBER_TREE_STATE_CUTTED) return 0;
	
	if(LUMBER_TREES[ tree ][lumber_tree_GROW_COUNTER] > 0)
	{
		LUMBER_TREES[ tree ][lumber_tree_GROW_COUNTER] --;
		new label_str[256];
		format(label_str, sizeof label_str, "{f46530}Árbol (%d)\n\n{999999}(%s)", tree, TimeConvert(LUMBER_TREES[ tree ][lumber_tree_GROW_COUNTER]));
		UpdateDynamic3DTextLabelText(LUMBER_TREES[ tree ][lumber_tree_LABEL], -1, label_str);
		
		KillTimer(LUMBER_TREES[ tree ][lumber_tree_GROW_TIMER]);
		LUMBER_TREES[ tree ][lumber_tree_GROW_TIMER] = SetTimerEx("GrowTreeUp", 1000, false, "i", tree);
		return 1;
	}
	
	DestroyDynamicObject(LUMBER_TREES[ tree ][lumber_tree_OBJECT_ID]);
	LUMBER_TREES[ tree ][lumber_tree_OBJECT_ID] = CreateDynamicObject(LUMBER_TREES[ tree ][lumber_tree_MODELID], LUMBER_TREES[ tree ][lumber_tree_X], LUMBER_TREES[ tree ][lumber_tree_Y], LUMBER_TREES[ tree ][lumber_tree_Z], LUMBER_TREES[ tree ][lumber_tree_RX], LUMBER_TREES[ tree ][lumber_tree_RY], LUMBER_TREES[ tree ][lumber_tree_RZ], 0, 0);
	LUMBER_TREES[ tree ][lumber_tree_STATE] = LUMBER_TREE_STATE_NORMAL;

	new label_str[256];
	format(label_str, sizeof label_str, "{f46530}Árbol (%d)\n\n{FFFFFF}Pulsa {f9d834}~k~~CONVERSATION_NO~ {FFFFFF}para talar el árbol.", tree);
	UpdateDynamic3DTextLabelText(LUMBER_TREES[ tree ][lumber_tree_LABEL], -1, label_str);
	return 1;
}

CreateFlashObject(Float:x, Float:y, Float:z)
{
	new oid = CreateObject(18680, x, y, z, 0.0, 0.0, 0.0);
	SetTimerEx("DestroyFlashObject", 1000, false, "i", oid);
	return 1;
}

forward DestroyFlashObject(objectid);
public DestroyFlashObject(objectid)
{
	return DestroyObject(objectid);
}

ShowPlayerInventory(playerid, pid)
{
	if(!IsPlayerConnected(pid)) return 0;
	if(ACCOUNT_INFO[pid][ac_ID] == 0) return 0;
	
	new caption[48];
	format(caption, sizeof caption, "Inventario de %s", PLAYER_TEMP[pid][pt_RP_NAME]);
	
	new dialog[1800], line_str[128];
	
	format(line_str, sizeof line_str, "{CCCCCC}Dinero {CCCCCC}(%s$)\n", number_format_thousand(CHARACTER_INFO[pid][ch_CASH]));
	strcat(dialog, line_str);
	
	if(PLAYER_PHONE[pid][player_phone_VALID])
	{
		format(line_str, sizeof line_str, "Teléfono {CCCCCC}(%s)\n", number_format_dash(PLAYER_PHONE[pid][player_phone_NUMBER]));
		strcat(dialog, line_str);
	}
	
	new toys = CountPlayerToys(pid);
	if(toys > 0)
	{
		format(line_str, sizeof line_str, "Accesorios {CCCCCC}(%d)\n", toys);
		strcat(dialog, line_str);
	}
	
	new pocket_objects = CountPlayerPocketObjects(pid);
	if(pocket_objects > 0)
	{
		format(line_str, sizeof line_str, "Alimentos {CCCCCC}(%d)\n", pocket_objects);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_OBJECT[pid][po_GPS]) strcat(dialog, "GPS\n");
	if(PLAYER_OBJECT[pid][po_MP3]) strcat(dialog, "Reproductor MP3\n");
	if(PLAYER_OBJECT[pid][po_PHONE_RESOLVER]) strcat(dialog, "Guía telefónica\n");
	
	new player_weapons = CountPlayerWeapons(pid);
	if(player_weapons > 0)
	{
		if(PLAYER_WORKS[pid][WORK_POLICE]) format(line_str, sizeof line_str, "{4286f4}Armas {CCCCCC}(%d)\n", player_weapons);
		else format(line_str, sizeof line_str, "{FF3300}Armas {CCCCCC}(%d)\n", player_weapons);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_MECHANIC_PIECES] > 0)
	{
		format(line_str, sizeof line_str, "Piezas de mecánico {CCCCCC}(%s)\n", number_format_thousand(PLAYER_MISC[pid][MISC_MECHANIC_PIECES]));
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_FUEL_DRUM] > 0)
	{
		format(line_str, sizeof line_str, "Bidón de gasolina {CCCCCC}(%d Litros)\n", PLAYER_MISC[pid][MISC_FUEL_DRUM]);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_SEED_MEDICINE] > 0)
	{
		format(line_str, sizeof line_str, "{009900}Semillas Poliskap {CCCCCC}(%d)\n", PLAYER_MISC[pid][MISC_SEED_MEDICINE]);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_SEED_CANNABIS] > 0)
	{
		format(line_str, sizeof line_str, "{FF3300}Semillas Marihuana {CCCCCC}(%d)\n", PLAYER_MISC[pid][MISC_SEED_CANNABIS]);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_SEED_CRACK] > 0)
	{
		format(line_str, sizeof line_str, "{FF3300}Semillas Coca {CCCCCC}(%d)\n", PLAYER_MISC[pid][MISC_SEED_CRACK]);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_MEDICINE] > 0)
	{
		format(line_str, sizeof line_str, "{009900}Medicamentos {CCCCCC}(%dg)\n", PLAYER_MISC[pid][MISC_MEDICINE]);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_CANNABIS] > 0)
	{
		format(line_str, sizeof line_str, "{FF3300}Marihuana {CCCCCC}(%dg)\n", PLAYER_MISC[pid][MISC_CANNABIS]);
		strcat(dialog, line_str);
	}
	
	if(PLAYER_MISC[pid][MISC_CRACK] > 0)
	{
		format(line_str, sizeof line_str, "{FF3300}Crack {CCCCCC}(%dg)\n", PLAYER_MISC[pid][MISC_CRACK]);
		strcat(dialog, line_str);
	}
	
	ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, caption, dialog, "Cerrar", "");	
	return 1;
}

CountPlayerToys(playerid)
{
	new toys;
	
	for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
	{
		if(PLAYER_TOYS[playerid][i][player_toy_VALID])
		{
			toys ++;
		}
	}
	return toys;
}

CountPlayerPocketObjects(playerid)
{
	new objects;
	
	for(new i = 0; i != MAX_PLAYER_POCKET_OBJECTS; i ++)
	{
		if(PLAYER_POCKET[playerid][i][player_pocket_VALID])
		{
			objects ++;
		}
	}
	return objects;
}

CountPlayerWeapons(playerid)
{
	new weapons;
	
	for(new i = 0; i != 13; i ++)
	{
		if(PLAYER_WEAPONS[playerid][i][player_weapon_VALID])
		{
			weapons ++;
		}
	}
	return weapons;
}

ShowPlayerSkills(playerid, pid)
{
	if(!IsPlayerConnected(pid)) return 0;
	if(ACCOUNT_INFO[pid][ac_ID] == 0) return 0;
	
	new caption[48], line_str[80], dialog[sizeof line_str * (sizeof(work_info) + 5)];
	format(caption, sizeof caption, "Experiencia de %s", PLAYER_TEMP[pid][pt_RP_NAME]);
	
	strcat(dialog, "{90C3D4}CUENTA\n");
	format(line_str, sizeof line_str, "{CCCCCC}Nivel: {d5ed93}%d\n", ACCOUNT_INFO[pid][ac_LEVEL]);
	strcat(dialog, line_str);
	
	new neccessary_rep = ACCOUNT_INFO[pid][ac_LEVEL] * 3;
	format(line_str, sizeof line_str, "{CCCCCC}Reputación: {d5ed93}%d/%d\n", ACCOUNT_INFO[pid][ac_REP], neccessary_rep);
	strcat(dialog, line_str);
	
	
	ACCOUNT_INFO[pid][ac_TIME_PLAYING] += gettime() - PLAYER_TEMP[pid][pt_TIME_PLAYING];
	PLAYER_TEMP[pid][pt_TIME_PLAYING] = gettime();
	
	new Float:hours;
	ConvertTime_SecondsToHoursFloat(ACCOUNT_INFO[pid][ac_TIME_PLAYING], hours);
	format(line_str, sizeof line_str, "{CCCCCC}Horas de juego: {d5ed93}%.1f horas\n", hours);
	strcat(dialog, line_str);
	
	strcat(dialog, "\n{90C3D4}TRABAJOS\n");
	
	for(new i = 1; i != sizeof work_info; i ++)
	{
		if(i == WORK_POLICE)
		{
			if(PLAYER_WORKS[playerid][WORK_POLICE])
			{
				format(line_str, sizeof line_str, "{CCCCCC}%c%s: {d5ed93}%s\n", toupper(work_info[i][work_info_NAME][0]), work_info[i][work_info_NAME][1], POLICE_RANKS[PLAYER_SKILLS[pid][i]]);
				strcat(dialog, line_str);
			}
		}
		else
		{
			format(line_str, sizeof line_str, "{CCCCCC}%c%s: {d5ed93}%s\n", toupper(work_info[i][work_info_NAME][0]), work_info[i][work_info_NAME][1], number_format_thousand(PLAYER_SKILLS[pid][i]));
			strcat(dialog, line_str);
		}
	}
	
	ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, caption, dialog, "Cerrar", "");	
	return 1;
}

stock ConvertTime_SecondsToHoursFloat(sec, &Float:hours)
{
	hours = floatdiv(float(sec), 3600);
   	return 1;
}

CreatePlayerTrashRouteObjects(playerid, route)
{
	for(new i = 0; i != MAX_OBJECTS_PER_ROUTE; i ++)
	{
		TRASH_PLAYER_OBJECTS[playerid][i] = INVALID_STREAMER_ID;
		
		if(TRASH_OBJECTS[route][trash_object_MODELID][i] != 0)
		{
			TRASH_PLAYER_OBJECTS[playerid][i] = CreateDynamicObject(TRASH_OBJECTS[route][trash_object_MODELID][i], TRASH_OBJECTS[route][trash_object_X][i], TRASH_OBJECTS[route][trash_object_Y][i], TRASH_OBJECTS[route][trash_object_Z][i], TRASH_OBJECTS[route][trash_object_RX][i], TRASH_OBJECTS[route][trash_object_RY][i], TRASH_OBJECTS[route][trash_object_RZ][i], 0, 0, playerid);
		}
	}
	return 1;
}

DestroyPlayerTrashRouteObjects(playerid)
{
	for(new i = 0; i != MAX_OBJECTS_PER_ROUTE; i ++)
	{
		if(TRASH_PLAYER_OBJECTS[playerid][i] != INVALID_STREAMER_ID) DestroyDynamicObject(TRASH_PLAYER_OBJECTS[playerid][i]);
		TRASH_PLAYER_OBJECTS[playerid][i] = INVALID_STREAMER_ID;
	}
	return 1;
}

CreatePlayerFlashObject(playerid, Float:x, Float:y, Float:z)
{
	new oid = CreatePlayerObject(playerid, 18680, x, y, z, 0.0, 0.0, 0.0);
	SetTimerEx("DestroyPlayerFlashObject", 1000, false, "ii", playerid, oid);
	return 1;
}

forward DestroyPlayerFlashObject(playerid, objectid);
public DestroyPlayerFlashObject(playerid, objectid)
{
	return DestroyPlayerObject(playerid, objectid);
}

GetVehicleFirstPassenger(vehicleid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerState(i) == PLAYER_STATE_PASSENGER)
			{
				if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
				{
					if(GetPlayerVehicleID(i) == vehicleid)
					{
						return i;
					}
				}
			}
		}
	}
	return INVALID_PLAYER_ID;
}

UpdatePlantSizeTextdrawPlant(playerid)
{	
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2], 260.0 + ( PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] * 1.2), 0.000000);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2]);
	return 1;
}

CancelPlayerPlanting(playerid)
{
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][12]);
	PLAYER_TEMP[playerid][pt_PLANTING] = false;
	PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] = 0.0;
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3]);
	
	TogglePlayerControllable(playerid, true);
	ClearAnimations(playerid);
	return 1;
}

forward PlantingUp(playerid, seeds);
public PlantingUp(playerid, seeds)
{
	if(PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] < 100.0)
	{
		PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] += floatdiv(50, seeds);
		if(PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] > 100.0) PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] = 100.0;
		
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Loop", 4.1, true, false, false, false, 0);
		UpdatePlantSizeTextdrawPlant(playerid);
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][12]);
		PLAYER_TEMP[playerid][pt_TIMERS][12] = SetTimerEx("PlantingUp", 1000, false, "id", playerid, seeds);
		return 1;
	}
	
	PLAYER_TEMP[playerid][pt_WORKING_IN] = WORK_NONE;
	PLAYER_TEMP[playerid][pt_PLANTING] = false;
	PLAYER_TEMP[playerid][pt_PLANTING_PROGRESS] = 0.0;
	
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][1]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][2]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_PLANT_PLANT][3]);
	
	TogglePlayerControllable(playerid, true);
	ClearAnimations(playerid);
	
	//objeto planta: 2244
	
	new index = GetAvaiblePlantIndex();
	if(index == -1)
	{
			
		switch(seed_info[ PLAYER_TEMP[playerid][pt_PLANTING_PLANT_SELECTED] ][seed_info_PLANT_TYPE])
		{
			case PLANT_TYPE_MEDICINE: PLAYER_MISC[playerid][MISC_SEED_MEDICINE] += plant_info[ PLAYER_TEMP[playerid][pt_PLANTING_PLANT_SELECTED] ][plant_info_SEEDS];
			case PLANT_TYPE_CANNABIS: PLAYER_MISC[playerid][MISC_SEED_CANNABIS] += plant_info[ PLAYER_TEMP[playerid][pt_PLANTING_PLANT_SELECTED] ][plant_info_SEEDS];
			case PLANT_TYPE_CRACK: PLAYER_MISC[playerid][MISC_SEED_CRACK] += plant_info[ PLAYER_TEMP[playerid][pt_PLANTING_PLANT_SELECTED] ][plant_info_SEEDS];
		}
				
		SendClientMessage(playerid, -1, "{999999}No queda espacio para más plantas, te hemos devuelto las semillas. Prueba más tarde.");
		return 1;
	}
	
	GetPlayerPos(playerid, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2]);
	GetPlayerFacingAngle(playerid, CHARACTER_INFO[playerid][ch_ANGLE]);
	CHARACTER_INFO[playerid][ch_POS][0] += (1.0 * floatsin(-CHARACTER_INFO[playerid][ch_ANGLE], degrees));
	CHARACTER_INFO[playerid][ch_POS][1] += (1.0 * floatcos(-CHARACTER_INFO[playerid][ch_ANGLE], degrees));
	CHARACTER_INFO[playerid][ch_POS][2] -= 0.75;
	
	PLANTS[index][plant_VALID] = true;
	PLANTS[index][plant_GROWING] = true;
	PLANTS[index][plant_INVISIBLE] = true;
	PLANTS[index][plant_GROWING_PROGRESS] = frandom(10.0, 8.0, 2);
	PLANTS[index][plant_TYPE] = PLAYER_TEMP[playerid][pt_PLANTING_PLANT_SELECTED];
	PLANTS[index][plant_PLANTED_BY_ACCOUNT_ID] = ACCOUNT_INFO[playerid][ac_ID];
	format(PLANTS[index][plant_PLANTED_BY_NAME], 24, "%s", PLAYER_TEMP[playerid][pt_RP_NAME]);
	PLANTS[index][plant_OBJECT_ID] = CreateDynamicObject(2244, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2], 0.0, 0.0, CHARACTER_INFO[playerid][ch_ANGLE], 0, 0);
	SetDynamicObjectMaterial(PLANTS[index][plant_OBJECT_ID], 2, 2244, "plants_tabletop", "CJ_PLANT", 0x00FFFFFF);
	
	new info[2];
	info[0] = OBJECT_TYPE_PLANT;
	info[1] = index;
	Streamer_SetArrayData(STREAMER_TYPE_OBJECT, PLANTS[index][plant_OBJECT_ID], E_STREAMER_EXTRA_ID, info);
	
	new label_str[256];
	if(seed_info[ PLANTS[index][plant_TYPE] ][seed_info_TYPE] == TYPE_LEGAL) format(label_str, sizeof label_str, "{009900}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Creciendo (%.1f%%)", plant_info[ PLANTS[index][plant_TYPE] ][plant_info_NAME], PLANTS[index][plant_PLANTED_BY_NAME], PLANTS[index][plant_GROWING_PROGRESS]);
	else format(label_str, sizeof label_str, "{FF3300}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Creciendo (%.1f%%)", plant_info[ PLANTS[index][plant_TYPE] ][plant_info_NAME], PLANTS[index][plant_PLANTED_BY_NAME], PLANTS[index][plant_GROWING_PROGRESS]);
	PLANTS[index][plant_LABEL_ID] = CreateDynamic3DTextLabel(label_str, 0xFFFFFFFF, CHARACTER_INFO[playerid][ch_POS][0], CHARACTER_INFO[playerid][ch_POS][1], CHARACTER_INFO[playerid][ch_POS][2] + 0.25, 10.0, .testlos = false, .interiorid = 0, .worldid = 0);
	
	KillTimer(PLANTS[index][plant_TIMER]);
	PLANTS[index][plant_TIMER] = SetTimerEx("GrowPlantUp", 5000, false, "d", index);
	
	PLAYER_SKILLS[playerid][WORK_FARMER] ++;
	SendClientMessage(playerid, -1, "{CCCCCC}Ahora espera a que la planta crezca, si pasan más de 5 minutos después de que la planta haya crecido se destruirá.");
	Streamer_Update(playerid);
	return 1;
}

GetAvaiblePlantIndex()
{
	for(new i = 0; i != sizeof PLANTS; i ++)
	{
		if(!PLANTS[i][plant_VALID]) return i;
	}
	return -1;
}

forward GrowPlantUp(plant);
public GrowPlantUp(plant)
{
	if(!PLANTS[plant][plant_VALID] || !PLANTS[plant][plant_GROWING]) return 0;
	
	if(PLANTS[plant][plant_GROWING_PROGRESS] < 100.0)
	{
		PLANTS[plant][plant_GROWING_PROGRESS] += floatdiv(25, plant_info[ PLANTS[plant][plant_TYPE] ][plant_info_SEEDS]);
		if(PLANTS[plant][plant_GROWING_PROGRESS] > 100.0) PLANTS[plant][plant_GROWING_PROGRESS] = 100.0;
		
		if(PLANTS[plant][plant_INVISIBLE] && PLANTS[plant][plant_GROWING_PROGRESS] > 50.0)
		{
			PLANTS[plant][plant_INVISIBLE] = false;
			SetDynamicObjectMaterial(PLANTS[plant][plant_OBJECT_ID], 2, 2244, "plants_tabletop", "CJ_PLANT", 0xFFFFFFFF);
		}
		
		new label_str[256];
		if(seed_info[ PLANTS[plant][plant_TYPE] ][seed_info_TYPE] == TYPE_LEGAL) format(label_str, sizeof label_str, "{009900}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Creciendo (%.1f%%)", plant_info[ PLANTS[plant][plant_TYPE] ][plant_info_NAME], PLANTS[plant][plant_PLANTED_BY_NAME], PLANTS[plant][plant_GROWING_PROGRESS]);
		else format(label_str, sizeof label_str, "{FF3300}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Creciendo (%.1f%%)", plant_info[ PLANTS[plant][plant_TYPE] ][plant_info_NAME], PLANTS[plant][plant_PLANTED_BY_NAME], PLANTS[plant][plant_GROWING_PROGRESS]);
		UpdateDynamic3DTextLabelText(PLANTS[plant][plant_LABEL_ID], -1, label_str);
		
		KillTimer(PLANTS[plant][plant_TIMER]);
		PLANTS[plant][plant_TIMER] = SetTimerEx("GrowPlantUp", 5000, false, "d", plant);
		return 1;
	}
	
	SetDynamicObjectMaterial(PLANTS[plant][plant_OBJECT_ID], 2, 2244, "plants_tabletop", "CJ_PLANT", 0xFFff0000);
	
	PLANTS[plant][plant_GROWING] = false;
	PLANTS[plant][plant_EXPIRE_TIME] = 300;
		
	new label_str[256];
	if(seed_info[ PLANTS[plant][plant_TYPE] ][seed_info_TYPE] == TYPE_LEGAL) format(label_str, sizeof label_str, "{009900}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Usa {daef1c}/recoger {CCCCCC}para recogerla\n\n{CCCCCC}Expira en %sm", plant_info[ PLANTS[plant][plant_TYPE] ][plant_info_NAME], PLANTS[plant][plant_PLANTED_BY_NAME], TimeConvert(PLANTS[plant][plant_EXPIRE_TIME]));
	else format(label_str, sizeof label_str, "{FF3300}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Usa {daef1c}/recoger {CCCCCC}para recogerla\n\n{CCCCCC}Expira en %sm", plant_info[ PLANTS[plant][plant_TYPE] ][plant_info_NAME], PLANTS[plant][plant_PLANTED_BY_NAME], TimeConvert(PLANTS[plant][plant_EXPIRE_TIME]));
	UpdateDynamic3DTextLabelText(PLANTS[plant][plant_LABEL_ID], -1, label_str);
	
	KillTimer(PLANTS[plant][plant_TIMER]);
	PLANTS[plant][plant_TIMER] = SetTimerEx("ExpirePlantTime", 1000, false, "d", plant);
	return 1;
}

forward ExpirePlantTime(plant);
public ExpirePlantTime(plant)
{
	if(!PLANTS[plant][plant_VALID]) return 0;
	
	if(PLANTS[plant][plant_EXPIRE_TIME] > 0)
	{
		PLANTS[plant][plant_EXPIRE_TIME] --;
		
		new label_str[256];
		if(seed_info[ PLANTS[plant][plant_TYPE] ][seed_info_TYPE] == TYPE_LEGAL) format(label_str, sizeof label_str, "{009900}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Usa {daef1c}/recoger {CCCCCC}para recogerla\n\n{CCCCCC}Expira en %sm", plant_info[ PLANTS[plant][plant_TYPE] ][plant_info_NAME], PLANTS[plant][plant_PLANTED_BY_NAME], TimeConvert(PLANTS[plant][plant_EXPIRE_TIME]));
		else format(label_str, sizeof label_str, "{FF3300}%s\n\n{CCCCCC}Agricultor: %s\n{CCCCCC}Usa {daef1c}/recoger {CCCCCC}para recogerla\n\n{CCCCCC}Expira en %sm", plant_info[ PLANTS[plant][plant_TYPE] ][plant_info_NAME], PLANTS[plant][plant_PLANTED_BY_NAME], TimeConvert(PLANTS[plant][plant_EXPIRE_TIME]));
		UpdateDynamic3DTextLabelText(PLANTS[plant][plant_LABEL_ID], -1, label_str);
		
		KillTimer(PLANTS[plant][plant_TIMER]);
		PLANTS[plant][plant_TIMER] = SetTimerEx("ExpirePlantTime", 1000, false, "d", plant);
		return 1;
	}
	
	new Float:pos[3];
	GetDynamicObjectPos(PLANTS[plant][plant_OBJECT_ID], pos[0], pos[1], pos[2]);
	CreateFlashObject(pos[0], pos[1], pos[2] - 1.3);
	
	DestroyDynamicObject(PLANTS[plant][plant_OBJECT_ID]);
	DestroyDynamic3DTextLabel(PLANTS[plant][plant_LABEL_ID]);
	
	new tmp_PLANTS[PLANTS_ENUM]; PLANTS[plant] = tmp_PLANTS;
	return 1;
}

CMD:recoger(playerid, params[])
{
	if(!IsPlayerInDynamicArea(playerid, Farmer_Area)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	for(new i = 0; i != MAX_PLANTS; i ++)
	{
		if(!PLANTS[i][plant_VALID] || PLANTS[i][plant_GROWING]) continue;
		
		new Float:pos[3];
		GetDynamicObjectPos(PLANTS[i][plant_OBJECT_ID], pos[0], pos[1], pos[2]);
		if(IsPlayerInRangeOfPoint(playerid, 1.5, pos[0], pos[1], pos[2]))
		{
			if(PLANTS[i][plant_PLANTED_BY_ACCOUNT_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, 0x999999AA, "Esta planta no es tuya.");
			
			KillTimer(PLANTS[i][plant_TIMER]);
			switch(seed_info[ PLANTS[i][plant_TYPE] ][seed_info_PLANT_TYPE])
			{
				case PLANT_TYPE_MEDICINE:
				{
					PLAYER_MISC[playerid][MISC_MEDICINE] += 2;
					SendClientMessage(playerid, -1, "{CCCCCC}Has recogido la planta y has obtenido 2 gramos de medicamento.");
				}
				case PLANT_TYPE_CANNABIS:
				{
					PLAYER_MISC[playerid][MISC_CANNABIS] += 6;
					SendClientMessage(playerid, -1, "{CCCCCC}Has recogido la planta y has obtenido 6 gramos de marihuana.");
				}
				case PLANT_TYPE_CRACK:
				{
					PLAYER_MISC[playerid][MISC_CRACK] += 4;
					SendClientMessage(playerid, -1, "{CCCCCC}Has recogido la planta y has obtenido 4 gramos de crack.");
				}
			}
			
			DestroyDynamicObject(PLANTS[i][plant_OBJECT_ID]);
			DestroyDynamic3DTextLabel(PLANTS[i][plant_LABEL_ID]);
			ApplyAnimation(playerid, "CARRY", "putdwn05", 4.1, 0, 1, 1, 0, 0, 1);
			
			new tmp_PLANTS[PLANTS_ENUM]; PLANTS[i] = tmp_PLANTS;
			return 1;
		}
	}
	
	SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	return 1;
}
	
public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
	if(IsPlayerInDynamicArea(playerid, Farmer_Area))
	{
		new info[2];
		Streamer_GetArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, info);
		
		if(info[0] == OBJECT_TYPE_PLANT)
		{
			KillTimer(PLANTS[info[1]][plant_TIMER]);
			
			new Float:pos[3];
			GetDynamicObjectPos(PLANTS[info[1]][plant_OBJECT_ID], pos[0], pos[1], pos[2]);
			CreateFlashObject(pos[0], pos[1], pos[2] - 1.3);
			
			DestroyDynamicObject(PLANTS[info[1]][plant_OBJECT_ID]);
			DestroyDynamic3DTextLabel(PLANTS[info[1]][plant_LABEL_ID]);
			
			new tmp_PLANTS[PLANTS_ENUM]; PLANTS[info[1]] = tmp_PLANTS;
		}
	}
	return 1;
}

ShowPlayerGpsMap(playerid)
{
	PLAYER_TEMP[playerid][pt_GPS_MAP] = true;
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_GPS_MAP][0]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_GPS_MAP][1]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_GPS_MAP][2]);
	
	UpdatePlayer_GPS_Map(playerid);
	
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][13]);
	PLAYER_TEMP[playerid][pt_TIMERS][13] = SetTimerEx("UpdatePlayer_GPS_Map", 1000, true, "i", playerid);
	return 1;
}

HidePlayerGpsMap(playerid)
{
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][13]);
	PLAYER_TEMP[playerid][pt_GPS_MAP] = false;
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_GPS_MAP][0]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_GPS_MAP][1]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_GPS_MAP][2]);
	
	for(new i = 0; i != MAX_PLAYER_MAP_GPS_POINTS; i ++)
	{
		if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][i] != PlayerText:INVALID_TEXT_DRAW)
		{
			PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][i]); 
			PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][i] = PlayerText:INVALID_TEXT_DRAW;
		}
	}
	return 1;
}

forward UpdatePlayer_GPS_Map(playerid);
public UpdatePlayer_GPS_Map(playerid)
{
	/*
		0 - playerpos
		1 - cp gps
		2 - cp works
		3 > cp works
		
	*/
	if(!PLAYER_TEMP[playerid][pt_GPS_MAP]) return KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][13]);
	
	new Float:pos[3];
	
	switch(CHARACTER_INFO[playerid][ch_STATE])
	{
		case ROLEPLAY_STATE_INTERIOR:
		{
			pos[0] = ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_EXT_X];
			pos[1] = ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_EXT_Y];
		}
		case ROLEPLAY_STATE_OWN_PROPERTY, ROLEPLAY_STATE_GUEST_PROPERTY:
		{
			pos[0] = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] ][property_EXT_X];
			pos[1] = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] ][property_EXT_Y];
		}
		default: GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	}
	SetPlayerPoint_GPS_Map(0, playerid, "hud:radar_waypoint", -1, 5.0, 5.0, pos[0], pos[1]);
	
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT]))
	{
		new Float:gps_cp_pos[2]; 
		Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT], E_STREAMER_X, gps_cp_pos[0]);
		Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_GPS_CHECKPOINT], E_STREAMER_Y, gps_cp_pos[1]);
		SetPlayerPoint_GPS_Map(1, playerid, "LD_SPAC:white", 0xaa0000ff, 3.0, 3.0, gps_cp_pos[0], gps_cp_pos[1]);
	}
	else 
	{
		if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][1] != PlayerText:INVALID_TEXT_DRAW)
		{
			PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][1]); 
			PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][1] = PlayerText:INVALID_TEXT_DRAW;
		}
	}
	
	switch(PLAYER_TEMP[playerid][pt_WORKING_IN])
	{
		case WORK_NONE:
		{
			if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] != PlayerText:INVALID_TEXT_DRAW)
			{
				PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2]); 
				PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] = PlayerText:INVALID_TEXT_DRAW;
			}
		}
		case WORK_TRUCK:
		{
			if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]))
			{
				new Float:gps_cp_pos[2]; 
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT], E_STREAMER_X, gps_cp_pos[0]);
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT], E_STREAMER_Y, gps_cp_pos[1]);
				SetPlayerPoint_GPS_Map(2, playerid, "LD_SPAC:white", 0xaa0000ff, 3.0, 3.0, gps_cp_pos[0], gps_cp_pos[1]);
			}
			else 
			{
				if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] != PlayerText:INVALID_TEXT_DRAW)
				{
					PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2]); 
					PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] = PlayerText:INVALID_TEXT_DRAW;
				}
			}
		}
		case WORK_HARVESTER:
		{
			if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT]))
			{
				new Float:gps_cp_pos[2]; 
				Streamer_GetFloatData(STREAMER_TYPE_RACE_CP, PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT], E_STREAMER_X, gps_cp_pos[0]);
				Streamer_GetFloatData(STREAMER_TYPE_RACE_CP, PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT], E_STREAMER_Y, gps_cp_pos[1]);
				SetPlayerPoint_GPS_Map(2, playerid, "LD_SPAC:white", 0xaa0000ff, 3.0, 3.0, gps_cp_pos[0], gps_cp_pos[1]);
			}
			else 
			{
				if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] != PlayerText:INVALID_TEXT_DRAW)
				{
					PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2]); 
					PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] = PlayerText:INVALID_TEXT_DRAW;
				}
			}
		}
		case WORK_FUMIGATOR:
		{
			if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT]))
			{
				new Float:gps_cp_pos[2]; 
				Streamer_GetFloatData(STREAMER_TYPE_RACE_CP, PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT], E_STREAMER_X, gps_cp_pos[0]);
				Streamer_GetFloatData(STREAMER_TYPE_RACE_CP, PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT], E_STREAMER_Y, gps_cp_pos[1]);
				SetPlayerPoint_GPS_Map(2, playerid, "LD_SPAC:white", 0xaa0000ff, 3.0, 3.0, gps_cp_pos[0], gps_cp_pos[1]);
			}
			else 
			{
				if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] != PlayerText:INVALID_TEXT_DRAW)
				{
					PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2]); 
					PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] = PlayerText:INVALID_TEXT_DRAW;
				}
			}
		}
		case WORK_TRASH:
		{
			if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT]))
			{
				new Float:gps_cp_pos[2]; 
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT], E_STREAMER_X, gps_cp_pos[0]);
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_TRASH_CHECKPOINT], E_STREAMER_Y, gps_cp_pos[1]);
				SetPlayerPoint_GPS_Map(2, playerid, "LD_SPAC:white", 0xaa0000ff, 3.0, 3.0, gps_cp_pos[0], gps_cp_pos[1]);
			}
			else 
			{
				if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] != PlayerText:INVALID_TEXT_DRAW)
				{
					PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2]); 
					PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] = PlayerText:INVALID_TEXT_DRAW;
				}
			}
		}
		case WORK_LUMBERJACK:
		{
			if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT]))
			{
				new Float:gps_cp_pos[2]; 
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT], E_STREAMER_X, gps_cp_pos[0]);
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_LUMBERJACK_CHECKPOINT], E_STREAMER_Y, gps_cp_pos[1]);
				SetPlayerPoint_GPS_Map(2, playerid, "LD_SPAC:white", 0xaa0000ff, 3.0, 3.0, gps_cp_pos[0], gps_cp_pos[1]);
			}
			else 
			{
				if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] != PlayerText:INVALID_TEXT_DRAW)
				{
					PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2]); 
					PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] = PlayerText:INVALID_TEXT_DRAW;
				}
			}
		}
		case WORK_PIZZA:
		{
			if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]))
			{
				new Float:gps_cp_pos[2]; 
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT], E_STREAMER_X, gps_cp_pos[0]);
				Streamer_GetFloatData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT], E_STREAMER_Y, gps_cp_pos[1]);
				SetPlayerPoint_GPS_Map(2, playerid, "LD_SPAC:white", 0xaa0000ff, 3.0, 3.0, gps_cp_pos[0], gps_cp_pos[1]);
			}
			else 
			{
				if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] != PlayerText:INVALID_TEXT_DRAW)
				{
					PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2]); 
					PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][2] = PlayerText:INVALID_TEXT_DRAW;
				}
			}
		}
	}
	
	new cp_counts = 3;
	for(new d = cp_counts; d != MAX_PLAYER_MAP_GPS_POINTS; d ++)
	{
		if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][d] != PlayerText:INVALID_TEXT_DRAW)
		{
			PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][d]); 
			PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][d] = PlayerText:INVALID_TEXT_DRAW;
		}
	}
	
	if(cp_counts >= MAX_PLAYER_MAP_GPS_POINTS) return 1;
	switch(PLAYER_TEMP[playerid][pt_WORKING_IN])
	{
		case WORK_TAXI:
		{
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
					{
						if(PLAYER_TEMP[i][pt_WANT_TAXI])
						{
							if(cp_counts >= MAX_PLAYER_MAP_GPS_POINTS) break;
							
							new Float:player_pos[3];
							switch(CHARACTER_INFO[i][ch_STATE])
							{
								case ROLEPLAY_STATE_INTERIOR:
								{
									player_pos[0] = ENTER_EXIT[ PLAYER_TEMP[i][pt_INTERIOR_INDEX] ][ee_EXT_X];
									player_pos[1] = ENTER_EXIT[ PLAYER_TEMP[i][pt_INTERIOR_INDEX] ][ee_EXT_Y];
								}
								case ROLEPLAY_STATE_OWN_PROPERTY, ROLEPLAY_STATE_GUEST_PROPERTY:
								{
									player_pos[0] = PROPERTY_INFO[ PLAYER_TEMP[i][pt_PROPERTY_INDEX] ][property_EXT_X];
									player_pos[1] = PROPERTY_INFO[ PLAYER_TEMP[i][pt_PROPERTY_INDEX] ][property_EXT_Y];
								}
								default: GetPlayerPos(i, player_pos[0], player_pos[1], player_pos[2]);
							}
							SetPlayerPoint_GPS_Map(cp_counts, playerid, "LD_SPAC:white", 0xf2f224FF, 3.0, 3.0, player_pos[0], player_pos[1]);
							cp_counts ++;
						}
					}
				}
			}
		}
		case WORK_MECHANIC:
		{
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
					{
						if(PLAYER_TEMP[i][pt_WANT_MECHANIC])
						{
							if(cp_counts >= MAX_PLAYER_MAP_GPS_POINTS) break;
								
							new Float:player_pos[3];
							switch(CHARACTER_INFO[i][ch_STATE])
							{
								case ROLEPLAY_STATE_INTERIOR:
								{
									player_pos[0] = ENTER_EXIT[ PLAYER_TEMP[i][pt_INTERIOR_INDEX] ][ee_EXT_X];
									player_pos[1] = ENTER_EXIT[ PLAYER_TEMP[i][pt_INTERIOR_INDEX] ][ee_EXT_Y];
								}
								case ROLEPLAY_STATE_OWN_PROPERTY, ROLEPLAY_STATE_GUEST_PROPERTY:
								{
									player_pos[0] = PROPERTY_INFO[ PLAYER_TEMP[i][pt_PROPERTY_INDEX] ][property_EXT_X];
									player_pos[1] = PROPERTY_INFO[ PLAYER_TEMP[i][pt_PROPERTY_INDEX] ][property_EXT_Y];
								}
								default: GetPlayerPos(i, player_pos[0], player_pos[1], player_pos[2]);
							}
							SetPlayerPoint_GPS_Map(cp_counts, playerid, "LD_SPAC:white", 0xf4c242FF, 3.0, 3.0, player_pos[0], player_pos[1]);
							cp_counts ++;
						}
					}
				}
			}
		}
		case WORK_POLICE:
		{
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
					{
						if(CHARACTER_INFO[i][ch_WANTED_LEVEL] > 0)
						{
							if(cp_counts >= MAX_PLAYER_MAP_GPS_POINTS) break;
								
							new Float:player_pos[3];
							switch(CHARACTER_INFO[i][ch_STATE])
							{
								case ROLEPLAY_STATE_INTERIOR:
								{
									player_pos[0] = ENTER_EXIT[ PLAYER_TEMP[i][pt_INTERIOR_INDEX] ][ee_EXT_X];
									player_pos[1] = ENTER_EXIT[ PLAYER_TEMP[i][pt_INTERIOR_INDEX] ][ee_EXT_Y];
								}
								case ROLEPLAY_STATE_OWN_PROPERTY, ROLEPLAY_STATE_GUEST_PROPERTY:
								{
									player_pos[0] = PROPERTY_INFO[ PLAYER_TEMP[i][pt_PROPERTY_INDEX] ][property_EXT_X];
									player_pos[1] = PROPERTY_INFO[ PLAYER_TEMP[i][pt_PROPERTY_INDEX] ][property_EXT_Y];
								}
								default: GetPlayerPos(i, player_pos[0], player_pos[1], player_pos[2]);
							}
							SetPlayerPoint_GPS_Map(cp_counts, playerid, "LD_SPAC:white", PlayerWantedColor(i), 3.0, 3.0, player_pos[0], player_pos[1]);
							cp_counts ++;
						}
					}
				}
			}
		}
		case WORK_MEDIC:
		{
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
					{
						if(CHARACTER_INFO[i][ch_STATE] == ROLEPLAY_STATE_CRACK)
						{
							if(cp_counts >= MAX_PLAYER_MAP_GPS_POINTS) break;
								
							new Float:player_pos[3];
							GetPlayerPos(i, player_pos[0], player_pos[1], player_pos[2]);
							SetPlayerPoint_GPS_Map(cp_counts, playerid, "LD_SPAC:white", 0x4aba00FF, 3.0, 3.0, player_pos[0], player_pos[1]);
							cp_counts ++;
						}
					}
				}
			}
		}
	}
	return 1;
}

SetPlayerPoint_GPS_Map(index, playerid, icon[], color, Float:icon_size_X, Float:icon_size_Y, Float:x, Float:y)
{
	new Float:td_X, Float:td_Y;
	
	if(x > 3000.0) x = 3000.0;
	else if(x < -3000.0) x = -3000.0;
	
	if(y > 3000.0) y = 3000.0;
	else if(y < -3000.0) y = -3000.0;
	
	new 
		Float:converted_MAP_SIZE_X = floatdiv(map_td_SIZE_X, 2),
		Float:converted_MAP_SIZE_Y = floatdiv(map_td_SIZE_Y, 2),
		Float:converted_ICON_SIZE_X = floatdiv(icon_size_X, 2),
		Float:converted_ICON_SIZE_Y = floatdiv(icon_size_Y, 2);
		
	td_X = map_td_X + floatmul(floatdiv(converted_MAP_SIZE_X, 3000), x) + converted_MAP_SIZE_X - converted_ICON_SIZE_X;
	td_Y = map_td_Y + floatmul(floatdiv(-converted_MAP_SIZE_Y, 3000), y) + converted_MAP_SIZE_Y- converted_ICON_SIZE_Y;
	
	if(PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index] != PlayerText:INVALID_TEXT_DRAW)
	{
		PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index]);
		PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index] = PlayerText:INVALID_TEXT_DRAW;
	}

	PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index] = CreatePlayerTextDraw(playerid, td_X, td_Y, icon);
	PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 0.160333, 1.280592);
	PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], icon_size_X, icon_size_Y);
	PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 1);
	PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], color);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 255);
	PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 4);
	PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index], 0);
	PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_PLAYER_GPS_MAP][index]);
	return 1;
}


stock GetIconTextdraw(iconid)
{
	new td_icon[24];
	
	switch(iconid)
	{
		case 2: td_icon = "hud:radar_centre";
		case 3: td_icon = "hud:arrow";
		case 4: td_icon = "hud:radar_north";
		case 5: td_icon = "hud:radar_airyard";
		case 6: td_icon = "hud:radar_ammugun";
		case 7: td_icon = "hud:radar_barbers";
		case 8: td_icon = "hud:radar_bigsmoke";
		case 9: td_icon = "hud:radar_boatyard";
		case 10: td_icon = "hud:radar_burgershot";
		case 11: td_icon = "hud:radar_bulldozer";
		case 12: td_icon = "hud:radar_catalinapink";
		case 13: td_icon = "hud:radar_cesarviapando";
		case 14: td_icon = "hud:radar_chicken";
		case 15: td_icon = "hud:radar_cj";
		case 16: td_icon = "hud:radar_crash1";
		case 17: td_icon = "hud:radar_diner";
		case 18: td_icon = "hud:radar_emmetgun";
		case 19: td_icon = "hud:radar_enemyattack";
		case 20: td_icon = "hud:radar_fire";
		case 21: td_icon = "hud:radar_girlfriend";
		case 22: td_icon = "hud:radar_hostpital";
		case 23: td_icon = "hud:radar_locosyndicate";
		case 24: td_icon = "hud:radar_maddog";
		case 25: td_icon = "hud:radar_mafiacasino";
		case 26: td_icon = "hud:radar_mcstrap";
		case 27: td_icon = "hud:radar_modgarage";
		case 28: td_icon = "hud:radar_ogloc";
		case 29: td_icon = "hud:radar_pizza";
		case 30: td_icon = "hud:radar_police";
		case 31: td_icon = "hud:radar_propertyg";
		case 32: td_icon = "hud:radar_propertyr";
		case 33: td_icon = "hud:radar_race";
		case 34: td_icon = "hud:radar_ryder";
		case 35: td_icon = "hud:radar_savegame";
		case 36: td_icon = "hud:radar_school";
		case 37: td_icon = "hud:radar_qmark";
		case 38: td_icon = "hud:radar_sweet";
		case 39: td_icon = "hud:radar_tattoo";
		case 40: td_icon = "hud:radar_thetruth";
		case 41: td_icon = "hud:radar_waypoint";
		case 42: td_icon = "hud:radar_toreno";
		case 43: td_icon = "hud:radar_triads";
		case 44: td_icon = "hud:radar_triadscasino";
		case 45: td_icon = "hud:radar_tshirt";
		case 46: td_icon = "hud:radar_woozie";
		case 47: td_icon = "hud:radar_zero";
		case 48: td_icon = "hud:radar_datedisco";
		case 49: td_icon = "hud:radar_datedrink";
		case 50: td_icon = "hud:radar_datefood";
		case 51: td_icon = "hud:radar_truck";
		case 52: td_icon = "hud:radar_cash";
		case 53: td_icon = "hud:radar_flag";
		case 54: td_icon = "hud:radar_gym";
		case 55: td_icon = "hud:radar_impound";
		case 56: td_icon = "hud:radar_light";
		case 57: td_icon = "hud:radar_runway";
		case 58: td_icon = "hud:radar_gangb";
		case 59: td_icon = "hud:radar_gangp";
		case 60: td_icon = "hud:radar_gangy";
		case 61: td_icon = "hud:radar_gangn";
		case 62: td_icon = "hud:radar_gangg";
		case 63: td_icon = "hud:radar_spray";
	}
	
	return td_icon;
}

RegisterNewPlayerWeapon(playerid, weapon_slot)
{
	new DBResult:Result, DB_Query[380];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `PLAYER_WEAPONS` (`ID_USER`, `WEAPON_ID`, `AMMO`) VALUES ('%d', '%d', '%d');\
		SELECT MAX(`ID_WEAPON`) FROM `PLAYER_WEAPONS`;\
	",
		ACCOUNT_INFO[playerid][ac_ID], PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_ID], PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_AMMO]
	);
	Result = db_query(Database, DB_Query);

	if(db_num_rows(Result)) PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_DB_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	return 1;
}

GivePlayerWeaponEx(playerid, weapon_id, ammo)
{
	if(PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_ID] == weapon_id) PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_AMMO] += ammo;
	else PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_AMMO] = ammo;
	
	PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_VALID] = true;
	PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_ID] = weapon_id;
	
	GivePlayerWeapon(playerid, weapon_id, ammo);
	return 1;
}

ResetPlayerWeaponsEx(playerid)
{
	new tmp_PLAYER_WEAPONS[enum_PLAYER_WEAPONS];
	for(new i = 0; i != 13; i ++) PLAYER_WEAPONS[playerid][i] = tmp_PLAYER_WEAPONS;
	
	ResetPlayerWeapons(playerid);
	return 1;
}

SetWeaponsForPlayer(playerid)
{
	ResetPlayerWeapons(playerid);
	for(new i = 0; i != 13; i ++)
	{
		if(PLAYER_WEAPONS[playerid][i][player_weapon_ID] != 0)
		{
			if(PLAYER_WEAPONS[playerid][i][player_weapon_AMMO] > 0) GivePlayerWeapon(playerid, PLAYER_WEAPONS[playerid][i][player_weapon_ID], PLAYER_WEAPONS[playerid][i][player_weapon_AMMO]);
		}
	}
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{	
	if(WEAPON_INFO[weaponid][weapon_info_AMMO]) PLAYER_WEAPONS[playerid][ WEAPON_INFO[weaponid][weapon_info_SLOT] ][player_weapon_AMMO] --;
	if(PLAYER_WEAPONS[playerid][ WEAPON_INFO[weaponid][weapon_info_SLOT] ][player_weapon_AMMO] <= 0) PLAYER_WEAPONS[playerid][ WEAPON_INFO[weaponid][weapon_info_SLOT] ][player_weapon_AMMO] = 0;
	
	if(ac_Info[CHEAT_UNDETECTED_WEAPON][ac_Enabled])
	{
		if(GetPlayerWeapon(playerid) != weaponid)
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_UNDETECTED_WEAPON][p_ac_info_IMMUNITY])
			{
				if(!ac_Info[CHEAT_UNDETECTED_WEAPON][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_UNDETECTED_WEAPON);
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_UNDETECTED_WEAPON][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_UNDETECTED_WEAPON][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_UNDETECTED_WEAPON][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_UNDETECTED_WEAPON][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_UNDETECTED_WEAPON][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_UNDETECTED_WEAPON][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_UNDETECTED_WEAPON][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_UNDETECTED_WEAPON);
				}
			}
		}
	}
	
	if(ac_Info[CHEAT_DRIVE_BY][ac_Enabled])
	{
		new player_state = GetPlayerState(playerid);
		if(player_state == PLAYER_STATE_DRIVER || player_state == PLAYER_STATE_PASSENGER)
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_DRIVE_BY][p_ac_info_IMMUNITY])
			{
				if(!ac_Info[CHEAT_DRIVE_BY][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_DRIVE_BY);
				else
				{
					if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_DRIVE_BY][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_DRIVE_BY][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_DRIVE_BY][p_ac_info_DETECTIONS] = 0;
					else PLAYER_AC_INFO[playerid][CHEAT_DRIVE_BY][p_ac_info_DETECTIONS] ++;
					
					PLAYER_AC_INFO[playerid][CHEAT_DRIVE_BY][p_ac_info_LAST_DETECTION] = gettime();
					if(PLAYER_AC_INFO[playerid][CHEAT_DRIVE_BY][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_DRIVE_BY][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_DRIVE_BY);
				}
			}
		}
	}
	
	
	if(PLAYER_CREW[playerid][player_crew_VALID])
	{
		if(gettime() > CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_LAST_ATTACK] + 300)
		{
			if(PLAYER_TEMP[playerid][pt_LAST_TERRITORY] != INVALID_STREAMER_ID)
			{
				if(IsPlayerInDynamicArea(playerid, TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_AREA]))
				{
					if(TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID])
					{
						if(!TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_WAR] && !CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING])
						{
							if(gettime() > TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_LAST_ATTACK] + 300)
							{
								if(!TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_OCCUPIED])
								{
									new attackers_in_area = CountCrewPlayersInTerritory(PLAYER_CREW[playerid][player_crew_INDEX], PLAYER_TEMP[playerid][pt_LAST_TERRITORY]);
									if(attackers_in_area >= 2) StartTerritoryAttack(PLAYER_CREW[playerid][player_crew_INDEX], PLAYER_TEMP[playerid][pt_LAST_TERRITORY], 300);
								}
								else
								{
									if(CREW_INFO[ TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_CREW_INDEX] ][crew_VALID])
									{
										if(!CREW_INFO[ TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_CREW_INDEX] ][crew_FIGHTING])
										{	
											new attackers_in_area = CountCrewPlayersInTerritory(PLAYER_CREW[playerid][player_crew_INDEX], PLAYER_TEMP[playerid][pt_LAST_TERRITORY]);
											if(attackers_in_area >= 5) StartTerritoryAttack(PLAYER_CREW[playerid][player_crew_INDEX], PLAYER_TEMP[playerid][pt_LAST_TERRITORY], 300);
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	PLAYER_TEMP[playerid][pt_LAST_SHOT_TIME] = GetTickCount();
    return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
	if(weaponid) CheckWeaponAndAmmo(playerid, weaponid);
	
	if(ACCOUNT_INFO[playerid][ac_LEVEL] <= 2 && !PLAYER_WORKS[playerid][WORK_POLICE])
	{
		if(!CHARACTER_INFO[playerid][ch_WANTED_LEVEL]) SetPlayerWantedLevelEx(playerid, 1);
	}
    return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    return 1;
}

CheckWeaponAndAmmo(playerid, weaponid)
{
	if(WEAPON_INFO[weaponid][weapon_info_ANTI_CHEAT])
	{
		new weapon_id, weapon_ammo;
		GetPlayerWeaponData(playerid, WEAPON_INFO[weaponid][weapon_info_SLOT], weapon_id, weapon_ammo);
		
		if(ac_Info[CHEAT_WEAPON][ac_Enabled])
		{
			if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_WEAPON][p_ac_info_IMMUNITY])
			{
				if(weapon_id != PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_ID])
				{
					if(!ac_Info[CHEAT_WEAPON][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_WEAPON);
					else
					{
						if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_WEAPON][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_WEAPON][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_WEAPON][p_ac_info_DETECTIONS] = 0;
						else PLAYER_AC_INFO[playerid][CHEAT_WEAPON][p_ac_info_DETECTIONS] ++;
						
						PLAYER_AC_INFO[playerid][CHEAT_WEAPON][p_ac_info_LAST_DETECTION] = gettime();
						if(PLAYER_AC_INFO[playerid][CHEAT_WEAPON][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_WEAPON][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_WEAPON);
					}
				}
			}
		}
		
		if(WEAPON_INFO[weapon_id][weapon_info_AMMO])
		{
			if(weapon_ammo > PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_AMMO] + 10)
			{
				if(ac_Info[CHEAT_AMMO][ac_Enabled])
				{
					if(gettime() > PLAYER_AC_INFO[playerid][CHEAT_AMMO][p_ac_info_IMMUNITY])
					{
						if(!ac_Info[CHEAT_AMMO][ac_Interval]) OnPlayerCheatDetected(playerid, CHEAT_AMMO);
						else
						{
							if(gettime() - PLAYER_AC_INFO[playerid][CHEAT_AMMO][p_ac_info_LAST_DETECTION] > ac_Info[CHEAT_AMMO][ac_Interval]) PLAYER_AC_INFO[playerid][CHEAT_AMMO][p_ac_info_DETECTIONS] = 0;
							else PLAYER_AC_INFO[playerid][CHEAT_AMMO][p_ac_info_DETECTIONS] ++;
							
							PLAYER_AC_INFO[playerid][CHEAT_AMMO][p_ac_info_LAST_DETECTION] = gettime();
							if(PLAYER_AC_INFO[playerid][CHEAT_AMMO][p_ac_info_DETECTIONS] >= ac_Info[CHEAT_AMMO][ac_Detections]) OnPlayerCheatDetected(playerid, CHEAT_AMMO);
						}
					}
				}
			}
			else PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_AMMO] = weapon_ammo;
		}
	}
	return 1;
}


new ADMIN_LEVEL_AC_IMMUNITY = 3; //nivel 3 en adelante
OnPlayerCheatDetected(playerid, cheat, Float:extra = 0.0)
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] >= ADMIN_LEVEL_AC_IMMUNITY) return 1;
	if(PLAYER_TEMP[playerid][pt_KICKED]) return 1;
	

	if(gettime() < PLAYER_TEMP[playerid][pt_LAST_CHEAT_DETECTED_TIME] + 5) return 1;

	new ac_message[145], player_state = GetPlayerState(playerid);
	
	if(ac_Info[cheat][ac_Kick])
	{	
		new bad_history[24];
		format(bad_history, sizeof bad_history, "ac, cheat (%02d)", cheat);
		AddPlayerBadHistory(ACCOUNT_INFO[playerid][ac_ID], -1, TYPE_KICK, bad_history);
		
		if(extra != 0.0) format(ac_message, sizeof ac_message, "{ff782b}[AC-KICK] {FFFFFF}%s (%d): %s (cd: %02d, ps: %02d, ping: %d, dec: %d:%d, extra: %.1f)", ACCOUNT_INFO[playerid][ac_NAME], playerid, ac_Info[cheat][ac_Name], cheat, player_state, GetPlayerPing(playerid), PLAYER_AC_INFO[playerid][cheat][p_ac_info_DETECTIONS], ac_Info[cheat][ac_Interval], extra);
		else format(ac_message, sizeof ac_message, "{ff782b}[AC-KICK] {FFFFFF}%s (%d): %s (cd: %02d, ps: %02d, ping: %d, dec: %d:%d)", ACCOUNT_INFO[playerid][ac_NAME], playerid, ac_Info[cheat][ac_Name], cheat, player_state, GetPlayerPing(playerid), PLAYER_AC_INFO[playerid][cheat][p_ac_info_DETECTIONS], ac_Info[cheat][ac_Interval]);
		
		KickEx(playerid);
		
		if(cheat == CHEAT_PLAYER_HEALTH) CHARACTER_INFO[playerid][ch_HEALTH] = 20.0;
		if(cheat == CHEAT_PLAYER_ARMOUR) CHARACTER_INFO[playerid][ch_ARMOUR] = 0.0;
	}
	else
	{
		if(extra != 0.0) format(ac_message, sizeof ac_message, "{ff782b}[AC-AVISO] {FFFFFF}%s (%d): %s (cd: %02d, ps: %02d, ping: %d, dec: %d:%d, extra: %.1f)", ACCOUNT_INFO[playerid][ac_NAME], playerid, ac_Info[cheat][ac_Name], cheat, player_state, GetPlayerPing(playerid), PLAYER_AC_INFO[playerid][cheat][p_ac_info_DETECTIONS], ac_Info[cheat][ac_Interval], extra);
		else format(ac_message, sizeof ac_message, "{ff782b}[AC-AVISO] {FFFFFF}%s (%d): %s (cd: %02d, ps: %02d, ping: %d, dec: %d:%d)", ACCOUNT_INFO[playerid][ac_NAME], playerid, ac_Info[cheat][ac_Name], cheat, player_state, GetPlayerPing(playerid), PLAYER_AC_INFO[playerid][cheat][p_ac_info_DETECTIONS], ac_Info[cheat][ac_Interval]);
	}
	
	SendMessageToAdminsAC(-1, ac_message);
	PLAYER_TEMP[playerid][pt_LAST_CHEAT_DETECTED_TIME] = gettime();

	return 1;
}

SavePlayerWeaponsData(playerid)
{
	if(!PLAYER_TEMP[playerid][pt_USER_EXIT] || !PLAYER_TEMP[playerid][pt_USER_LOGGED]) return 0;
	
	for(new i = 0; i != 13; i ++)
	{
		if(!PLAYER_WEAPONS[playerid][i][player_weapon_DB_ID]) continue;
		
		new DB_Query[128];
		format(DB_Query, sizeof(DB_Query), "UPDATE `PLAYER_WEAPONS` SET `WEAPON_ID` = '%d', `AMMO` = '%d' WHERE `ID_WEAPON` = '%d';", PLAYER_WEAPONS[playerid][i][player_weapon_ID], PLAYER_WEAPONS[playerid][i][player_weapon_AMMO], PLAYER_WEAPONS[playerid][i][player_weapon_DB_ID]);
		db_query(Database, DB_Query);
	}
	return 1;
}

LoadPlayerWeaponsData(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	
	new DBResult:Result, DB_Query[90];
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM `PLAYER_WEAPONS` WHERE `ID_USER` = '%d' LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], 13);
	Result = db_query(Database, DB_Query);
	
	new total;
	for(new i; i < db_num_rows(Result); i++ )
	{
		if(total >= 13)
		{
			printf("---> Límite superado en array 'PLAYER_WEAPONS' al intentar cargar de la base de datos.");
			break;
		}
		
		new weapon_id = db_get_field_assoc_int(Result, "WEAPON_ID");
		
		PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_VALID] = true;
		PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_DB_ID] = db_get_field_assoc_int(Result, "ID_WEAPON");
		PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_ID] = weapon_id;
		PLAYER_WEAPONS[playerid][ WEAPON_INFO[weapon_id][weapon_info_SLOT] ][player_weapon_AMMO] = db_get_field_assoc_int(Result, "AMMO");

		total ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

RemovePlayerSlotWeapon(playerid, slot, bool:db_delete = false)
{
	if(db_delete)
	{
		new DB_Query[140];
		format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_WEAPONS` WHERE `ID_USER` = '%d' AND `ID_WEAPON` = '%d';", ACCOUNT_INFO[playerid][ac_ID], PLAYER_WEAPONS[playerid][slot][player_weapon_DB_ID]);
		db_query(Database, DB_Query);
	}
	
	new current_weapon = GetPlayerWeapon(playerid);
	if(current_weapon == PLAYER_WEAPONS[playerid][slot][player_weapon_ID]) current_weapon = 0;
	
	PLAYER_WEAPONS[playerid][slot][player_weapon_VALID] = false;
	PLAYER_WEAPONS[playerid][slot][player_weapon_DB_ID] = 0;
	PLAYER_WEAPONS[playerid][slot][player_weapon_ID] = 0;
	PLAYER_WEAPONS[playerid][slot][player_weapon_AMMO] = 0;
	
	SetWeaponsForPlayer(playerid);
	SetPlayerArmedWeapon(playerid, current_weapon);
	return 1;
}

SetPlayerHealthEx(playerid, Float:health)
{
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
	
	CHARACTER_INFO[playerid][ch_HEALTH] = health;
	SetPlayerHealth(playerid, CHARACTER_INFO[playerid][ch_HEALTH]);
	return 1;
}

SetPlayerArmourEx(playerid, Float:armour)
{
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_IMMUNITY] = gettime() + 3;
	
	CHARACTER_INFO[playerid][ch_ARMOUR] = armour;
	SetPlayerArmour(playerid, CHARACTER_INFO[playerid][ch_ARMOUR]);
	return 1;
}

GivePlayerHealthEx(playerid, Float:health)
{
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_HEALTH][p_ac_info_IMMUNITY] = gettime() + 3;
	
	CHARACTER_INFO[playerid][ch_HEALTH] += health;
	if(CHARACTER_INFO[playerid][ch_HEALTH] > 100.0) CHARACTER_INFO[playerid][ch_HEALTH] = 100.0;
	SetPlayerHealth(playerid, CHARACTER_INFO[playerid][ch_HEALTH]);
	return 1;
}

GivePlayerArmourEx(playerid, Float:armour)
{
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_ARMOUR][p_ac_info_IMMUNITY] = gettime() + 3;
	
	CHARACTER_INFO[playerid][ch_ARMOUR] += armour;
	if(CHARACTER_INFO[playerid][ch_ARMOUR] > 100.0) CHARACTER_INFO[playerid][ch_ARMOUR] = 100.0;
	SetPlayerArmour(playerid, CHARACTER_INFO[playerid][ch_ARMOUR]);
	return 1;
}

TransferPlayerWeapon(from_playerid, slot, to_playerid)
{
	new DB_Query[130];
	format(DB_Query, sizeof(DB_Query), "UPDATE `PLAYER_WEAPONS` SET `ID_USER` = '%d' WHERE `ID_WEAPON` = '%d';", ACCOUNT_INFO[to_playerid][ac_ID], PLAYER_WEAPONS[from_playerid][slot][player_weapon_DB_ID]);
	db_query(Database, DB_Query);
	
	PLAYER_WEAPONS[to_playerid][slot][player_weapon_VALID] = true;
	PLAYER_WEAPONS[to_playerid][slot][player_weapon_DB_ID] = PLAYER_WEAPONS[from_playerid][slot][player_weapon_DB_ID];
	PLAYER_WEAPONS[to_playerid][slot][player_weapon_ID] = PLAYER_WEAPONS[from_playerid][slot][player_weapon_ID];
	PLAYER_WEAPONS[to_playerid][slot][player_weapon_AMMO] = PLAYER_WEAPONS[from_playerid][slot][player_weapon_AMMO];
	SetWeaponsForPlayer(to_playerid);
	
	RemovePlayerSlotWeapon(from_playerid, slot);
	return 1;
}

PlayerPayday(playerid)
{
	new money = 300 * ACCOUNT_INFO[playerid][ac_LEVEL];
	if(money > 4500) money = 4500;
	money += minrand(100, 200);
	
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, -1, "{969696}** SUPER ROLEPLAY **");
	SendClientMessageEx(playerid, -1, "{CCCCCC}Paga de juego: {98d16c}%s$", number_format_thousand(money));
	
	if(!ACCOUNT_INFO[playerid][ac_SU])
	{
		for(new i = 0; i != MAX_VEHICLES; i ++)
		{
			if(!PLAYER_VEHICLES[i][player_vehicle_VALID]) continue;
			if(PLAYER_VEHICLES[i][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) continue;
			
			new veh_money = VEHICLE_INFO[GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400][vehicle_info_PRICE] / 100;
			money -= veh_money;
			
			SendClientMessageEx(playerid, -1, "{CCCCCC}Seguro del vehículo %s: {FF6633}-%s$", VEHICLE_INFO[GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400][vehicle_info_NAME], number_format_thousand(veh_money));
		}
		
		for(new i = 0; i != MAX_PROPERTIES; i ++)
		{
			if(!PROPERTY_INFO[i][property_VALID]) continue;
			if(PROPERTY_INFO[i][property_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) continue;
		
			new property_money = PROPERTY_INFO[i][property_PRICE_BASE] / 200;
			money -= property_money;
			
			SendClientMessageEx(playerid, -1, "{CCCCCC}Seguro de la propiedad %s: {FF6633}-%s$", PROPERTY_INFO[i][property_NAME], number_format_thousand(property_money));	
		}
	}
	
	if(PLAYER_WORKS[playerid][WORK_POLICE])
	{
		new work_payment;
		if(work_info[WORK_POLICE][work_info_EXTRA_PAY] > 0 && work_info[WORK_POLICE][work_info_EXTRA_PAY_EXP] > 0)
		{
			work_payment = (work_info[WORK_POLICE][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[playerid][WORK_POLICE], work_info[WORK_POLICE][work_info_EXTRA_PAY_EXP])));
			if(work_info[WORK_POLICE][work_info_EXTRA_PAY_LIMIT] != 0) if(work_payment > work_info[WORK_POLICE][work_info_EXTRA_PAY_LIMIT]) work_payment = work_info[WORK_POLICE][work_info_EXTRA_PAY_LIMIT];
		}
		
		money += work_payment;
		
		SendClientMessageEx(playerid, -1, "{CCCCCC}Paga SAPD: {98d16c}%s$", number_format_thousand(work_payment));
	}
	
	
	if(money + CHARACTER_INFO[playerid][ch_CASH] <= 0)
	{
		money = 0;
		CHARACTER_INFO[playerid][ch_CASH] = 0;
	}
	
	if(money > 0) SendClientMessageEx(playerid, -1, "{969696}RESUMEN: {98d16c}%s$", number_format_thousand(money));
	else SendClientMessageEx(playerid, -1, "{969696}RESUMEN: {FF6633}%s$", number_format_thousand(money));
	
	SendClientMessage(playerid, -1, " ");
	
	GivePlayerCash(playerid, money);
	return 1;
}

//Animaciones
//ANIMACIONES
CMD:animaciones(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ShowDialog(playerid, DIALOG_ANIMS);
	return 1;
}
CMD:anims(playerid, params[])
{
	return cmd_animaciones(playerid, params);
}
CMD:parar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 0, true);
	ClearAnimations(playerid);
	return 1;
}
CMD:rendirse(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP); //rendirse
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:blowjob(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 0, 0);//blowjob
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:rodar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:borracho(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);//borracho
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:bomba(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);//bomba
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:apuntar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:reir(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);//reir
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:amenazar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);//amenazar
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:paja(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:herido(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:cruzarbrazos(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:recostarse(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);//recostarse
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:cubrirse(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);//crubrirse
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:vomitar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);//vomitar
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:comer(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:despedir(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);//despedir
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:nalgada(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);//nalgada
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:agonizar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);//agonizar
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:besar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);//besar
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:crack(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0);//crack
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:mear(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);//mear
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:sentarse(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);//sentarse
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:asiento(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 1, 1, 1, 0);
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:fucku(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );//fucku
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:taichi(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);//taichi
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:beber(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);//beber
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:boxear(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);//boxear
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:saludar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);//saludar
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:llorar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);//llorar
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:dormir(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);//dormir
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:rapear(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);//rapear
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:astrip(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);//strip
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:bailar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, 0xFF4500FF, "ERROR: /bailar [1-4]");

	switch(params[0])
	{
	    case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		default: SendClientMessage(playerid, 0xFF4500FF, "ERROR: /bailar [1-4]");
	}
	return 1;
}
CMD:alentar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);//alentar
	SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}
CMD:hablar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
    ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);//hablar
    SendClientMessage(playerid, -1, "{CCCCCC}Para cancelar la animacion utiliza /parar.");
	return 1;
}

GetPlayerVehicleAvaibleBootSlot(vehicleid)
{
	new max_slots = VEHICLE_INFO[GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400][vehicle_info_BOOT_SLOTS];
	if(max_slots > MAX_BOOT_SLOTS) max_slots = MAX_BOOT_SLOTS;
	
	for(new i = 0; i != max_slots; i ++)
	{
		if(!VEHICLE_BOOT[vehicleid][i][vehicle_boot_VALID]) return i;
	}
	return -1;
}

SavePlayerWeaponInVehicleBoot(playerid, weapon_slot, vehicleid, boot_slot)
{
	if(!PLAYER_VEHICLES[vehicleid][player_vehicle_ID]) return 0;

	VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_VALID] = true;
	VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_TYPE] = BOOT_TYPE_WEAPON;
	VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_INT] = PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_ID];
	VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_INT_EXTRA] = PLAYER_WEAPONS[playerid][weapon_slot][player_weapon_AMMO];
		
	new DBResult:Result, DB_Query[256];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `VEHICLE_BOOT`\
		(\
			`ID_VEHICLE`, `TYPE`, `INT`, `INT_EXTRA`\
		)\
		VALUES\
		(\
			'%d', '%d', '%d', '%d'\
		);\
		SELECT MAX(`ID_OBJECT`) FROM `VEHICLE_BOOT`;\
	", 
		PLAYER_VEHICLES[vehicleid][player_vehicle_ID], VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_TYPE], VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_INT], VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_INT_EXTRA]);
	Result = db_query(Database, DB_Query);

	if(db_num_rows(Result)) VEHICLE_BOOT[vehicleid][boot_slot][vehicle_boot_OBJECT_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
		
	RemovePlayerSlotWeapon(playerid, weapon_slot, true);
	return 1;
}

CMD:guardar(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	new option[24], extra;
	if(sscanf(params, "s[24]d", option, extra)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/guardar arma {FFFFFF}[slot /armas]");

	if(!strcmp(option, "arma", true))
	{
		if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_NORMAL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK)
		{
			if(extra < 0 || extra > 12) return SendClientMessage(playerid, -1, "Error: {C4FF66}/guardar arma {FFFFFF}[slot /armas]");
			if(!PLAYER_WEAPONS[playerid][extra][player_weapon_VALID])
			{
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "{999999}No tienes ninguna arma en ese slot (/armas).");
				return 1;
			}
			
			new vehicleid = GetPlayerCameraTargetVehicle(playerid);
			if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás cerca de tu vehículo.");
			
			if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
			if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
					
			new boot_slot = GetPlayerVehicleAvaibleBootSlot(vehicleid);
			if(boot_slot == -1) return SendClientMessage(playerid, -1, "{999999}No tienes suficiente espacio en tu /maletero.");
			
			SendClientMessageEx(playerid, -1, "{CCCCCC}Arma {98d16c}'%s' {CCCCCC}guardada en el maletero de tu %s.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][extra][player_weapon_ID] ][weapon_info_NAME], VEHICLE_INFO[GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400][vehicle_info_NAME]);
			SavePlayerWeaponInVehicleBoot(playerid, extra, vehicleid, boot_slot);
		}
		else SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	}
	else SendClientMessage(playerid, -1, "Error: {C4FF66}/guardar arma {FFFFFF}[slot /armas]"); 
	return 1;
}

CMD:sacar(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	new option[24], extra;
	if(sscanf(params, "s[24]d", option, extra)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/sacar arma {FFFFFF}[slot /maletero]");
	
	if(!strcmp(option, "arma", true))
	{
		if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_NORMAL)
		{
			new vehicleid = GetPlayerCameraTargetVehicle(playerid);
			if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás cerca de tu vehículo.");
			
			if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
			if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
			
			
			if(extra < 0 || extra > MAX_BOOT_SLOTS) return SendClientMessage(playerid, -1, "Error: {C4FF66}/sacar arma {FFFFFF}[slot /maletero]");
		
			if(!VEHICLE_BOOT[vehicleid][extra][vehicle_boot_VALID]) return SendClientMessage(playerid, -1, "{999999}No hay nada en ese slot.");
			if(VEHICLE_BOOT[vehicleid][extra][vehicle_boot_TYPE] != BOOT_TYPE_WEAPON) return SendClientMessage(playerid, -1, "{999999}En ese slot no hay armas.");
			
			new to_slot = WEAPON_INFO[ VEHICLE_BOOT[vehicleid][extra][vehicle_boot_INT] ][weapon_info_SLOT];
			if(PLAYER_WEAPONS[playerid][to_slot][player_weapon_VALID])
			{
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				SendClientMessageEx(playerid, -1, "{999999}Para sacar esta arma tienes que deshacerte de tu '%s' (%d) para tener espacio.", WEAPON_INFO[ PLAYER_WEAPONS[playerid][ to_slot ][player_weapon_ID] ][weapon_info_NAME], to_slot);
				return 1;
			}
			
			new DB_Query[64];
			format(DB_Query, sizeof DB_Query, "DELETE FROM `VEHICLE_BOOT` WHERE `ID_OBJECT` = '%d';", VEHICLE_BOOT[vehicleid][extra][vehicle_boot_OBJECT_ID]);
			db_query(Database, DB_Query);
			
			GivePlayerWeaponEx(playerid, VEHICLE_BOOT[vehicleid][extra][vehicle_boot_INT], VEHICLE_BOOT[vehicleid][extra][vehicle_boot_INT_EXTRA]);
			RegisterNewPlayerWeapon(playerid, to_slot);
			
			new temp_VEHICLE_BOOT[enum_VEHICLE_BOOT]; VEHICLE_BOOT[vehicleid][extra] = temp_VEHICLE_BOOT;
			
			Auto_SendPlayerAction(playerid, "saca un arma del maletero de su vehículo.");
		}
		else SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	}
	else SendClientMessage(playerid, -1, "Error: {C4FF66}/sacar arma {FFFFFF}[slot /maletero]"); 
	return 1;
}

CMD:maletero(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	new vehicleid = GetPlayerCameraTargetVehicle(playerid);
	if(vehicleid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{999999}No estás cerca de tu vehículo.");
	
	if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
	if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, -1, "{999999}Este no es tú vehículo.");
		
	PLAYER_TEMP[playerid][pt_DIALOG_BOT_VEHICLE] = vehicleid;
	ShowDialog(playerid, DIALOG_VEHICLE_BOOT);
	return 1;
}

SetWantedPlayerMarkers(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(CHARACTER_INFO[i][ch_WANTED_LEVEL] > 0)
				{
					SetPlayerMarkerForPlayer(playerid, i, PlayerWantedColor(i));
				}
			}
		}
	}
	return 1;
}

PlayerWantedColor(playerid)
{
	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0)
	{
		if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return 0x009900ff;
		else
		{
			switch(CHARACTER_INFO[playerid][ch_WANTED_LEVEL])
			{
				case 1: return 0xfffdbaff;
				case 2: return 0x896a00ff;
				case 3: return 0xd98900ff;
				case 4: return 0xd36d00ff;
				case 5: return 0xd24a00ff;
				case 6: return 0xff1e00ff;
				default: return 0xff1e00ff;
			}
		}
	}
	return PLAYER_COLOR;
}

/*
CMD:nivel(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/nivel {FFFFFF}[PlayerID/Nombre] [nivel de búsqueda 0-6]");
	if(params[1] < 0 || params[1] > 6) return SendClientMessage(playerid, -1, "Error: {C4FF66}/nivel {FFFFFF}[PlayerID/Nombre] [nivel de búsqueda 0-6]");
	if(PLAYER_WORKS[params[0]][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}Este jugador es policía.");
	
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	if(CHARACTER_INFO[params[0]][ch_STATE] == ROLEPLAY_STATE_JAIL) return SendClientMessage(playerid, -1, "{999999}Esta persona está en la cárcel.");
	
	if(params[1] == 0)
	{
		PlayerTextDrawHide(params[0], PlayerTextdraws[params[0]][ptextdraw_WANTED_LEVEL][0]);
		PlayerTextDrawHide(params[0], PlayerTextdraws[params[0]][ptextdraw_WANTED_LEVEL][1]);
		CHARACTER_INFO[params[0]][ch_WANTED_LEVEL] = 0;
		return 1;
	}
	
	if(params[1] > 3 && PLAYER_SKILLS[playerid][WORK_POLICE] < 3)
	{
		SendClientMessage(playerid, -1, "{999999}Necesitas ser un rango superior para poner asignar este nivel de búsqueda.");
		return 1;
	}
	
	SetPlayerWantedLevelEx(params[0], params[1]);
	SendClientMessageEx(playerid, -1, "Has asignado nivel de búsqueda %d a %s.", CHARACTER_INFO[params[0]][ch_WANTED_LEVEL], PLAYER_TEMP[params[0]][pt_RP_NAME]);
	return 1;
}
*/

CMD:esposar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{999999}Error: /esposar [PlayerID/Nombre]");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[params[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes esposar a este jugador ahora.");
	if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}Para esposar a esta persona tiene que estar depie.");
	if(CHARACTER_INFO[params[0]][ch_WANTED_LEVEL] == 0) return SendClientMessage(playerid, -1, "{999999}Esta persona no tiene nivel de búsqueda.");
	
	if(PLAYER_TEMP[params[0]][pt_CUFFED])
	{
		TogglePlayerControllable(params[0], true);
		PLAYER_TEMP[params[0]][pt_CUFFED] = false;
		PLAYER_TEMP[params[0]][pt_CUFFING] = false;
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		
		new action[64];
		format(action, sizeof action, "le quita las esposas a %s.", PLAYER_TEMP[params[0]][pt_RP_NAME]);
		Auto_SendPlayerAction(playerid, action);
		return 1;
	}
	
	if(!PLAYER_TEMP[params[0]][pt_CUFFING])
	{
		SendClientMessage(params[0], -1, "{CCCCCC}Estás siendo esposado, puedes /resistirse.");
		SendClientMessage(playerid, -1, "{CCCCCC}Estás esposando a esta persona, aún puede resistirse.");
		
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_HANDSUP);
		PLAYER_TEMP[params[0]][pt_CUFFED] = false;
		PLAYER_TEMP[params[0]][pt_CUFFING] = true;
		KillTimer(PLAYER_TEMP[params[0]][pt_TIMERS][14]);
		TogglePlayerControllable(params[0], false);
		PLAYER_TEMP[params[0]][pt_TIMERS][14] = SetTimerEx("CuffPlayer", 6000, false, "i", params[0]);
	}
	return 1;
}

CMD:revisar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{999999}Error: /revisar [PlayerID/Nombre]");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[params[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes revisar a este jugador ahora.");
	if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}Para revisar a esta persona tiene que estar depie.");
	if(CHARACTER_INFO[params[0]][ch_WANTED_LEVEL] == 0) return SendClientMessage(playerid, -1, "{999999}Esta persona no tiene nivel de búsqueda.");
	if(!PLAYER_TEMP[params[0]][pt_CUFFED]) return SendClientMessage(playerid, -1, "{999999}Para revisar a esta persona tiene que estar esposada.");
	
	ShowPlayerInventory(playerid, params[0]);
	
	new action[64];
	format(action, sizeof action, "revisa a %s.", PLAYER_TEMP[params[0]][pt_RP_NAME]);
	Auto_SendPlayerAction(playerid, action);
	return 1;
}

CMD:requisar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{999999}Error: /requisar [PlayerID/Nombre]");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[params[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes revisar a este jugador ahora.");
	if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}Para revisar a esta persona tiene que estar depie.");
	if(CHARACTER_INFO[params[0]][ch_WANTED_LEVEL] == 0) return SendClientMessage(playerid, -1, "{999999}Esta persona no tiene nivel de búsqueda.");
	if(!PLAYER_TEMP[params[0]][pt_CUFFED]) return SendClientMessage(playerid, -1, "{999999}Para revisar a esta persona tiene que estar esposada.");
	
	DeleteIlegalInv(params[0]);
	
	new action[64];
	format(action, sizeof action, "requisa las pertenencias ilegales de %s.", PLAYER_TEMP[params[0]][pt_RP_NAME]);
	Auto_SendPlayerAction(playerid, action);
	return 1;
}

CMD:ref(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	
	new city[45], zone[45];
	GetPlayerZones(playerid, city, zone);
		
	new message[145];
	format(message, sizeof message, "{4286f4}[Central policía] {FFFFFF}%s %s necesita refuerzos en {4286f4}%s, %s.", POLICE_RANKS[ PLAYER_SKILLS[playerid][WORK_POLICE] ], PLAYER_TEMP[playerid][pt_RP_NAME], city, zone);
	SendPoliceRadioMessage(-1, -1, message);
	return 1;
}

CMD:multar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "Error: {C4FF66}/multar {FFFFFF}[PlayerID/Nombre] [precio$]");
	if(params[1] < 0) return SendClientMessage(playerid, -1, "{999999}El precio no puede ser menor a 0$.");
	else if(params[1] > 100000) return SendClientMessage(playerid, -1, "{999999}El precio no puede ser mayor a 100.000$.");
	
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[params[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes multar a este jugador ahora.");
	if(CHARACTER_INFO[params[0]][ch_STATE] == ROLEPLAY_STATE_ARRESTED || CHARACTER_INFO[params[0]][ch_STATE] == ROLEPLAY_STATE_JAIL) return SendClientMessage(playerid, -1, "{999999}No puedes multar a este jugador ahora.");
	
	PLAYER_TEMP[params[0]][pt_POLICE_PEN_PID] = playerid;
	PLAYER_TEMP[params[0]][pt_POLICE_PEN_AID] = ACCOUNT_INFO[playerid][ac_ID];
	PLAYER_TEMP[params[0]][pt_POLICE_PEN_IM] = params[1];
	PLAYER_TEMP[params[0]][pt_POLICE_PEN_TIME] = gettime();
	ShowDialog(params[0], DIALOG_POLICE_PENALTY);
	
	SendClientMessage(playerid, -1, "{CCCCCC}La multa ha sido enviada, espera para ver si el jugador la acepta.");
	return 1;
}

CMD:arrestar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{999999}Error: /arrestar [PlayerID/Nombre] [Asiento 1 ó 2]");
	if(params[1] < 1 || params[1] > 2) return SendClientMessage(playerid, -1, "{999999}Error: /arrestar [PlayerID/Nombre] [Asiento 1 ó 2]");
	params[1] ++;
	
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "{999999}Para arrestar tienes que estar dentro de un vehículo policial.");
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!WORK_VEHICLES[vehicleid][work_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Para arrestar tienes que estar dentro de un vehículo policial.");
	if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}Para arrestar tienes que estar dentro de un vehículo policial.");
	if( (params[1] + 1) > VEHICLE_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400 ][vehicle_info_SEATS]) return SendClientMessageEx(playerid, -1, "{999999}Este vehículo policial es de %d pasajeros, así que no puedes llevar arrestados en él.", VEHICLE_INFO[ GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400 ][vehicle_info_SEATS]);
	
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[params[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes arrestar a este jugador ahora.");
	
	if(CHARACTER_INFO[params[0]][ch_WANTED_LEVEL] == 0) return SendClientMessage(playerid, -1, "{999999}Esta persona no tiene nivel de búsqueda.");
	if(!PLAYER_TEMP[params[0]][pt_CUFFED]) return SendClientMessage(playerid, -1, "{999999}Para arrestar a esta persona tiene que estar esposada.");
	
	if(CHARACTER_INFO[params[0]][ch_STATE] == ROLEPLAY_STATE_ARRESTED)
	{
		TogglePlayerControllable(params[0], true);
		PLAYER_TEMP[params[0]][pt_CUFFED] = false;
		PLAYER_TEMP[params[0]][pt_CUFFING] = false;
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		CHARACTER_INFO[params[0]][ch_STATE] = ROLEPLAY_STATE_NORMAL;
		
		SendClientMessageEx(playerid, -1, "Has soltado a %s.", PLAYER_TEMP[params[0]][pt_RP_NAME]);
		return 1;
	}
	else
	{
		CHARACTER_INFO[params[0]][ch_STATE] = ROLEPLAY_STATE_ARRESTED;
		PutPlayerInVehicleEx(params[0], vehicleid, params[1]);
	}
	return 1;
}

CMD:m(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "{999999}Para usar el megáfono tienes que estar dentro de un vehículo policial.");
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!WORK_VEHICLES[vehicleid][work_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Para usar el megáfono tienes que estar dentro de un vehículo policial.");
	if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}Para usar el megáfono tienes que estar dentro de un vehículo policial.");

	if(isnull(params)) return SendClientMessage(playerid, -1, "{999999}Error: /m [Mensaje]");

	new str_text[145];
	format(str_text, 145, "(Megáfono) %s: %s", PLAYER_TEMP[playerid][pt_RP_NAME], params);
	ProxDetector(playerid, 40.0, str_text, 0xFF9B6AFF, 0xFF9B6AFF, 0xFF9B6AFF, 0xFF9B6AFF, 0xFF9B6AFF);
	return 1;
}

PutPlayerInVehicleEx(playerid, vehicleid, seat)
{
	PLAYER_AC_INFO[playerid][CHEAT_POS][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_STATE_SPAMMER][p_ac_info_IMMUNITY] = gettime() + 3;
	PLAYER_AC_INFO[playerid][CHEAT_PLAYER_VEHICLE_DOORS][p_ac_info_IMMUNITY] = gettime() + 5;
	PLAYER_AC_INFO[playerid][CHEAT_VEHICLE_NOFUEL][p_ac_info_IMMUNITY] = gettime() + 15;
	return PutPlayerInVehicle(playerid, vehicleid, seat);
}

CMD:equiparse(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 219.244018, 69.982215, 1005.039062) || IsPlayerInRangeOfPoint(playerid, 2.0, 262.945587, 109.785270, 1004.617187) || IsPlayerInRangeOfPoint(playerid, 2.0, 222.683914, 186.956054, 1003.031250))
	{
		ShowDialog(playerid, DIALOG_POLICE_SHOP);
	}
	else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	return 1;
}

CMD:entregar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{999999}Error: /entregar [PlayerID/Nombre]");
	
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "{999999}Para entregar tienes que estar dentro de un vehículo policial.");
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!WORK_VEHICLES[vehicleid][work_vehicle_VALID]) return SendClientMessage(playerid, -1, "{999999}Para entregar tienes que estar dentro de un vehículo policial.");
	if(WORK_VEHICLES[vehicleid][work_vehicle_WORK] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}Para entregar tienes que estar dentro de un vehículo policial.");
	
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	new Float:pos[3]; GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_TEMP[params[0]][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes arrestar a este jugador ahora.");
	if(GetPlayerState(params[0]) != PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, -1, "{999999}Para entregar a esta persona tiene que estar dentro del vehículo policial.");
	if(GetPlayerVehicleID(params[0]) != vehicleid) return SendClientMessage(playerid, -1, "{999999}Para entregar a esta persona tiene que estar dentro del vehículo policial.");
	if(CHARACTER_INFO[params[0]][ch_WANTED_LEVEL] == 0) return SendClientMessage(playerid, -1, "{999999}Esta persona no tiene nivel de búsqueda.");
	
	if(IsPlayerInRangeOfPoint(playerid, 20.0, 1564.971923, -1694.916381, 5.617697))
	{
		SendClientMessage(playerid, -1, "La persona ahora está en la cárcel.");
		CHARACTER_INFO[params[0]][ch_POLICE_JAIL_ID] = 0;
		JailPlayer(params[0]);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, -1589.333496, 716.759521, -5.515106))
	{
		SendClientMessage(playerid, -1, "La persona ahora está en la cárcel.");
		CHARACTER_INFO[params[0]][ch_POLICE_JAIL_ID] = 1;
		JailPlayer(params[0]);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2282.200439, 2431.598632, 3.000518))
	{
		SendClientMessage(playerid, -1, "La persona ahora está en la cárcel.");
		CHARACTER_INFO[params[0]][ch_POLICE_JAIL_ID] = 2;
		JailPlayer(params[0]);
	}
	else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	return 1;
}

CMD:policias(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	
	PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] = 10;
	PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
	ShowDialog(playerid, DIALOG_POLICE_LIST);
	return 1;
}

CMD:entregarse(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] <= 0) return SendClientMessage(playerid, -1, "{CCCCCC}No tienes cargos.");
	
	if(IsPlayerInRangeOfPoint(playerid, 1.5, 250.049026, 67.635704, 1003.640625))
	{
		CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] = 0;
		JailPlayer(playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 246.349716, 118.358116, 1003.218750))
	{
		CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] = 1;
		JailPlayer(playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.5, 235.772537, 165.382186, 1003.029968))
	{
		CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] = 2;
		JailPlayer(playerid);
	}
	else SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	return 1;
}

CMD:resistirse(playerid, params[])
{
	if(PLAYER_TEMP[playerid][pt_CUFFING])
	{
		KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][14]);
		PLAYER_TEMP[playerid][pt_CUFFING] = false;
		TogglePlayerControllable(playerid, true);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		Auto_SendPlayerAction(playerid, "se resiste.");
	}
	return 1;
}

forward CuffPlayer(playerid);
public CuffPlayer(playerid)
{
	StopAudioStreamForPlayer(playerid);
	SetPlayerDrunkLevel(playerid, 0);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	CancelEdit(playerid);
	HidePlayerDialog(playerid);
	EndPlayerJob(playerid);
	PLAYER_TEMP[playerid][pt_HUNGRY_MESSAGE] = false;
	PLAYER_TEMP[playerid][pt_THIRST_MESSAGE] = false;
	PLAYER_TEMP[playerid][pt_PLAYER_IN_ATM] = false;
	PLAYER_TEMP[playerid][pt_CUFFED] = false;
	PLAYER_TEMP[playerid][pt_CUFFING] = false;
	PLAYER_TEMP[playerid][pt_PLAYER_WAITING_MP3_HTTP] = false;
	if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
	{
		PLAYER_TEMP[playerid][pt_WANT_TAXI] = false;
		DisablePlayerTaxiMark(playerid);
	}
	if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
	{
		PLAYER_TEMP[playerid][pt_WANT_MECHANIC] = false;
		DisablePlayerMechanicMark(playerid);
	}
	if(PLAYER_TEMP[playerid][pt_PLAYER_IN_CALL]) EndPhoneCall(playerid);
	if(PLAYER_TEMP[playerid][pt_GPS_MAP]) HidePlayerGpsMap(playerid);
	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0) DisablePlayerPoliceMark(playerid);
	
	PLAYER_TEMP[playerid][pt_CUFFED] = true;
	PLAYER_TEMP[playerid][pt_CUFFING] = false;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
	return 1;
}

CMD:frecuencias(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}No eres policía.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_POLICE) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como policía.");
	
	ShowDialog(playerid, DIALOG_POLICE_RADIOS);
	return 1;
}

SendPoliceRadioMessage(radio, color, message[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(PLAYER_WORKS[i][WORK_POLICE])
				{
					if(PLAYER_TEMP[i][pt_WORKING_IN] == WORK_POLICE)
					{
						if(radio == -1) SendClientMessage(i, color, message);
						else
						{
							if(PLAYER_TEMP[i][pt_POLICE_RADIO] == radio)
							{
								SendClientMessage(i, color, message);
							}
						}
					}
				}
			}
		}
	}
	return 1;
}

CountPoliceRadioPlayers(radio)
{
	new total;
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(PLAYER_WORKS[i][WORK_POLICE])
				{
					if(PLAYER_TEMP[i][pt_WORKING_IN] == WORK_POLICE)
					{
						if(PLAYER_TEMP[i][pt_POLICE_RADIO] == radio)
						{
							total ++;
						}
					}
				}
			}
		}
	}
	return total;
}

SetPlayerWantedLevelEx(playerid, level)
{
	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] == 0 && level > 0)
	{
		new city[45], zone[45];
		GetPlayerZones(playerid, city, zone);
		
		new message[145];
		format(message, sizeof message, "{4286f4}[Central policía] {FFFFFF}Reporte: {4286f4}%s {FFFFFF}visto por última vez en {4286f4}%s, %s.", PLAYER_TEMP[playerid][pt_RP_NAME], city, zone);
		SendPoliceRadioMessage(-1, -1, message);
	}
	
	CHARACTER_INFO[playerid][ch_WANTED_LEVEL] = level;
	PLAYER_TEMP[playerid][pt_LAST_SET_WANTED_LEVEL] = gettime();

	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] == 0)
	{
		DisablePlayerPoliceMark(playerid);
		PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0]);
		PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1]);
	}
	else
	{
		new td_str[24];
		for(new i = 0; i != CHARACTER_INFO[playerid][ch_WANTED_LEVEL]; i ++) strcat(td_str, "]");
		PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1], td_str);
	
		PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0]);
		PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1]);
		SetWantedMarkerToPolice(playerid);
	}
	return 1;
}

GetPlayerZones(playerid, city[], zone[])
{
	new Float:f_Pos[3];
	
	switch(CHARACTER_INFO[playerid][ch_STATE])
	{
		case ROLEPLAY_STATE_INTERIOR:
		{
			f_Pos[0] = ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_EXT_X];
			f_Pos[1] = ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_EXT_Y];
			f_Pos[2] = ENTER_EXIT[ PLAYER_TEMP[playerid][pt_INTERIOR_INDEX] ][ee_EXT_Z];
		}
		case ROLEPLAY_STATE_OWN_PROPERTY, ROLEPLAY_STATE_GUEST_PROPERTY:
		{
			f_Pos[0] = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] ][property_EXT_X];
			f_Pos[1] = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] ][property_EXT_Y];
			f_Pos[2] = PROPERTY_INFO[ PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] ][property_EXT_Z];
		}
		default: GetPlayerPos(playerid, f_Pos[0], f_Pos[1], f_Pos[2]);
	}

    format(city, 45, "San Andreas");
    format(zone, 45, "Desconocida");

	for(new i = 0; i < sizeof(g_Cities); i++)
	{
	    if(	(f_Pos[0] >= g_Cities[i][z_MinX] && f_Pos[0] < g_Cities[i][z_MaxX]) && (f_Pos[1] >= g_Cities[i][z_MinY] && f_Pos[1] < g_Cities[i][z_MaxY]) )
		{
			format(city, 45, g_Cities[i][z_Name]);
		    break;
		}
	}

	for(new i = 0; i < sizeof(g_Zones); i++)
	{
	    if(	(f_Pos[0] >= g_Zones[i][z_MinX] && f_Pos[0] < g_Zones[i][z_MaxX]) && (f_Pos[1] >= g_Zones[i][z_MinY] && f_Pos[1] < g_Zones[i][z_MaxY]) )
		{
			format(zone, 45, g_Zones[i][z_Name]);
		    break;
		}
	}
	
	return 1;
}

GetPointZone(Float:f_Pos_X, Float:f_Pos_Y, city[], zone[])
{
	format(city, 45, "San Andreas");
    format(zone, 45, "Desconocida");

	for(new i = 0; i < sizeof(g_Cities); i++)
	{
	    if(	(f_Pos_X >= g_Cities[i][z_MinX] && f_Pos_X < g_Cities[i][z_MaxX]) && (f_Pos_Y >= g_Cities[i][z_MinY] && f_Pos_Y < g_Cities[i][z_MaxY]) )
		{
			format(city, 45, g_Cities[i][z_Name]);
		    break;
		}
	}
	
	for(new i = 0; i < sizeof(g_Zones); i++)
	{
	    if(	(f_Pos_X >= g_Zones[i][z_MinX] && f_Pos_X < g_Zones[i][z_MaxX]) && (f_Pos_Y >= g_Zones[i][z_MinY] && f_Pos_Y < g_Zones[i][z_MaxY]) )
		{
			format(zone, 45, g_Zones[i][z_Name]);
		    break;
		}
	}
	
	return 1;
}

JailPlayer(playerid)
{
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][0]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_WANTED_LEVEL][1]);
		
	CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_JAIL;
	
	if(ACCOUNT_INFO[playerid][ac_SU]) CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 150 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
	else CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 300 * CHARACTER_INFO[playerid][ch_WANTED_LEVEL];
	
	CHARACTER_INFO[playerid][ch_WANTED_LEVEL] = 0;
	PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME] = gettime();
	SetPlayerPosEx(playerid, JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] ][jail_X], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Y], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_Z], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_ANGLE], JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID]  ][jail_INTERIOR], 0, true);
	
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][15]);
	PLAYER_TEMP[playerid][pt_TIMERS][15] = SetTimerEx("UnjailPlayer", CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] * 1000, false, "i", playerid);
	
	new time = CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] - (gettime() - PLAYER_TEMP[playerid][pt_ENTER_JAIL_TIME]);
	SendClientMessageEx(playerid, -1, "{CCCCCC}Te quedan %s minutos de condena.", TimeConvert(time));
	ResetPlayerWeapons(playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	DisablePlayerPoliceMark(playerid);
	DeleteIlegalInv(playerid);
	return 1;
}

forward UnjailPlayer(playerid);
public UnjailPlayer(playerid)
{
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][15]);
	CHARACTER_INFO[playerid][ch_POLICE_JAIL_TIME] = 0;
	CHARACTER_INFO[playerid][ch_WANTED_LEVEL] = 0;
	CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_INTERIOR;
	SetWeaponsForPlayer(playerid);
	SetPlayerArmedWeapon(playerid, 0);
	
	for(new i = 0; i != sizeof ENTER_EXIT; i ++)
	{
		if(ENTER_EXIT[i][ee_INTERIOR_TYPE] == JAIL_POSITIONS[ CHARACTER_INFO[playerid][ch_POLICE_JAIL_ID] ][jail_INT])
		{
			CHARACTER_INFO[playerid][ch_INTERIOR_EXTRA] = ENTER_EXIT[i][ee_ID];
			PLAYER_TEMP[playerid][pt_PROPERTY_INDEX] = -1;
			SetPlayerPosEx(playerid, ENTER_EXIT[i][ee_INT_X], ENTER_EXIT[i][ee_INT_Y], ENTER_EXIT[i][ee_INT_Z], ENTER_EXIT[i][ee_INT_ANGLE] + 180.0, ENTER_EXIT[i][ee_INT_INTERIOR], 0, true);
			StopAudioStreamForPlayer(playerid);
			break;
		}
	}
	
	SendClientMessageEx(playerid, -1, "{CCCCCC}Has cumplido tu condena.");
	return 1;
}

DisablePlayerPoliceMark(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(!PLAYER_WORKS[i][WORK_POLICE]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_POLICE) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, PLAYER_COLOR);
			}
		}
	}
	return 1;
}

SetWantedMarkerToPolice(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(!PLAYER_WORKS[i][WORK_POLICE]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_POLICE) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, PlayerWantedColor(i));
			}
		}
	}
	return 1;
}

ShowPlayerStats(playerid, pid)
{
	if(!IsPlayerConnected(pid)) return 0;
	if(ACCOUNT_INFO[pid][ac_ID] == 0) return 0;
	
	
	ACCOUNT_INFO[pid][ac_TIME_PLAYING] += gettime() - PLAYER_TEMP[pid][pt_TIME_PLAYING];
	PLAYER_TEMP[pid][pt_TIME_PLAYING] = gettime();
	
	new Float:hours;
	ConvertTime_SecondsToHoursFloat(ACCOUNT_INFO[pid][ac_TIME_PLAYING], hours);

	new next_rep[24], neccessary_rep = ACCOUNT_INFO[pid][ac_LEVEL] * 3;
	if(ACCOUNT_INFO[pid][ac_REP] < neccessary_rep)
	{
		new time = (ACCOUNT_INFO[pid][ac_TIME_FOR_REP] - (gettime() * 1000 - PLAYER_TEMP[pid][pt_TIME_PASSED_LAST_REP])) / 1000;
		if(time < 3) time = 3;
		
		format(next_rep, sizeof next_rep, "%sm", TimeConvert(time));
	}
	else format(next_rep, sizeof next_rep, "/comprarnivel");
	
	new caption[48], dialog[445 + (27 * sizeof(work_info))];
	format(caption, sizeof caption, "Estadísticas de %s", PLAYER_TEMP[pid][pt_RP_NAME]);
	
	format(dialog, sizeof dialog,
		
		"\
			ID: %d\n\
			Nombre: %s\n\
			Fecha registro: %s\n\
			Últ. conexión: %s\n\
			Tiempo jugando: %.1f horas\n\
			Nivel: %d\n\
			Reputación: %d/%d\n\
			Siguiente reputación: %s\n\
			Trabajo(s): %s\n\
			Banda: %s\n\
			Monedas: %d Sd\n\
			SU: %s\n\
			\n\
			Para estadísticas de tus trabajos utiliza /exp.\n\
			Para ver tus pertenencias usa /inv.\n\
			\n\
		",
			
			ACCOUNT_INFO[pid][ac_ID],
			ACCOUNT_INFO[pid][ac_NAME],
			ACCOUNT_INFO[pid][reg_DATE],
			ACCOUNT_INFO[pid][ac_LAST_CONNECTION],
			hours,
			ACCOUNT_INFO[pid][ac_LEVEL],
			ACCOUNT_INFO[pid][ac_REP], neccessary_rep,
			next_rep,
			getPlayerWorks(pid),
			getPlayerCrew(pid),
			ACCOUNT_INFO[pid][ac_SD],
			(ACCOUNT_INFO[pid][ac_SU] ? "Sí" : "No")
			
	);
	
	ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, caption, dialog, "Cerrar", "");	
	return 1;
}

getPlayerCrew(playerid)
{
	new crew[32];
	if(!PLAYER_CREW[playerid][player_crew_VALID]) crew = "ninguna";
	else format(crew, sizeof crew, "%s", CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_NAME]);
	return crew;
}

AddPlayerBadHistory(account_id, by_account_id, type, text[])
{
	new DB_Query[266];
	format(DB_Query, sizeof DB_Query, "INSERT INTO `BAD_HISTORY` (`ID_USER`, `TYPE`, `BY`, `TEXT`) VALUES('%d', '%d', '%d', '%q');", account_id, type, by_account_id, text);
	db_query(Database, DB_Query);
	return 1;
}

AddPlayerBan(account_id, account_name[], account_ip[], by_account_id, type, text[], days = 0, mod[] = "day")
{
	new DBResult:Result, DB_Query[485];
	
	if(!days)
	{
		format(DB_Query, sizeof DB_Query, 
			
			"\
			INSERT INTO `BAD_HISTORY` (`ID_USER`, `TYPE`, `BY`, `TEXT`) VALUES('%d', '%d', '%d', '%q');\
			INSERT INTO `BANS` (`NAME`, `IP`, `ID_HISTORY`, `EXPIRE_DATE`) SELECT '%q', '%q', MAX(`ID`), '0' FROM `BAD_HISTORY`;\
			",
			
				account_id, type, by_account_id, text,
				account_name, account_ip
				
		);
	}
	else
	{
		format(DB_Query, sizeof DB_Query, 
			
			"\
			INSERT INTO `BAD_HISTORY` (`ID_USER`, `TYPE`, `BY`, `TEXT`) VALUES('%d', '%d', '%d', '%q');\
			INSERT INTO `BANS` (`NAME`, `IP`, `ID_HISTORY`, `EXPIRE_DATE`) SELECT '%q', '%q', MAX(`ID`), DATETIME('NOW', '+%d %s') FROM `BAD_HISTORY`;\
			",
			
				account_id, type, by_account_id, text,
				account_name, account_ip, days, mod
				
		);
	}
	
	Result = db_query(Database, DB_Query);
	db_free_result(Result);
	return 1;
}

// Comandos admins
CMD:reportar(playerid, params[])
{
	if(gettime() < PLAYER_TEMP[playerid][pt_ANTIFLOOD_REPORT] + 5) return SendClientMessage(playerid, -1, "{999999}Cálmate.");
	PLAYER_TEMP[playerid][pt_ANTIFLOOD_REPORT] = gettime();
	
	new reason[128];
	if(sscanf(params, "us[128]", params[0], reason)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/reportar {FFFFFF}[PlayerID/Nombre] [Razón]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{999999}Jugador desconectado.");
	
	SendClientMessage(playerid, -1, "{CCCCCC}Tu reporte ha sido enviado a los administradores en línea.");
	
	new str[145]; format(str, 145, "{ff782b}[REPORTE] {FFFFFF}%s (%d) > %s (%d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, ACCOUNT_INFO[params[0]][ac_NAME], params[0], reason);
	SendMessageToAdmins(-1, str);
	return 1;
}

CMD:r(playerid, params[])
{
	new message[128];
	if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/r {FFFFFF}[MENSAJE]");
	
	if(PLAYER_TEMP[playerid][pt_ADMIN_PM_PID] == INVALID_PLAYER_ID || !PLAYER_TEMP[playerid][pt_ADMIN_PM_AID]) return SendClientMessage(playerid, -1, "{999999}Nada para responder.");
	if(ACCOUNT_INFO[ PLAYER_TEMP[playerid][pt_ADMIN_PM_PID] ][ac_ID] != PLAYER_TEMP[playerid][pt_ADMIN_PM_AID])
	{
		PLAYER_TEMP[playerid][pt_ADMIN_PM_PID] = INVALID_PLAYER_ID;
		PLAYER_TEMP[playerid][pt_ADMIN_PM_AID] = 0;
		PLAYER_TEMP[playerid][pt_ADMIN_PM_TIME] = 0;
		SendClientMessage(playerid, -1, "{999999}El administrador que te envió el mensaje está desconectado.");
		return 1;
	}
	if(gettime() > PLAYER_TEMP[playerid][pt_ADMIN_PM_TIME] + 60)
	{
		PLAYER_TEMP[playerid][pt_ADMIN_PM_PID] = INVALID_PLAYER_ID;
		PLAYER_TEMP[playerid][pt_ADMIN_PM_AID] = 0;
		PLAYER_TEMP[playerid][pt_ADMIN_PM_TIME] = 0;
		SendClientMessage(playerid, -1, "{999999}Has tardado demasiado en responser.");
		return 1;
	}
	
	SendClientMessageEx(PLAYER_TEMP[playerid][pt_ADMIN_PM_PID], -1, "Respuesta de %s (%d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, message);
	SendClientMessage(playerid, -1, "{CCCCCC}Tu mensaje ha sido enviado al administrador.");
	PLAYER_TEMP[playerid][pt_ADMIN_PM_PID] = INVALID_PLAYER_ID;
	PLAYER_TEMP[playerid][pt_ADMIN_PM_AID] = 0;
	PLAYER_TEMP[playerid][pt_ADMIN_PM_TIME] = 0;
	return 1;
}

CMD:id(playerid, params[])
{
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/id {FFFFFF}[PlayerID/Nombre]");
	if(!IsPlayerConnected(to_player)) return SendClientMessage(playerid, -1, "{999999}Jugador desconectado.");
	
	SendClientMessageEx(playerid, -1, "Nombre: '%s' DB-ID: '%d' Playerid: '%d' Nivel: %d", ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_ID], to_player, ACCOUNT_INFO[to_player][ac_LEVEL]);
	return 1;
}

CMD:admins(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 1) return 0;
	
	PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] = 10;
	PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
	ShowDialog(playerid, DIALOG_ADMIN_LIST);
	return 1;
}

CMD:acmdlog(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 1) return 0;
	
	if(PLAYER_TEMP[playerid][pt_SEE_ACMD_LOG])
	{
		SendClientMessage(playerid, -1, "Log de comandos administrativos deshabilitado.");
		PLAYER_TEMP[playerid][pt_SEE_ACMD_LOG] = false;
	}
	else
	{
		SendClientMessage(playerid, -1, "Log de comandos administrativos habilitado.");
		PLAYER_TEMP[playerid][pt_SEE_ACMD_LOG] = true;
	}
	return 1;
}

CMD:aclog(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 1) return 0;
	
	if(PLAYER_TEMP[playerid][pt_SEE_AC_LOG])
	{
		SendClientMessage(playerid, -1, "Log de anticheat deshabilitado.");
		PLAYER_TEMP[playerid][pt_SEE_AC_LOG] = false;
	}
	else
	{
		SendClientMessage(playerid, -1, "Log de anticheat habilitado.");
		PLAYER_TEMP[playerid][pt_SEE_AC_LOG] = true;
	}
	return 1;
}

CMD:works(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 1) return 0;
	
	SendClientMessage(playerid, -1, "Lista de trabajos:");
	
	for(new i = 0; i != sizeof work_info; i ++)
	{
		switch(work_info[i][work_info_TYPE])
		{
			case WORK_TYPE_NONE: SendClientMessageEx(playerid, -1, "ID: {f4f442}%d, {FFFFFF}tipo: {f4f442}ninguno, {FFFFFF}trabajo: {f4f442}%s", i, work_info[i][work_info_NAME]);
			case WORK_TYPE_NORMAL: SendClientMessageEx(playerid, -1, "ID: {f4f442}%d, {FFFFFF}tipo: {f4f442}normal, {FFFFFF}trabajo: {f4f442}%s", i, work_info[i][work_info_NAME]);
			case WORK_TYPE_FAMILY: SendClientMessageEx(playerid, -1, "ID: {f4f442}%d, {FFFFFF}tipo: {f4f442}extraordinario, {FFFFFF}trabajo: {f4f442}%s", i, work_info[i][work_info_NAME]);
		}
	}
	return 1;
}

CMD:getid(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 1) return 0;
	
	new name[24];
	if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, -1, "Syntax: /getid <nombre o parte del nombre>");
	
	new DBResult:Result, DB_Query[128];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `NAME`, `CONNECTED`, `PLAYERID` FROM `CUENTA` WHERE `NAME` LIKE '%%%q%%' LIMIT 20;", name);
	Result = db_query(Database, DB_Query);
	
	new count;
	for(new i = 0; i < db_num_rows(Result); i ++)
	{
		new id, get_name[24], connected, player_id;
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", get_name, 24);
		connected = db_get_field_assoc_int(Result, "CONNECTED");
		player_id = db_get_field_assoc_int(Result, "PLAYERID");
		
		SendClientMessageEx(playerid, -1, "Nombre: '%s' DB-ID: '%d' Conectado: '%d' Playerid: '%d'", get_name, id, connected, player_id);
		
		count ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	
	SendClientMessageEx(playerid, -1, "Se encontraron %d coincidencias, el límite es 20.", count);
	return 1;
}

CMD:getname(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 1) return 0;
	
	new db_id;
	if(sscanf(params, "d", db_id)) return SendClientMessage(playerid, -1, "Syntax: /getname <DB-ID>");
	
	new DBResult:Result, DB_Query[128];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `NAME`, `CONNECTED`, `PLAYERID` FROM `CUENTA` WHERE `ID` = '%d';", db_id);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		new id, get_name[24], connected, player_id;
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", get_name, 24);
		connected = db_get_field_assoc_int(Result, "CONNECTED");
		player_id = db_get_field_assoc_int(Result, "PLAYERID");
		
		SendClientMessageEx(playerid, -1, "Nombre: '%s' DB-ID: '%d' Conectado: '%d' Playerid: '%d'", get_name, id, connected, player_id);
	}
	else SendClientMessage(playerid, -1, "Sin resultados.");
	db_free_result(Result);
	return 1;
}

CMD:aka(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /aka <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	if(isnull(ACCOUNT_INFO[to_player][ac_IP])) return SendClientMessage(playerid, -1, "IP no válida.");
	
	SendClientMessageEx(playerid, -1, "AKA de %s (%d):", ACCOUNT_INFO[to_player][ac_NAME], to_player);
	
	new DBResult:Result, DB_Query[128];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `NAME` FROM `CUENTA` WHERE `IP` = '%q' LIMIT 20;", ACCOUNT_INFO[to_player][ac_IP]);
	Result = db_query(Database, DB_Query);
	
	new count;
	for(new i = 0; i < db_num_rows(Result); i ++)
	{
		new id, get_name[24];
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", get_name, 24);
		
		SendClientMessageEx(playerid, -1, "Nombre: {f4f442}'%s' {FFFFFF}DB-ID: '%d'", get_name, id);

		count ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	
	SendClientMessageEx(playerid, -1, "Se encontraron %d coincidencias, el límite es 20.", count);
	return 1;
}

CMD:adv(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	new to_player, reason[128];
	if(sscanf(params, "us[128]", to_player, reason)) return SendClientMessage(playerid, -1, "Syntax: /adv <player_id> <razon>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	
	AddPlayerBadHistory(ACCOUNT_INFO[to_player][ac_ID], ACCOUNT_INFO[playerid][ac_ID], TYPE_WARNING, reason);
	
	new dialog[170];
	format(dialog, sizeof dialog, "Has recibido una advertencia, razón:\n%s\n", reason);
	ShowPlayerDialog(to_player, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
	
	SendClientMessageEx(playerid, -1, "Jugador (nick: '%s' dbid: '%d', pid: '%d') advertido.", ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_ID], to_player);
	

	new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) advirtió a %s (%d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, ACCOUNT_INFO[to_player][ac_NAME], to_player, reason);
	SendMessageToAdmins(-1, str);
	return 1;
}

CMD:kick(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	new to_player, reason[128];
	if(sscanf(params, "us[128]", to_player, reason)) return SendClientMessage(playerid, -1, "Syntax: /kick <player_id> <razon>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	if(PLAYER_TEMP[to_player][pt_KICKED]) return SendClientMessage(playerid, -1, "El jugador ya está expulsado.");
	if(!ACCOUNT_INFO[to_player][ac_ID]) return Kick(to_player);
	
	
	AddPlayerBadHistory(ACCOUNT_INFO[to_player][ac_ID], ACCOUNT_INFO[playerid][ac_ID], TYPE_KICK, reason);
	
	new dialog[170];
	format(dialog, sizeof dialog, "Has sido expulsado, razón:\n%s\n", reason);
	ShowPlayerDialog(to_player, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
	KickEx(to_player, 500);
	
	SendClientMessageEx(playerid, -1, "Jugador (nick: '%s' dbid: '%d', pid: '%d') expulsado.", ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_ID], to_player);
	
	
	new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) kickeó a %s (%d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, ACCOUNT_INFO[to_player][ac_NAME], to_player, reason);
	SendMessageToAdmins(-1, str);
	return 1;
}

CMD:spec(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /spec <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
    {
		new Float:p[4];
		GetPlayerPos(playerid, p[0], p[1], p[2]);
		GetPlayerFacingAngle(playerid, p[3]);
		SetSpawnInfo(playerid, NO_TEAM, GetPlayerSkin(playerid), p[0], p[1], p[2], p[3], 0, 0, 0, 0, 0, 0);
		CHARACTER_INFO[playerid][ch_INTERIOR] = GetPlayerInterior(playerid);
		PLAYER_TEMP[playerid][pt_VIRTUAL_WORLD] = GetPlayerVirtualWorld(playerid);
	}
	
	TogglePlayerSpectatingEx(playerid, true);
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(to_player));
	SetPlayerInterior(playerid, GetPlayerInterior(to_player));
	if(IsPlayerInAnyVehicle(to_player)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(to_player));
	else PlayerSpectatePlayer(playerid, to_player);
	SendClientMessage(playerid, -1, "Utiliza /specoff para terminar este modo.");
	
	
	SendCmdLogToAdmins(playerid, "spec", params);
	return 1;
}

CMD:specoff(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	SetPlayerInterior(playerid, CHARACTER_INFO[playerid][ch_INTERIOR]);
	SetPlayerVirtualWorld(playerid, PLAYER_TEMP[playerid][pt_VIRTUAL_WORLD]);
	TogglePlayerSpectatingEx(playerid, false);
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][3]);
	PLAYER_TEMP[playerid][pt_TIMERS][3] = SetTimerEx("TogglePlayerControl", 2000, false, "ib", playerid, true);
	return 1;
}

CMD:freeze(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /freeze <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	
	SendClientMessageEx(playerid, -1, "Jugador '%s' (%d) congelado.", ACCOUNT_INFO[to_player][ac_NAME], to_player);
	TogglePlayerControllable(to_player, false);
	return 1;
}

CMD:unfreeze(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /unfreeze <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	
	SendClientMessageEx(playerid, -1, "Jugador '%s' (%d) descongelado.", ACCOUNT_INFO[to_player][ac_NAME], to_player);
	TogglePlayerControllable(to_player, true);
	return 1;
}

CMD:mban(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 2) return 0;
	
	new to_player, minutes, reason[128];
	if(sscanf(params, "uds[128]", to_player, minutes, reason)) return SendClientMessage(playerid, -1, "Syntax: /mban <player_id> <minutos> <razon>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	if(minutes < 3 || minutes > 1440) return SendClientMessage(playerid, -1, "El rango válido de minutos es de 3 a 1440.");
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] == 2 && minutes > 30) return SendClientMessage(playerid, -1, "Tu rango administrativo solo te permite un banear un máximo de 30 minutos.");
	
	if(PLAYER_TEMP[to_player][pt_KICKED]) return SendClientMessage(playerid, -1, "El jugador ya está expulsado.");
	if(!ACCOUNT_INFO[to_player][ac_ID]) return Kick(to_player);
	
	AddPlayerBan(ACCOUNT_INFO[to_player][ac_ID], ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_IP], ACCOUNT_INFO[playerid][ac_ID], TYPE_TEMP_BAN, reason, minutes, "minutes");
	
	new dialog[250];
	format(dialog, sizeof dialog, "Has sido baneado por %d minutos, razón:\n%s\n", minutes, reason);
	ShowPlayerDialog(to_player, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
	KickEx(to_player, 500);
	
	SendClientMessageEx(playerid, -1, "Jugador (nick: '%s' dbid: '%d', pid: '%d') baneado por %d minutos.", ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_ID], to_player, minutes);
	
	
	new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) baneó %d minutos a %s (%d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, minutes, ACCOUNT_INFO[to_player][ac_NAME], to_player, reason);
	SendMessageToAdmins(-1, str);
	return 1;
}

CMD:pest(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /pest <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	ShowPlayerStats(playerid, to_player);
	return 1;
}

CMD:pinv(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /pinv <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	ShowPlayerInventory(playerid, to_player);
	return 1;
}

CMD:pexp(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /pexp <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	ShowPlayerSkills(playerid, to_player);
	return 1;
}

CMD:pbank(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /pbank <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	if(!BANK_ACCOUNT[to_player][bank_account_ID]) SendClientMessage(playerid, -1, "El jugador no tiene cuenta bancaria.");
	else SendClientMessageEx(playerid, -1, "Cuenta bancaria ID: '%d' Balance: '%s'", BANK_ACCOUNT[to_player][bank_account_ID], number_format_thousand(BANK_ACCOUNT[to_player][bank_account_BALANCE]));
	return 1;
}

CMD:unjail(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /unjail <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	if(CHARACTER_INFO[to_player][ch_STATE] != ROLEPLAY_STATE_JAIL) return SendClientMessage(playerid, -1, "El jugador no está en el cárcel.");
	
	UnjailPlayer(to_player);
	SendClientMessageEx(playerid, -1, "El jugador %s (%d) ahora está en libertad.", ACCOUNT_INFO[to_player][ac_NAME], to_player);
	
	
	SendCmdLogToAdmins(playerid, "unjail", params);
	return 1;
}

CMD:goto(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /goto <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	new Float:p[4];
	GetPlayerPos(to_player, p[0], p[1], p[2]);
	GetPlayerFacingAngle(to_player, p[3]);
	
	SetPlayerPosEx(playerid, p[0], p[1], p[2], p[3], GetPlayerInterior(to_player), GetPlayerVirtualWorld(to_player), false, true);
	SetPlayerFacingAngle(playerid, p[3] + 180.0);
	
	SendCmdLogToAdmins(playerid, "goto", params);
	return 1;
}

CMD:get(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /get <player_id>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	new Float:p[4];
	GetPlayerPos(playerid, p[0], p[1], p[2]);
	GetPlayerFacingAngle(playerid, p[3]);
	
	SetPlayerPosEx(to_player, p[0], p[1], p[2], GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid), false, true);
	SetPlayerFacingAngle(to_player, p[3] + 180.0);
	
	
	SendCmdLogToAdmins(playerid, "get", params);
	return 1;
}

CMD:unban(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new name[24];
	if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, -1, "Syntax: /unban <nombre completo>");
	
	new DBResult:Result, DB_Query[128];
	format(DB_Query, sizeof DB_Query, "SELECT * FROM `BANS` WHERE `NAME` = '%q';", name);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		format(DB_Query, sizeof DB_Query, "DELETE FROM `BANS` WHERE `NAME` = '%q';", name);
		db_query(Database, DB_Query);
		
		SendClientMessageEx(playerid, -1, "El usuario '%s' ha sido desbaneado.", name);
		
		new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) ha desbaneado a '%s'.", ACCOUNT_INFO[playerid][ac_NAME], playerid, name);
		SendMessageToAdmins(-1, str);
	}
	else SendClientMessageEx(playerid, -1, "El nombre '%s' no está en la lista de baneados.", name);
	db_free_result(Result);
	return 1;
}

CMD:ban(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player, reason[128];
	if(sscanf(params, "us[128]", to_player, reason)) return SendClientMessage(playerid, -1, "Syntax: /ban <player_id> <razon>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	if(PLAYER_TEMP[to_player][pt_KICKED]) return SendClientMessage(playerid, -1, "El jugador ya está expulsado.");
	if(!ACCOUNT_INFO[to_player][ac_ID]) return Kick(to_player);
	
	AddPlayerBan(ACCOUNT_INFO[to_player][ac_ID], ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_IP], ACCOUNT_INFO[playerid][ac_ID], TYPE_BAN, reason);
	
	new dialog[250];
	format(dialog, sizeof dialog, "Has sido baneado, razón:\n%s\n", reason);
	ShowPlayerDialog(to_player, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
	KickEx(to_player, 500);
	
	SendClientMessageEx(playerid, -1, "Jugador (nick: '%s' dbid: '%d', pid: '%d') baneado.", ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_ID], to_player);
	
	
	new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) baneó a %s (%d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, ACCOUNT_INFO[to_player][ac_NAME], to_player, reason);
	SendMessageToAdmins(-1, str);
	return 1;
}

CMD:cls(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	for(new i = 0; i != 20; i ++)SendClientMessageToAll(-1, " ");
	
	SendCmdLogToAdmins(playerid, "cls", params);
	return 1;
}

CMD:tban(playerid, params[])
{	
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player, days, reason[128];
	if(sscanf(params, "uds[128]", to_player, days, reason)) return SendClientMessage(playerid, -1, "Syntax: /tban <player_id> <dias> <razon>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	if(days <= 0 || days > 9999) return SendClientMessage(playerid, -1, "Syntax: /ban <player_id> <dias> <razon>");
	
	if(PLAYER_TEMP[to_player][pt_KICKED]) return SendClientMessage(playerid, -1, "El jugador ya está expulsado.");
	if(!ACCOUNT_INFO[to_player][ac_ID]) return Kick(to_player);
	
	AddPlayerBan(ACCOUNT_INFO[to_player][ac_ID], ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_IP], ACCOUNT_INFO[playerid][ac_ID], TYPE_TEMP_BAN, reason, days);
	
	new dialog[250];
	format(dialog, sizeof dialog, "Has sido baneado por %d días, razón:\n%s\n", days, reason);
	ShowPlayerDialog(to_player, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Aviso", dialog, "Entiendo", "");
	KickEx(to_player, 500);
	
	SendClientMessageEx(playerid, -1, "Jugador (nick: '%s' dbid: '%d', pid: '%d') baneado por %d días.", ACCOUNT_INFO[to_player][ac_NAME], ACCOUNT_INFO[to_player][ac_ID], to_player, days);
	
	
	new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) baneó %d días a %s (%d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, days, ACCOUNT_INFO[to_player][ac_NAME], to_player, reason);
	SendMessageToAdmins(-1, str);
	return 1;
}

CMD:dban(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new reason[128], to_account;
	if(sscanf(params, "ds[128]", to_account, reason)) return SendClientMessage(playerid, -1, "Syntax: /dban <DB-ID> <razon>");
	
	new DBResult:Result, DB_Query[160];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `IP`, `NAME`, `CONNECTED`, `PLAYERID`, `ADMIN_LEVEL` FROM `CUENTA` WHERE `ID` = '%d';", to_account);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		new id, ip[16], get_name[24], connected, player_id, admin_level;
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "IP", ip, 16);
		db_get_field_assoc(Result, "NAME", get_name, 24);
		connected = db_get_field_assoc_int(Result, "CONNECTED");
		player_id = db_get_field_assoc_int(Result, "PLAYERID");
		admin_level = db_get_field_assoc_int(Result, "ADMIN_LEVEL");
		
		if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] >= admin_level)
		{
			if(connected) SendClientMessageEx(playerid, -1, "JUGADOR '%s' DB-ID '%d' conectado utilice /ban, su player_id: %d.", get_name, id, player_id);
			else
			{
				new DBResult:is_banned;
				format(DB_Query, sizeof DB_Query, "SELECT * FROM `BANS` WHERE `NAME` = '%q' OR `IP` = '%q';", get_name, ip);
				is_banned = db_query(Database, DB_Query);
				
				if(db_num_rows(is_banned))
				{
					new expire_date[24];
					db_get_field_assoc(is_banned, "EXPIRE_DATE", expire_date, 24);
					
					if(!strcmp(expire_date, "0", false)) SendClientMessageEx(playerid, -1, "JUGADOR (Nombre: '%s' DB-ID: '%d') ya está baneado (permanentemente).", get_name, id);
					else SendClientMessageEx(playerid, -1, "JUGADOR (Nombre: '%s' DB-ID: '%d') ya está baneado (temporalmente, fecha de readmisión: %s).", get_name, id, expire_date);
				}
				else
				{
					AddPlayerBan(id, get_name, ip, ACCOUNT_INFO[playerid][ac_ID], TYPE_BAN, reason);
					SendClientMessageEx(playerid, -1, "Jugador (nick: '%s' db_id: '%d') baneado.", get_name, id);
					
					
					new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) baneó a %s (offline, db_id: %d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, get_name, id, reason);
					SendMessageToAdmins(-1, str);
				}
				
				db_free_result(is_banned);
			}
		}
		else SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	}
	else SendClientMessage(playerid, -1, "No se encontro la DB-ID.");
	db_free_result(Result);
	return 1;
}

CMD:dtban(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new reason[128], to_account, days;
	if(sscanf(params, "dds[128]", to_account, days, reason)) return SendClientMessage(playerid, -1, "Syntax: /dtban <DB-ID> <dias> <razon>");
	if(days <= 0 || days > 9999) return SendClientMessage(playerid, -1, "Syntax: /dtban <DB-ID> <dias> <razon>");
	
	new DBResult:Result, DB_Query[160];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `IP`, `NAME`, `CONNECTED`, `PLAYERID`, `ADMIN_LEVEL` FROM `CUENTA` WHERE `ID` = '%d';", to_account);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		new id, ip[16], get_name[24], connected, player_id, admin_level;
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "IP", ip, 16);
		db_get_field_assoc(Result, "NAME", get_name, 24);
		connected = db_get_field_assoc_int(Result, "CONNECTED");
		player_id = db_get_field_assoc_int(Result, "PLAYERID");
		admin_level = db_get_field_assoc_int(Result, "ADMIN_LEVEL");
		
		if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] >= admin_level)
		{
			if(connected) SendClientMessageEx(playerid, -1, "JUGADOR '%s' DB-ID '%d' conectado utilice /ban, su player_id: %d.", get_name, id, player_id);
			else
			{
				new DBResult:is_banned;
				format(DB_Query, sizeof DB_Query, "SELECT * FROM `BANS` WHERE `NAME` = '%q' OR `IP` = '%q';", get_name, ip);
				is_banned = db_query(Database, DB_Query);
				
				if(db_num_rows(is_banned))
				{
					new expire_date[24];
					db_get_field_assoc(is_banned, "EXPIRE_DATE", expire_date, 24);
					
					if(!strcmp(expire_date, "0", false)) SendClientMessageEx(playerid, -1, "JUGADOR (Nombre: '%s' DB-ID: '%d') ya está baneado (permanentemente).", get_name, id);
					else SendClientMessageEx(playerid, -1, "JUGADOR (Nombre: '%s' DB-ID: '%d') ya está baneado (temporalmente, fecha de readmisión: %s).", get_name, id, expire_date);
				}
				else
				{
					AddPlayerBan(id, get_name, ip, ACCOUNT_INFO[playerid][ac_ID], TYPE_TEMP_BAN, reason, days);
					SendClientMessageEx(playerid, -1, "Jugador (nick: '%s' dbid: '%d') baneado por %d días.", get_name, id, days);
					
					new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) baneó %d días a %s (offline, db_id: %d): %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, days, get_name, id, reason);
					SendMessageToAdmins(-1, str);
				}
				
				db_free_result(is_banned);
			}
		}
		else SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	}
	else SendClientMessage(playerid, -1, "No se encontro la DB-ID.");
	db_free_result(Result);
	return 1;
}

CMD:rac(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	RespawnGlobalUnoccupiedVehicles();
	SendClientMessage(playerid, -1, "Todos los vehículos no personales y sin ocupar han sido re-spawneados.");
	
	SendCmdLogToAdmins(playerid, "rac", params);
	return 1;
}

CMD:rac2(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	RespawnAllUnoccupiedVehicles();
	SendClientMessage(playerid, -1, "Todos los vehículos sin ocupar han sido re-spawneados.");
	
	SendCmdLogToAdmins(playerid, "rac2", params);
	return 1;
}

CMD:rv(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return SendClientMessage(playerid, -1, "No estás en un vehículo.");
	
	SetVehicleToRespawnEx(vehicleid);
	SendClientMessageEx(playerid, -1, "Vehículo (%d) re-spawneado.", vehicleid);
	return 1;
}

CMD:pm(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player, message[128];
	if(sscanf(params, "us[128]", to_player, message)) return SendClientMessage(playerid, -1, "Syntax: /pm <player_id> <mensaje>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	
	SendClientMessageEx(playerid, -1, "Mensaje enviado a %s (%d): %s", ACCOUNT_INFO[to_player][ac_NAME], to_player, message);
	
	PLAYER_TEMP[to_player][pt_ADMIN_PM_PID] = playerid;
	PLAYER_TEMP[to_player][pt_ADMIN_PM_AID] = ACCOUNT_INFO[playerid][ac_ID];
	PLAYER_TEMP[to_player][pt_ADMIN_PM_TIME] = gettime();
	SendClientMessageEx(to_player, -1, "{CCCCCC}Mensaje de un administrador (/r para responder): {FFFFFF}%s", message);
	
	SendCmdLogToAdmins(playerid, "pm", params);
	return 1;
}

CMD:deletead(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new ad_id;
	if(sscanf(params, "d", ad_id)) return SendClientMessage(playerid, -1, "Syntax: /deletead <ID>");
	
	new DBResult:Result, DB_Query[160];
	format(DB_Query, sizeof DB_Query, "SELECT `ID` FROM `SHOP` WHERE `ID` = '%d';", ad_id);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		format(DB_Query, sizeof DB_Query, "DELETE FROM `SHOP` WHERE `ID` = '%d';", ad_id);
		db_query(Database, DB_Query);
		
		SendClientMessageEx(playerid, -1, "Anuncio '%d' eliminado.", ad_id);
		SendCmdLogToAdmins(playerid, "deletead", params);
	}
	else SendClientMessage(playerid, -1, "No se encontro la ID de ese anuncio.");
	db_free_result(Result);
	
	return 1;
}

CMD:settime(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 4) return 0;
	
	new hour, minute;
	if(sscanf(params, "dd", hour, minute)) return SendClientMessage(playerid, -1, "Syntax: /settime <hora> <minuto>");
	SERVER_TIME[0] = hour;
	SERVER_TIME[1] = minute;
	
	SendClientMessage(playerid, -1, "El tiempo se ajustará cuando el reloj avance.");
	
	SendCmdLogToAdmins(playerid, "settime", params);
	return 1;
}

CMD:givemod(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 4) return 0;
	
	new to_player, level;
	if(sscanf(params, "ud", to_player, level)) return SendClientMessage(playerid, -1, "Syntax: /givemod <player_id> <rango>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	if(level < 0 || level >= sizeof ADMIN_LEVELS) return SendClientMessage(playerid, -1, "El rango no es válido.");
	if(level > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "No puedes dar este rango por ser un rango superior al tuyo.");
	
	new DB_Query[70];
	format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `ADMIN_LEVEL` = '%d' WHERE `ID` = '%d';", level, ACCOUNT_INFO[to_player][ac_ID]);
	db_query(Database, DB_Query);
	
	ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] = level;
	SendClientMessageEx(to_player, -1, "%s cambió tu rango administrativo a: %s.", ACCOUNT_INFO[playerid][ac_NAME], ADMIN_LEVELS[level]);
	SendClientMessageEx(playerid, -1, "El rango administrativo de %s (%d) ahora es %s.", ACCOUNT_INFO[to_player][ac_NAME], to_player, ADMIN_LEVELS[level]);
	
	SendCmdLogToAdmins(playerid, "givemod", params);
	return 1;
}

CMD:ac(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	ShowDialog(playerid, DIALOG_ANTI_CHEAT);
	return 1;
}

CMD:modget(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return 0;
	
	new DB_Query[70];
	format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `ADMIN_LEVEL` = '5' WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	db_query(Database, DB_Query);
	
	ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] = 5;
	SendClientMessage(playerid, -1, "Ok.");
	return 1;
}

CMD:admac(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Syntax: /admac <nivel>");
	ADMIN_LEVEL_AC_IMMUNITY = params[0];
	
	SendClientMessageEx(playerid, -1, "Admin level %d o mayor no sera detectado por ac.", ADMIN_LEVEL_AC_IMMUNITY);
	return 1;
}

CMD:setthirst(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player, Float:ammount;
	if(sscanf(params, "uf", to_player, ammount)) return SendClientMessage(playerid, -1, "Syntax: /setthirst <player_id> <valor>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ammount < 0.0 || ammount > 100.0) return SendClientMessage(playerid, -1, "Cantidad no válida.");
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	CHARACTER_INFO[to_player][ch_THIRST] = ammount;
	SendClientMessageEx(playerid, -1, "La hidratación de %s (%d) ahora es %.1f.", ACCOUNT_INFO[to_player][ac_NAME], to_player, ammount);
	
	SendCmdLogToAdmins(playerid, "setthirst", params);
	return 1;
}

CMD:sethungry(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 3) return 0;
	
	new to_player, Float:ammount;
	if(sscanf(params, "uf", to_player, ammount)) return SendClientMessage(playerid, -1, "Syntax: /sethungry <player_id> <valor>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ammount < 0.0 || ammount > 100.0) return SendClientMessage(playerid, -1, "Cantidad no válida.");
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	CHARACTER_INFO[to_player][ch_HUNGRY] = ammount;
	SendClientMessageEx(playerid, -1, "La alimentación de %s (%d) ahora es %.1f.", ACCOUNT_INFO[to_player][ac_NAME], to_player, ammount);
	
	SendCmdLogToAdmins(playerid, "sethungry", params);
	return 1;
}

CMD:setgas(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new Float:val;
	if(sscanf(params, "f", val)) return SendClientMessage(playerid, -1, "Syntax: /setgas <valor>");
	if(val < 0.0) return SendClientMessage(playerid, -1, "Valor no válido.");
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return SendClientMessage(playerid, -1, "No estás en un vehículo.");
	
	if(val + GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] > GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS]) val = GLOBAL_VEHICLES[vehicleid][gb_vehicle_MAX_GAS];
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS] = val;
	
	SendClientMessageEx(playerid, -1, "La gasolina del vehículo (%d) ahora es %.1f.", vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_GAS]);
	
	SendCmdLogToAdmins(playerid, "setgas", params);
	return 1;
}

CMD:repairveh(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;

	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return SendClientMessage(playerid, -1, "No estás en un vehículo.");
	
	RepairVehicleEx(vehicleid, playerid);
	SendClientMessageEx(playerid, -1, "Vehículo (%d) reparado.", vehicleid);
	
	SendCmdLogToAdmins(playerid, "repairveh", params);
	return 1;
}

CMD:sethealth(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, Float:ammount;
	if(sscanf(params, "uf", to_player, ammount)) return SendClientMessage(playerid, -1, "Syntax: /sethealth <player_id> <valor>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ammount < 0.0 || ammount > 100.0) return SendClientMessage(playerid, -1, "Valor no válido.");
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	SetPlayerHealthEx(to_player, ammount);
	SendClientMessageEx(playerid, -1, "La vida de %s (%d) ahora es %.1f.", ACCOUNT_INFO[to_player][ac_NAME], to_player, ammount);
	
	SendCmdLogToAdmins(playerid, "sethealth", params);
	return 1;
}

CMD:setarmour(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, Float:ammount;
	if(sscanf(params, "uf", to_player, ammount)) return SendClientMessage(playerid, -1, "Syntax: /setarmour <player_id> <valor>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ammount < 0.0 || ammount > 100.0) return SendClientMessage(playerid, -1, "Valor no válido.");
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	SetPlayerArmourEx(to_player, ammount);
	SendClientMessageEx(playerid, -1, "El chaleco de %s (%d) ahora es %.1f.", ACCOUNT_INFO[to_player][ac_NAME], to_player, ammount);
	
	SendCmdLogToAdmins(playerid, "setarmour", params);
	return 1;
}

CMD:setlevel(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, level;
	if(sscanf(params, "ud", to_player, level)) return SendClientMessage(playerid, -1, "Syntax: /level <player_id> <nivel>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	KillTimer(PLAYER_TEMP[to_player][pt_TIMERS][2]);
	
	ACCOUNT_INFO[to_player][ac_REP] = 1;
	ACCOUNT_INFO[to_player][ac_LEVEL] = level;
	UpdateReputationTextDraws(to_player);
	SetPlayerSkillLevels(to_player);
	
	SendClientMessageEx(to_player, -1, "{C4FF66}¡Felicidades! {FFFFFF}Has subido al nivel %d.", ACCOUNT_INFO[to_player][ac_LEVEL]);
	SetPlayerScore(to_player, ACCOUNT_INFO[to_player][ac_LEVEL]);
	PlayerPlaySound(to_player, 1058, 0.0, 0.0, 0.0);
	
	ACCOUNT_INFO[to_player][ac_TIME_FOR_REP] = TIME_FOR_REP;
	PLAYER_TEMP[to_player][pt_TIME_PASSED_LAST_REP] = gettime() * 1000;
	
	KillTimer(PLAYER_TEMP[to_player][pt_TIMERS][2]);
	PLAYER_TEMP[to_player][pt_TIMERS][2] = SetTimerEx("AddPlayerReputation", ACCOUNT_INFO[to_player][ac_TIME_FOR_REP], false, "i", to_player);
	
	SendClientMessageEx(playerid, -1, "El nivel de %s (%d) ahora es %d.", ACCOUNT_INFO[to_player][ac_NAME], to_player, ACCOUNT_INFO[to_player][ac_LEVEL]);
	
	SendCmdLogToAdmins(playerid, "setlevel", params);
	return 1;
}

CMD:setwork(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, work, set;
	if(sscanf(params, "udd", to_player, work, set)) return SendClientMessage(playerid, -1, "Syntax: /setwork <player_id> <work> <set>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	if(work < 0 || work >= sizeof work_info) return SendClientMessage(playerid, -1, "El trabajo no es válido, para verlos usa /works.");
	
	if(PLAYER_TEMP[to_player][pt_WORKING_IN]) return SendClientMessage(playerid, -1, "No se puede cambiar el trabajo del jugador porque está de servicio en su trabajo.");
	
	
	new DB_Query[256];
	format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_WORKS` SET `SET` = '%d' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", set, ACCOUNT_INFO[to_player][ac_ID], work);
	db_query(Database, DB_Query);
		
	PLAYER_WORKS[to_player][work] = set;
	if(!set) SendClientMessageEx(to_player, -1, "{CCCCCC}Has abandonado tu trabajo de %s.", work_info[work][work_info_NAME]);
	else
	{
		SendClientMessageEx(to_player, -1, "{b6f442}¡Felicidades! {FFFFFF}Has conseguido tu trabajo de %s.", work_info[work][work_info_NAME]);
		SendClientMessage(to_player, -1, "Puedes utilizar {eaf259}/ayuda trabajos {FFFFFF}para ver como trabajar aquí.");
	}
	
	SendClientMessageEx(playerid, -1, "El trabajo %s de %s (%d) es: '%d'.", work_info[ work ][work_info_NAME], ACCOUNT_INFO[to_player][ac_NAME], to_player, set);
	
	SendCmdLogToAdmins(playerid, "setwork", params);
	return 1;
}

CMD:setworkexp(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, work, exp;
	if(sscanf(params, "udd", to_player, work, exp)) return SendClientMessage(playerid, -1, "Syntax: /setworkexp <player_id> <work, para verlos /works> <exp>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	if(work < 0 || work >= sizeof work_info) return SendClientMessage(playerid, -1, "El trabajo no es válido, para verlos usa /works.");
	
	new DB_Query[256];
	format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_SKILLS` SET `TOTAL` = '%d' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", exp, ACCOUNT_INFO[to_player][ac_ID], work);
	db_query(Database, DB_Query);
	
	PLAYER_SKILLS[to_player][ work ] = exp;
	
	SendClientMessageEx(playerid, -1, "La experiencia de %s (%d) en el trabajo '%s' ahora es %d.", ACCOUNT_INFO[to_player][ac_NAME], to_player, work_info[ work ][work_info_NAME], exp);
	
	SendCmdLogToAdmins(playerid, "setworkexp", params);
	return 1;
}

CMD:setcash(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, value;
	if(sscanf(params, "ud", to_player, value)) return SendClientMessage(playerid, -1, "Syntax: /setcash <player_id> <ammount>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	SetPlayerCash(to_player, value);
	SendClientMessageEx(playerid, -1, "El dinero de %s (%d) ahora es %d.", ACCOUNT_INFO[to_player][ac_NAME], to_player, value);
	
	SendCmdLogToAdmins(playerid, "setcash", params);
	return 1;
}

CMD:givecash(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, value;
	if(sscanf(params, "ud", to_player, value)) return SendClientMessage(playerid, -1, "Syntax: /givecash <player_id> <ammount>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	GivePlayerCash(to_player, value);
	SendClientMessageEx(playerid, -1, "El jugador %s (%d) ha recibido %d.", ACCOUNT_INFO[to_player][ac_NAME], to_player, value);
	
	SendCmdLogToAdmins(playerid, "givecash", params);
	return 1;
}

CMD:setbmlevel(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, value;
	if(sscanf(params, "ud", to_player, value)) return SendClientMessage(playerid, -1, "Syntax: /setbmlevel <player_id> <level>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(ACCOUNT_INFO[to_player][ac_ADMIN_LEVEL] > ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL]) return SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	
	CHARACTER_INFO[to_player][ch_BLACK_MARKET_LEVEL] = value;
	SendClientMessageEx(playerid, -1, "El nivel 'black_market' de %s (%d) ahora es %d.", ACCOUNT_INFO[to_player][ac_NAME], to_player, value);
	
	SendCmdLogToAdmins(playerid, "setbmlevel", params);
	return 1;
}

CMD:say(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;

	if(isnull(params)) return SendClientMessage(playerid, -1, "Syntax: /say <message>");
	new str[145]; format(str, 145, "{00B8F5}* Admin [{B0E66A}%s (%s){00B8F5}] %s", ACCOUNT_INFO[playerid][ac_NAME], ADMIN_LEVELS[ ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] ], params);
	SendClientMessageToAll(-1, str);
	
	SendCmdLogToAdmins(playerid, "say", params);
	return 1;
}

CMD:asay(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;

	if(isnull(params)) return SendClientMessage(playerid, -1, "Syntax: /asay <message>");
	new str[145]; format(str, 145, "{2587ce}* Admin: %s", params);
	SendClientMessageToAll(-1, str);
	
	SendCmdLogToAdmins(playerid, "asay", params);
	return 1;
}

CMD:spos(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new Float:p[4], interior, vw;
	if(sscanf(params, "p<,>ffffdd", p[0], p[1], p[2], p[3], interior, vw)) return SendClientMessage(playerid, -1, "Syntax: /spos [X], [Y], [Z], [ANGLE], [INTERIOR], [VIRTUAL WORLD]");

	SetPlayerPosEx(playerid, p[0], p[1], p[2], p[3], interior, vw);
	return 1;
}

CMD:setweather(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new weather;
	if(sscanf(params, "d", weather)) return SendClientMessage(playerid, -1, "Syntax: /setweather <weatherid>");
	
	SERVER_WEATHER = weather;
	SendClientMessage(playerid, -1, "El clima se ajustará cuando el reloj avance.");
	
	SendCmdLogToAdmins(playerid, "setweather", params);
	return 1;
}

CMD:v(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new modelid, color1, color2;
	if(sscanf(params, "ddd", modelid, color1, color2)) return SendClientMessage(playerid, -1, "Syntax: /v <modelid> <color 1> <color 2>");
	
	new Float:p[4];
	GetPlayerPos(playerid, p[0], p[1], p[2]);
	GetPlayerFacingAngle(playerid, p[3]);
	
	new vid = AddTestVehicle(false, modelid, p[0], p[1], p[2], p[3], color1, color2);
	PutPlayerInVehicleEx(playerid, vid, 0);
	
	SendCmdLogToAdmins(playerid, "v", params);
	return 1;
}

CMD:dv(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return SendClientMessage(playerid, -1, "Error: no estás en ningún vehículo de prueba.");
	if(GLOBAL_VEHICLES[vehicleid][gb_vehicle_TYPE] != VEHICLE_TYPE_TEST) return SendClientMessage(playerid, -1, "Error: no estás en ningún vehículo de prueba.");
	
	DestroyVehicleEx(vehicleid);
	SendClientMessage(playerid, -1, "Vehículo de prueba destruido.");
	return 1;
}


CMD:restart(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	db_query(Database, "UPDATE `CUENTA` SET `CONNECTED` = '0', PLAYERID = '-1';");
	
	SendRconCommand("gmx");
	return 1;
}

CMD:pos(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new Float:pos[4];
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vid = GetPlayerVehicleID(playerid);
		GetVehiclePos(vid, pos[0], pos[1], pos[2]);
		GetVehicleZAngle(vid, pos[3]);
		printf("%d, %f, %f, %f, %f //%s", GetVehicleModel(vid), pos[0], pos[1], pos[2], pos[3], params);
	}
	else
	{
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		GetPlayerFacingAngle(playerid, pos[3]);
		printf("%f, %f, %f, %f, %d //%s", pos[0], pos[1], pos[2], pos[3], GetPlayerInterior(playerid), params);
	}
	return 1;
}

CMD:setname(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, new_name[24];
	if(sscanf(params, "us[24]", to_player, new_name)) return SendClientMessage(playerid, -1, "Syntax: /setname <player_id> <nuevo nombre>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	if(!IsValidName(new_name) || strfind( new_name, "_", true) == -1) return SendClientMessageEx(playerid, -1, "El nombre '%s' no cumple con el formato Nombre_Apellido.", new_name);
	
	new DBResult:Result, DB_Query[128], bool:used;
	format(DB_Query, sizeof DB_Query, "SELECT `ID` FROM `CUENTA` WHERE `NAME` = '%q';", new_name);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result)) used = true;
	db_free_result(Result);
	if(used) return SendClientMessageEx(playerid, -1, "El nombre '%s' está en uso.", new_name);

	format(PLAYER_TEMP[to_player][pt_NAME], 24, "%s", new_name);
	format(ACCOUNT_INFO[to_player][ac_NAME], 24, "%s", new_name);
	PLAYER_TEMP[to_player][pt_RP_NAME] = RP_GetPlayerName(to_player);
	SetPlayerName(to_player, new_name);
	
	format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `NAME` = '%q' WHERE `ID` = '%d';", new_name, ACCOUNT_INFO[to_player][ac_ID]);
	db_query(Database, DB_Query);
	
	for(new i = 0; i != MAX_PROPERTIES; i ++)
	{
		if(!PROPERTY_INFO[i][property_VALID]) continue;
		if(PROPERTY_INFO[i][property_OWNER_ID] != ACCOUNT_INFO[to_player][ac_ID]) continue;
		
		new label_str[256];
		format
		(
			label_str, 
			sizeof label_str, 
			"\
				Propiedad {C4FF66}#%d\n\n\
				{FFFFFF}Propietario: {C4FF66}%s\n\
				{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
			", PROPERTY_INFO[i][property_ID], ACCOUNT_INFO[to_player][ac_NAME]
		);
		UpdateDynamic3DTextLabelText(PROPERTY_INFO[i][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
	}
	
	SendClientMessageEx(to_player, -1, "{CCCCCC}Tu nombre ha sido cambiado a '%s'", new_name);
	SendClientMessageEx(playerid, -1, "El nombre del jugador ha sido cambiado a '%s'", new_name);
	
	SendCmdLogToAdmins(playerid, "setname", params);
	return 1;
}

CMD:exproperty(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new id_property;
	if(sscanf(params, "d", id_property)) return SendClientMessage(playerid, -1, "Syntax: /exproperty <id>");
	if(id_property <= 0) return SendClientMessage(playerid, -1, "Syntax: /exproperty < id > 0 >");
	
	new index = GetPropertyIndexByID(id_property);
	if(index == -1) return SendClientMessage(playerid, -1, "PROPIEDAD ID no encontrada.");
	
	if(!PROPERTY_INFO[index][property_SOLD]) return SendClientMessage(playerid, -1, "Esta propiedad ya está en venta.");
	
	
	PROPERTY_INFO[ index ][property_SOLD] = false;
	PROPERTY_INFO[ index ][property_CREW] = false;
	PROPERTY_INFO[ index ][property_OWNER_ID] = 0;
	PROPERTY_INFO[ index ][property_CREW_ID] = 0;
	format(PROPERTY_INFO[ index ][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[ index ][property_ID]);
	
	new label_str[256], info[3];
	format
	(
		label_str, 
		sizeof label_str, 
		"\
			Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
			Interior: {C4FF66}%d\n\
			{FFFFFF}Precio: {C4FF66}%s$\n\
			{FFFFFF}Nivel necesario: {C4FF66}%d\n\
			{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
		", PROPERTY_INFO[ index ][property_ID], PROPERTY_INFO[ index ][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[ index ][property_PRICE]), PROPERTY_INFO[ index ][property_LEVEL]
	);
	UpdateDynamic3DTextLabelText(PROPERTY_INFO[ index ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
	
	DestroyDynamicPickup(PROPERTY_INFO[ index ][property_EXT_PICKUP_ID]);
	PROPERTY_INFO[ index ][property_EXT_PICKUP_ID] = INVALID_STREAMER_ID;
	
	PROPERTY_INFO[ index ][property_EXT_PICKUP_ID] = CreateDynamicPickup(1273, 1, PROPERTY_INFO[ index ][property_EXT_X], PROPERTY_INFO[ index ][property_EXT_Y], PROPERTY_INFO[ index ][property_EXT_Z], 0, PROPERTY_INFO[ index ][property_EXT_INTERIOR]);
	info[0] = PICKUP_TYPE_PROPERTY;
	info[1] = index; // Index
	info[2] = 2; // Pickup Exterior
	Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[ index ][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
				

	new DB_Query[350];
	format(DB_Query, sizeof(DB_Query), "DELETE FROM `PROPERTY_OWNER` WHERE `ID_PROPERTY` = '%d';", PROPERTY_INFO[ index ][property_ID]);
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "DELETE FROM `PROPERTY_TERRITORY` WHERE `ID_PROPERTY` = '%d';", PROPERTY_INFO[ index ][property_ID]);
	db_query(Database, DB_Query);
	
	SendClientMessageEx(playerid, -1, "Propiedad (%d) expropiada.", PROPERTY_INFO[ index ][property_ID]);
	
	SendCmdLogToAdmins(playerid, "exproperty", params);
	return 1;
}

CMD:gotoproperty(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new int_type;
	if(sscanf(params, "d", int_type)) return SendClientMessage(playerid, -1, "Syntax: /gotoproperty <interior>");
	if(int_type < 0 || int_type >= sizeof PROPERTY_INTERIORS) return SendClientMessageEx(playerid, -1, "Error, rango de interior: 0-%d", sizeof(PROPERTY_INTERIORS) - 1);

	SetPlayerPosEx(playerid, PROPERTY_INTERIORS[int_type][property_INT_X], PROPERTY_INTERIORS[int_type][property_INT_Y], PROPERTY_INTERIORS[int_type][property_INT_Z], PROPERTY_INTERIORS[int_type][property_INT_ANGLE], PROPERTY_INTERIORS[int_type][property_INT_INTERIOR], 0, false, true);
	return 1;
}

CMD:setpass(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_account, new_pass[MAX_PASS_LENGTH + 1];
	if(sscanf(params, "ds[19]", to_account, new_pass)) return SendClientMessage(playerid, -1, "Syntax: /setpass <DB-ID> <pass>");
	
	new DBResult:Result, DB_Query[160];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `NAME`, `CONNECTED`, `PLAYERID`, `ADMIN_LEVEL` FROM `CUENTA` WHERE `ID` = '%d';", to_account);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		new id, get_name[24], connected, player_id, admin_level;
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", get_name, 24);
		connected = db_get_field_assoc_int(Result, "CONNECTED");
		player_id = db_get_field_assoc_int(Result, "PLAYERID");
		admin_level = db_get_field_assoc_int(Result, "ADMIN_LEVEL");
		
		if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] >= admin_level)
		{
			if(connected) SendClientMessageEx(playerid, -1, "JUGADOR '%s' DB-ID '%d' conectado, player_id: %d, no es necario cambiar la contraseña.", get_name, id, player_id);
			else
			{
				new salt[16], salt_ex[16], pass_ex[64 + 1];
				getRandomSalt(salt);
				format(salt_ex, 16, "%s", salt);
				
				SHA256_PassHash(new_pass, salt_ex, pass_ex, 64 + 1);
				
				format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SALT` = '%q', `PASS` = '%q' WHERE `ID` = '%d';", salt_ex, pass_ex, id);
				db_query(Database, DB_Query);
				
				SendClientMessageEx(playerid, -1, "La contraseña de '%s' ahora es: %s", get_name, new_pass);
			}
		}
		else SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	}
	else SendClientMessage(playerid, -1, "No se encontro la DB-ID.");
	db_free_result(Result);
	return 1;
}

CMD:delete(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_account;
	if(sscanf(params, "d", to_account)) return SendClientMessage(playerid, -1, "Syntax: /delete <DB-ID>");
	
	new DBResult:Result, DB_Query[160];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `NAME`, `CONNECTED`, `PLAYERID`, `ADMIN_LEVEL` FROM `CUENTA` WHERE `ID` = '%d';", to_account);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		new id, get_name[24], connected, player_id, admin_level;
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", get_name, 24);
		connected = db_get_field_assoc_int(Result, "CONNECTED");
		player_id = db_get_field_assoc_int(Result, "PLAYERID");
		admin_level = db_get_field_assoc_int(Result, "ADMIN_LEVEL");
		
		if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] >= admin_level)
		{
			if(connected) SendClientMessageEx(playerid, -1, "JUGADOR '%s' DB-ID '%d' conectado para eliminarlo debe estar desconectado, utilice kick ,su player_id: %d.", get_name, id, player_id);
			else
			{
				format(DB_Query, sizeof DB_Query, "DELETE FROM `CUENTA` WHERE `ID` = '%d';", id);
				db_query(Database, DB_Query);
				
				new ex_properties;
				for(new index = 0; index != MAX_PROPERTIES; index ++)
				{
					if(!PROPERTY_INFO[index][property_VALID]) continue;
					if(!PROPERTY_INFO[index][property_SOLD]) continue;
					if(PROPERTY_INFO[index][property_OWNER_ID] != id) continue;
				
					PROPERTY_INFO[ index ][property_SOLD] = false;
					PROPERTY_INFO[ index ][property_OWNER_ID] = 0;
					format(PROPERTY_INFO[ index ][property_NAME], 24, "PROPIEDAD %d", PROPERTY_INFO[ index ][property_ID]);
					
					new label_str[256], info[3];
					format
					(
						label_str, 
						sizeof label_str, 
						"\
							Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
							Interior: {C4FF66}%d\n\
							{FFFFFF}Precio: {C4FF66}%s$\n\
							{FFFFFF}Nivel necesario: {C4FF66}%d\n\
							{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
						", PROPERTY_INFO[ index ][property_ID], PROPERTY_INFO[ index ][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[ index ][property_PRICE]), PROPERTY_INFO[ index ][property_LEVEL]
					);
					UpdateDynamic3DTextLabelText(PROPERTY_INFO[ index ][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
					
					DestroyDynamicPickup(PROPERTY_INFO[ index ][property_EXT_PICKUP_ID]);
					PROPERTY_INFO[ index ][property_EXT_PICKUP_ID] = INVALID_STREAMER_ID;
					
					PROPERTY_INFO[ index ][property_EXT_PICKUP_ID] = CreateDynamicPickup(1273, 1, PROPERTY_INFO[ index ][property_EXT_X], PROPERTY_INFO[ index ][property_EXT_Y], PROPERTY_INFO[ index ][property_EXT_Z], 0, PROPERTY_INFO[ index ][property_EXT_INTERIOR]);
					info[0] = PICKUP_TYPE_PROPERTY;
					info[1] = index; // Index
					info[2] = 2; // Pickup Exterior
					Streamer_SetArrayData(STREAMER_TYPE_PICKUP, PROPERTY_INFO[ index ][property_EXT_PICKUP_ID], E_STREAMER_EXTRA_ID, info);
					
					ex_properties ++;
				}
				
				
				SendClientMessageEx(playerid, -1, "CUENTA (Nombre '%s' DB-ID: '%d') ha sido eliminada.", get_name, id);
				if(ex_properties > 0) SendClientMessageEx(playerid, -1, "Se han expropiado '%d' propiedades del jugador eliminado.", ex_properties);
				
				new str[145]; format(str, 145, "{ff782b}[ADMIN] {FFFFFF}%s (%d) ha eliminado el usuario '%s'", ACCOUNT_INFO[playerid][ac_NAME], playerid, get_name);
				SendMessageToAdmins(-1, str);
			}
		}
		else SendClientMessage(playerid, -1, "El rango administrativo de este jugador es superior al tuyo.");
	}
	else SendClientMessage(playerid, -1, "No se encontro la DB-ID.");
	db_free_result(Result);
	
	return 1;
}

/* PROPERTY CONSTRUCTOR */

CMD:rproperty(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new id_property;
	if(sscanf(params, "d", id_property)) return SendClientMessage(playerid, -1, "Syntax: /rproperty <id>");
	if(id_property <= 0) return SendClientMessage(playerid, -1, "Syntax: /rproperty < id > 0 >");
	
	new index = GetPropertyIndexByID(id_property);
	if(index == -1) return SendClientMessage(playerid, -1, "PROPIEDAD ID no encontrada.");
	
	new DB_Query[70];
	format(DB_Query, sizeof DB_Query, "DELETE FROM `PROPERTY` WHERE `ID` = '%d';", PROPERTY_INFO[index][property_ID]);
	db_query(Database, DB_Query);
	
	if(IsValidDynamic3DTextLabel(PROPERTY_INFO[index][property_EXT_LABEL_ID])) DestroyDynamic3DTextLabel(PROPERTY_INFO[index][property_EXT_LABEL_ID]);
	if(IsValidDynamic3DTextLabel(PROPERTY_INFO[index][property_INT_LABEL_ID])) DestroyDynamic3DTextLabel(PROPERTY_INFO[index][property_INT_LABEL_ID]);
	if(IsValidDynamicPickup(PROPERTY_INFO[index][property_EXT_PICKUP_ID])) DestroyDynamicPickup(PROPERTY_INFO[index][property_EXT_PICKUP_ID]);
	if(IsValidDynamicPickup(PROPERTY_INFO[index][property_INT_PICKUP_ID])) DestroyDynamicPickup(PROPERTY_INFO[index][property_INT_PICKUP_ID]);
	new reset[Property_Info_Enum]; PROPERTY_INFO[index] = reset;
	
	TOTAL_PROPERTIES_LOADED --;
	
	SendClientMessageEx(playerid, -1, "PROPIEDAD %d ELIMINADA.", id_property);
	SendClientMessageEx(playerid, -1, "PROPIEDADES: %d/%d", TOTAL_PROPERTIES_LOADED, MAX_PROPERTIES);
	
	SendCmdLogToAdmins(playerid, "rproperty", params);
	return 1;
}

CMD:cproperty(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	if(TOTAL_PROPERTIES_LOADED >= MAX_PROPERTIES) return SendClientMessage(playerid, -1, "Límite alcanzado.");
	
	GetPlayerPos(playerid, PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_X], PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_Y], PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_Z]);
	GetPlayerFacingAngle(playerid, PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_ANG]);
	PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_EXT_INT] = GetPlayerInterior(playerid);
	
	PLAYER_PROPERTY_CONSTRUCTOR[playerid][player_property_creator_ENABLED] = true;
	for(new i = 0; i != 6; i ++) PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_PROPERTY_CONSTRUCTOR][i]);
	
	UpdatePlayerPropertyContructor(playerid);
	return 1;
}


SendMessageToAdmins(color, message[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(IsPlayerAdmin(i) || ACCOUNT_INFO[i][ac_ADMIN_LEVEL] > 0 )
	        {
	            SendClientMessage(i, color, message);
	        }
	    }
	}
	return 1;
}

SendCmdLogToAdmins(playerid, cmdtext[], params[])
{
	new message[145];
	if(isnull(params)) format(message, sizeof message, "{ff782b}[LOG-ACMD] {FFFFFF}%s (%d): /%s", ACCOUNT_INFO[playerid][ac_NAME], playerid, cmdtext);
	else format(message, sizeof message, "{ff782b}[LOG-ACMD] {FFFFFF}%s (%d): /%s %s", ACCOUNT_INFO[playerid][ac_NAME], playerid, cmdtext, params);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(IsPlayerAdmin(i) || ACCOUNT_INFO[i][ac_ADMIN_LEVEL] >= ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] )
	        {
	            if(PLAYER_TEMP[i][pt_SEE_ACMD_LOG]) SendClientMessage(i, -1, message);
	        }
	    }
	}
	return 1;
}

SendMessageToAdminsAC(color, message[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(IsPlayerAdmin(i) || ACCOUNT_INFO[i][ac_ADMIN_LEVEL] > 0 )
	        {
	            if(PLAYER_TEMP[i][pt_SEE_AC_LOG]) SendClientMessage(i, color, message);
	        }
	    }
	}
	return 1;
}

RespawnAllUnoccupiedVehicles()
{
	for(new i = 0; i != MAX_VEHICLES; i ++)
	{
		if(!GLOBAL_VEHICLES[i][gb_vehicle_VALID]) continue;
		if(GLOBAL_VEHICLES[i][gb_vehicle_OCCUPIED]) continue;
		if(GLOBAL_VEHICLES[i][gb_vehicle_TYPE] == VEHICLE_TYPE_TEST)
		{
			DestroyVehicleEx(i);
			continue;
		}
		
		SetVehicleToRespawnEx(i);
	}
	return 1;
}

RespawnGlobalUnoccupiedVehicles()
{
	for(new i = 0; i != MAX_VEHICLES; i ++)
	{
		if(!GLOBAL_VEHICLES[i][gb_vehicle_VALID]) continue;
		if(GLOBAL_VEHICLES[i][gb_vehicle_TYPE] == VEHICLE_TYPE_PERSONAL) continue;
		if(GLOBAL_VEHICLES[i][gb_vehicle_OCCUPIED]) continue;
	
		SetVehicleToRespawnEx(i);
	}
	return 1;
}



CMD:kill(playerid, params[])
{
	SetPlayerHealthEx(playerid, 0.0);
	return 1;
}

GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[16], ip_count = 0;
	for(new x = 0, j = GetPlayerPoolSize(); x <= j; x++) 
	{
		if(IsPlayerConnected(x)) 
		{
		    GetPlayerIp(x, against_ip, 16);
		    if(!strcmp(against_ip, test_ip)) ip_count++;
		}
	}
	return ip_count;
}

getRandomSalt(salt[], length = sizeof salt)
{
    for(new i = 0; i != length; i ++)
	{
		salt[i] = random(2) ? (random(26) + (random(2) ? 'a' : 'A')) : (random(10) + '0');
	}
	return true;
}

GetTickDiff(newtick, oldtick)
{
	if (oldtick < 0 && newtick >= 0) {
		return newtick - oldtick;
	} else if (oldtick >= 0 && newtick < 0 || oldtick > newtick) {
		return (cellmax - oldtick + 1) - (cellmin - newtick);
	}
	return newtick - oldtick;
}

GetPlayerSpeed(vehicleid)
{
	new Float:xPos[3];
	GetPlayerVelocity(vehicleid, xPos[0], xPos[1], xPos[2]);
	return floatround(floatsqroot(xPos[0] * xPos[0] + xPos[1] * xPos[1] + xPos[2] * xPos[2]) * 170.00);
}

ShowPlayerShop(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP][0]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP][1]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP][2]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP][3]);
	TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP][4]);
	
	PLAYER_TEMP[playerid][pt_SHOP_COME_FROM_MY_ADS] = false;
	PLAYER_TEMP[playerid][pt_SHOP] = true;
	PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_ALL;
	
	PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] = 6;
	PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
	
	UpdatePlayerShop(playerid);
	SelectTextDrawEx(playerid, 0x00a39bFF);
	return 1;
}

UpdatePlayerShop(playerid)
{
	switch(PLAYER_TEMP[playerid][pt_SHOP_STATE])
	{
		case PLAYER_SHOP_STATE_ALL:
		{
			if(PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] != PlayerText:INVALID_TEXT_DRAW)
			{
				PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID]);
				PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] = PlayerText:INVALID_TEXT_DRAW;
			}
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLE_BOX]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO]);
			
			for(new i = 0; i != 6; i ++)
			{
				PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][i] = 0;
				TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLES_BOX][i]);
				if(i <= 4) PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][i]);
			}
			
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], "+_Publicar_anuncio");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], "-_Mis_anuncios");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], "Cerrar");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], "Siguiente");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], "Anterior");
			
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4]);
			
			
			DestroyArticleShopTextDraws(playerid);
			
			new DBResult:Result, DB_Query[128], articles, td_str[32];
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `SHOP` ORDER BY `DATE` DESC LIMIT %d, %d;", PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT], PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			Result = db_query(Database, DB_Query);
			
			for(new i; i < db_num_rows(Result); i++ )
			{
				new Price, Modelid, Float:rX, Float:rY, Float:rZ, Float:Zoom, vColor1, vColor2;
				
				PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][articles] = db_get_field_assoc_int(Result, "ID");
				Price = db_get_field_assoc_int(Result, "PRICE");
				Modelid = db_get_field_assoc_int(Result, "MODELID");
				rX = db_get_field_assoc_float(Result, "RX");
				rY = db_get_field_assoc_float(Result, "RY");
				rZ = db_get_field_assoc_float(Result, "RZ");
				Zoom = db_get_field_assoc_float(Result, "ZOOM");
				vColor1 = db_get_field_assoc_int(Result, "VCOL1");
				vColor2 = db_get_field_assoc_int(Result, "VCOL2");
				
				new Float:Td_Pos[2];
				
				switch(articles)
				{
					case 0: Td_Pos = Float:{212.000000, 152.000000};
					case 1: Td_Pos = Float:{289.000000, 152.000000};
					case 2: Td_Pos = Float:{366.000000, 152.000000};
					case 3: Td_Pos = Float:{212.000000, 229.000000};
					case 4: Td_Pos = Float:{289.000000, 229.000000};
					case 5: Td_Pos = Float:{366.000000, 229.000000};
				}
				
				PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles] = CreatePlayerTextDraw(playerid, Td_Pos[0], Td_Pos[1], "");
				PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], 62.000000, 55.000000);
				PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], 1);
				PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], -1);
				PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], -1263225636);
				PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], 5);
				PlayerTextDrawSetPreviewModel(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], Modelid);
				PlayerTextDrawSetPreviewRot(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], rX, rY, rZ, Zoom);
				PlayerTextDrawSetPreviewVehCol(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], vColor1, vColor2);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles]);
				
				format(td_str, sizeof td_str, "%s$", number_format_thousand(Price));
				PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles] = CreatePlayerTextDraw(playerid, Td_Pos[0] + 31.0, Td_Pos[1] + 55.0, td_str);
				PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0.229333, 0.957037);
				PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 2);
				PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], -1);
				PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0);
				PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0);
				PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 255);
				PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 1);
				PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 1);
				PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles]);

				TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLES_BOX][articles]);
				
				articles ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			new total_pages = GetDatabasePages("SELECT COUNT() FROM `SHOP`;", PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			format(td_str, sizeof td_str, "-_%d/%d_-", PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] + 1, total_pages);
			
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], td_str);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE]);
			return 1;
		}
		case PLAYER_SHOP_STATE_MY_ADS:
		{
			if(PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] != PlayerText:INVALID_TEXT_DRAW)
			{
				PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID]);
				PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] = PlayerText:INVALID_TEXT_DRAW;
			}
			TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLE_BOX]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER]);
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO]);
			
			for(new i = 0; i != 6; i ++)
			{
				PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][i] = 0;
				TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLES_BOX][i]);
				if(i <= 4) PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][i]);
			}
			
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], "_");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], "_");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], "Atrs");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], "Siguiente");
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], "Anterior");

			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3]);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4]);
			
			
			DestroyArticleShopTextDraws(playerid);
			
			new DBResult:Result, DB_Query[160], articles, td_str[32];
			format(DB_Query, sizeof DB_Query, "SELECT * FROM `SHOP` WHERE `ID_USER` = '%d' ORDER BY `DATE` DESC LIMIT %d, %d;", ACCOUNT_INFO[playerid][ac_ID], PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] * PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT], PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			Result = db_query(Database, DB_Query);
			
			for(new i; i < db_num_rows(Result); i++ )
			{
				new Price, Modelid, Float:rX, Float:rY, Float:rZ, Float:Zoom, vColor1, vColor2;
				
				PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][articles] = db_get_field_assoc_int(Result, "ID");
				Price = db_get_field_assoc_int(Result, "PRICE");
				Modelid = db_get_field_assoc_int(Result, "MODELID");
				rX = db_get_field_assoc_float(Result, "RX");
				rY = db_get_field_assoc_float(Result, "RY");
				rZ = db_get_field_assoc_float(Result, "RZ");
				Zoom = db_get_field_assoc_float(Result, "ZOOM");
				vColor1 = db_get_field_assoc_int(Result, "VCOL1");
				vColor2 = db_get_field_assoc_int(Result, "VCOL2");
				
				new Float:Td_Pos[2];
				
				switch(articles)
				{
					case 0: Td_Pos = Float:{212.000000, 152.000000};
					case 1: Td_Pos = Float:{289.000000, 152.000000};
					case 2: Td_Pos = Float:{366.000000, 152.000000};
					case 3: Td_Pos = Float:{212.000000, 229.000000};
					case 4: Td_Pos = Float:{289.000000, 229.000000};
					case 5: Td_Pos = Float:{366.000000, 229.000000};
				}
				
				PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles] = CreatePlayerTextDraw(playerid, Td_Pos[0], Td_Pos[1], "");
				PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], 62.000000, 55.000000);
				PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], 1);
				PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], -1);
				PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], -1263225636);
				PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], 5);
				PlayerTextDrawSetPreviewModel(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], Modelid);
				PlayerTextDrawSetPreviewRot(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], rX, rY, rZ, Zoom);
				PlayerTextDrawSetPreviewVehCol(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles], vColor1, vColor2);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][articles]);
				
				format(td_str, sizeof td_str, "%s$", number_format_thousand(Price));
				PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles] = CreatePlayerTextDraw(playerid, Td_Pos[0] + 31.0, Td_Pos[1] + 55.0, td_str);
				PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0.229333, 0.957037);
				PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 2);
				PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], -1);
				PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0);
				PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0);
				PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 255);
				PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 1);
				PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 1);
				PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles], 0);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][articles]);

				TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLES_BOX][articles]);
				
				articles ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			new the_query[80];
			format(the_query, sizeof the_query, "SELECT COUNT() FROM `SHOP` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
			
			new total_pages = GetDatabasePages(the_query, PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT]);
			format(td_str, sizeof td_str, "-_%d/%d_-", PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] + 1, total_pages);
			
			PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE], td_str);
			PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE]);
			return 1;
		}
		case PLAYER_SHOP_STATE_AD:
		{
			new DBResult:Result, DB_Query[250], bool:found;
			format(DB_Query, sizeof DB_Query, "SELECT `SHOP`.*, `CUENTA`.`NAME`, `PHONE`.`PHONE_NUMBER` FROM `SHOP`, `CUENTA`, `PHONE` WHERE `SHOP`.`ID` = '%d' AND `CUENTA`.`ID` = `SHOP`.`ID_USER` AND `PHONE`.`ID_USER` = `SHOP`.`ID_USER`;", PLAYER_TEMP[playerid][pt_SHOP_SELECTED_ARTICLE_ID]);
			Result = db_query(Database, DB_Query);
			
			if(db_num_rows(Result))
			{
				new td_str[190], ad_id, ad_by_aid, ad_type, ad_price, ad_text[24], ad_modelid, Float:ad_rX, Float:ad_rY, Float:ad_rZ, Float:ad_Zoom, ad_vCol1, ad_vCol2, ad_add_date[24], ad_by[24], ad_by_phone_number;
				
				ad_id = db_get_field_assoc_int(Result, "ID");
				ad_by_aid = db_get_field_assoc_int(Result, "ID_USER");
				ad_type = db_get_field_assoc_int(Result, "TYPE");
				ad_price = db_get_field_assoc_int(Result, "PRICE");
				db_get_field_assoc(Result, "TEXT", ad_text, 24);
				ad_modelid = db_get_field_assoc_int(Result, "MODELID");
				ad_rX = db_get_field_assoc_float(Result, "RX");
				ad_rY = db_get_field_assoc_float(Result, "RY");
				ad_rZ = db_get_field_assoc_float(Result, "RZ");
				ad_Zoom = db_get_field_assoc_float(Result, "ZOOM");
				ad_vCol1 = db_get_field_assoc_int(Result, "VCOL1");
				ad_vCol2 = db_get_field_assoc_int(Result, "VCOL2");
				db_get_field_assoc(Result, "DATE", ad_add_date, 24);
				db_get_field_assoc(Result, "NAME", ad_by, 24);
				ad_by_phone_number = db_get_field_assoc_int(Result, "PHONE_NUMBER");
				
				if(PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] != PlayerText:INVALID_TEXT_DRAW)
				{
					PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID]);
					PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] = PlayerText:INVALID_TEXT_DRAW;
				}
				PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] = CreatePlayerTextDraw(playerid, 212.000000, 179.000000, "");
				PlayerTextDrawLetterSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 92.000000, 91.000000);
				PlayerTextDrawAlignment(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 1);
				PlayerTextDrawColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], -1);
				PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 0);
				PlayerTextDrawSetOutline(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 0);
				PlayerTextDrawBackgroundColor(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 44284927);
				PlayerTextDrawFont(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 5);
				PlayerTextDrawSetProportional(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 0);
				PlayerTextDrawSetShadow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], 0);
				PlayerTextDrawSetPreviewModel(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], ad_modelid);
				PlayerTextDrawSetPreviewRot(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], ad_rX, ad_rY,ad_rZ, ad_Zoom);
				PlayerTextDrawSetPreviewVehCol(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID], ad_vCol1, ad_vCol2);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID]);
				TextDrawShowForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLE_BOX]);
				
				format(td_str, sizeof td_str, "Art¢culo_n|_%d (%s)", ad_id, ad_add_date);
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER], td_str);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER]);
				
				switch(ad_type)
				{
					case SHOP_ARTICLE_TYPE_PROPERTY: format(td_str, sizeof td_str, "Producto:_Propiedad~n~Precio:_%s$~n~~n~Descripci¦n:~n~%s~n~~n~%s~n~%s", number_format_thousand(ad_price), ad_text, number_format_dash(ad_by_phone_number), ad_by);
					case SHOP_ARTICLE_TYPE_VEHICLE: format(td_str, sizeof td_str, "Producto:_Veh¢culo~n~Precio:_%s$~n~~n~Descripci¦n:~n~%s~n~~n~%s~n~%s", number_format_thousand(ad_price), ad_text, number_format_dash(ad_by_phone_number), ad_by);
					case SHOP_ARTICLE_TYPE_OTHER: format(td_str, sizeof td_str, "Producto:_Otros~n~Precio:_%s$~n~~n~Descripci¦n:~n~%s~n~~n~%s~n~%s", number_format_thousand(ad_price), ad_text, number_format_dash(ad_by_phone_number), ad_by);
				}
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO], td_str);
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO]);
				
				for(new i = 0; i != 4; i ++) PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][i]);
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][0], "_");
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][1], "_");
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], "_");
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], "_");
				PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4], "Atrs");
				PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][4]);
				
				if(ACCOUNT_INFO[playerid][ac_ID] == ad_by_aid)
				{
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2], "Modificar");
					PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3], "Eliminar");
					PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][2]);
					PlayerTextDrawShow(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][3]);
				}
				
				found = true;
			}
			else
			{
				found = false;
			}
			db_free_result(Result);
			
			if(!found)
			{
				SendClientMessage(playerid, -1, "{999999}Este anuncio ya no está disponible.");
				PLAYER_TEMP[playerid][pt_SHOP_STATE] = PLAYER_SHOP_STATE_ALL;
				return 1;
			}
			
			for(new i = 0; i != 6; i ++)
			{
				PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][i] = 0;
				TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLES_BOX][i]);
			}
			
			PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE]);
			DestroyArticleShopTextDraws(playerid);
		}
	}
	return 1;
}

HidePlayerShop(playerid)
{
	HidePlayerDialog(playerid);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP][0]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP][1]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP][2]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP][3]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP][4]);
	
	PLAYER_TEMP[playerid][pt_SHOP_COME_FROM_MY_ADS] = false;
	PLAYER_TEMP[playerid][pt_SHOP] = false;
	PLAYER_TEMP[playerid][pt_SHOP_STATE] = 0;
	
	PLAYER_TEMP[playerid][pt_DIALOG_DB_LIMIT] = 0;
	PLAYER_TEMP[playerid][pt_DIALOG_DB_PAGE] = 0;
	
	if(PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] != PlayerText:INVALID_TEXT_DRAW)
	{
		PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID]);
		PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_MODELID] = PlayerText:INVALID_TEXT_DRAW;
	}
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLE_BOX]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_NUMBER]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLE_INFO]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PAGE]);
	
	for(new i = 0; i != 6; i ++)
	{
		PLAYER_TEMP[playerid][pt_SHOP_ARTICLE_ID][i] = 0;
		TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_ARTICLES_BOX][i]);
		if(i <= 4) PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_BUTTONS][i]);
	}
	DestroyArticleShopTextDraws(playerid);
	
	CancelSelectTextDrawEx(playerid);
	return 1;
}

DestroyArticleShopTextDraws(playerid)
{
	for(new i; i < 6; i++)
	{
		if(PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][i] != PlayerText:INVALID_TEXT_DRAW)
		{
			PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][i]);
			PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_MODEL][i] = PlayerText:INVALID_TEXT_DRAW;
		}
		if(PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][i] != PlayerText:INVALID_TEXT_DRAW)
		{
			PlayerTextDrawDestroy(playerid, PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][i]);
			PlayerTextdraws[playerid][ptextdraw_SHOP_ARTICLES_PRICE][i] = PlayerText:INVALID_TEXT_DRAW;
		}
	}
	return 1;
}

td_str_legal(text[])
{
	for(new i = 0; i != strlen(text); i ++)
	{
		if((text[i] >= 91 && text[i] <= 96) || (text[i] >= 58 && text[i] <= 64) || (text[i] < 48 && text[i] != 32) || text[i] > 122)
		{
			return false;
		}
	}
	return true;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	if(PLAYER_TEMP[playerid][pt_WANT_TAXI])
	{
		if(GetPlayerState(forplayerid) == PLAYER_STATE_DRIVER)
		{			
			if(!PLAYER_WORKS[forplayerid][WORK_TAXI]) return 1;
			if(PLAYER_TEMP[forplayerid][pt_WORKING_IN] != WORK_TAXI) return 1;
			SetPlayerMarkerForPlayer(forplayerid, playerid, 0xf2f224FF);
		}
	}
	
	if(PLAYER_TEMP[playerid][pt_WANT_MECHANIC])
	{
		if(!PLAYER_WORKS[forplayerid][WORK_MECHANIC]) return 1;
		if(PLAYER_TEMP[forplayerid][pt_WORKING_IN] != WORK_MECHANIC) return 1;
		SetPlayerMarkerForPlayer(forplayerid, playerid, 0xf4c242FF);
	}
	
	if(CHARACTER_INFO[playerid][ch_WANTED_LEVEL] > 0)
	{
		if(!PLAYER_WORKS[forplayerid][WORK_POLICE]) return 1;
		if(PLAYER_TEMP[forplayerid][pt_WORKING_IN] != WORK_POLICE) return 1;
		SetPlayerMarkerForPlayer(forplayerid, playerid, PlayerWantedColor(playerid));
	}
	
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK)
	{
		if(!PLAYER_WORKS[forplayerid][WORK_MEDIC]) return 1;
		if(PLAYER_TEMP[forplayerid][pt_WORKING_IN] != WORK_MEDIC) return 1;
		SetPlayerMarkerForPlayer(forplayerid, playerid, 0x4aba00FF);
	}
    return 1;
}

GetPlayerPlantedPlants(playerid)
{
	new plants;
	
	for(new i = 0; i != MAX_PLANTS; i ++)
	{
		if(!PLANTS[i][plant_VALID]) continue;
		if(PLANTS[i][plant_PLANTED_BY_ACCOUNT_ID] == ACCOUNT_INFO[playerid][ac_ID]) plants ++;
	}
	return plants;
}


StartPlayerJob(playerid, work, vehicleid = INVALID_VEHICLE_ID)
{
	switch(work)
	{
		case WORK_TAXI:
		{
			SetTaxiPlayerMarkers(playerid);
			ResetVehicleTaxiMeter(vehicleid);
			ShowPlayerTaxiMeter(playerid);
			
			new passenger = GetVehicleFirstPassenger(vehicleid);
			if(passenger != INVALID_PLAYER_ID)
			{
				ShowPlayerTaxiMeter(passenger);
				if(PLAYER_TEMP[passenger][pt_WANT_TAXI])
				{
					PLAYER_TEMP[passenger][pt_WANT_TAXI] = false;
					DisablePlayerTaxiMark(passenger);
				}
				
				TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_ENABLED] = true;
				GetVehiclePos(vehicleid, TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_X], TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_Y], TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_OLD_Z]);
				KillTimer(TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_TIMER]);
				TAXI_METER_VEHICLE[vehicleid][veh_taxi_meter_TIMER] = SetTimerEx("UpdateVehicleTaximeter", 4000, true, "iii", vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_DRIVER], passenger);
			}
		}
		case WORK_TRUCK:
		{
			if(TRUCK_VEHICLE[vehicleid][truck_vehicle_LOADED])
			{
				if(TRUCK_VEHICLE[vehicleid][truck_vehicle_DELIVERED]) SendClientMessage(playerid, -1, "{CCCCCC}El camión ya ha entregado la mercancía, ve al punto de partida para cobrar.");
				else SendClientMessage(playerid, -1, "{CCCCCC}Ve a entregar la mercancía al punto marcado.");
				
				SetPlayerTruckCheckpoint(playerid, vehicleid);
			}
			else SendClientMessage(playerid, -1, "{CCCCCC}Para comenzar a trabajar ve a cargar el camión.");
		}
		case WORK_HARVESTER:
		{
			PLAYER_TEMP[playerid][pt_HARVERT_PROCCESS] = 0;
			SendClientMessage(playerid, -1, "{CCCCCC}Ve hasta los puntos de control para completar el trabajo.");
			SendClientMessage(playerid, -1, "{CCCCCC}Si te bajas de la cosechadora se cancelará el trabajo.");
			Set_HARVEST_Checkpoint(playerid);
		}
		case WORK_FUMIGATOR:
		{	
			PLAYER_TEMP[playerid][pt_FUMIGATOR_PROCCESS] = 0;
			SendClientMessage(playerid, -1, "{CCCCCC}Ve hasta los puntos de control para completar el trabajo.");
			SendClientMessage(playerid, -1, "{CCCCCC}Si te bajas del avión se cancelará el trabajo.");
			Set_FUMIGATOR_Checkpoint(playerid);
			
			GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 1;
			UpdateVehicleParams(vehicleid);
		}
		case WORK_LUMBERJACK:
		{
			PLAYER_TEMP[playerid][pt_PLAYER_CARRYING_TREE] = false;
			PLAYER_TEMP[playerid][pt_PLAYER_LUMBERJACK_TREE] = -1;
			
			RemovePlayerAttachedObject(playerid, 9);
			SetPlayerAttachedObject(playerid, 9, 341, 1, -0.172999, -0.165, -0.053999, 0.0, -7.599999, -9.6);
			
			SendClientMessage(playerid, -1, "{CCCCCC}Los árboles que puedes talar están repartidos por la zona, si te alejas demasiado el trabajo se cancelará.");
		}
		case WORK_TRASH:
		{
			if(CHARACTER_INFO[playerid][ch_SEX] == SEX_MALE)
			{
				SetPlayerSkin(playerid, 16);
				for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++) RemovePlayerAttachedObject(playerid, i);
			}
		}
		case WORK_MECHANIC:
		{
			if(CHARACTER_INFO[playerid][ch_SEX] == SEX_MALE)
			{
				SetPlayerSkin(playerid, 50);
				for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++) RemovePlayerAttachedObject(playerid, i);
			}
			SetMechanicPlayerMarkers(playerid);
		}
		case WORK_POLICE:
		{
			//SetPlayerColorEx(playerid, 0x4286f400);
			for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++) RemovePlayerAttachedObject(playerid, i);
			SetWantedPlayerMarkers(playerid);
		}
		case WORK_PIZZA:
		{
			if(CHARACTER_INFO[playerid][ch_SEX] == SEX_MALE)
			{
				SetPlayerSkin(playerid, 155);
				for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++) RemovePlayerAttachedObject(playerid, i);
			}
			PLAYER_TEMP[playerid][pt_PIZZA_PROCCESS] = 0;
			PLAYER_TEMP[playerid][pt_DELIVERED_PIZZAS] = 0;
			SendClientMessage(playerid, -1, "{CCCCCC}Para comenzar a repartir súbete a una moto de la pizzería.");
		}
		case WORK_MEDIC:
		{
			if(CHARACTER_INFO[playerid][ch_SEX] == SEX_MALE) SetPlayerSkin(playerid, male_medic_skins[ random(sizeof(male_medic_skins)) ]);
			else SetPlayerSkin(playerid, 308);
			for(new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++) RemovePlayerAttachedObject(playerid, i);
			SetInjuredPlayerMarkers(playerid);
		}
	}
	
	PLAYER_TEMP[playerid][pt_WORKING_IN] = work;
	return 1;
}

EndPlayerJob(playerid, changeskin = true)
{
	switch(PLAYER_TEMP[playerid][pt_WORKING_IN])
	{
		case WORK_TAXI:
		{
			if(PLAYER_TEMP[playerid][pt_TAXI_METER_ENABLED])
			{
				SetNormalPlayerMarkers(playerid);
				HidePlayerTaxiMeter(playerid);
			}
		}
		case WORK_TRUCK:
		{
			if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] != INVALID_VEHICLE_ID)
			{
				if(TRUCK_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][truck_vehicle_DRIVER_USER_ID] == ACCOUNT_INFO[playerid][ac_ID])
				{
					if(TRUCK_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][truck_vehicle_LOADING])
					{
						HidePlayerDialog(playerid);
						KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][9]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
						SetVehicleToRespawnEx(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID]);
					}
					if(TRUCK_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][truck_vehicle_UNLOADING])
					{
						TRUCK_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][truck_vehicle_UNLOADING] = false;
						KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][9]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][0]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][1]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][2]);
						PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TRUCK_LOAD][3]);
					}
				}
			}
			if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]))
			{
				DestroyDynamicCP(PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT]);
				PLAYER_TEMP[playerid][pt_TRUCK_CHECKPOINT] = INVALID_STREAMER_ID;
			}
		}
		case WORK_HARVESTER:
		{
			if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT]))
			{
				DestroyDynamicRaceCP(PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT]);
				PLAYER_TEMP[playerid][pt_HARVERT_CHECKPOINT] = INVALID_STREAMER_ID;
			}
			if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] != INVALID_VEHICLE_ID)
			{
				if(WORK_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][work_vehicle_WORK] == WORK_HARVESTER) SetVehicleToRespawnEx(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID]);
			}
		}
		case WORK_FUMIGATOR:
		{
			if(IsValidDynamicRaceCP(PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT]))
			{
				DestroyDynamicRaceCP(PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT]);
				PLAYER_TEMP[playerid][pt_FUMIGATOR_CHECKPOINT] = INVALID_STREAMER_ID;
			}
			if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] != INVALID_VEHICLE_ID)
			{
				if(WORK_VEHICLES[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][work_vehicle_WORK] == WORK_FUMIGATOR) SetVehicleToRespawnEx(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID]);
			}
		}
		case WORK_LUMBERJACK: CancelLumberjackWork(playerid);
		case WORK_FARMER: CancelPlayerPlanting(playerid);
		case WORK_TRASH:
		{
			if(changeskin)
			{
				SetPlayerSkin(playerid, CHARACTER_INFO[playerid][ch_SKIN]);
				SetPlayerToys(playerid);
			}
			
			if(PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] != INVALID_VEHICLE_ID)
			{
				if(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_JOB_STARTED])
				{
					if(PLAYER_TEMP[playerid][pt_TRASH_DRIVER])
					{
						SendClientMessage(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], -1, "{CCCCCC}El trabajo se ha cancelado porque tu compañero ha dejado de trabajar.");
						CancelTrashWork(playerid, TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_PASSENGER_ID], PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
					}
					if(PLAYER_TEMP[playerid][pt_TRASH_PASSENGER])
					{
						SendClientMessage(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], -1, "{CCCCCC}El trabajo se ha cancelado porque tu compañero ha dejado de trabajar.");
						CancelTrashWork(TRASH_VEHICLES[ PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID] ][trash_vehicle_DRIVER_ID], playerid, PLAYER_TEMP[playerid][pt_TRASH_VEHICLE_ID]);
					}
				}
			}
		}
		case WORK_POLICE:
		{
			PLAYER_TEMP[playerid][pt_POLICE_RADIO] = 0;
			//SetPlayerColorEx(playerid, PLAYER_COLOR);
			if(changeskin)
			{
				SetPlayerSkin(playerid, CHARACTER_INFO[playerid][ch_SKIN]);
				SetPlayerToys(playerid);
			}
			SetNormalPlayerMarkers(playerid);
		}
		case WORK_MECHANIC:
		{
			if(changeskin)
			{
				SetPlayerSkin(playerid, CHARACTER_INFO[playerid][ch_SKIN]);
				SetPlayerToys(playerid);
			}
			SetNormalPlayerMarkers(playerid);
		}
		case WORK_PIZZA:
		{
			if(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] != INVALID_VEHICLE_ID)
			{
				if(PIZZA_VEHICLE[ PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID] ][pizza_vehicle_DRIVER_AID] == ACCOUNT_INFO[playerid][ac_ID]) SetVehicleToRespawnEx(PLAYER_TEMP[playerid][pt_LAST_VEHICLE_ID]);
			}
			if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]))
			{
				DestroyDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]);
				PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
			}
			if(IsValidDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]))
			{
				DestroyDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]);
				PLAYER_TEMP[playerid][pt_PIZZA_ACTOR] = INVALID_STREAMER_ID;
			}
			if(changeskin)
			{
				SetPlayerSkin(playerid, CHARACTER_INFO[playerid][ch_SKIN]);
				SetPlayerToys(playerid);
			}
		}
		case WORK_MEDIC:
		{
			if(changeskin)
			{
				SetPlayerSkin(playerid, CHARACTER_INFO[playerid][ch_SKIN]);
				SetPlayerToys(playerid);
			}
			SetNormalPlayerMarkers(playerid);
		}
	}
	
	PLAYER_TEMP[playerid][pt_WORKING_IN] = WORK_NONE;
	return 1;
}

CountPlayerJobs(playerid)
{
	new count;
	for(new i = 1; i != sizeof(work_info); i ++)
	{
		if(PLAYER_WORKS[playerid][i]) count ++;
	}
	return count;
}

getPlayerWorks(playerid)
{
	new works[27 * sizeof(work_info)], count;
	for(new i = 1; i != sizeof(work_info); i ++)
	{
		if(PLAYER_WORKS[playerid][i])
		{
			if(count > 0) strcat(works, ", ");
			strcat(works, work_info[i][work_info_NAME]);
			
			count ++;
		}
	}
	
	if(!count) works = "ninguno";
	return works;
}

SetPlayer_Pizza_Checkpoint(playerid, point)
{
	if(IsValidDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]))
	{
		DestroyDynamicCP(PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT]);
		PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = INVALID_STREAMER_ID;
	}
	if(IsValidDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]))
	{
		DestroyDynamicActor(PLAYER_TEMP[playerid][pt_PIZZA_ACTOR]);
		PLAYER_TEMP[playerid][pt_PIZZA_ACTOR] = INVALID_STREAMER_ID;
	}
	
	if(point == -1)
	{
		PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = CreateDynamicCP(2096.279785, -1797.436279, 12.982056, 3.0, 0, 0, playerid, 9999999999.0);
		
		new info[1];
		info[0] = CHECKPOINT_TYPE_PIZZA_FINISH;
		Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	}
	else
	{
		PLAYER_TEMP[playerid][pt_PIZZA_ACTOR] = CreateDynamicActor(minrand(0, 311), PIZZA_DELIVERY_POINT[point][0], PIZZA_DELIVERY_POINT[point][1], PIZZA_DELIVERY_POINT[point][2], PIZZA_DELIVERY_POINT[point][3], .playerid = playerid);
		
		new Float:pos[3];
		pos[0] = PIZZA_DELIVERY_POINT[point][0] + (1.5 * floatsin(-PIZZA_DELIVERY_POINT[point][3], degrees));
		pos[1] = PIZZA_DELIVERY_POINT[point][1] + (1.5 * floatcos(-PIZZA_DELIVERY_POINT[point][3], degrees));
		pos[2] = PIZZA_DELIVERY_POINT[point][2];
	
		PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT] = CreateDynamicCP(pos[0], pos[1], pos[2], 1.0, 0, 0, playerid, 9999999999.0);
		
		new info[1];
		info[0] = CHECKPOINT_TYPE_PIZZA_DEL;
		Streamer_SetArrayData(STREAMER_TYPE_CP, PLAYER_TEMP[playerid][pt_PIZZA_CHECKPOINT], E_STREAMER_EXTRA_ID, info);
	}
	return 1;
}

randomEx(max, exception)
{
	new rand = random(max);
	while(rand == exception)
	{
		rand = random(max);
	}
	return rand;
}

SetPlayerSkillLevels(playerid)
{
	if(ACCOUNT_INFO[playerid][ac_LEVEL] < 10)
	{
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 0);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 0);
	}
	else if(ACCOUNT_INFO[playerid][ac_LEVEL] >= 20)
	{
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN,		999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 				999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 		999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 		999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 				999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 		999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 			999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 					999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 				999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 					999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 			999);
	}
	else
	{
		new convert_lvl = ACCOUNT_INFO[playerid][ac_LEVEL] - 10;
		new player_skill_level = floatround(convert_lvl * 99.8, floatround_floor);
		
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, player_skill_level);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, player_skill_level);
	}
	return 1;
}

DeleteIlegalInv(playerid)
{
	if(!PLAYER_WORKS[playerid][WORK_POLICE])
	{
		new DB_Query[90];
		format(DB_Query, sizeof DB_Query, "DELETE FROM `PLAYER_WEAPONS` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
		db_query(Database, DB_Query);
		ResetPlayerWeaponsEx(playerid);
	}
	
	PLAYER_MISC[playerid][MISC_SEED_CANNABIS] = 0;
	PLAYER_MISC[playerid][MISC_SEED_CRACK] = 0;
	PLAYER_MISC[playerid][MISC_CANNABIS] = 0;
	PLAYER_MISC[playerid][MISC_CRACK] = 0;
	return 1;
}

forward HealthDown(playerid);
public HealthDown(playerid)
{
	if(CHARACTER_INFO[playerid][ch_STATE] != ROLEPLAY_STATE_CRACK) return 1;
	
	GivePlayerHealthEx(playerid, -1.0);
	
	if(GetPlayerDistanceFromPoint(playerid, PLAYER_TEMP[playerid][pt_INJURED_POS][0], PLAYER_TEMP[playerid][pt_INJURED_POS][1], PLAYER_TEMP[playerid][pt_INJURED_POS][2]) > 3.0) SetPlayerPosEx(playerid, PLAYER_TEMP[playerid][pt_INJURED_POS][0], PLAYER_TEMP[playerid][pt_INJURED_POS][1], PLAYER_TEMP[playerid][pt_INJURED_POS][2], PLAYER_TEMP[playerid][pt_INJURED_POS][3], 0, 0);
	ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.1, true, 0, 0, 1, 0, 1);
	
	KillTimer(PLAYER_TEMP[playerid][pt_TIMERS][16]);
	PLAYER_TEMP[playerid][pt_TIMERS][16] = SetTimerEx("HealthDown", 8000, false, "i", playerid);
	return 1;
}

SetInjuredPlayerMarkers(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(CHARACTER_INFO[i][ch_STATE] == ROLEPLAY_STATE_CRACK)
				{
					SetPlayerMarkerForPlayer(playerid, i, 0x4aba00FF);
				}
			}
		}
	}
	return 1;
}

SendAlertToMedics(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(!PLAYER_WORKS[i][WORK_MEDIC]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_MEDIC) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, 0x4aba00FF);
			}
		}
	}
	return 1;
}

DisablePlayerInjuredMark(playerid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
			{
				if(i == playerid) continue;
				if(!PLAYER_WORKS[i][WORK_MEDIC]) continue;
				if(PLAYER_TEMP[i][pt_WORKING_IN] != WORK_MEDIC) continue;
				
				SetPlayerMarkerForPlayer(i, playerid, PLAYER_COLOR);
			}
		}
	}
	return 1;
}

CMD:curar(playerid, params[])
{
	if(!PLAYER_WORKS[playerid][WORK_MEDIC]) return SendClientMessage(playerid, -1, "{999999}No eres médico.");
	if(PLAYER_TEMP[playerid][pt_WORKING_IN] != WORK_MEDIC) return SendClientMessage(playerid, -1, "{999999}No estás de servicio como médico.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{999999}No estás depie.");
	if(PLAYER_CREW[playerid][player_crew_VALID] && CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No puedes curar mientras tu banda está en combate.");
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/curar {FFFFFF}[PlayerID/Nombre]");
	if(!IsPlayerConnected(to_player)) return SendClientMessage(playerid, -1, "{999999}El jugador no está conectado.");
	if(to_player == playerid) return SendClientMessage(playerid, -1, "Error: {C4FF66}/curar {FFFFFF}[PlayerID/Nombre]");
	
	new Float:pos[3];
	GetPlayerPos(to_player, pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	
	if(CHARACTER_INFO[to_player][ch_STATE] != ROLEPLAY_STATE_CRACK) return SendClientMessage(playerid, -1, "{999999}Esta persona no está herida.");
	
	KillTimer(PLAYER_TEMP[to_player][pt_TIMERS][16]);
	PLAYER_TEMP[to_player][pt_TIMERS][16] = SetTimerEx("StandUp", 5000, false, "ii", playerid, to_player);
	DisablePlayerInjuredMark(to_player);
	
	ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, false, 0, 0, 0, 0, 1);
	return 1;
}

forward StandUp(medic, playerid);
public StandUp(medic, playerid)
{
	new work_extra_payment;
	if(work_info[WORK_MEDIC][work_info_EXTRA_PAY] > 0 && work_info[WORK_MEDIC][work_info_EXTRA_PAY_EXP] > 0)
	{
		work_extra_payment = (work_info[WORK_MEDIC][work_info_EXTRA_PAY] * floatround(floatdiv(PLAYER_SKILLS[medic][WORK_MEDIC], work_info[WORK_MEDIC][work_info_EXTRA_PAY_EXP])));
		if(work_info[WORK_MEDIC][work_info_EXTRA_PAY_LIMIT] != 0) if(work_extra_payment > work_info[WORK_MEDIC][work_info_EXTRA_PAY_LIMIT]) work_extra_payment = work_info[WORK_MEDIC][work_info_EXTRA_PAY_LIMIT];
	
		if(ACCOUNT_INFO[medic][ac_SU]) work_extra_payment += SU_WORK_EXTRA_PAY;
	}
	
	new money = minrand(600, 800) + work_extra_payment;
	GivePlayerCash(medic, money);
	PLAYER_SKILLS[medic][WORK_MEDIC] ++;
	SendClientMessageEx(medic, -1, "Has salvado la vida de esta persona, has ganado {c8f442}%s$.", number_format_thousand(money));
	
	CHARACTER_INFO[playerid][ch_STATE] = ROLEPLAY_STATE_NORMAL;
	SetWeaponsForPlayer(playerid);
	if(ACCOUNT_INFO[playerid][ac_SU]) SetPlayerHealthEx(playerid, 50.0);
	else SetPlayerHealthEx(playerid, 25.0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 0, true);
	ClearAnimations(playerid);
	return 1;
}

SetPoliceRank(playerid)
{
	new rank;
	switch(ACCOUNT_INFO[playerid][ac_LEVEL])
	{
		case 0..14: rank = 1;
		case 15..19: rank = 2;
		case 20..24: rank = 3;
		case 25..29: rank = 4;
		case 30..34: rank = 5;
		default: rank = 5;
	}
	
	if(rank > PLAYER_SKILLS[playerid][WORK_POLICE])
	{
		PLAYER_SKILLS[playerid][WORK_POLICE] = rank;
		
		new DB_Query[256];
		format(DB_Query, sizeof DB_Query, "UPDATE `PLAYER_SKILLS` SET `TOTAL` = '%d' WHERE `ID_USER` = '%d' AND `ID_WORK` = '%d';", rank, ACCOUNT_INFO[playerid][ac_ID], WORK_POLICE);
		db_query(Database, DB_Query);
	}
	return 1;
}


CMD:banda(playerid, params[])
{
	if(!PLAYER_CREW[playerid][player_crew_VALID])
	{
		if(PLAYER_WORKS[playerid][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}Los policías no pueden tener bandas.");
		
		new index = GetAvaibleCrewIndex();
		if(index == -1)
		{
			SendClientMessageEx(playerid, -1, "{999999}No perteneces a ninguna banda y no se puede crear una porque no hay espacio disponible, el límite de bandas es %d.", MAX_CREWS);
			return 1;
		}
		
		ShowDialog(playerid, DIALOG_CREATE_CREW);
		return 1;
	}
	
	ShowDialog(playerid, DIALOG_CREW_MENU);
	return 1;
}

CMD:abandonar(playerid, params[])
{
	if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No perteneces a ninguna banda.");
	if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_LEAVE_TERRITORY]) return SendClientMessage(playerid, -1, "{999999}No tienes permiso para abandonar territorios.");
	if(PLAYER_TEMP[playerid][pt_LAST_TERRITORY] == INVALID_STREAMER_ID) return SendClientMessage(playerid, -1, "{999999}No estás en un territorio de tu banda.");
	if(!IsPlayerInDynamicArea(playerid, TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_AREA])) return SendClientMessage(playerid, -1, "{999999}No estás en un territorio de tu banda.");
	if(TERRITORIES[ PLAYER_TEMP[playerid][pt_LAST_TERRITORY] ][territory_CREW_ID] != PLAYER_CREW[playerid][player_crew_ID]) return SendClientMessage(playerid, -1, "{999999}No estás en un territorio de tu banda.");			
	if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No puedes abandonar territorios mientras tu banda está en combate.");
	
	PLAYER_TEMP[playerid][pt_PLAYER_TERRITORY_PRO] = PLAYER_TEMP[playerid][pt_LAST_TERRITORY];
	ShowDialog(playerid, DIALOG_CREW_LEAVE_TERRITORY);
	return 1;
}

CMD:invitar(playerid, params[])
{
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	
	if(!PLAYER_CREW[playerid][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}No eres miembro de ninguna banda.");
	if(!CREW_RANK_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][ PLAYER_CREW[playerid][player_crew_RANK] ][crew_rank_PERMISSION][CREW_RANK_INVITE]) return SendClientMessage(playerid, -1, "{999999}No tienes permiso para invitar personas a la banda.");
	if(CREW_INFO[ PLAYER_CREW[playerid][player_crew_INDEX] ][crew_FIGHTING]) return SendClientMessage(playerid, -1, "{999999}No puedes invitar a gente a la banda cuando la banda está en combate.");
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Error: {C4FF66}/invitar {FFFFFF}[PlayerID/Nombre]");
	if(!IsPlayerConnected(to_player)) return SendClientMessage(playerid, -1, "{999999}El jugador está desconectado.");
	if(to_player == playerid) return SendClientMessage(playerid, -1, "{999999}Eres tu.");
	
	new Float:pos[3]; GetPlayerPos(to_player, pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, 0x999999AA, "Este jugador no está cerca tuya.");
	if(PLAYER_WORKS[to_player][WORK_POLICE]) return SendClientMessage(playerid, -1, "{999999}Esta persona es policía y no puede tener banda.");
	if(PLAYER_CREW[to_player][player_crew_VALID]) return SendClientMessage(playerid, -1, "{999999}Esta persona pertenece a otra banda.");
	if(PLAYER_TEMP[to_player][pt_GAME_STATE] != GAME_STATE_NORMAL) return SendClientMessage(playerid, -1, "{999999}No puedes invitar a este jugador ahora.");
	
	if(gettime() < PLAYER_TEMP[ to_player ][pt_LAST_GOT_CREW] + 600)
	{
		new time = 600 - (gettime() - PLAYER_TEMP[to_player][pt_LAST_GOT_CREW]);
		SendClientMessageEx(playerid, -1, "{999999}La otra persona debe esperar %s minutos para volver a ser invitada.", TimeConvert(time));
		return 1;
	}
	
	PLAYER_TEMP[playerid][pt_CREW_INVITE_PID] = to_player;
	PLAYER_TEMP[playerid][pt_CREW_INVITE_AID] = ACCOUNT_INFO[to_player][ac_ID];
	SendClientMessageEx(playerid, -1, "Quieres invitar a %s a la banda, elige el rango que le ofreces.", PLAYER_TEMP[to_player][pt_RP_NAME]);
	ShowDialog(playerid, DIALOG_CREW_INVITE_RANK);
	return 1;
}



GetAvaibleCrewIndex()
{
	for(new i = 0; i != MAX_CREWS; i ++)
	{
		if(!CREW_INFO[i][crew_VALID]) return i;
	}
	return -1;
}


NewCrewRegister(index)
{
	if(!CREW_INFO[index][crew_VALID]) return 0;
	
	new DBResult:Result, DB_Query[340];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `CREW`\
		(\
			`NAME`, `COLOR`\
		)\
		VALUES\
		(\
			'%q', '%d'\
		);\
		SELECT MAX(`ID`) FROM `CREW`;\
	",
		CREW_INFO[index][crew_NAME],
		CREW_INFO[index][crew_COLOR]
	);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result)) CREW_INFO[index][crew_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	
	
	
	for(new i = 0; i != MAX_CREW_RANKS; i ++)
	{
		if(!CREW_RANK_INFO[index][i][crew_rank_VALID]) continue;
		
		new DBResult:Result_ranks;
		format(DB_Query, sizeof DB_Query,
		"\
			INSERT INTO `CREW_RANKS`\
			(\
				`ID_CREW`, `RANK_POS`, `RANK_NAME`\
			)\
			VALUES\
			(\
				'%d', '%d', '%q'\
			);\
			SELECT MAX(`ID`) FROM `CREW_RANKS`;\
		",
			CREW_INFO[index][crew_ID],
			i,
			CREW_RANK_INFO[index][i][crew_rank_NAME]
		);
		Result_ranks = db_query(Database, DB_Query);

		if(db_num_rows(Result_ranks)) CREW_RANK_INFO[index][i][crew_rank_ID] = db_get_field_int(Result_ranks, 0);
		db_free_result(Result_ranks);
		
		for(new x = 0; x != CREW_RANK_SIZE; x ++)
		{
			format(DB_Query, sizeof DB_Query,
			"\
				INSERT INTO `RANK_PERMISSIONS`\
				(\
					`ID_RANK`, `PERMISSION`, `SET`\
				)\
				VALUES\
				(\
					'%d', '%d', '%d'\
				);\
			",
				CREW_RANK_INFO[index][i][crew_rank_ID],
				x,
				CREW_RANK_INFO[index][i][crew_rank_PERMISSION][x]
			);
			db_query(Database, DB_Query);
		}
		
	}
	return 1;
}

SendMessageToCrewMembers(crew_id, color, message[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_CREW[i][player_crew_VALID])
			{
				if(PLAYER_CREW[i][player_crew_ID] == crew_id)
				{
					SendClientMessage(i, color, message);
				}
			}
		}
	}
	return 1;
}

RegisterNewCrewRank(index, rank)
{
	new DBResult:Result_ranks, DB_Query[340];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `CREW_RANKS`\
		(\
			`ID_CREW`, `RANK_POS`, `RANK_NAME`\
		)\
		VALUES\
		(\
			'%d', '%d', '%q'\
		);\
		SELECT MAX(`ID`) FROM `CREW_RANKS`;\
	",
		CREW_INFO[index][crew_ID],
		rank,
		CREW_RANK_INFO[index][rank][crew_rank_NAME]
	);
	Result_ranks = db_query(Database, DB_Query);

	if(db_num_rows(Result_ranks)) CREW_RANK_INFO[index][rank][crew_rank_ID] = db_get_field_int(Result_ranks, 0);
	db_free_result(Result_ranks);
	
	for(new x = 0; x != CREW_RANK_SIZE; x ++)
	{
		format(DB_Query, sizeof DB_Query,
		"\
			INSERT INTO `RANK_PERMISSIONS`\
			(\
				`ID_RANK`, `PERMISSION`, `SET`\
			)\
			VALUES\
			(\
				'%d', '%d', '%d'\
			);\
		",
			CREW_RANK_INFO[index][rank][crew_rank_ID],
			x,
			CREW_RANK_INFO[index][rank][crew_rank_PERMISSION][x]
		);
		db_query(Database, DB_Query);
	}
	return 1;
}

SetPlayerGangZones(playerid)
{
	for(new i = 0; i != MAX_TERRITORIES; i ++)
	{
		if(!TERRITORIES[i][territory_VALID]) continue;
		
		if(TERRITORIES[i][territory_WAR])
		{
			new flash_color, r, g, b, a;
			HexToRGBA(CREW_INFO[ TERRITORIES[i][territory_ATTACKER_CREW_INDEX] ][crew_COLOR], r, g, b, a);
			flash_color = RGBAToHex(r, g, b, 135);
			
			GangZoneFlashForPlayer(playerid, TERRITORIES[i][territory_GANG_ZONE], flash_color);
		}
		else GangZoneShowForPlayer(playerid, TERRITORIES[i][territory_GANG_ZONE], TERRITORIES[i][territory_COLOR]);
	}
	return 1;
}

stock HexToRGBA(colour, &r, &g, &b, &a) //By Betamaster
{
    r = (colour >> 24) & 0xFF;
    g = (colour >> 16) & 0xFF;
    b = (colour >> 8) & 0xFF;
    a = colour & 0xFF;
}

stock RGBAToHex(r, g, b, a) //By Betamaster
{
    return (r<<24 | g<<16 | b<<8 | a);
}

stock RGBAToARGB(col)
{
	return ((((col) << 24) & 0xFF000000) | (((col) >>> 8) & 0xFFFFFF));
}

stock ARGBToRGBA(col)
{
	return ((((col) << 8) & 0xFFFFFF00) | (((col) >>> 24) & 0xFF));
}

UpdateGangZoneColor(index)
{
	if(TERRITORIES[index][territory_WAR])
	{
		new flash_color, r, g, b, a;
		HexToRGBA(CREW_INFO[ TERRITORIES[index][territory_ATTACKER_CREW_INDEX] ][crew_COLOR], r, g, b, a);
		flash_color = RGBAToHex(r, g, b, 135);
		
		GangZoneFlashForAll(TERRITORIES[index][territory_GANG_ZONE], flash_color);
	}
	else GangZoneShowForAll(TERRITORIES[index][territory_GANG_ZONE], TERRITORIES[index][territory_COLOR]);
	return 1;
}

StartTerritoryAttack(crew_index, territory_index, time)
{
	CREW_INFO[crew_index][crew_FIGHTING] = true;
	CREW_INFO[crew_index][crew_LAST_ATTACK] = gettime();
	TERRITORIES[territory_index][territory_WAR] = true;
	TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] = crew_index;
	TERRITORIES[territory_index][territory_WAR_TIME_LEFT] = time;
	TERRITORIES[territory_index][territory_LAST_ATTACK] = gettime();
	UpdateGangZoneColor(territory_index);
	
	new message[145];
	format(message, sizeof message, "Conquista:_%s", TimeConvert(TERRITORIES[territory_index][territory_WAR_TIME_LEFT]));
	TextDrawSetString(TERRITORIES[territory_index][territory_TEXTDRAW], message);
	
	KillTimer(TERRITORIES[territory_index][territory_TIMER]);
	TERRITORIES[territory_index][territory_TIMER] = SetTimerEx("UpdateTerritoryAttack", 1000, false, "i", territory_index);
	
	if(TERRITORIES[territory_index][territory_OCCUPIED])
	{
		CREW_INFO[ TERRITORIES[territory_index][territory_CREW_INDEX] ][crew_FIGHTING] = true;
		format(message, sizeof message, "{f4e242}[BANDAS] {FFFFFF}La banda '%s' está atacando un territorio de la banda '%s' en %s.", CREW_INFO[crew_index][crew_NAME], CREW_INFO[ TERRITORIES[territory_index][territory_CREW_INDEX] ][crew_NAME], TERRITORIES[territory_index][territory_NAME]);
	}
	else format(message, sizeof message, "{f4e242}[BANDAS] {FFFFFF}La banda '%s' está atacando un territorio en %s.", CREW_INFO[crew_index][crew_NAME], TERRITORIES[territory_index][territory_NAME]);
	
	
	new message_police[145];
	format(message_police, sizeof message_police, "{4286f4}[Central policía] {FFFFFF}La banda '%s' está atacando un territorio en %s.", CREW_INFO[crew_index][crew_NAME], TERRITORIES[territory_index][territory_NAME]);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_CREW[i][player_crew_VALID])
			{
				SendClientMessage(i, -1, message);
				if(IsPlayerInDynamicArea(i, TERRITORIES[territory_index][territory_AREA]))
				{
					if(!CHARACTER_INFO[i][ch_WANTED_LEVEL])
					{
						CHARACTER_INFO[i][ch_WANTED_LEVEL] = 1;
						PLAYER_TEMP[i][pt_LAST_SET_WANTED_LEVEL] = gettime();
						
						PlayerTextDrawSetString(i, PlayerTextdraws[i][ptextdraw_WANTED_LEVEL][1], "]");
						PlayerTextDrawShow(i, PlayerTextdraws[i][ptextdraw_WANTED_LEVEL][0]);
						PlayerTextDrawShow(i, PlayerTextdraws[i][ptextdraw_WANTED_LEVEL][1]);
					}
					
					new r, g, b, a;
					HexToRGBA(CREW_INFO[ PLAYER_CREW[i][player_crew_INDEX] ][crew_COLOR], r, g, b, a);
					SetPlayerColorEx(i, RGBAToHex(r, g, b, 0));
					
					TextDrawShowForPlayer(i, Textdraws[textdraw_TERRITORY_BOX]);
					TextDrawShowForPlayer(i, TERRITORIES[territory_index][territory_TEXTDRAW]);
				}
			}
			
			if(PLAYER_WORKS[i][WORK_POLICE])
			{
				if(PLAYER_TEMP[i][pt_WORKING_IN] == WORK_POLICE)
				{
					SendClientMessage(i, -1, message_police);
				}
			}
		}
	}
	return 1;
}

forward UpdateTerritoryAttack(territory_index);
public UpdateTerritoryAttack(territory_index)
{
	if(!TERRITORIES[territory_index][territory_VALID]) return 1;
	if(!TERRITORIES[territory_index][territory_WAR]) return 1;
	
	if(TERRITORIES[territory_index][territory_WAR_TIME_LEFT] <= 0)
	{
		new old_crew = TERRITORIES[territory_index][territory_CREW_ID];
		
		CREW_INFO[ TERRITORIES[territory_index][territory_CREW_INDEX] ][crew_FIGHTING] = false;
		TERRITORIES[territory_index][territory_CREW_ID] = CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_ID];
		TERRITORIES[territory_index][territory_CREW_INDEX] = TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX];
		
		new r, g, b, a;
		HexToRGBA(CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_COLOR], r, g, b, a);
		TERRITORIES[territory_index][territory_COLOR] = RGBAToHex(r, g, b, 135);
		
		new message[145];
		format(message, sizeof message, "{f4e242}[BANDAS] {FFFFFF}La banda '%s' ha conquistado un nuevo territorio.", CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_NAME]);
	
		new DB_Query[256], label_str[256];
		if(TERRITORIES[territory_index][territory_OCCUPIED])
		{
			for(new i = 0; i != MAX_PROPERTIES; i ++)
			{
				if(!PROPERTY_INFO[i][property_VALID]) continue;
				if(!PROPERTY_INFO[i][property_CREW]) continue;
				if(PROPERTY_INFO[i][property_CREW_ID] != old_crew) continue;
				
				if(IsPointInDynamicArea(TERRITORIES[territory_index][territory_AREA], PROPERTY_INFO[i][property_EXT_X], PROPERTY_INFO[i][property_EXT_Y], PROPERTY_INFO[i][property_EXT_Z]))
				{
					PROPERTY_INFO[i][property_CREW_ID] = TERRITORIES[territory_index][territory_CREW_ID];
					
					format
					(
						label_str, 
						sizeof label_str, 
						"\
							Propiedad {C4FF66}#%d\n\n\
							{FFFFFF}Banda: {C4FF66}%s\n\
							{FFFFFF}Usa {C4FF66}/entrar {FFFFFF}para entrar.\
						", PROPERTY_INFO[i][property_ID], CREW_INFO[ TERRITORIES[territory_index][territory_CREW_INDEX] ][crew_NAME]
					);
					
					UpdateDynamic3DTextLabelText(PROPERTY_INFO[i][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
				}
			}
			
			format(DB_Query, sizeof DB_Query, "UPDATE `CREW_TERRITORIES` SET `ID_CREW` = '%d' WHERE `ID_TERRITORY` = '%d';", CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_ID], TERRITORIES[territory_index][territory_ID]);
		}
		else format(DB_Query, sizeof DB_Query, "INSERT INTO `CREW_TERRITORIES` (`ID_CREW`, `ID_TERRITORY`) VALUES ('%d', '%d');", CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_ID], TERRITORIES[territory_index][territory_ID]);
		db_query(Database, DB_Query);
		
		CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_LAST_ATTACK] = gettime();
		CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_FIGHTING] = false;
		TERRITORIES[territory_index][territory_WAR] = false;
		TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] = 0;
		TERRITORIES[territory_index][territory_WAR_TIME_LEFT] = 0;
		TERRITORIES[territory_index][territory_LAST_ATTACK] = gettime();
		KillTimer(TERRITORIES[territory_index][territory_TIMER]);
		UpdateGangZoneColor(territory_index);
		TERRITORIES[territory_index][territory_OCCUPIED] = true;
		
		new prize = minrand(300, 600);
		new prize_message[64];
		format(prize_message, sizeof prize_message, "{CCCCCC}Has ganado %d$ por conquistar este territorio.", prize);
		
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PLAYER_CREW[i][player_crew_VALID])
				{
					SendClientMessage(i, -1, message);
					if(IsPlayerInDynamicArea(i, TERRITORIES[territory_index][territory_AREA]))
					{
						if(PLAYER_CREW[i][player_crew_ID] == TERRITORIES[territory_index][territory_CREW_ID])
						{
							GivePlayerCash(i, prize);
							SendClientMessage(i, -1, prize_message);
						}
						SetPlayerColorEx(i, PLAYER_COLOR);
						
						TextDrawHideForPlayer(i, Textdraws[textdraw_TERRITORY_BOX]);
						TextDrawHideForPlayer(i, TERRITORIES[territory_index][territory_TEXTDRAW]);
					}
				}
			}
		}
		return 1;
	}
	
	
	TERRITORIES[territory_index][territory_WAR_TIME_LEFT] --;
	new message[145];
	format(message, sizeof message, "Conquista:_%s", TimeConvert(TERRITORIES[territory_index][territory_WAR_TIME_LEFT]));
	TextDrawSetString(TERRITORIES[territory_index][territory_TEXTDRAW], message);
	
	
	new attackers_in_area = CountCrewPlayersInTerritory(TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX], territory_index);
	if(attackers_in_area <= 0)
	{
		format(message, sizeof message, "{f4e242}[BANDAS] {FFFFFF}La banda '%s' no ha podido conquistar el territorio que estaba atacando.", CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_NAME]);

		CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_LAST_ATTACK] = gettime();
		CREW_INFO[ TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] ][crew_FIGHTING] = false;
		CREW_INFO[ TERRITORIES[territory_index][territory_CREW_INDEX] ][crew_FIGHTING] = false;
		TERRITORIES[territory_index][territory_WAR] = false;
		TERRITORIES[territory_index][territory_ATTACKER_CREW_INDEX] = 0;
		TERRITORIES[territory_index][territory_WAR_TIME_LEFT] = 0;
		TERRITORIES[territory_index][territory_LAST_ATTACK] = gettime();
		KillTimer(TERRITORIES[territory_index][territory_TIMER]);
		UpdateGangZoneColor(territory_index);

		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PLAYER_CREW[i][player_crew_VALID])
				{
					SendClientMessage(i, -1, message);
					if(IsPlayerInDynamicArea(i, TERRITORIES[territory_index][territory_AREA]))
					{
						SetPlayerColorEx(i, PLAYER_COLOR);
						
						TextDrawHideForPlayer(i, Textdraws[textdraw_TERRITORY_BOX]);
						TextDrawHideForPlayer(i, TERRITORIES[territory_index][territory_TEXTDRAW]);
					}
				}
			}
		}
		return 1;
	}
	
	KillTimer(TERRITORIES[territory_index][territory_TIMER]);
	TERRITORIES[territory_index][territory_TIMER] = SetTimerEx("UpdateTerritoryAttack", 1000, false, "i", territory_index);
	return 1;
}

CountCrewPlayersInTerritory(crew_index, territory_index)
{
	new count;
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PLAYER_CREW[i][player_crew_VALID])
			{
				if(PLAYER_CREW[i][player_crew_INDEX] == crew_index)
				{
					if(CHARACTER_INFO[i][ch_STATE] == ROLEPLAY_STATE_NORMAL && PLAYER_TEMP[i][pt_GAME_STATE] == GAME_STATE_NORMAL)
					{
						if(IsPlayerInDynamicArea(i, TERRITORIES[territory_index][territory_AREA]))
						{
							count ++;
						}
					}
				}
			}
		}
	}
	return count;
}

SetPlayerColorEx(playerid, color)
{
	PLAYER_TEMP[playerid][pt_PLAYER_COLOR] = color;
	return SetPlayerColor(playerid, color);
}
	
LoadServerInfo()
{
	new File:ECO = fopen("SERVER/ECO.txt", io_read), eco_str[256];
	if(ECO)
	{
		fread(ECO, eco_str);
		sscanf(eco_str, "p<,>fffffdd", MULTIPLIER_PROPERITES, MULTIPLIER_VEHICLES, MULTIPLIER_TOYS, MULTIPLIER_SKINS, MULTIPLIER_WEAPONS, SD_VALUE, SU_SD_PRICE);
		fclose(ECO);
	}
	
	
	new File:AC = fopen("SERVER/AC.txt", io_read), ac_str[128], ac_num;
	if(AC)
	{
		while(fread(AC, ac_str))
		{
			if(ac_num >= sizeof(ac_Info)) break;
			sscanf(ac_str, "p<,>bbdd", ac_Info[ac_num][ac_Enabled], ac_Info[ac_num][ac_Kick], ac_Info[ac_num][ac_Detections], ac_Info[ac_num][ac_Interval]);
			ac_num ++;
		}
		fclose(AC);
	}
	return 1;
}

WriteAnticheatRules()
{
	new File:AC = fopen("SERVER/AC.txt", io_write), ac_str[128];
	if(AC)
	{
		for(new i = 0; i != sizeof(ac_Info); i ++)
		{
			format(ac_str, sizeof ac_str, "%d,%d,%d,%d\r\n", ac_Info[i][ac_Enabled], ac_Info[i][ac_Kick], ac_Info[i][ac_Detections], ac_Info[i][ac_Interval]);
			fwrite(AC, ac_str);
		}
		fclose(AC);
	}
	return 1;
}

WriteEconomyMultipliers()
{
	new File:ECO = fopen("SERVER/ECO.txt", io_write), eco_str[256];
	if(ECO)
	{
		format(eco_str, sizeof eco_str, "%f,%f,%f,%f,%f,%d,%d", MULTIPLIER_PROPERITES, MULTIPLIER_VEHICLES, MULTIPLIER_TOYS, MULTIPLIER_SKINS, MULTIPLIER_WEAPONS, SD_VALUE, SU_SD_PRICE);
		fwrite(ECO, eco_str);
		fclose(ECO);
	}
	return 1;
}

UpdateEconomy(type = -1)
{
	new label_str[256];
	
	if(type == -1)
	{
		for(new i = 0; i != MAX_PROPERTIES; i ++)
		{
			if(!PROPERTY_INFO[i][property_VALID]) continue;
			PROPERTY_INFO[i][property_PRICE] = floatround(PROPERTY_INFO[i][property_PRICE_BASE] * MULTIPLIER_PROPERITES, floatround_ceil);
			
			if(!PROPERTY_INFO[i][property_SOLD])
			{
				format
				(
					label_str, 
					sizeof label_str, 
					"\
						Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
						Interior: {C4FF66}%d\n\
						{FFFFFF}Precio: {C4FF66}%s$\n\
						{FFFFFF}Nivel necesario: {C4FF66}%d\n\
						{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
					", PROPERTY_INFO[i][property_ID], PROPERTY_INFO[i][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[i][property_PRICE]), PROPERTY_INFO[i][property_LEVEL]
				);
				UpdateDynamic3DTextLabelText(PROPERTY_INFO[i][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
			}
		}
		
		for(new i = 0; i != MAX_VEHICLES; i ++)
		{
			if(!SELL_VEHICLES[i][sell_vehicle_VALID]) continue;
			SELL_VEHICLES[i][sell_vehicle_PRICE] = floatround(VEHICLE_INFO[ GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE] * MULTIPLIER_VEHICLES, floatround_ceil);		
		
			format
			(
				label_str, 
					sizeof label_str, 
					"\
						{C4FF66}%s\n\n\
						{FFFFFF}Precio: {C4FF66}%s$\n\
						{FFFFFF}Nivel necesario: {C4FF66}%d\n\
						{CCCCCC}Entra en él para comprarlo\
					", VEHICLE_INFO[GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400][vehicle_info_NAME], number_format_thousand(SELL_VEHICLES[i][sell_vehicle_PRICE]), SELL_VEHICLES[i][sell_vehicle_LEVEL]
			);
			UpdateDynamic3DTextLabelText(SELL_VEHICLES[i][sell_vehicle_LABEL_ID], 0xFFFFFFFF, label_str);
		}
		
		for(new i = 0; i != sizeof(Toys_Shop); i ++) Toys_Shop[i][shop_toy_price] = floatround(Toys_Shop[i][shop_toy_price_base] * MULTIPLIER_TOYS, floatround_ceil);		
		for(new i = 0; i != sizeof(Binco_Shop_Male_Skins); i ++) Binco_Shop_Male_Skins[i][2] = floatround(Binco_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Binco_Shop_Female_Skins); i ++) Binco_Shop_Female_Skins[i][2] = floatround(Binco_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Suburban_Shop_Male_Skins); i ++) Suburban_Shop_Male_Skins[i][2] = floatround(Suburban_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Suburban_Shop_Female_Skins); i ++) Suburban_Shop_Female_Skins[i][2] = floatround(Suburban_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Prolaps_Shop_Male_Skins); i ++) Prolaps_Shop_Male_Skins[i][2] = floatround(Prolaps_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Prolaps_Shop_Female_Skins); i ++) Prolaps_Shop_Female_Skins[i][2] = floatround(Prolaps_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Didier_Shop_Male_Skins); i ++) Didier_Shop_Male_Skins[i][2] = floatround(Didier_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Didier_Shop_Female_Skins); i ++) Didier_Shop_Female_Skins[i][2] = floatround(Didier_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Victim_Shop_Male_Skins); i ++) Victim_Shop_Male_Skins[i][2] = floatround(Victim_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Victim_Shop_Female_Skins); i ++) Victim_Shop_Female_Skins[i][2] = floatround(Victim_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Zip_Shop_Male_Skins); i ++) Zip_Shop_Male_Skins[i][2] = floatround(Zip_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		for(new i = 0; i != sizeof(Zip_Shop_Female_Skins); i ++) Zip_Shop_Female_Skins[i][2] = floatround(Zip_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
		
		for(new i = 0; i != sizeof(BLACK_MARKT_WEAPONS); i ++) BLACK_MARKT_WEAPONS[i][black_market_WEAPON_PRICE] = floatround(BLACK_MARKT_WEAPONS[i][black_market_WEAPON_PRICE_BASE] * MULTIPLIER_WEAPONS, floatround_ceil);
	}
	else
	{
		switch(type)
		{
			case 0:
			{
				for(new i = 0; i != MAX_PROPERTIES; i ++)
				{
					if(!PROPERTY_INFO[i][property_VALID]) continue;
					PROPERTY_INFO[i][property_PRICE] = floatround(PROPERTY_INFO[i][property_PRICE_BASE] * MULTIPLIER_PROPERITES, floatround_ceil);
					
					if(!PROPERTY_INFO[i][property_SOLD])
					{
						format
						(
							label_str, 
							sizeof label_str, 
							"\
								Propiedad {C4FF66}#%d {FFFFFF}está en venta\n\n\
								Interior: {C4FF66}%d\n\
								{FFFFFF}Precio: {C4FF66}%s$\n\
								{FFFFFF}Nivel necesario: {C4FF66}%d\n\
								{FFFFFF}Usa {C4FF66}/ayuda {FFFFFF}para ver como adquirirla.\
							", PROPERTY_INFO[i][property_ID], PROPERTY_INFO[i][property_ID_INTERIOR], number_format_thousand(PROPERTY_INFO[i][property_PRICE]), PROPERTY_INFO[i][property_LEVEL]
						);
						UpdateDynamic3DTextLabelText(PROPERTY_INFO[i][property_EXT_LABEL_ID], 0xFFFFFFFF, label_str);
					}
				}
			}
			case 1:
			{
				for(new i = 0; i != MAX_VEHICLES; i ++)
				{
					if(!SELL_VEHICLES[i][sell_vehicle_VALID]) continue;
					SELL_VEHICLES[i][sell_vehicle_PRICE] = floatround(VEHICLE_INFO[ GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400 ][vehicle_info_PRICE] * MULTIPLIER_VEHICLES, floatround_ceil);		
				
					format
					(
						label_str, 
							sizeof label_str, 
							"\
								{C4FF66}%s\n\n\
								{FFFFFF}Precio: {C4FF66}%s$\n\
								{FFFFFF}Nivel necesario: {C4FF66}%d\n\
								{CCCCCC}Entra en él para comprarlo\
							", VEHICLE_INFO[GLOBAL_VEHICLES[i][gb_vehicle_MODELID] - 400][vehicle_info_NAME], number_format_thousand(SELL_VEHICLES[i][sell_vehicle_PRICE]), SELL_VEHICLES[i][sell_vehicle_LEVEL]
					);
					UpdateDynamic3DTextLabelText(SELL_VEHICLES[i][sell_vehicle_LABEL_ID], 0xFFFFFFFF, label_str);
				}
			}
			case 2:
			{
				for(new i = 0; i != sizeof(Toys_Shop); i ++) Toys_Shop[i][shop_toy_price] = floatround(Toys_Shop[i][shop_toy_price_base] * MULTIPLIER_TOYS, floatround_ceil);		
			}
			case 3:
			{
				for(new i = 0; i != sizeof(Binco_Shop_Male_Skins); i ++) Binco_Shop_Male_Skins[i][2] = floatround(Binco_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Binco_Shop_Female_Skins); i ++) Binco_Shop_Female_Skins[i][2] = floatround(Binco_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Suburban_Shop_Male_Skins); i ++) Suburban_Shop_Male_Skins[i][2] = floatround(Suburban_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Suburban_Shop_Female_Skins); i ++) Suburban_Shop_Female_Skins[i][2] = floatround(Suburban_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Prolaps_Shop_Male_Skins); i ++) Prolaps_Shop_Male_Skins[i][2] = floatround(Prolaps_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Prolaps_Shop_Female_Skins); i ++) Prolaps_Shop_Female_Skins[i][2] = floatround(Prolaps_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Didier_Shop_Male_Skins); i ++) Didier_Shop_Male_Skins[i][2] = floatround(Didier_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Didier_Shop_Female_Skins); i ++) Didier_Shop_Female_Skins[i][2] = floatround(Didier_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Victim_Shop_Male_Skins); i ++) Victim_Shop_Male_Skins[i][2] = floatround(Victim_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Victim_Shop_Female_Skins); i ++) Victim_Shop_Female_Skins[i][2] = floatround(Victim_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Zip_Shop_Male_Skins); i ++) Zip_Shop_Male_Skins[i][2] = floatround(Zip_Shop_Male_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
				for(new i = 0; i != sizeof(Zip_Shop_Female_Skins); i ++) Zip_Shop_Female_Skins[i][2] = floatround(Zip_Shop_Female_Skins[i][1] * MULTIPLIER_SKINS, floatround_ceil);
			}
			case 4:
			{
				for(new i = 0; i != sizeof(BLACK_MARKT_WEAPONS); i ++) BLACK_MARKT_WEAPONS[i][black_market_WEAPON_PRICE] = floatround(BLACK_MARKT_WEAPONS[i][black_market_WEAPON_PRICE_BASE] * MULTIPLIER_WEAPONS, floatround_ceil);
			}
		}
	}
	return 1;
}

CMD:eco(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	ShowDialog(playerid, DIALOG_SERVER_ECO);
	return 1;
}

ReLockPlayerVehicles(playerid, bool:remove = false)
{
	if(ACCOUNT_INFO[playerid][ac_ID] == 0) return 0;
	if(ACCOUNT_INFO[playerid][ac_SU]) return 0;
	
	new DBResult:Result, DB_Query[128];
	format(DB_Query, sizeof(DB_Query), "SELECT `ID` FROM `PLAYER_VEHICLES` WHERE `ID_USER` = '%d' ORDER BY `ID` DESC LIMIT %d;", ACCOUNT_INFO[playerid][ac_ID], MAX_SU_VEHICLES);
	Result = db_query(Database, DB_Query);
	
	new total_vehicles, veh_did;
	for(new i; i < db_num_rows(Result); i++ )
	{
		if(total_vehicles >= MAX_SU_VEHICLES)
		{
			printf("---> MAX_SU_VEHICLES superado al cargar de base de datos.");
			break;
		}
		
		veh_did = db_get_field_int(Result, 0);
		new vehicle_id = GetPlayerVehicleIdFromDbId(veh_did);
		if(vehicle_id != INVALID_VEHICLE_ID)
		{
			PLAYER_VEHICLES[vehicle_id][player_vehicle_ACCESSIBLE] = true;
			if(total_vehicles >= MAX_NU_VEHICLES)
			{
				if(remove)
				{
					if(GLOBAL_VEHICLES[vehicle_id][gb_vehicle_OCCUPIED])
					{
						SetVehicleVelocity(vehicle_id, 0.0, 0.0, 0.0);
						if(GLOBAL_VEHICLES[vehicle_id][gb_vehicle_DRIVER] != INVALID_PLAYER_ID) RemovePlayerFromVehicle(playerid);
					}
				}
				GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PARAMS_ENGINE] = 0;
				GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PARAMS_LIGHTS] = 0;
				GLOBAL_VEHICLES[vehicle_id][gb_vehicle_PARAMS_DOORS] = 1;
				PLAYER_VEHICLES[vehicle_id][player_vehicle_ACCESSIBLE] = false;
				UpdateVehicleParams(vehicle_id);
			}
		}
		
		total_vehicles ++;
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

UnlockPlayerVehicles(playerid)
{
	new total;
	for(new i = 0; i != MAX_VEHICLES; i ++)
	{
		if(!GLOBAL_VEHICLES[i][gb_vehicle_VALID]) continue;
		if(!PLAYER_VEHICLES[i][player_vehicle_VALID]) continue;
		
		if(PLAYER_VEHICLES[i][player_vehicle_ID] == ACCOUNT_INFO[playerid][ac_ID])
		{
			if(total >= MAX_SU_VEHICLES) break;
			
			PLAYER_VEHICLES[i][player_vehicle_ACCESSIBLE] = true;
		}
	}
	return total;
}

GetPlayerVehicleIdFromDbId(veh_did)
{
	for(new i = 0; i != MAX_VEHICLES; i ++)
	{
		if(!GLOBAL_VEHICLES[i][gb_vehicle_VALID]) continue;
		if(!PLAYER_VEHICLES[i][player_vehicle_VALID]) continue;
		
		if(PLAYER_VEHICLES[i][player_vehicle_ID] == veh_did) return i;
	}
	return INVALID_VEHICLE_ID;
}

CMD:su(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_SU]) ShowDialog(playerid, DIALOG_SU);
	else ShowDialog(playerid, DIALOG_SU_BUY);
	return 1;
}

CMD:sd(playerid, params[])
{
	ShowDialog(playerid, DIALOG_SD);
	return 1;
}

CMD:setsd(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, sd;
	if(sscanf(params, "ud", to_player, sd)) return SendClientMessage(playerid, -1, "Syntax: /setsd <player_id> <sd>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	
	ACCOUNT_INFO[to_player][ac_SD] = sd;
	SendClientMessageEx(to_player, -1, "{CCCCCC}Has comprado %d Sd.", sd);
	PlayerPlaySound(to_player, 1058, 0.0, 0.0, 0.0);
	
	new DB_Query[128];
	format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SD` = '%d' WHERE `ID` = '%d';", ACCOUNT_INFO[to_player][ac_SD], ACCOUNT_INFO[to_player][ac_ID]);
	db_query(Database, DB_Query);
	
	SendCmdLogToAdmins(playerid, "setsd", params);
	return 1;
}

CMD:givesd(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player, sd;
	if(sscanf(params, "ud", to_player, sd)) return SendClientMessage(playerid, -1, "Syntax: /setsd <player_id> <sd>");
	if(!IsPlayerConnected(to_player)) return SendClientMessageEx(playerid, -1, "Jugador (%d) desconectado", to_player);
	
	ACCOUNT_INFO[to_player][ac_SD] += sd;
	SendClientMessageEx(to_player, -1, "{CCCCCC}Has comprado %d Sd.", sd);
	PlayerPlaySound(to_player, 1058, 0.0, 0.0, 0.0);
	
	new DB_Query[128];
	format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SD` = '%d' WHERE `ID` = '%d';", ACCOUNT_INFO[to_player][ac_SD], ACCOUNT_INFO[to_player][ac_ID]);
	db_query(Database, DB_Query);
	
	SendCmdLogToAdmins(playerid, "setsd", params);
	return 1;
}

CheckPlayerSuperUser(playerid)
{
	new DBResult:Result, DB_Query[145], bool:expired;
	format(DB_Query, sizeof DB_Query, "SELECT `ID` FROM `CUENTA` WHERE `ID` = '%d' AND DATETIME('NOW') >= `SU_EXPIRE_DATE`;", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		expired = true;
		format(DB_Query, sizeof DB_Query, "UPDATE `CUENTA` SET `SU` = '0', `SU_EXPIRE_DATE` = '0' WHERE `ID` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
		db_query(Database, DB_Query);
	}
	db_free_result(Result);
	
	if(expired)
	{
		ACCOUNT_INFO[playerid][ac_SU] = false;
		ACCOUNT_INFO[playerid][ac_SU_EXPIRE_DATE][0] = EOS;
		SendClientMessage(playerid, -1, "{999999}¡Tu SU ha expirado! Usa /su para comprar de nuevo.");
		if(GetPlayerSkin(playerid) == CHARACTER_INFO[playerid][ch_SKIN]) SetPlayerToys(playerid);
		ReLockPlayerVehicles(playerid, true);
	}
	
	PLAYER_TEMP[playerid][pt_LAST_SU_CHECK] = gettime();
	return 1;
}

CMD:setskin(playerid, params[])
{
    if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;

    new to_player, skin;
    if(sscanf(params, "ud", to_player, skin)) return SendClientMessage(playerid, -1, "Syntax: /setskin <player_id> <skin>");
    if(!IsPlayerConnected(to_player)) return SendClientMessage(playerid, -1, "Jugador desconectado");

	CHARACTER_INFO[to_player][ch_SKIN] = skin;
    SetPlayerSkin(to_player, CHARACTER_INFO[to_player][ch_SKIN]);
	
	SendClientMessageEx(playerid, -1, "Skin '%s (%d)' cambiado a '%d'.", ACCOUNT_INFO[to_player][ac_NAME], to_player, skin);
    return 1;
}

CMD:setfstyle(playerid, params[])
{
    if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;

    new to_player, style;
    if(sscanf(params, "ud", to_player, style)) return SendClientMessage(playerid, -1, "Syntax: /setfstyle <player_id> <style>");
    if(!IsPlayerConnected(to_player)) return SendClientMessage(playerid, -1, "Jugador desconectado");

	CHARACTER_INFO[to_player][ch_FIGHT_STYLE] = style;
    SetPlayerFightingStyle(to_player, CHARACTER_INFO[to_player][ch_FIGHT_STYLE]);
	
	SendClientMessageEx(playerid, -1, "FStyle '%s (%d)' cambiado a '%d'.", ACCOUNT_INFO[to_player][ac_NAME], to_player, style);
    return 1;
}


CMD:sendls(playerid, params[])
{
    if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;

    new to_player;
    if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /sendls <player_id>");
    if(!IsPlayerConnected(to_player)) return SendClientMessage(playerid, -1, "Jugador desconectado");

	CHARACTER_INFO[to_player][ch_STATE] = ROLEPLAY_STATE_NORMAL;
	CHARACTER_INFO[to_player][ch_INTERIOR_EXTRA] = 0;
	PLAYER_TEMP[to_player][pt_INTERIOR_INDEX] = 0;
	CHARACTER_INFO[to_player][ch_INTERIOR] = 0;
	CHARACTER_INFO[to_player][ch_POLICE_JAIL_TIME] = 0;
    SetPlayerPosEx(to_player, 1555.400390, -1675.611694, 16.195312, 0.0, 0, 0, true);
	SendClientMessageEx(playerid, -1, "Jugador '%s (%d)' fue llevado a LS.", ACCOUNT_INFO[to_player][ac_NAME], to_player);
    return 1;
}

CMD:osendls(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_account;
	if(sscanf(params, "d", to_account)) return SendClientMessage(playerid, -1, "Syntax: /osendls <DB-ID>");
	
	new DBResult:Result, DB_Query[360];
	format(DB_Query, sizeof DB_Query, "SELECT `ID`, `NAME`, `CONNECTED`, `PLAYERID` FROM `CUENTA` WHERE `ID` = '%d';", to_account);
	Result = db_query(Database, DB_Query);
	
	if(db_num_rows(Result))
	{
		new id, get_name[24], connected, player_id;
		
		id = db_get_field_assoc_int(Result, "ID");
		db_get_field_assoc(Result, "NAME", get_name, 24);
		connected = db_get_field_assoc_int(Result, "CONNECTED");
		player_id = db_get_field_assoc_int(Result, "PLAYERID");

		if(connected) SendClientMessageEx(playerid, -1, "JUGADOR '%s' DB-ID '%d' conectado utilice /sendls, su player_id: %d.", get_name, id, player_id);
		else
		{
			format(DB_Query, sizeof DB_Query, "UPDATE `PERSONAJE` SET `POS_X` = '1555.400390', `POS_Y` = '-1675.611694', `POS_Z` = 16.195312, `ANGLE` = '0.0', `STATE` = '%d', `INTERIOR` = '0', `LOCAL_INTERIOR` = '0', `POLICE_JAIL_TIME` = '0' WHERE `ID_USER` = '%d';", ROLEPLAY_STATE_NORMAL, to_account);
			db_query(Database, DB_Query);
			
			SendClientMessageEx(playerid, -1, "Jugador '%s' DB-ID '%d' ahora aparecerá en LS.", get_name, id);
		}
	}
	else SendClientMessage(playerid, -1, "No se encontro la DB-ID.");
	db_free_result(Result);
	return 1;
}

CMD:vpcar(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new modelid;
	if(sscanf(params, "d", modelid)) return SendClientMessage(playerid, -1, "Syntax: /vpcar <modelid>");
	
	new DBResult:Result, DB_Query[120], player_vehicles;
	format(DB_Query, sizeof(DB_Query), "SELECT COUNT(`ID_USER`) AS `VEHICLES` FROM `PLAYER_VEHICLES` WHERE `ID_USER` = '%d';", ACCOUNT_INFO[playerid][ac_ID]);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result)) player_vehicles = db_get_field_assoc_int(Result, "VEHICLES");
	db_free_result(Result);
	
	
	if(player_vehicles >= MAX_SU_VEHICLES) return SendClientMessageEx(playerid, -1, "No puedes tener más vehículos, el límite es %d.", MAX_SU_VEHICLES);
	
	new Float:pos[4];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);
	
	new vid = AddPersonalVehicle
	(
		playerid,
		modelid,
		pos[0],
		pos[1],
		pos[2],
		pos[3],
		1,
		1,
		VEHICLE_INFO[ modelid - 400 ][vehicle_info_MAX_GAS]
	);
	if(!vid) return SendClientMessage(playerid, -1, "{999999}No se pueden añadir más vehículos.");
	
	SendCmdLogToAdmins(playerid, "vpcar", params);
	return 1;
}

CMD:setlive(playerid, params[])
{
	if(ACCOUNT_INFO[playerid][ac_ADMIN_LEVEL] < 5) return 0;
	
	new to_player;
	if(sscanf(params, "u", to_player)) return SendClientMessage(playerid, -1, "Syntax: /setlive <playerid>");
	
	if(CHARACTER_INFO[to_player][ch_STATE] != ROLEPLAY_STATE_CRACK) return SendClientMessage(playerid, -1, "{999999}Esta persona no está herida.");
	
	DisablePlayerInjuredMark(to_player);
	CHARACTER_INFO[to_player][ch_STATE] = ROLEPLAY_STATE_NORMAL;
	SetWeaponsForPlayer(to_player);
	if(ACCOUNT_INFO[to_player][ac_SU]) SetPlayerHealthEx(playerid, 50.0);
	else SetPlayerHealthEx(to_player, 25.0);
	ApplyAnimation(to_player, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 0, true);
	ClearAnimations(to_player);
	
	SendCmdLogToAdmins(playerid, "setlive", params);
	return 1;
}



CMD:tuning(playerid, params[])
{	
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, 0x999999AA, "No estás en nigún vehículo.");
	if(CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_CRACK || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_JAIL || CHARACTER_INFO[playerid][ch_STATE] == ROLEPLAY_STATE_ARRESTED) return SendClientMessage(playerid, -1, "{999999}Ahora no puedes usar este comando.");
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 263.592102, 22.960014, 2.170951)) return SendClientMessage(playerid, 0x999999AA, "No estás en el lugar adecuado.");
	
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!PLAYER_VEHICLES[vehicleid][player_vehicle_VALID]) return SendClientMessage(playerid, 0x999999AA, "Solo puedes tunear tus vehículos personales.");
	if(PLAYER_VEHICLES[vehicleid][player_vehicle_OWNER_ID] != ACCOUNT_INFO[playerid][ac_ID]) return SendClientMessage(playerid, 0x999999AA, "Solo puedes tunear tus vehículos personales.");
	if(!VEHICLE_INFO[GLOBAL_VEHICLES[vehicleid][gb_vehicle_MODELID] - 400][vehicle_info_VALID]) return SendClientMessage(playerid, 0x999999AA, "Este vehículo no se puede tunear.");
	if(ACCOUNT_INFO[playerid][ac_LEVEL] < 4) return SendClientMessage(playerid, -1, "{999999}Debes de ser al menos nivel 4 para tunear vehículos aquí.");
	
	PLAYER_TEMP[playerid][pt_IN_TUNING_GARAGE] = true;
	PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] = vehicleid;
	
	SetVehiclePosEx(vehicleid, 263.592102, 22.960014, 2.170951);
	SetVehicleZAngle(vehicleid, 0.0);
	SetVehicleVelocity(vehicleid, 0.0, 0.0, 0.0);
	SetVehicleVirtualWorldEx(vehicleid, playerid + MAX_PLAYERS);
	SetPlayerVirtualWorld(playerid, playerid + MAX_PLAYERS);
	RepairVehicleEx(vehicleid, playerid);
	
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_PARAMS_ENGINE] = 0;
	UpdateVehicleParams(vehicleid);
	HidePlayerSpeedoMeter(playerid);
	SetCameraBehindPlayer(playerid);

	ShowDialog(playerid, DIALOG_VOBJECT_MENU);
	return 1;
}

stock GetPlayerCameraLookAt(playerid, &Float:X, &Float:Y, &Float:Z)
{
    new Float:pos[6];
    GetPlayerCameraPos(playerid, pos[0], pos[1], pos[2]);
    GetPlayerCameraFrontVector(playerid, pos[3], pos[4], pos[5]);
    X = floatadd(pos[0], pos[3]);
    Y = floatadd(pos[1], pos[4]);
    Z = floatadd(pos[2], pos[5]);
    return 1;
}

UpdateTuningShop(playerid)
{
	if(PLAYER_TEMP[playerid][pt_TUNING_PICKUP] != INVALID_STREAMER_ID)
	{
		DestroyDynamicPickup(PLAYER_TEMP[playerid][pt_TUNING_PICKUP]);
		PLAYER_TEMP[playerid][pt_TUNING_PICKUP] = INVALID_STREAMER_ID;
	}
	PLAYER_TEMP[playerid][pt_TUNING_PICKUP] = CreateDynamicPickup(Tuning_Shop_Objects[ PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ][tuning_object_MODELID], 1, 268.2404, 11.4559, 2.4222, playerid + MAX_PLAYERS, -1, playerid);
	
	new td_str[128];
	format(td_str, sizeof td_str, "Objeto:_%d/%d~n~Precio:_%s$", PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] + 1, sizeof Tuning_Shop_Objects, number_format_thousand( Tuning_Shop_Objects[ PLAYER_TEMP[playerid][pt_SELECT_TUNING_OBJECT] ][tuning_object_PRICE] ) );
	PlayerTextDrawSetString(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP], td_str);
	return 1;
}

CancelPlayerTuningShop(playerid)
{	
	SetCameraBehindPlayer(playerid);
	
	if(PLAYER_TEMP[playerid][pt_TUNING_PICKUP] != INVALID_STREAMER_ID)
	{
		DestroyDynamicPickup(PLAYER_TEMP[playerid][pt_TUNING_PICKUP]);
		PLAYER_TEMP[playerid][pt_TUNING_PICKUP] = INVALID_STREAMER_ID;
	}
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][0]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][1]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][2]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][3]);
	TextDrawHideForPlayer(playerid, Textdraws[textdraw_SHOP_TUNING][4]);
	PlayerTextDrawHide(playerid, PlayerTextdraws[playerid][ptextdraw_TUNING_SHOP]);
	CancelSelectTextDrawEx(playerid);
	
	PLAYER_TEMP[playerid][pt_TUNING_GARAGE_SHOP] = false;
	return 1;
}

GetVehicleFreeObjectSlot(vehicleid)
{
	for(new i = 0; i != MAX_SU_VOBJECTS; i ++)
	{
		if(!VEHICLE_OBJECTS[vehicleid][i][vobject_VALID]) return i;
	}
	return -1;
}

UpdateVehicleAttachedObject(vehicleid, slot, material = false)
{
	if(VEHICLE_OBJECTS[vehicleid][slot][vobject_ATTACHED])
	{
		if(VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID] == INVALID_STREAMER_ID)
		{
			VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID] = 	CreateDynamicObject
																	(
																		VEHICLE_OBJECTS[vehicleid][slot][vobject_MODELID],
																		0.0,
																		0.0,
																		0.0,
																		0.0,
																		0.0,
																		0.0
																	);
		}
		
		if(material)
		{
			switch(VEHICLE_OBJECTS[vehicleid][slot][vobject_TYPE])
			{
				case VOBJECT_TYPE_OBJECT:
				{
					for(new i = 0; i != MAX_VEHICLE_OBJECTS_INDEXS; i ++)
					{
						SetDynamicObjectMaterial(VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID], i, -1, "none", "none", VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][i]);
					}
				}
				case VOBJECT_TYPE_TEXT:
				{
					SetDynamicObjectMaterialText
					(
						VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID],
						0,
						VEHICLE_OBJECTS[vehicleid][slot][vobject_text_TEXT],
						130,
						VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT],
						VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT_SIZE],
						VEHICLE_OBJECTS[vehicleid][slot][vobject_text_BOLD],
						VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT_COLOR],
						0,
						OBJECT_MATERIAL_TEXT_ALIGN_CENTER
					);
				}
				case VOBJECT_TYPE_COUNTRY_FLAG: TextureCountryFlag(VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID], 1, VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][0]);
				case VOBJECT_TYPE_COUNTRY_PANEL: TextureCountryFlag(VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID], 0, VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][0]);
			}
		}
		
		AttachDynamicObjectToVehicle
		(
			VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID],
			vehicleid,
			VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][0],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][1],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][2],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][0],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][1],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][2]
		);
	}
	else
	{
		if(VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID] != INVALID_STREAMER_ID)
		{
			DestroyDynamicObject(VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID]);
			VEHICLE_OBJECTS[vehicleid][slot][vobject_OBJECT_ID] = INVALID_STREAMER_ID;
		}
	}
	return 1;
}

EditVehicleObject(playerid, vehicleid, slot)
{
	if(PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] != INVALID_OBJECT_ID)
	{
		DestroyPlayerObject(playerid, PLAYER_TEMP[playerid][pt_PIVOT_OBJECT]);
		PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] = INVALID_OBJECT_ID;
	}
	
	PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] = slot;
	GetVehiclePos(vehicleid, GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][0], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][1], GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2]);
	
	new Float:pos[3];
	pos[0] = GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][0] + VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][0];
	pos[1] = GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][1] + VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][1];
	pos[2] = GLOBAL_VEHICLES[vehicleid][gb_vehicle_POS][2] + VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][2];
	
	PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][0] = VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][0];
	PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][1] = VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][1];
	PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][2] = VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][2];
	PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][3] = VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][0];
	PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][4] = VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][1];
	PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][5] = VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][2];
	
	PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] = CreatePlayerObject(playerid, 999, pos[0], pos[1], pos[2], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][0], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][1], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][2]);
	SetPlayerObjectMaterial(playerid, PLAYER_TEMP[playerid][pt_PIVOT_OBJECT], 0, 0, "null", "null");
	SetPlayerObjectMaterial(playerid, PLAYER_TEMP[playerid][pt_PIVOT_OBJECT], 1, 0, "null", "null");
	
	Streamer_Update(playerid);
	EditPlayerObject(playerid, PLAYER_TEMP[playerid][pt_PIVOT_OBJECT]);
	return 1;
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(playerobject)
	{
		if(objectid == PLAYER_TEMP[playerid][pt_PIVOT_OBJECT])
		{
			switch(response)
			{
				case EDIT_RESPONSE_CANCEL:
				{
					if(PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] != INVALID_OBJECT_ID)
					{
						DestroyPlayerObject(playerid, PLAYER_TEMP[playerid][pt_PIVOT_OBJECT]);
						PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] = INVALID_OBJECT_ID;
					}
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][0] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][0];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][1] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][1];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][2] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][2];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][0] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][3];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][1] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][4];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][2] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][5];
					UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT]);
					Streamer_Update(playerid);
					
					SendClientMessage(playerid, -1, "{CCCCCC}Has cancelado la edición.");
					ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
				}
				case EDIT_RESPONSE_FINAL:
				{
					if(PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] != INVALID_OBJECT_ID)
					{
						DestroyPlayerObject(playerid, PLAYER_TEMP[playerid][pt_PIVOT_OBJECT]);
						PLAYER_TEMP[playerid][pt_PIVOT_OBJECT] = INVALID_OBJECT_ID;
					}
					
					new Float:v_size[3];
					GetVehicleModelInfo(GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_MODELID], VEHICLE_MODEL_INFO_SIZE, v_size[0], v_size[1], v_size[2]);
					
					if	(
							(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][0] >= v_size[0] || -v_size[0] >= VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][0]) || 
							(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][1] >= v_size[1] || -v_size[1] >= VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][1]) ||
							(VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][2] >= v_size[2] || -v_size[2] >= VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][2])
						)
					{
						SendClientMessage(playerid, -1, "{999999}La posición del objeto está demasiado lejos del vehículo.");
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][0] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][0];
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][1] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][1];
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][2] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][2];
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][0] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][3];
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][1] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][4];
						VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][2] = PLAYER_TEMP[playerid][pt_OLD_EDIT_VOBJECT_POS][5];
						UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT]);
						Streamer_Update(playerid);
					}
					
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ATTACHED] = true;
					SendClientMessage(playerid, -1, "{CCCCCC}Objeto actualizado.");
					ShowDialog(playerid, DIALOG_VOBJECT_OBJECT);
				}
				case EDIT_RESPONSE_UPDATE:
				{
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][0] = fX - GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_POS][0];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][1] = fY - GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_POS][1];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_OFFSET][2] = fZ - GLOBAL_VEHICLES[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][gb_vehicle_POS][2];
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][0] = fRotX;
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][1] = fRotY;
					VEHICLE_OBJECTS[ PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID] ][ PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT] ][vobject_ROT][2] = fRotZ;
					UpdateVehicleAttachedObject(PLAYER_TEMP[playerid][pt_TUNING_GARAGE_VEHICLEID], PLAYER_TEMP[playerid][pt_TUNING_EDIT_SLOT]);
				}
			}
		}
	}
	return 1;
}

SetVehicleVirtualWorldEx(vehicleid, worldid)
{
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_TP_IMMUNITY] = gettime() + 5;
	GLOBAL_VEHICLES[vehicleid][gb_vehicle_WORLD] = worldid;
	
	for(new i = 0; i != MAX_SU_VOBJECTS; i ++)
	{
		if(!VEHICLE_OBJECTS[vehicleid][i][vobject_VALID]) continue;
		if(VEHICLE_OBJECTS[vehicleid][i][vobject_OBJECT_ID] == INVALID_STREAMER_ID) continue;
		
		Streamer_SetIntData(STREAMER_TYPE_OBJECT, VEHICLE_OBJECTS[vehicleid][i][vobject_OBJECT_ID], E_STREAMER_WORLD_ID, GLOBAL_VEHICLES[vehicleid][gb_vehicle_WORLD]);
	}
	
	SetVehicleVirtualWorld(vehicleid, worldid);
	return 1;
}

TextureCountryFlag(objectid, index, country)
{
	new text_flag[128], material_size, font[24], font_size, text_alignment;
	switch(country)
	{
		case 0: // Alemania
		{
			text_flag		= "{231f20}ggg\n{e01f26}ggg\n{e3bc22}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 1: // Argentina
		{
			text_flag		= "{1FBEF2}ggg\n{ffffff}ggg\n{1FBEF2}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 2: // Austria
		{
			text_flag		= "{d81e05}ggg\n{ffffff}ggg\n{d81e05}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 3: // Belgica
		{
			text_flag		= "{000000}g{ffd600}g{e80000}g\n{000000}g{ffd600}g{e80000}g\n{000000}g{ffd600}g{e80000}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 4: // Bolivia
		{
			text_flag		= "{d52b1e}ggg\n{f9e300}ggg\n{007934}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 5: // Bulgaria
		{
			text_flag		= "{ffffff}ggg\n{00966e}ggg\n{d62612}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 6: // Chile
		{
			text_flag		= "{04019a}g{ffffff}gg\n{fe0002}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 7: // Colombia
		{
			text_flag		= "{fcd116}ggg\n{003893}ggg\n{ce1126}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 0;
		}
		case 8: // El Salvador
		{
			text_flag		= "{0f47af}ggg\n{ffffff}ggg\n{0f47af}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 9: // España
		{
			text_flag		= "{c60b1e}ggg\n{ffc400}ggg\n{c60b1e}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 10: // Estonia
		{
			text_flag		= "{3a75c4}ggg\n{000000}ggg\n{ffffff}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 11: // Francia
		{
			text_flag		= "{00209f}g{ffffff}g{f42a41}g\n{00209f}g{ffffff}g{f42a41}g\n{00209f}g{ffffff}g{f42a41}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 12: // Guatemala
		{
			text_flag		= "{4997d0}g{ffffff}g{4997d0}g\n{4997d0}g{ffffff}g{4997d0}g\n{4997d0}g{ffffff}g{4997d0}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 13: // Holanda
		{
			text_flag		= "{ad1b28}ggg\n{fefefe}ggg\n{204589}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 14: // Hungria
		{
			text_flag		= "{d2232c}ggg\n{ffffff}ggg\n{008d46}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 15: // India
		{
			text_flag		= "{ff9933}ggg\n{ffffff}ggg\n{138808}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 16: // Indonesia
		{
			text_flag		= "{ce1126}ggg\n{ffffff}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 60;
			text_alignment	= 1;
		}
		case 17: // Irlanda
		{
			text_flag		= "{009e60}g{ffffff}g{f77f00}g\n{009e60}g{ffffff}g{f77f00}g\n{009e60}g{ffffff}g{f77f00}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 18: // Italia
		{
			text_flag		= "{009246}g{ffffff}g{ce2b37}g\n{009246}g{ffffff}g{ce2b37}g\n{009246}g{ffffff}g{ce2b37}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 19: // Lituania
		{
			text_flag		= "{fdb913}ggg\n{006a44}ggg\n{c1272d}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 20: // Luxemburgo
		{
			text_flag		= "{ef2b2d}ggg\n{ffffff}ggg\n{00a3dd}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 21: // Madagascar
		{
			text_flag		= "{ffffff}g{d11f33}gg\n{ffffff}g{00a651}gg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 60;
			text_alignment	= 1;
		}
		case 22: // Malta
		{
			text_flag		= "{ffffff}g{d11f33}g\n{ffffff}g{d11f33}g\n{ffffff}g{d11f33}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 60;
			text_alignment	= 1;
		}
		case 23: // Mali
		{
			text_flag		= "{14b53a}g{fcd116}g{ce1126}g\n{14b53a}g{fcd116}g{ce1126}g\n{14b53a}g{fcd116}g{ce1126}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 24: // México
		{
			text_flag		= "{006847}g{ffffff}g{ce1126}g\n{006847}g{ffffff}g{ce1126}g\n{006847}g{ffffff}g{ce1126}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 25: // Nigeria
		{
			text_flag		= "{008751}g{ffffff}g{008751}g\n{008751}g{ffffff}g{008751}g\n{008751}g{ffffff}g{008751}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 26: // Panamá
		{
			text_flag		= "{ffffff}g{d21034}g\n{0067c6}g{ffffff}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 60;
			text_alignment	= 0;
		}
		case 27: // Paraguay
		{
			text_flag		= "{d52b1e}ggg\n{ffffff}ggg\n{0038a8}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 28: // Perú
		{
			text_flag		= "{e30000}g{ffffff}g{e30000}g\n{e30000}g{ffffff}g{e30000}g\n{e30000}g{ffffff}g{e30000}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 29: // Polonia
		{
			text_flag		= "{ffffff}ggg\n{dc143c}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 60;
			text_alignment	= 1;
		}
		case 30: // Rumania
		{
			text_flag		= "{002b7f}g{fcd116}g{ce1126}g\n{002b7f}g{fcd116}g{ce1126}g\n{002b7f}g{fcd116}g{ce1126}g";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 31: // Rusia
		{
			text_flag		= "{ffffff}ggg\n{054da2}ggg\n{e01f26}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
		case 32: // Ucrania
		{
			text_flag		= "{3a75c4}ggg\n{f9dd16}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 60;
			text_alignment	= 1;
		}
		case 33: // Venezuela
		{
			text_flag		= "{f7d117}ggg\n{0033ab}ggg\n{cf142b}ggg";
			material_size	= 60;
			font			= "Webdings";
			font_size		= 55;
			text_alignment	= 1;
		}
	}
	
	SetDynamicObjectMaterialText
	(
		objectid,
		index,
		text_flag,
		material_size,
		font,
		font_size,
		0, 
		0xFFFFFFFF,
		0,
		text_alignment
	);
	return 1;
}

RegisterNewVehicleObject(vehicleid, slot)
{
	new DBResult:Result, DB_Query[1800];
	format(DB_Query, sizeof DB_Query,
	"\
		INSERT INTO `VEHICLE_OBJECTS`\
		(\
			`ID_VEHICLE`, `TYPE`, `NAME`, `MODELID`,\
			`OFF_X`, `OFF_Y`, `OFF_Z`, `ROT_X`, `ROT_Y`, `ROT_Z`,\
			`ATTACHED`,\
			`COLOR_0`, `COLOR_1`, `COLOR_2`, `COLOR_3`, `COLOR_4`,\
			`TEXT`, `FONT`, `FONT_SIZE`, `FONT_BOLD`, `FONT_COLOR`\
		)\
		VALUES\
		(\
			'%d', '%d', '%q', '%d',\
			'%f', '%f', '%f', '%f', '%f', '%f',\
			'%d',\
			'%d', '%d', '%d', '%d', '%d',\
			'%q', '%q', '%d', '%d', '%d'\
		);\
		SELECT MAX(`ID`) FROM `VEHICLE_OBJECTS`;\
	",
		PLAYER_VEHICLES[vehicleid][player_vehicle_ID], VEHICLE_OBJECTS[vehicleid][slot][vobject_TYPE], VEHICLE_OBJECTS[vehicleid][slot][vobject_NAME], VEHICLE_OBJECTS[vehicleid][slot][vobject_MODELID],
		VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][0], VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][1], VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][2], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][0], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][1], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][2],
		VEHICLE_OBJECTS[vehicleid][slot][vobject_ATTACHED],
		VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][0], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][1], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][2], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][3], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][4],
		VEHICLE_OBJECTS[vehicleid][slot][vobject_text_TEXT], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT_SIZE], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_BOLD], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT_COLOR]
	);
	Result = db_query(Database, DB_Query);

	if(db_num_rows(Result)) VEHICLE_OBJECTS[vehicleid][slot][vobject_ID] = db_get_field_int(Result, 0);
	db_free_result(Result);
	return 1;
}

UpdateVehicleObject(vehicleid, slot)
{
	new DB_Query[1800];
	format(DB_Query, sizeof DB_Query, 
		
		"UPDATE `VEHICLE_OBJECTS` SET \
			`ID_VEHICLE` = '%d', `TYPE` = '%d', `NAME` = '%q', `MODELID` = '%d',\
			`OFF_X` = '%f', `OFF_Y` = '%f', `OFF_Z` = '%f', `ROT_X` = '%f', `ROT_Y` = '%f', `ROT_Z` = '%f',\
			`ATTACHED` = '%d',\
			`COLOR_0` = '%d', `COLOR_1` = '%d', `COLOR_2` = '%d', `COLOR_3` = '%d', `COLOR_4` = '%d',\
			`TEXT` = '%q', `FONT` = '%q', `FONT_SIZE` = '%d', `FONT_BOLD` = '%d', `FONT_COLOR` = '%d' \
		WHERE `ID` = '%d';\
		",
			PLAYER_VEHICLES[vehicleid][player_vehicle_ID], VEHICLE_OBJECTS[vehicleid][slot][vobject_TYPE], VEHICLE_OBJECTS[vehicleid][slot][vobject_NAME], VEHICLE_OBJECTS[vehicleid][slot][vobject_MODELID],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][0], VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][1], VEHICLE_OBJECTS[vehicleid][slot][vobject_OFFSET][2], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][0], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][1], VEHICLE_OBJECTS[vehicleid][slot][vobject_ROT][2],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_ATTACHED],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][0], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][1], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][2], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][3], VEHICLE_OBJECTS[vehicleid][slot][vobject_COLORS][4],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_text_TEXT], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT_SIZE], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_BOLD], VEHICLE_OBJECTS[vehicleid][slot][vobject_text_FONT_COLOR],
			VEHICLE_OBJECTS[vehicleid][slot][vobject_ID]
	);
			
	db_query(Database, DB_Query);
	return 1;
}


stock ExportPropertiesDatabaseInserts()
{
	new DBResult:Result;
	Result = db_query(Database, "SELECT `PROPERTY`.*, `PROPERTY_INFO`.* FROM `PROPERTY`, `PROPERTY_INFO` WHERE `PROPERTY_INFO`.ID_PROPERTY = `PROPERTY`.ID;");
	
	new 
		Float:ext_X, Float:ext_Y, Float:ext_Z, Float:ext_ANGLE, ext_INTERIOR, ext_FREEZE,
		id_Interior,
		
		property_price, property_level, property_extra
	;
	
	new File:handle = fopen("properties.txt", io_write), line_str[512];
	if(!handle) return print("Error - properties.txt");
	
	for(new i = 0; i < db_num_rows(Result); i ++)
	{
		
		ext_X = db_get_field_assoc_float(Result, "EXT_X");
		ext_Y = db_get_field_assoc_float(Result, "EXT_Y");
		ext_Z = db_get_field_assoc_float(Result, "EXT_Z");
		ext_ANGLE = db_get_field_assoc_float(Result, "EXT_ANGLE");
		ext_INTERIOR = db_get_field_assoc_int(Result, "EXT_INTERIOR");
		ext_FREEZE = db_get_field_assoc_int(Result, "EXT_FREEZE");
	
		id_Interior = db_get_field_assoc_int(Result, "ID_INTERIOR");
		
		property_price = db_get_field_assoc_int(Result, "PRICE");
		property_level = db_get_field_assoc_int(Result, "LEVEL");
		property_extra = db_get_field_assoc_int(Result, "EXTRA");
		
		
		format
		(line_str, sizeof line_str,
			"INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('%f', '%f', '%f', '%f', '%d', '%d', '%d');\r\n",
			ext_X, ext_Y, ext_Z, ext_ANGLE, ext_INTERIOR, ext_FREEZE,
			id_Interior
		);
		fwrite(handle, line_str);
		
		format
		(line_str, sizeof line_str,
			"INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '%d', '%d', '%d' FROM `PROPERTY`;\r\n\r\n",
			property_price, property_level, property_extra
		);
		fwrite(handle, line_str);
		
		db_next_row(Result);
	}
	db_free_result(Result);
	fclose(handle);
	return 1;
}

/* BAD HISTORY DE UN JUGADOR

SELECT 
	CASE `BY`
		WHEN '-1' THEN 'AC'
		ELSE (SELECT `CUENTA`.`NAME` FROM `CUENTA` WHERE `ID` = `BAD_HISTORY`.`BY`)
	END AS `POR`,
	(SELECT `CUENTA`.`NAME` FROM `CUENTA` WHERE `ID` = `BAD_HISTORY`.`ID_USER`) AS `A`,
	CASE `TYPE`
		WHEN '0' THEN 'ADV		'
		WHEN '1' THEN 'KICK		' 
		WHEN '2' THEN 'BAN		'
		WHEN '3' THEN 'TEMP-BAN	'
	END AS `TIPO`, 
	
	`DATE` AS `FECHA`,
	`TEXT` AS `RAZON`
FROM `BAD_HISTORY` WHERE `ID_USER` = '1' ORDER BY DATE DESC;

*/


CreateDatabase()
{	
	print("[DATABASE] Creando base de datos ...");
	
	print("[DATABASE] Creando tablas ...");
	/* CUENTA */
	db_query(Database,
	"\
		CREATE TABLE `CUENTA`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`IP` VARCHAR(16),\
			`NAME` VARCHAR(24),\
			`EMAIL` VARCHAR(32),\
			`SALT` VARCHAR(16),\
			`PASS` VARCHAR(65),\
			`LAST_CONNECTION` VARCHAR(24) DEFAULT CURRENT_TIMESTAMP,\
			`TIME-PLAYING` INTEGER DEFAULT '0',\
			`LEVEL` INTEGER DEFAULT '1',\
			`REP` INTEGER DEFAULT '1',\
			`STATE` INTEGER DEFAULT '0',\
			`CONNECTED` INTEGER NOT NULL,\
			`PLAYERID` INTEGER NOT NULL,\
			`DOUBT_CHANNEL` INTEGER DEFAULT '1',\
			`TIME_FOR_REP` INTEGER DEFAULT '0',\
			`ADMIN_LEVEL` INTEGER DEFAULT '0',\
			`PAYDAY_REP` INTEGER DEFAULT '0',\
			`SU` INTEGER DEFAULT '0',\
			`SU_EXPIRE_DATE` DATETIME DEFAULT '0',\
			`SD` INTEGER DEFAULT '0'\
		);\
	");
	
	/* REGISTRO */
	db_query(Database,
	"\
		CREATE TABLE `REGISTRO`\
		(\
			`ID_USER` INTEGER PRIMARY KEY,\
			`IP` VARCHAR(16),\
			`NAME` VARCHAR(24),\
			`EMAIL` VARCHAR(32),\
			`SALT` VARCHAR(16),\
			`PASS` VARCHAR(65),\
			`DATE` VARCHAR(24) DEFAULT CURRENT_TIMESTAMP\
		);\
	");
	//FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE
	
	/* PERSONAJE */
	db_query(Database,
	"\
		CREATE TABLE `PERSONAJE`\
		(\
			`ID_USER` INTEGER PRIMARY KEY,\
			`SKIN` INTEGER NOT NULL,\
			`CASH` INTEGER DEFAULT '0',\
			`POS_X` FLOAT NOT NULL,\
			`POS_Y` FLOAT NOT NULL,\
			`POS_Z` FLOAT NOT NULL,\
			`ANGLE` FLOAT NOT NULL,\
			`STATE` INTEGER DEFAULT '0',\
			`INTERIOR` INTEGER DEFAULT '0',\
			`LOCAL_INTERIOR` INTEGER DEFAULT '0',\
			`FIGHT_STYLE` INTEGER DEFAULT '4',\
			`HEALTH` FLOAT DEFAULT '100.0',\
			`ARMOUR` FLOAT DEFAULT '0.0',\
			`SEX` INTEGER DEFAULT '0',\
			`HUNGRY` FLOAT DEFAULT '100.0',\
			`THIRST` FLOAT DEFAULT '100.0',\
			`BLACK_MARKET_LEVEL` INTEGER DEFAULT '0',\
			`WANTED_LEVEL` INTEGER DEFAULT '0',\
			`POLICE_JAIL_TIME` INTEGER DEFAULT '0',\
			`POLICE_JAIL_ID` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_TOYS */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_TOYS`\
		(\
			`ID_USER` INTEGER,\
			`ID_TOY` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`NAME` VARCHAR(24) NOT NULL,\
			`ATTACHED` INTEGER DEFAULT '0',\
			`MODELID` INTEGER NOT NULL,\
			`BONE` INTEGER DEFAULT '-1',\
			`OFFSET_X` FLOAT DEFAULT '0.0',\
			`OFFSET_Y` FLOAT DEFAULT '0.0',\
			`OFFSET_Z` FLOAT DEFAULT '0.0',\
			`ROT_X` FLOAT DEFAULT '0.0',\
			`ROT_Y` FLOAT DEFAULT '0.0',\
			`ROT_Z` FLOAT DEFAULT '0.0',\
			`SCALE_X` FLOAT DEFAULT '1.0',\
			`SCALE_Y` FLOAT DEFAULT '1.0',\
			`SCALE_Z` FLOAT DEFAULT '1.0',\
			`COLOR_1` INTEGER DEFAULT '0',\
			`COLOR_2` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");

	/* BANK_ACCOUNTS */
	db_query(Database,
	"\
		CREATE TABLE `BANK_ACCOUNTS`\
		(\
			`ID_ACCOUNT` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_USER` INTEGER,\
			`BALANCE` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* BANK_TRANSACTIONS */
	db_query(Database,
	"\
		CREATE TABLE `BANK_TRANSACTIONS`\
		(\
			`ID_TRANSACTION` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_ACCOUNT` INTEGER NOT NULL,\
			`TRANSACTION_TYPE` INTEGER NOT NULL,\
			`AMMOUNT` INTEGER NOT NULL,\
			`EXTRA` INTEGER DEFAULT '-1',\
			`DATE` DEFAULT CURRENT_TIMESTAMP,\
			FOREIGN KEY (ID_ACCOUNT) REFERENCES BANK_ACCOUNTS(ID_ACCOUNT) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_POCKET */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_POCKET`\
		(\
			`ID_USER` INTEGER,\
			`ID_OBJECT` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`NAME` VARCHAR(24) NOT NULL,\
			`HUNGRY` FLOAT DEFAULT '0.0',\
			`THIRST` FLOAT DEFAULT '0.0',\
			`DRUNK` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PHONE */
	db_query(Database,
	"\
		CREATE TABLE `PHONE`\
		(\
			`PHONE_NUMBER` INTEGER PRIMARY KEY,\
			`ID_USER` INTEGER,\
			`PHONE_STATE` INTEGER DEFAULT '0',\
			`VISIBLE_NUMBER` INTEGER DEFAULT '1',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PHONE_BOOK */
	db_query(Database,
	"\
		CREATE TABLE `PHONE_BOOK`\
		(\
			`CONTACT_ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`PHONE_ID` INTEGER NOT NULL,\
			`NAME` VARCHAR(24),\
			`PHONE_NUMBER` INTEGER,\
			FOREIGN KEY (PHONE_ID) REFERENCES PHONE(PHONE_NUMBER) ON DELETE CASCADE\
		);\
	");
	
	/* PHONE_MESSAGES */
	db_query(Database,
	"\
		CREATE TABLE `PHONE_MESSAGES`\
		(\
			`ID_MESSAGE` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`FROM` INTEGER NOT NULL,\
			`TO` INTEGER NOT NULL,\
			`MESSAGE` VARCHAR(64) NOT NULL,\
			`DATE` DEFAULT CURRENT_TIMESTAMP,\
			`OFFLINE` DEFAULT '0'\
		);\
	");
	
	/* PROPERTY */
	db_query(Database,
	"\
		CREATE TABLE `PROPERTY`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`EXT_X` FLOAT, `EXT_Y` FLOAT, `EXT_Z` FLOAT, `EXT_ANGLE` FLOAT, `EXT_INTERIOR` INTEGER DEFAULT '0', `EXT_FREEZE` INTEGER DEFAULT '0',\
			`ID_INTERIOR` INTEGER NOT NULL\
		);\
	");
	
	/* PROPERTY_SALE */
	db_query(Database,
	"\
		CREATE TABLE `PROPERTY_INFO`\
		(\
			`ID_PROPERTY` INTEGER PRIMARY KEY,\
			`PRICE` INTEGER,\
			`LEVEL` INTEGER DEFAULT '1',\
			`EXTRA` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_PROPERTY) REFERENCES PROPERTY(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PROPERTY_OWNER */
	db_query(Database,
	"\
		CREATE TABLE `PROPERTY_OWNER`\
		(\
			`ID_PROPERTY` INTEGER,\
			`ID_USER` INTEGER,\
			`PROPERTY_NAME` VARCHAR(24) DEFAULT 'PROPIEDAD',\
			PRIMARY KEY (ID_PROPERTY, ID_USER),\
			FOREIGN KEY (ID_PROPERTY) REFERENCES PROPERTY(ID) ON DELETE CASCADE,\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_GPS */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_GPS`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_USER` INTEGER,\
			`NAME` VARCHAR(24) NOT NULL,\
			`X` FLOAT DEFAULT '0.0',\
			`Y` FLOAT DEFAULT '0.0',\
			`Z` FLOAT DEFAULT '0.0',\
			`WORLD` INTEGER DEFAULT '0',\
			`INTERIOR` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_OBJECT */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_OBJECT`\
		(\
			`ID_USER` INTEGER,\
			`GPS` INTEGER DEFAULT '0',\
			`MP3` INTEGER DEFAULT '0',\
			`PHONE_RESOLVER` INTEGER DEFAULT '0',\
			PRIMARY KEY (ID_USER),\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_VEHICLES */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_VEHICLES`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_USER` INTEGER,\
			`PLATE` VARCHAR(32) DEFAULT 'ABC',\
			`MODELID` INTEGER NOT NULL,\
			`SPAWN_X` FLOAT NOT NULL,\
			`SPAWN_Y` FLOAT NOT NULL,\
			`SPAWN_Z` FLOAT NOT NULL,\
			`SPAWN_ANGLE` FLOAT NOT NULL,\
			`HEALTH` FLOAT DEFAULT '1000.0',\
			`DAMAGE_PANELS` INTEGER DEFAULT '0',\
			`DAMAGE_DOORS` INTEGER DEFAULT '0',\
			`DAMAGE_LIGHTS` INTEGER DEFAULT '0',\
			`DAMAGE_TIRES` INTEGER DEFAULT '0',\
			`COLOR_1` INTEGER DEFAULT '1',\
			`COLOR_2` INTEGER DEFAULT '1',\
			`PAINTJOB` INTEGER DEFAULT '3',\
			`GAS` FLOAT DEFAULT '100.0',\
			`MAX_GAS` FLOAT DEFAULT '100.0',\
			`CLOSED` INTEGER DEFAULT '0',\
			`INTERIOR` INTEGER DEFAULT '0',\
			`WORLD` INTEGER DEFAULT '0',\
			`STATE` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_VEHICLE_COMPONENTS */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_VEHICLE_COMPONENTS`\
		(\
			`ID_VEHICLE` INTEGER,\
			`SLOT_0` INTEGER DEFAULT '0',`SLOT_1` INTEGER DEFAULT '0',`SLOT_2` INTEGER DEFAULT '0',`SLOT_3` INTEGER DEFAULT '0',\
			`SLOT_4` INTEGER DEFAULT '0',`SLOT_5` INTEGER DEFAULT '0',`SLOT_6` INTEGER DEFAULT '0',`SLOT_7` INTEGER DEFAULT '0',\
			`SLOT_8` INTEGER DEFAULT '0',`SLOT_9` INTEGER DEFAULT '0',`SLOT_10` INTEGER DEFAULT '0',`SLOT_11` INTEGER DEFAULT '0',\
			`SLOT_12` INTEGER DEFAULT '0',`SLOT_13` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_VEHICLE) REFERENCES PLAYER_VEHICLES(ID) ON DELETE CASCADE\
		);\
	");
	
	/* VEHICLE_BOOT */
	db_query(Database,
	"\
		CREATE TABLE `VEHICLE_BOOT`\
		(\
			`ID_OBJECT` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_VEHICLE` INTEGER,\
			`TYPE` INTEGER DEFAULT '0',\
			`INT` INTEGER DEFAULT '0',\
			`INT_EXTRA` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_VEHICLE) REFERENCES PLAYER_VEHICLES(ID) ON DELETE CASCADE\
		);\
	");

	/* PLAYER_SKILLS */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_SKILLS`\
		(\
			`ID_USER` INTEGER,\
			`ID_WORK` INTEGER,\
			`TOTAL` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_MISC */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_MISC`\
		(\
			`ID_USER` INTEGER,\
			`ID` INTEGER,\
			`EXTRA` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* COMPONENTS_INFO */
	db_query(Database,
	"\
		CREATE TABLE `COMPONENTS_INFO`\
		(\
			`ID` INTEGER PRIMARY KEY,\
			`PART` VARCHAR(24),\
			`NAME` VARCHAR(24),\
			`PIECES` INTEGER DEFAULT '0'\
		);\
	");
	
	/* VEHICLE_COMPONENTS */
	db_query(Database,
	"\
		CREATE TABLE `VEHICLE_COMPONENTS`\
		(\
			`MODELID` INTEGER,\
			`COMPONENT_ID` INTEGER,\
			PRIMARY KEY(`MODELID`, `COMPONENT_ID`)\
		);\
	");
	
	/* PLAYER_WEAPONS */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_WEAPONS`\
		(\
			`ID_USER` INTEGER,\
			`ID_WEAPON` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`WEAPON_ID` INTEGER NOT NULL,\
			`AMMO` INTEGER DEFAULT '1',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* BAD_HISTORY */
	db_query(Database,
	"\
		CREATE TABLE `BAD_HISTORY`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_USER` INTEGER NOT NULL,\
			`TYPE` INTEGER NOT NULL,\
			`BY` INTEGER NOT NULL,\
			`TEXT` VARCHAR(128),\
			`DATE` DEFAULT CURRENT_TIMESTAMP,\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* BANS */
	db_query(Database,
	"\
		CREATE TABLE `BANS`\
		(\
			`NAME` VARCHAR(24) NOT NULL UNIQUE,\
			`IP` VARCHAR(16) NOT NULL UNIQUE,\
			`ID_HISTORY` INTEGER NOT NULL,\
			`EXPIRE_DATE` DATETIME DEFAULT '0',\
			FOREIGN KEY (ID_HISTORY) REFERENCES BAD_HISTORY(ID) ON DELETE CASCADE\
		);\
	");
	
	/* SHOP */
	db_query(Database,
	"\
		CREATE TABLE `SHOP`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_USER` INTEGER NOT NULL,\
			`TYPE` INTEGER NOT NULL,\
			`PRICE` INTEGER NOT NULL,\
			`TEXT` VARCHAR(24),\
			`MODELID` INTEGER NOT NULL,\
			`RX` FLOAT NOT NULL,\
			`RY` FLOAT NOT NULL,\
			`RZ` FLOAT NOT NULL,\
			`ZOOM` FLOAT NOT NULL,\
			`VCOL1` INTEGER DEFAULT '0',\
			`VCOL2` INTEGER DEFAULT '0',\
			`DATE` DEFAULT CURRENT_TIMESTAMP,\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_WORKS */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_WORKS`\
		(\
			`ID_USER` INTEGER,\
			`ID_WORK` INTEGER,\
			`SET` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE\
		);\
	");
	
	
	/* CREW */
	db_query(Database,
	"\
		CREATE TABLE `CREW`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`NAME` VARCHAR(32),\
			`COLOR` INTEGER\
		);\
	");
	
	/* CREW_RANKS */
	db_query(Database,
	"\
		CREATE TABLE `CREW_RANKS`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_CREW` INTEGER,\
			`RANK_POS` INTEGER,\
			`RANK_NAME` VARCHAR(24),\
			FOREIGN KEY (ID_CREW) REFERENCES CREW(ID) ON DELETE CASCADE\
		);\
	");
	
	/* RANK_PERMISSIONS */
	db_query(Database,
	"\
		CREATE TABLE `RANK_PERMISSIONS`\
		(\
			`ID_RANK` INTEGER,\
			`PERMISSION` INTEGER,\
			`SET` INTEGER,\
			FOREIGN KEY (ID_RANK) REFERENCES CREW_RANKS(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PLAYER_CREW */
	db_query(Database,
	"\
		CREATE TABLE `PLAYER_CREW`\
		(\
			`ID_USER` INTEGER,\
			`ID_CREW` INTEGER,\
			`RANK` INTEGER,\
			FOREIGN KEY (ID_USER) REFERENCES CUENTA(ID) ON DELETE CASCADE,\
			FOREIGN KEY (ID_CREW) REFERENCES CREW(ID) ON DELETE CASCADE\
		);\
	");

	/* SA_ZONES */
	db_query(Database,
	"\
		CREATE TABLE `SA_ZONES`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ZONE` VARCHAR(8),\
			`PART` VARCHAR(8),\
			`NAME` VARCHAR(32),\
			`MIN_X` FLOAT,\
			`MIN_Y` FLOAT,\
			`MIN_Z` FLOAT,\
			`MAX_X` FLOAT,\
			`MAX_Y` FLOAT,\
			`MAX_Z` FLOAT,\
			`GANG_ZONE` INTEGER DEFAULT '0'\
		);\
	");
	
	/* CREW_TERRITORIES */
	db_query(Database,
	"\
		CREATE TABLE `CREW_TERRITORIES`\
		(\
			`ID_CREW` INTEGER,\
			`ID_TERRITORY` INTEGER,\
			FOREIGN KEY (ID_CREW) REFERENCES CREW(ID) ON DELETE CASCADE,\
			FOREIGN KEY (ID_TERRITORY) REFERENCES SA_ZONES(ID) ON DELETE CASCADE\
		);\
	");
	
	/* PROPERTY_TERRITORY */
	db_query(Database,
	"\
		CREATE TABLE `PROPERTY_TERRITORY`\
		(\
			`ID_PROPERTY` INTEGER,\
			`ID_TERRITORY` INTEGER,\
			FOREIGN KEY (ID_PROPERTY) REFERENCES PROPERTY(ID) ON DELETE CASCADE,\
			FOREIGN KEY (ID_TERRITORY) REFERENCES SA_ZONES(ID) ON DELETE CASCADE\
		);\
	");

	/* VEHICLE_OBJECTS */
	db_query(Database,
	"\
		CREATE TABLE `VEHICLE_OBJECTS`\
		(\
			`ID` INTEGER PRIMARY KEY AUTOINCREMENT,\
			`ID_VEHICLE` INTEGER,\
			`TYPE` INTEGER,\
			`NAME` VARCHAR(32),\
			`MODELID` INTEGER,\
			`OFF_X` FLOAT,\
			`OFF_Y` FLOAT,\
			`OFF_Z` FLOAT,\
			`ROT_X` FLOAT,\
			`ROT_Y` FLOAT,\
			`ROT_Z` FLOAT,\
			`ATTACHED` INTEGER,\
			`COLOR_0` INTEGER DEFAULT '0',\
			`COLOR_1` INTEGER DEFAULT '0',\
			`COLOR_2` INTEGER DEFAULT '0',\
			`COLOR_3` INTEGER DEFAULT '0',\
			`COLOR_4` INTEGER DEFAULT '0',\
			`TEXT` VARCHAR(32),\
			`FONT` VARCHAR(24),\
			`FONT_SIZE` INTEGER DEFAULT '0',\
			`FONT_BOLD` INTEGER DEFAULT '0',\
			`FONT_COLOR` INTEGER DEFAULT '0',\
			FOREIGN KEY (ID_VEHICLE) REFERENCES PLAYER_VEHICLES(ID) ON DELETE CASCADE\
		);\
	");
	print("[DATABASE] Tablas creadas ...");
	
	print("[DATABASE] Insertando propiedades a las tablas de propiedades ...");
	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('769.219238', '-1745.894165', '13.077295', '91.157585', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('769.226257', '-1696.463867', '5.155418', '86.289299', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('791.515319', '-1753.337280', '13.457489', '181.232589', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2396.965820', '690.449890', '11.453125', '2.659399', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2368.632080', '689.894104', '11.460477', '1.868963', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2346.453857', '691.376831', '11.460935', '355.364166', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2317.170898', '690.438659', '11.460935', '4.684792', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2346.525146', '736.532531', '11.468292', '175.576797', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2369.100097', '735.088745', '11.460935', '180.423370', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2398.281494', '735.949951', '11.460935', '171.789138', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2450.126464', '742.621032', '11.460935', '79.276626', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2147.684326', '-1366.230346', '25.972253', '181.713851', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2450.697753', '714.505432', '11.468292', '87.090110', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2449.125244', '689.980834', '11.460935', '97.785705', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2450.167236', '662.522399', '11.460935', '88.512771', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2129.601318', '-1361.794433', '26.136316', '174.105102', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2397.533935', '656.002502', '11.460935', '178.963150', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2185.169189', '-1363.705322', '26.159753', '179.439407', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2202.742187', '-1363.720214', '26.191003', '178.202011', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2230.492431', '-1397.196166', '24.573816', '357.857452', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2243.530273', '-1397.213500', '24.573816', '356.081848', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2256.535156', '-1397.219238', '24.573816', '349.603668', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2196.213134', '-1404.055664', '25.948816', '86.531013', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2188.582275', '-1419.320556', '26.156250', '256.813842', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2194.383544', '-1442.951416', '26.073816', '286.226348', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2191.103759', '-1455.872436', '26.000000', '90.558265', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2190.447998', '-1470.398803', '25.914062', '88.072456', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2190.359619', '-1487.650268', '26.105066', '269.450042', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2368.307373', '655.097717', '11.460935', '164.290985', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2346.137207', '656.551391', '11.460477', '187.699966', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2317.865722', '655.996520', '11.453125', '185.604980', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2148.899658', '-1484.800048', '26.624162', '87.333786', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1440.743286', '-926.256713', '39.647666', '175.411437', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2257.502441', '735.988952', '11.460935', '174.557556', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2228.354492', '735.098632', '11.460935', '176.757064', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2146.758789', '-1470.384399', '26.042566', '87.688873', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2205.826660', '736.516601', '11.468292', '182.566818', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2177.565185', '735.975341', '11.460935', '179.666030', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1411.069213', '-920.965087', '38.421875', '169.027725', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1421.820922', '-886.128906', '50.682605', '358.618743', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2152.176757', '-1446.338867', '26.105066', '84.492980', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2149.808105', '-1433.739868', '26.070312', '92.660575', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1535.901000', '-885.290039', '57.657482', '304.040313', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2150.922607', '-1419.089843', '25.921875', '270.841888', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1540.368408', '-851.373535', '64.336059', '81.608039', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1534.928833', '-800.155944', '72.849456', '90.926185', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('142.206192', '-1469.897827', '25.210937', '322.327392', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1468.583618', '-906.082397', '54.835937', '8.272272', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1527.717773', '-772.627136', '80.578125', '132.946014', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1496.953613', '-687.995178', '95.563308', '176.462097', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('227.948059', '-1405.427001', '51.609375', '337.428222', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2177.260498', '690.454101', '11.460935', '11.288051', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2206.490966', '691.340026', '11.460935', '1.128651', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2228.672607', '689.906127', '11.460477', '7.941317', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('254.486785', '-1367.047241', '53.109375', '317.662750', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2256.982910', '690.432006', '11.453125', '3.232768', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2151.184814', '-1400.672241', '26.128503', '269.860473', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2228.918701', '655.098876', '11.460935', '188.721786', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2206.414306', '656.469543', '11.468292', '181.752243', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2178.011962', '655.886596', '11.460935', '181.226379', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('298.749176', '-1338.369506', '53.441520', '36.894191', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2123.157470', '651.460754', '11.460935', '0.161925', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1442.578125', '-628.929870', '95.718566', '177.326492', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('345.162139', '-1298.012329', '50.759044', '299.859771', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2120.557373', '695.986511', '11.453125', '183.032684', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2091.086425', '695.078063', '11.460935', '181.370742', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2068.862304', '696.522277', '11.468292', '183.669876', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2094.140380', '650.516296', '11.460935', '359.202301', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('354.979339', '-1281.121704', '53.703639', '33.636108', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2065.750244', '649.976257', '11.468292', '7.428586', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2043.081542', '651.462402', '11.460935', '2.848192', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1332.067626', '-633.400024', '109.134902', '22.838165', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2040.717529', '695.987609', '11.453125', '182.445220', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2011.603149', '695.076904', '11.460935', '191.831726', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('189.731872', '-1308.162231', '70.251380', '287.289367', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2013.963378', '650.505554', '11.460935', '351.194274', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.867553', '665.749938', '10.820310', '265.683685', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('219.480041', '-1250.061279', '78.334579', '222.068527', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1094.974365', '-647.811706', '113.648437', '356.550415', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.894287', '669.400573', '10.820310', '264.698486', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.858032', '673.745422', '10.820310', '275.853118', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.858520', '677.445373', '10.820310', '269.975677', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.864379', '681.805541', '10.820310', '264.827880', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.869506', '684.527221', '10.820310', '264.257415', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('253.120132', '-1269.800537', '74.335464', '54.084915', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.856445', '688.240356', '10.820310', '259.300292', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1977.863647', '691.274536', '10.820310', '273.274810', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1956.949462', '718.122802', '14.281055', '94.439353', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('251.676254', '-1220.579467', '76.005821', '222.491653', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1956.957885', '724.640808', '14.281055', '83.615692', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('980.382324', '-677.206420', '121.976257', '29.814998', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1956.956054', '731.340148', '14.281055', '97.772026', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('300.159301', '-1154.496215', '81.350006', '140.342880', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('946.239807', '-710.619445', '122.619873', '40.144088', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('352.073242', '-1197.629150', '76.515625', '50.973243', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('898.007202', '-677.174560', '116.890441', '237.519287', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2049.545166', '2764.183105', '10.820310', '180.950805', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('416.454772', '-1154.661621', '76.687614', '158.476989', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('878.399902', '-725.814514', '106.389091', '152.587219', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('891.133483', '-783.065795', '101.312721', '30.722328', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('398.100372', '-1271.278808', '50.019790', '27.648004', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('431.752380', '-1253.152832', '51.580940', '21.714067', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('848.026367', '-745.389221', '94.969268', '323.869262', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2039.615844', '2766.441650', '10.826541', '181.655883', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('552.951599', '-1200.168579', '44.831535', '29.493444', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('808.336242', '-759.257202', '76.531364', '289.176239', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2018.471069', '2766.440917', '10.826541', '177.547592', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('785.885314', '-828.494567', '70.289581', '12.466897', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1992.527709', '2764.524414', '10.820310', '183.100280', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1956.958007', '738.050415', '14.281055', '97.261436', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1956.092895', '742.710021', '14.273435', '175.338378', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1967.360351', '2766.440673', '10.826541', '181.528686', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('497.454315', '-1094.772827', '82.359191', '358.116027', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1929.744873', '2774.359375', '10.820310', '89.150436', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1259.541992', '-785.444030', '92.031250', '90.390159', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('558.961120', '-1076.040283', '72.921989', '37.673599', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1931.302001', '2721.367187', '10.820310', '1.289829', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('558.487182', '-1160.574462', '54.422348', '31.530494', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1950.797363', '2722.053222', '10.820310', '3.660676', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('470.924560', '-1163.777099', '67.216331', '200.035537', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1969.879150', '2721.886962', '11.298933', '0.582490', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1998.750610', '2721.366455', '10.820310', '0.027976', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1093.858886', '-807.039489', '107.419685', '8.098272', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('612.163818', '-1085.804687', '58.826656', '47.762729', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2018.204589', '2722.053955', '10.820310', '11.959943', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1034.775512', '-813.083190', '101.851562', '15.368471', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('645.767333', '-1117.509033', '44.207038', '53.400596', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1949.356567', '742.774719', '14.273435', '175.547622', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1942.692504', '742.787231', '14.273435', '176.272628', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1935.805786', '742.786682', '14.273435', '180.402038', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1929.410278', '742.785705', '14.273435', '177.951568', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('700.248413', '-1060.144287', '49.421691', '60.076560', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1922.399658', '742.786437', '14.273435', '176.304229', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2066.081787', '2721.364257', '10.820310', '357.876617', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1915.947753', '742.779724', '14.273435', '184.070785', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1909.027099', '742.786865', '14.273435', '189.767074', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1901.835083', '742.743408', '14.273435', '174.576843', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1896.825927', '736.712341', '14.276408', '261.110870', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('648.125549', '-1058.495239', '52.579917', '57.048137', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1896.846557', '729.182250', '14.274607', '274.327209', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2056.492675', '2665.090820', '10.820310', '179.489852', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1896.826782', '728.931396', '10.820310', '256.523254', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1896.885620', '736.343200', '10.820310', '264.305328', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1902.001586', '742.766662', '10.819780', '166.287261', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1909.120849', '742.784973', '10.819780', '171.983505', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('672.848876', '-1020.085021', '55.759605', '79.170028', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1915.869995', '742.786987', '10.819780', '177.471893', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1922.706665', '742.787475', '10.820310', '169.381393', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1929.260375', '742.779357', '10.820310', '176.943008', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1936.098632', '742.842590', '10.820310', '165.058883', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1942.591186', '742.691711', '10.820310', '171.695144', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1949.301513', '742.790283', '10.820310', '167.300079', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2037.032958', '2664.400634', '10.820310', '184.370407', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1955.789184', '742.775695', '10.820310', '173.172714', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('724.828674', '-999.337402', '52.734375', '326.536041', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2017.942871', '2664.558593', '11.298933', '178.995162', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1989.070800', '2664.990234', '10.820310', '178.444549', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('827.868225', '-858.132873', '70.330810', '202.595092', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1969.605224', '2664.401611', '10.820310', '183.125625', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('836.119689', '-894.687377', '68.768898', '325.602233', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1950.545288', '2664.555908', '11.298933', '181.925292', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1921.830078', '2665.085449', '10.820310', '180.969146', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('858.522216', '-845.263488', '77.380821', '204.385437', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('910.312683', '-817.477111', '103.126029', '35.348884', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('924.026977', '-853.414855', '93.456520', '296.765808', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('937.773803', '-848.594787', '93.598411', '24.262273', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('989.701904', '-828.587463', '95.468574', '23.285665', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('977.415222', '-771.403015', '112.202629', '9.574562', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2145.822021', '2834.555419', '10.820310', '87.232170', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1045.169677', '-642.828796', '120.117187', '21.372768', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1735.643188', '2691.218750', '10.820310', '0.126668', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1703.800415', '2688.959716', '10.826541', '0.991303', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1326.113769', '-1067.731933', '31.554687', '277.198364', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1326.370117', '-1090.581787', '27.976562', '269.222045', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1678.577392', '2690.870849', '10.820310', '5.972186', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1285.265502', '-1090.454711', '28.257812', '95.226844', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1285.152465', '-1067.361450', '31.678918', '90.554801', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1652.497802', '2708.958007', '10.826541', '357.388793', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1242.361816', '-1099.431152', '27.976562', '270.546325', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1242.050781', '-1076.436889', '31.554687', '270.476867', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1627.270874', '2710.866210', '10.820310', '16.398775', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1234.736083', '-1016.159790', '32.606651', '271.251007', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1601.138305', '2708.956542', '10.826541', '357.275024', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1227.696289', '-1017.014343', '32.601562', '274.958251', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1226.601074', '-1010.952209', '36.328262', '278.027954', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1227.247314', '-1017.153137', '36.335937', '102.386146', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1580.214477', '2709.029296', '10.826541', '2.017513', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1233.828979', '-1010.055297', '36.328262', '108.959793', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1234.749755', '-1016.275878', '36.335937', '98.039108', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1196.395996', '-1017.122619', '32.546875', '96.542945', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1570.143554', '2711.216796', '10.820310', '357.323150', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1233.678588', '-1010.001586', '32.601562', '95.983261', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1189.106933', '-1018.015808', '32.546875', '277.044616', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1226.544677', '-1011.045898', '32.601562', '278.867553', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1188.993530', '-1017.977600', '36.234375', '106.613059', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1188.315673', '-1011.972717', '32.546875', '277.578216', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1195.585083', '-1010.946105', '32.552947', '95.912948', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1195.674926', '-1010.883178', '36.226699', '274.271240', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1196.497558', '-1017.097290', '36.234375', '272.704620', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1188.297729', '-1011.931396', '36.226699', '285.622436', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1565.331298', '2756.991210', '10.820310', '86.472640', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1183.369873', '-1075.901977', '31.678918', '91.189399', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1183.375122', '-1099.207153', '28.257812', '89.004882', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1142.229980', '-1092.912475', '28.187500', '268.800598', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1141.915283', '-1069.983520', '31.765625', '262.938385', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1127.918945', '-1021.546813', '34.992187', '180.567520', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1118.099121', '-1021.275207', '34.992187', '181.828002', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1051.006347', '-1059.190185', '34.796646', '2.174566', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1068.521362', '-1081.378662', '27.516218', '269.372009', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('993.697875', '-1058.792602', '33.699501', '4.500584', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1564.673339', '2776.435058', '10.820310', '97.285957', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1565.351318', '2793.603759', '10.820310', '88.868721', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1103.296630', '-1069.567138', '31.889856', '91.539535', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1102.979736', '-1093.942016', '28.468750', '95.811523', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('985.868835', '-1094.785644', '27.604057', '174.817443', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('976.509521', '-1070.597900', '27.054636', '89.048370', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1599.567993', '2757.498046', '10.826541', '178.229644', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1608.700927', '2753.998291', '10.820310', '174.304214', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1626.731811', '2754.035400', '10.820310', '179.068740', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1663.241333', '2754.032714', '10.820310', '178.913925', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1643.681884', '2753.350585', '10.820310', '191.378097', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1588.492553', '2797.436523', '10.826541', '355.689208', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1180.310424', '-1261.089721', '15.179685', '270.581817', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.336181', '-1260.904418', '15.179685', '90.330688', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.257812', '-1254.716918', '15.179685', '89.874946', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1180.243896', '-1254.887451', '15.179685', '285.911773', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1618.450561', '2800.900878', '10.820310', '0.732218', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.260986', '-1254.728515', '18.890762', '89.022453', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1180.573608', '-1254.733642', '18.890762', '269.420715', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1638.012084', '2801.589111', '10.820310', '5.121013', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.338867', '-1260.955078', '18.898437', '89.836875', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1179.989379', '-1261.034057', '18.898437', '268.786407', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1654.775756', '2800.906250', '10.820310', '358.676330', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1673.135253', '2800.897460', '10.820310', '2.943506', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.340454', '-1233.302124', '18.554687', '88.864509', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1180.403686', '-1233.479492', '18.554687', '272.553039', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1664.733642', '2845.970214', '10.826541', '177.959045', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1179.993164', '-1233.398803', '22.140625', '270.720886', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1180.152221', '-1227.275756', '18.554687', '270.188964', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1179.911376', '-1227.157836', '22.132949', '269.524353', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.261108', '-1227.082275', '18.554687', '89.164764', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1632.859863', '2843.714599', '10.820310', '177.490859', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.333740', '-1233.321044', '22.140625', '89.295822', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1187.191406', '-1227.039428', '22.132949', '88.556205', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1622.771972', '2845.966552', '10.826541', '177.871719', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1601.924682', '2845.971435', '10.826541', '178.466079', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1575.889648', '2844.061279', '10.820310', '179.825271', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1550.527099', '2845.969726', '10.826541', '181.738449', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1891.877319', '-1070.444580', '23.937500', '271.362609', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1895.771118', '-1064.691650', '23.937500', '96.886062', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1556.093750', '2658.621337', '10.820310', '4.810800', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1572.904907', '2657.935302', '10.820310', '0.452838', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1916.461059', '-1064.776123', '24.124662', '99.367286', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1912.716430', '-1070.536376', '24.238397', '271.234649', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1607.501831', '2679.512695', '10.820310', '90.912864', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1939.158203', '-1066.529663', '24.418329', '90.793663', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1611.660644', '2648.361816', '10.826541', '94.502189', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1934.153442', '-1071.440673', '24.415840', '265.421966', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1959.498779', '-1069.994750', '24.796701', '82.177818', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1954.502807', '-1074.864257', '24.796701', '268.207885', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1600.584106', '2609.927001', '10.820310', '177.366775', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1618.817626', '2609.930664', '10.820310', '178.609970', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1638.187011', '2610.539794', '10.820310', '182.860610', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1955.425048', '-1115.360961', '27.830497', '270.125366', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1939.089355', '-1114.592285', '27.452295', '181.005813', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1906.081787', '-1113.045776', '26.664062', '173.112152', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1921.412109', '-1115.104858', '27.088310', '273.399597', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1667.167236', '2610.080810', '11.298933', '178.126846', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1885.982788', '-1113.704833', '26.275810', '269.356109', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1665.552734', '2569.529296', '11.298933', '0.277657', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1646.625366', '2569.698486', '10.820310', '7.690948', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2000.078613', '-1114.159179', '27.125000', '183.202178', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1623.444580', '2567.450683', '10.820310', '356.077880', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2022.985107', '-1120.372314', '26.421045', '182.570327', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1596.512695', '2567.796630', '10.820310', '357.685485', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2045.526611', '-1116.547241', '26.361747', '359.241790', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2023.108764', '-1052.992797', '25.596122', '242.484222', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1564.432006', '2565.536865', '10.826541', '354.124023', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2035.952514', '-1059.286621', '25.650810', '242.545303', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2050.864990', '-1065.741943', '25.783622', '244.028350', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2060.926513', '-1075.298950', '25.680273', '158.757553', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2075.234619', '-1081.956542', '25.606649', '163.282394', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2108.662353', '-1082.217285', '25.488693', '317.160858', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2101.725341', '-1075.857543', '25.856121', '318.471130', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2082.431640', '-1085.220825', '25.613220', '158.937805', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1551.532226', '2567.438476', '10.820310', '356.339263', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1513.338745', '2565.545654', '10.826541', '359.563903', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2137.585937', '-1074.038818', '27.284578', '60.672779', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1503.265625', '2567.799316', '10.820310', '2.913561', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2140.552490', '-1082.490966', '25.033084', '157.561218', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2145.174072', '-1084.708129', '24.966297', '160.279586', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2091.567382', '-1068.088867', '28.009656', '319.502502', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1515.905029', '2610.081787', '11.298933', '174.220046', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2077.344726', '-1056.928466', '31.273586', '324.673492', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2105.602539', '-1056.146118', '27.136650', '146.974487', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1535.000610', '2609.937255', '10.820310', '199.458953', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2099.726074', '-1051.750610', '28.744367', '142.187820', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2093.776123', '-1047.420410', '30.027210', '145.885467', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1554.473632', '2610.606689', '10.820310', '178.486495', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2083.029541', '-1039.730346', '32.140434', '154.080307', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2188.843994', '-1081.573364', '43.833782', '246.018447', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1500.719238', '2535.349853', '10.820310', '87.339675', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1454.060668', '2525.494873', '10.820310', '269.567749', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2139.931152', '-1008.400573', '61.914466', '350.675537', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2108.939941', '-1000.673461', '60.507812', '340.379180', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2045.048095', '-965.917114', '44.425979', '103.575584', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1451.277221', '2565.538085', '10.826541', '358.322753', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2073.259277', '-965.206542', '49.316123', '161.308822', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1441.581909', '2567.796386', '10.820310', '354.681213', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2089.447021', '-996.120910', '53.032737', '345.139404', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1418.062011', '2567.590087', '10.820310', '354.641326', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2049.096923', '-987.209960', '44.910842', '29.315351', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2066.257324', '-993.110107', '48.799732', '348.045013', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1408.073242', '2524.530029', '10.820310', '88.613517', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1362.399902', '2525.539550', '10.820310', '266.865692', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2122.137695', '-970.404907', '58.207431', '251.701248', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2131.843750', '-974.012939', '59.785556', '73.464157', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1359.696044', '2565.539062', '10.826541', '356.951568', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2142.771484', '-978.225036', '61.379306', '258.499786', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1349.698120', '2567.798828', '10.820310', '358.228759', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2154.014404', '-979.882568', '63.293369', '73.693557', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1325.484863', '2567.451171', '10.820310', '356.783447', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1344.584350', '2610.082519', '11.298933', '180.729019', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1313.613769', '2610.094482', '11.298933', '175.182510', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2186.458007', '-997.492797', '66.468750', '162.299285', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1284.892456', '2610.606933', '10.820310', '180.634277', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2284.065429', '-1046.196777', '49.887119', '144.077270', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1265.458374', '2609.931884', '10.820310', '186.464752', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2259.672607', '-1019.272583', '59.295715', '220.788925', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1223.139892', '2616.788818', '10.826541', '272.585388', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1225.375122', '2584.743896', '10.820310', '270.364044', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2319.625244', '-1053.331054', '52.460803', '121.293167', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2297.498046', '-1053.158203', '49.933994', '156.559722', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1271.989013', '2564.205322', '10.820310', '263.125671', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2325.428710', '-1060.869262', '52.468616', '5.817831', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2334.843261', '-1045.152709', '52.358196', '359.093231', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1269.733764', '2554.362792', '10.826541', '267.215057', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2347.934570', '-1047.509887', '53.841247', '23.905250', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2351.112304', '-1039.909057', '54.335803', '196.523574', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1274.060058', '2522.594482', '10.820310', '271.004180', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2355.593750', '-1038.684936', '54.335803', '196.175918', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2355.837402', '-1058.896850', '54.077991', '196.330535', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2370.296875', '-1035.238891', '54.410556', '185.466339', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1316.364013', '2524.564697', '10.820310', '90.997756', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2362.662109', '-1046.540771', '54.273303', '193.401504', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2389.830810', '-1037.520385', '53.565227', '225.421539', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2373.182373', '-1051.728759', '54.131202', '207.028106', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2287.337158', '-1080.969482', '48.246627', '341.336761', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2440.619873', '-1057.237792', '54.738681', '356.343780', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2278.817871', '-1077.367919', '48.167358', '336.968078', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2439.999511', '-1010.854980', '54.343750', '287.648803', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2457.613037', '-1054.631469', '59.959186', '86.622848', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2462.377929', '-1011.220886', '60.113681', '171.066436', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2479.424072', '-1064.010498', '66.998245', '78.742706', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2499.518554', '-1065.503540', '70.132812', '89.252357', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2491.266113', '-1012.254211', '65.398437', '68.253540', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2526.515136', '-1060.774780', '69.970779', '268.084442', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2512.789306', '-1027.267333', '70.085937', '187.016082', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2534.374267', '-1063.357910', '69.565513', '91.599197', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2549.328857', '-1032.166748', '69.578773', '264.712524', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2562.014892', '-1034.218872', '69.869216', '89.669517', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2526.833251', '-1033.629028', '69.579277', '185.500366', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2579.587890', '-1033.302612', '69.579887', '188.835479', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2576.580810', '-1070.620605', '69.832229', '77.141708', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2572.259521', '-1091.740844', '67.225723', '43.983337', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2519.132080', '-1113.013549', '56.592597', '275.279907', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2807.991210', '-1176.024291', '25.382324', '181.257888', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2808.092773', '-1190.777343', '25.340850', '358.412658', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2470.667236', '-1105.215698', '44.487880', '2.612092', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2457.066162', '-1102.398315', '43.867187', '345.547363', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2438.622802', '-1105.694580', '43.081630', '357.630310', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2847.112304', '-1309.801513', '14.691432', '278.737457', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2407.871093', '-1106.872436', '40.295722', '359.127777', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2099.551269', '897.490112', '76.710937', '344.494171', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2373.971923', '-1139.032226', '29.058792', '179.612838', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2394.896484', '-1133.640136', '30.718750', '181.357986', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2084.791992', '898.748413', '64.132812', '357.988403', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2075.063232', '898.742187', '64.132812', '357.635864', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2427.396972', '-1135.876464', '34.710937', '185.147201', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2851.959228', '-1366.159301', '14.170822', '279.005004', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2807.884521', '-1369.406860', '23.564678', '93.487144', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2488.097656', '-1135.341430', '39.585937', '180.510910', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2116.873779', '927.717773', '86.079063', '177.022232', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2807.835937', '-1354.229980', '27.193359', '102.533638', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2510.464355', '-1132.612060', '41.620693', '89.366233', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2782.039794', '-1358.468994', '26.317243', '275.570220', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2129.738281', '942.531005', '80.000000', '84.474365', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2160.042724', '947.111877', '80.000000', '256.085876', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2160.044433', '965.454833', '80.000000', '275.785125', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2782.025390', '-1333.438720', '32.351612', '273.551605', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2160.040283', '984.043334', '80.000000', '264.299011', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2782.243164', '-1306.403198', '38.831085', '265.034820', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2160.045898', '1002.149536', '80.000000', '279.795867', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2628.204101', '-1067.926513', '69.611839', '266.297149', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2782.247070', '-1281.228027', '44.321369', '270.262969', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2627.799804', '-1085.186645', '69.616386', '273.045837', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2809.445068', '-1281.013061', '43.854660', '99.011169', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.578125', '978.529052', '80.007812', '74.269828', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2626.038085', '-1098.655395', '69.366348', '262.287963', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.541992', '996.320190', '80.007812', '85.705802', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2626.125244', '-1112.618286', '67.853744', '253.555084', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2809.439941', '-1302.940429', '38.877544', '98.827209', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.535156', '1014.139099', '80.007812', '89.512435', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.539062', '1032.702880', '80.007812', '89.906364', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2809.445068', '-1324.765258', '33.826663', '89.301689', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.540039', '1050.959350', '80.007812', '77.041992', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.539794', '1069.312622', '80.007812', '87.145256', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.526123', '1087.394409', '80.007812', '79.236465', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2160.045654', '1066.881225', '80.007812', '269.008575', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2160.051513', '1048.628295', '80.007812', '272.322601', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2160.048339', '1030.209472', '80.007812', '266.591583', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2797.817382', '-1245.464843', '47.344585', '173.997848', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2776.025390', '-1245.460571', '49.520561', '189.951599', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2750.290039', '-1238.763183', '61.524539', '98.360427', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2750.129638', '-1222.340087', '64.601562', '89.620277', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2750.292480', '-1205.735839', '67.484375', '104.466773', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2233.181396', '-1159.872558', '25.890625', '89.354080', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2755.753906', '-1276.468994', '56.593750', '92.681663', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2351.948486', '-1170.493408', '28.066320', '5.935707', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2334.621093', '-1203.894531', '27.976562', '351.925109', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2756.117919', '-1302.495239', '53.093750', '87.613700', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2334.604980', '-1234.552124', '27.976562', '357.405212', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2334.665527', '-1266.020019', '27.969293', '358.025421', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2755.608642', '-1400.411743', '39.376365', '94.415199', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2249.881347', '-1238.813842', '25.898437', '3.617794', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2229.565429', '-1241.505859', '25.656250', '354.340332', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2209.717773', '-1240.140869', '24.480066', '354.415802', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2191.796386', '-1239.129882', '24.487878', '0.204630', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2662.800048', '-1238.036743', '55.565235', '86.664367', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2663.077392', '-1233.574218', '57.071487', '91.194152', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2663.011962', '-1229.259033', '58.300003', '101.782356', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2191.589355', '-1275.704223', '25.156250', '177.091674', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2662.654052', '-1224.778076', '59.462097', '82.238571', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2662.943847', '-1220.611572', '60.754638', '95.473640', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2207.912353', '-1280.924560', '25.120691', '177.142395', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2662.835693', '-1216.380371', '62.100509', '86.608406', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2662.806396', '-1211.768432', '63.505107', '90.703834', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2663.073974', '-1207.646484', '64.760864', '98.403198', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2230.115234', '-1280.167358', '25.628503', '180.139892', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2663.073486', '-1203.045410', '65.685409', '95.591949', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2250.250000', '-1280.146606', '25.476562', '182.895507', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2662.821289', '-1200.148925', '66.325347', '90.284011', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2153.783447', '-1243.698730', '25.367187', '353.304779', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.383056', '-1200.000732', '66.501235', '268.957855', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.378662', '-1203.053100', '65.729789', '268.844726', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2133.451416', '-1232.890502', '24.421875', '3.803539', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.381347', '-1207.627929', '64.800720', '269.123321', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.379882', '-1211.745117', '63.670501', '274.485748', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2110.893066', '-1244.292480', '25.851562', '357.874389', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.387695', '-1216.223266', '62.280109', '267.304779', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2090.748291', '-1235.074340', '26.019128', '357.438751', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.385009', '-1220.527832', '60.922420', '268.119354', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.373535', '-1224.561645', '59.650062', '287.163116', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2091.005371', '-1277.934814', '26.179687', '159.284820', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.381347', '-1229.236816', '58.356998', '266.176574', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2111.290771', '-1279.079711', '25.835937', '177.711914', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.384033', '-1233.413818', '57.133987', '267.219207', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2670.381591', '-1238.045532', '55.731758', '267.926025', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.339599', '-1238.018920', '55.998939', '88.241394', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2132.307617', '-1280.145019', '25.890625', '165.549484', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.324707', '-1233.468627', '57.393020', '88.126632', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.337646', '-1229.264770', '58.625274', '89.568946', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2150.241943', '-1285.143432', '24.526941', '164.083358', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.259277', '-1224.825317', '59.894260', '87.838562', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.341308', '-1220.471557', '61.204887', '87.763839', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.336181', '-1216.282470', '62.553112', '87.957801', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2148.526367', '-1319.988525', '26.073816', '338.455780', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.336669', '-1211.598632', '63.942436', '88.836166', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.276367', '-1207.642211', '65.063514', '87.389175', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2126.670410', '-1320.763793', '26.624059', '351.494903', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.337646', '-1203.242797', '66.010505', '87.264678', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2683.337890', '-1199.974609', '66.785003', '88.637695', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2100.883056', '-1321.727661', '25.953125', '356.346435', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.935791', '-1200.073730', '68.284713', '268.516479', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.644287', '-1202.941162', '67.543655', '267.173126', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.645019', '-1207.526245', '66.609680', '265.240509', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.643310', '-1211.829223', '65.475593', '266.694610', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.640625', '-1216.364135', '64.085800', '269.571472', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.646484', '-1220.511718', '62.737731', '267.493896', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.643310', '-1224.551025', '61.443653', '268.001770', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.639648', '-1229.260375', '60.157455', '269.792755', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.640380', '-1233.541625', '58.928070', '268.314880', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2690.643310', '-1238.048095', '57.531478', '267.819366', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.106445', '-1238.029296', '58.163257', '88.331199', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.043701', '-1233.462280', '59.547294', '88.912071', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.107666', '-1229.101318', '60.790260', '89.646339', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2699.974853', '-1224.756713', '61.938613', '89.659713', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.102294', '-1220.307006', '63.367973', '88.764244', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.057861', '-1216.399169', '64.707954', '88.252746', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.102539', '-1211.715576', '66.106552', '88.506019', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.107910', '-1207.604125', '67.241409', '89.029052', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.106445', '-1203.057617', '68.175231', '89.395942', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2700.021728', '-1200.204711', '68.931907', '88.064231', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2388.315917', '-1279.626586', '25.129104', '88.671173', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.825439', '-1238.124023', '59.546875', '265.855743', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2387.763427', '-1328.382812', '25.124164', '78.221481', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.406982', '-1233.557250', '61.092334', '271.370941', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.430175', '-1229.121459', '62.326744', '266.665618', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.406494', '-1224.763549', '63.607204', '268.410095', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2708.217529', '-1220.472534', '64.742187', '262.456237', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2389.625732', '-1346.109741', '25.076971', '89.089965', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.414550', '-1216.144287', '66.251609', '268.427520', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2383.428466', '-1366.284301', '24.491352', '91.840934', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.762451', '-1211.780883', '67.492187', '266.735382', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.405517', '-1207.580688', '68.772666', '269.493530', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.598632', '-1202.951660', '69.554687', '273.710021', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2324.395996', '-1281.070312', '27.982152', '185.690994', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2324.429199', '-1249.506958', '27.976562', '357.712707', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2707.407470', '-1200.192504', '70.481658', '269.982421', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2324.356689', '-1218.945434', '27.976562', '185.365097', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2433.712402', '-1275.033569', '24.756660', '271.955780', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2434.907226', '-1289.221191', '25.347854', '272.398773', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2434.192626', '-1303.324218', '24.981983', '275.124877', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2434.183593', '-1320.687866', '24.964433', '272.020507', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2439.697509', '-1338.828979', '24.101562', '265.855590', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2439.693115', '-1357.192993', '24.100706', '273.481719', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2468.372802', '-1366.596679', '28.828037', '178.535522', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2473.228515', '-1366.614135', '28.828020', '177.746398', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2476.407958', '-1366.592285', '28.834777', '178.341522', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2468.315185', '-1376.169555', '29.313102', '358.429534', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2473.112792', '-1376.167480', '29.313102', '358.980285', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2476.252685', '-1376.170410', '29.313102', '358.692077', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2487.348876', '-1366.304565', '29.313102', '178.513900', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2495.410888', '-1690.988159', '14.765625', '359.694824', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2487.315429', '-1376.170410', '29.313102', '351.566589', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2492.219970', '-1366.303222', '29.313102', '177.972991', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2492.144042', '-1376.165405', '29.313102', '357.975036', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2495.378417', '-1366.305053', '29.313102', '178.068405', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2495.332275', '-1376.166259', '29.313102', '358.014068', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2514.258544', '-1691.394653', '14.046036', '51.041328', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2470.372802', '-1295.540283', '30.233221', '277.556915', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2469.078857', '-1278.328857', '30.366352', '81.714492', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2522.901123', '-1679.398559', '15.496997', '86.469589', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2467.532470', '-1200.299926', '36.811664', '6.837327', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2524.539794', '-1658.797363', '15.493547', '87.144226', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2513.615966', '-1650.384643', '14.355666', '132.089309', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2498.455322', '-1642.674194', '13.782608', '170.891281', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2520.706787', '-1197.900390', '56.592128', '10.027954', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2486.640380', '-1644.661010', '14.077178', '178.165588', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2550.201904', '-1197.414428', '60.835449', '356.559692', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2469.729980', '-1646.458984', '13.780097', '176.538055', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2551.062011', '-1233.900512', '49.331832', '176.915725', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2459.500000', '-1691.487548', '13.545001', '1.049038', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2451.922851', '-1641.752563', '13.735733', '183.411407', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2529.676269', '-1243.421875', '43.971870', '180.323257', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2514.556640', '-1240.552001', '39.340587', '176.541351', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2492.103759', '-1239.115966', '37.905414', '172.432952', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2413.819824', '-1646.892089', '14.011916', '178.954498', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2408.946289', '-1674.797851', '14.375000', '0.462671', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2472.915527', '-1238.226684', '32.569477', '180.276260', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2384.775634', '-1675.449829', '14.915221', '3.336245', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2368.109863', '-1675.243774', '14.168166', '3.533354', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2393.142578', '-1646.138671', '13.905097', '179.489471', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2362.775634', '-1644.094848', '13.532545', '180.102798', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2385.395751', '-1711.756103', '14.242185', '182.976516', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2402.470214', '-1715.558837', '14.132810', '178.251007', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2468.302734', '-1391.710693', '29.313102', '179.438705', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2495.394531', '-1398.811157', '29.313102', '359.567932', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2327.012939', '-1681.898437', '14.929685', '271.619293', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2492.221435', '-1398.811157', '29.313102', '2.053570', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2326.723632', '-1716.803344', '14.237876', '182.740966', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2308.826660', '-1714.685668', '14.649595', '184.425857', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2487.398193', '-1398.815673', '29.313102', '0.633036', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2473.083740', '-1391.709716', '29.313102', '178.190399', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2476.270507', '-1391.595581', '29.313102', '357.992218', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2487.277832', '-1391.611694', '29.313102', '353.787017', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2492.123779', '-1391.710571', '29.313102', '179.782379', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-40.223419', '-2493.765869', '36.648437', '209.985366', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-36.075069', '-2490.802246', '36.648437', '213.048202', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-31.937671', '-2487.851318', '36.648437', '210.615158', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-28.010261', '-2485.048339', '36.648437', '209.900726', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-23.763576', '-2482.067138', '36.648437', '220.072967', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-18.179540', '-2493.346679', '36.648437', '127.041732', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2244.331787', '-1638.093383', '15.907405', '164.029174', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2257.083740', '-1644.110961', '15.523997', '170.232894', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2282.220947', '-1641.376098', '15.889786', '179.486404', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2306.895019', '-1678.965576', '14.001155', '357.533111', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2165.998046', '-1671.270019', '15.073292', '227.103012', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('315.745788', '-1769.540893', '4.624048', '182.736892', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('305.442749', '-1770.461791', '4.538516', '180.463531', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('295.339935', '-1764.197875', '4.803699', '186.572326', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('263.932342', '-1765.557983', '4.756594', '193.858673', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('229.614624', '-1744.806640', '4.721489', '12.331420', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('217.578903', '-1748.776123', '4.632884', '7.595407', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('192.769424', '-1747.445800', '4.305160', '4.485894', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('206.914001', '-1768.982666', '4.369215', '188.781173', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('192.788787', '-1769.500488', '4.314711', '193.316833', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('168.367950', '-1768.510375', '4.485690', '183.964630', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('893.711730', '-1635.800781', '14.929685', '177.273788', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('865.134582', '-1633.953857', '14.929685', '180.769241', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('850.770812', '-1686.479003', '14.940303', '267.000335', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('846.823852', '-1717.255493', '14.929685', '273.581237', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('936.832275', '-1612.817016', '14.939332', '176.323348', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('964.831848', '-1612.704223', '14.942789', '171.364700', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('987.391601', '-1624.805908', '14.929685', '90.614006', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('987.260375', '-1704.285400', '14.929685', '88.872154', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('280.882720', '-1767.172119', '4.546875', '186.362991', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('653.490295', '-1713.990844', '14.764795', '87.203430', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('652.557434', '-1694.084716', '14.556059', '85.589996', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('657.129211', '-1652.806762', '15.406250', '85.978233', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('656.046142', '-1635.970458', '15.861745', '176.786483', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('653.136413', '-1619.828125', '15.000000', '93.446815', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('660.484008', '-1599.748413', '15.000000', '2.319504', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('693.005187', '-1602.669921', '15.046875', '357.436767', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('693.649658', '-1705.808715', '3.819482', '270.087738', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('694.599609', '-1690.634155', '4.346120', '356.606201', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('693.858032', '-1645.625854', '4.093750', '260.637786', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('697.385192', '-1626.967163', '3.749170', '272.793609', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('766.818481', '-1605.842651', '13.803855', '86.797744', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('767.981628', '-1655.851806', '5.609375', '92.712097', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('769.252136', '-1726.370361', '13.432060', '176.047393', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('797.340515', '-1729.274536', '13.546875', '266.319946', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('794.080749', '-1707.531372', '14.038230', '266.968444', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('794.899230', '-1691.537597', '14.463310', '356.018127', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('904.095214', '-1512.943115', '14.213112', '268.009368', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('877.343566', '-1515.002807', '14.344884', '180.438796', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('849.988220', '-1519.964111', '14.352019', '268.640289', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('790.919189', '-1661.245971', '13.484622', '178.920791', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('822.331665', '-1505.408569', '14.396209', '356.241821', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('900.367919', '-1471.137329', '14.349819', '263.985839', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('900.752197', '-1447.354492', '14.316850', '274.510253', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('880.159179', '-1424.417358', '14.488409', '5.666037', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('852.417541', '-1422.928588', '14.140327', '3.111181', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('824.575744', '-1424.101440', '14.498213', '358.894470', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('841.288391', '-1471.452148', '14.269207', '182.775238', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('813.423828', '-1456.607421', '14.097978', '86.307220', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('784.942810', '-1435.960083', '13.546875', '269.911010', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('782.900695', '-1464.403930', '13.546875', '269.233642', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('771.223205', '-1510.757812', '13.546875', '252.256256', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('761.169494', '-1564.077270', '13.928892', '261.981445', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('738.930847', '-1418.279174', '13.523435', '4.205284', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('761.058349', '-1508.180664', '13.921875', '88.232383', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('739.084716', '-1429.485107', '13.523435', '184.676269', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('725.645935', '-1440.349487', '13.531820', '8.156055', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('725.550964', '-1450.941528', '17.695312', '4.315248', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('718.563293', '-1476.549316', '5.468750', '176.336318', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('732.722167', '-1476.722534', '5.468750', '176.865295', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('685.275451', '-1421.805419', '14.753223', '6.418354', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('675.490173', '-1430.390502', '14.851560', '272.634002', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('683.549438', '-1435.659423', '14.851560', '182.399566', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('662.801025', '-1440.440185', '14.851560', '264.461212', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('657.330017', '-1433.816284', '14.851560', '1.517492', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('648.700744', '-1442.608520', '14.677768', '96.433868', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('662.536010', '-1466.755737', '14.851560', '274.626983', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('662.542175', '-1487.585571', '14.851560', '269.633514', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('657.328369', '-1481.070190', '14.851560', '2.577543', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('648.394348', '-1489.661376', '14.815546', '93.628982', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('648.751220', '-1536.704101', '14.956846', '94.408905', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('657.304016', '-1528.216796', '14.851560', '6.131618', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('662.599365', '-1513.947387', '14.851560', '269.064361', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('662.571533', '-1534.657104', '14.851560', '272.590026', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2157.088867', '-1708.968505', '15.085935', '0.635505', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2155.816894', '-1698.609985', '15.085935', '183.656616', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2139.079345', '-1697.611450', '15.085935', '185.891128', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2140.512939', '-1708.207397', '15.085935', '355.743530', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2128.138671', '-1687.892700', '15.085935', '3.000679', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2144.605224', '-1688.733154', '15.085935', '7.966638', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2178.436767', '-1660.358520', '14.970252', '234.335678', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2163.697265', '-1661.104492', '15.085935', '41.307964', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2151.265869', '-1672.128417', '15.085935', '38.072174', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2143.799804', '-1662.901733', '15.085935', '232.675689', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2156.508789', '-1652.184204', '15.078441', '222.496124', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2141.398925', '-1652.706298', '15.085935', '43.050785', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2129.010742', '-1663.702636', '15.085935', '52.468200', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2151.535644', '-1718.498413', '15.085935', '184.612197', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2168.007080', '-1719.020751', '15.085493', '179.839279', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2185.677978', '-1608.255493', '14.355010', '245.380004', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2192.093505', '-1592.959350', '14.351560', '247.267669', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2178.963867', '-1600.164794', '14.345871', '69.415344', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2172.275390', '-1615.324829', '14.282869', '71.167640', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2158.163818', '-1611.499633', '14.351244', '148.685623', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2142.897705', '-1605.309692', '14.351560', '162.210693', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2151.538818', '-1598.253417', '14.345566', '342.526519', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2136.082763', '-1591.901855', '14.351560', '344.688629', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2165.582519', '-1590.707275', '14.346316', '160.308197', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2150.332519', '-1584.192749', '14.336046', '166.079010', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2068.520751', '-1588.848632', '13.490900', '266.993591', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2075.944580', '-1588.265136', '13.490618', '2.566128', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2065.406738', '-1583.458251', '13.481279', '187.821289', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2073.081542', '-1583.131591', '13.474348', '86.989402', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2067.133544', '-1562.034790', '13.428047', '275.233245', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2066.804687', '-1554.186279', '13.434921', '177.352325', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2072.170166', '-1551.292236', '13.423483', '91.238426', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2072.484863', '-1559.123291', '13.409405', '357.660583', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2067.956054', '-1628.885131', '13.876155', '267.965759', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2067.667724', '-1643.799560', '14.136316', '273.779144', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2066.837646', '-1656.574462', '14.132810', '276.731658', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2065.265380', '-1703.496215', '14.148435', '272.420867', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2066.350585', '-1717.168579', '14.136316', '274.549438', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2067.155761', '-1731.690795', '14.206626', '269.259948', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2018.141845', '-1703.133911', '14.234375', '84.046218', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2016.098266', '-1716.925659', '14.125000', '88.673019', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2015.256347', '-1732.790771', '14.234375', '94.396736', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2013.205688', '-1656.636108', '13.805846', '89.838813', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2016.441284', '-1641.526000', '14.112876', '94.093544', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2017.683471', '-1629.998168', '13.712096', '93.045516', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2011.517089', '-1594.369750', '13.583324', '211.575271', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2002.531127', '-1594.040771', '13.577486', '219.365127', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1986.658447', '-1605.134277', '13.531737', '227.788146', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1973.108032', '-1559.943969', '13.639566', '215.708587', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1958.664794', '-1560.496704', '13.594473', '217.677459', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1976.027832', '-1633.944335', '16.211059', '88.657012', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1972.219360', '-1633.834472', '15.968750', '197.161880', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1967.388549', '-1633.812377', '15.968750', '179.063705', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1976.110961', '-1633.977539', '18.568988', '88.763580', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1972.335449', '-1634.011352', '18.568988', '197.444763', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1967.464843', '-1633.814208', '18.568988', '179.541137', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1973.444946', '-1654.816528', '15.968750', '191.366760', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1969.473632', '-1654.769042', '15.968750', '184.079345', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1970.037109', '-1671.607543', '15.968750', '192.360839', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1974.888916', '-1671.316406', '15.968750', '181.471405', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1978.662475', '-1671.412475', '16.187622', '88.260704', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1978.666137', '-1671.444091', '18.545551', '89.134857', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1974.920288', '-1671.318725', '18.545551', '187.946395', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1970.037231', '-1671.298217', '18.545551', '187.425659', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1981.170898', '-1682.879272', '17.053783', '270.287139', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1973.332641', '-1705.311889', '15.968750', '188.475891', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1969.377807', '-1705.251220', '15.968750', '183.670562', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1980.573120', '-1719.110595', '17.030532', '272.454528', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1910.438720', '-1597.512695', '14.306243', '180.744155', '3', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1863.866210', '-1597.473144', '14.306243', '178.865631', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1867.739990', '-1979.542602', '13.546875', '8.722916', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1865.966552', '-1979.547729', '13.546875', '2.695733', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1877.428222', '-1982.512451', '13.546875', '272.585205', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1867.790649', '-1985.501586', '13.546875', '182.188491', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1866.009521', '-1985.672729', '13.546875', '182.212860', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1858.680786', '-1982.618286', '13.546875', '82.432304', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1888.827514', '-1982.554687', '13.546875', '88.891304', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1898.525512', '-1979.295654', '13.546875', '358.725891', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1900.207641', '-1979.514038', '13.546875', '4.560636', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1907.389038', '-1982.453735', '13.546875', '268.156494', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1900.256225', '-1985.502075', '13.546875', '178.393539', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1898.505615', '-1985.846923', '13.546875', '180.413558', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1888.821166', '-2000.961791', '13.546875', '84.406257', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1898.493164', '-2004.008422', '13.546875', '177.725906', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1900.286865', '-2003.966796', '13.546875', '191.342453', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1907.385375', '-2000.923217', '13.546875', '270.572509', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1900.023559', '-1997.927246', '13.546875', '357.106201', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1898.237426', '-1997.957885', '13.546875', '4.104077', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1916.814697', '-1981.924316', '13.546875', '9.398708', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1913.808471', '-1991.659301', '13.546875', '87.140480', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1913.852416', '-1993.471557', '13.546875', '92.831672', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1916.880737', '-2000.489501', '13.546875', '179.480346', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1919.825561', '-1993.326782', '13.546875', '275.158386', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1919.833984', '-1991.451538', '13.546875', '273.219482', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1866.013305', '-1997.866699', '13.546875', '358.993225', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1867.830200', '-1997.765380', '13.546875', '358.421691', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1877.425170', '-2000.832397', '13.546875', '269.926147', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1867.927246', '-2004.036376', '13.546875', '181.013565', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1865.857666', '-2003.986694', '13.546875', '180.627151', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1858.866333', '-2001.050292', '13.546875', '93.415588', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1916.760498', '-2009.900756', '13.546875', '356.751953', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1913.534545', '-2019.704101', '13.546875', '88.446662', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1913.782958', '-2021.302612', '13.546875', '88.850959', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1916.903686', '-2028.513549', '13.546875', '180.283935', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1919.868652', '-2021.525268', '13.546875', '275.379211', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1919.862060', '-2019.453369', '13.546875', '262.513763', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1898.442504', '-2009.955078', '13.546875', '1.020099', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1895.432128', '-2019.520996', '13.546875', '95.432670', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1895.426879', '-2021.421752', '13.546875', '91.612503', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1898.482910', '-2028.518066', '13.546875', '184.532592', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1901.511108', '-2021.603515', '13.546875', '268.923370', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1901.432006', '-2019.507568', '13.546875', '265.727478', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1852.566528', '-1991.981689', '13.546875', '266.383056', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1852.374755', '-1989.983154', '13.546875', '269.294525', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1849.455200', '-1982.982788', '13.546875', '0.484162', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1846.432128', '-1990.201416', '13.546875', '84.343750', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1846.429199', '-1991.993164', '13.546875', '87.933563', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1849.475463', '-2001.672485', '13.546875', '178.943893', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1907.801391', '-2034.925048', '13.546875', '356.835479', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1905.735839', '-2034.974121', '13.546875', '0.772023', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1898.889282', '-2037.963378', '13.546875', '88.292304', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1906.173339', '-2040.948974', '13.546875', '182.081314', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1908.280273', '-2040.957519', '13.546875', '178.064758', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1917.455200', '-2037.791015', '13.546875', '271.395812', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1868.445922', '-2037.914184', '13.546875', '268.273101', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1858.699096', '-2034.944091', '13.546875', '355.421875', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1856.936645', '-2034.977661', '13.546875', '355.188476', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1849.890380', '-2037.880493', '13.546875', '91.338119', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1856.787109', '-2040.952758', '13.546875', '179.024810', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1858.852416', '-2040.950927', '13.546875', '180.183456', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1867.854003', '-2028.516967', '13.546875', '178.043838', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1870.874755', '-2021.384155', '13.546875', '267.449768', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1870.858154', '-2019.192626', '13.546875', '266.172576', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1867.831909', '-2009.957275', '13.546875', '359.903076', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1864.850341', '-2019.687500', '13.546875', '88.188240', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1864.879394', '-2021.384887', '13.546875', '91.602424', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1852.447143', '-2021.374877', '13.546875', '268.734558', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1852.407592', '-2019.562744', '13.546875', '269.083557', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1849.419677', '-2009.956176', '13.546875', '8.329821', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1846.435058', '-2019.576293', '13.546875', '109.008110', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1846.431152', '-2021.299072', '13.546875', '95.138160', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1849.479614', '-2028.523437', '13.546875', '176.912109', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1835.714233', '-2005.586914', '13.546875', '186.606353', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1838.808715', '-1995.978759', '13.546875', '268.905456', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1838.808349', '-1993.920898', '13.546875', '273.106231', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1835.809692', '-1987.025024', '13.546875', '358.163452', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1832.797973', '-1994.221679', '13.546875', '86.327957', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1832.609008', '-1996.134033', '13.546875', '79.601219', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1814.379638', '-1993.922973', '13.554393', '105.885444', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1814.377197', '-1996.144287', '13.554393', '101.573272', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1817.400878', '-2005.585571', '13.554393', '176.959777', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1820.382080', '-1996.058593', '13.554393', '269.417144', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1820.360107', '-1993.959716', '13.554393', '265.107910', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1817.468994', '-1987.027587', '13.554393', '358.495056', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1816.780151', '-1977.572265', '13.546875', '87.613044', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1826.260009', '-1980.509521', '13.546875', '177.459930', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1828.506835', '-1980.539428', '13.546875', '175.653091', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1835.347290', '-1977.494506', '13.546875', '261.362213', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1828.118408', '-1974.591918', '13.546875', '356.092254', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1826.529418', '-1974.593017', '13.546875', '355.295349', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1851.916015', '-2070.357421', '15.481237', '358.442291', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1873.555175', '-2070.583984', '15.497084', '358.969207', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1895.412475', '-2068.758300', '15.668891', '0.932092', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1894.366943', '-2133.367675', '15.466324', '177.285003', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1872.531127', '-2133.003173', '15.481949', '180.637359', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1851.772216', '-2134.936523', '15.388199', '186.593429', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1667.504394', '-2107.038818', '14.072273', '178.163131', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1673.807739', '-2122.405517', '14.146014', '309.217590', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1695.481445', '-2125.736816', '13.810074', '1.216757', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1715.167236', '-2125.348876', '14.056648', '0.079129', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1734.657836', '-2130.259765', '14.021014', '4.719826', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1761.047729', '-2125.314941', '14.056648', '354.920593', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1781.923217', '-2126.406494', '14.067889', '357.546966', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1804.124755', '-2124.802246', '13.942373', '5.741631', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1801.993530', '-2099.040039', '14.021014', '178.979888', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1781.473022', '-2101.371826', '14.056648', '176.743148', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1762.562744', '-2102.084228', '13.856949', '174.916687', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1734.146972', '-2098.079345', '14.036639', '178.237854', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1711.578979', '-2101.339843', '14.021014', '184.132720', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1684.797607', '-2098.259521', '13.834321', '175.959197', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2235.640625', '-1882.139770', '14.234375', '268.170349', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2241.008789', '-1882.119140', '14.234375', '175.118286', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2242.555175', '-1882.109619', '14.234375', '180.027984', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2248.183593', '-1882.010498', '14.234375', '88.980400', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2260.043701', '-1882.063110', '14.234375', '88.416481', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2251.104980', '-1882.026977', '14.234375', '265.526428', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2268.577392', '-1882.116943', '14.234375', '180.962265', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2269.894775', '-1882.112548', '14.234375', '179.176452', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2275.497558', '-1882.224731', '14.234375', '87.377738', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2287.335449', '-1882.062133', '14.234375', '88.253654', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2290.245849', '-1882.010253', '14.234375', '273.465667', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2295.782470', '-1882.120483', '14.234375', '185.088867', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2297.135253', '-1882.372070', '14.234375', '178.028900', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2302.800781', '-1882.056640', '14.234375', '88.871154', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2284.579345', '-1906.495605', '14.929685', '0.254108', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2261.236328', '-1906.657592', '14.937500', '355.965759', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2238.187011', '-1906.731689', '14.937500', '358.376831', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2635.695312', '-2012.870971', '14.144330', '293.685913', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2637.101806', '-1991.819335', '14.324020', '216.533569', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2650.598388', '-2021.811401', '14.176628', '93.935752', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2652.772949', '-1989.524536', '13.998847', '186.558868', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2672.817138', '-1989.572998', '14.324020', '184.053100', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2696.318115', '-1990.531005', '14.222851', '176.934631', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2695.271972', '-2020.452148', '14.022282', '356.274993', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2673.376708', '-2020.191650', '14.168166', '1.520969', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2437.855468', '-2020.747070', '13.902541', '357.181854', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2465.367675', '-2020.692138', '14.124161', '357.743286', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2486.509033', '-2021.439453', '13.998847', '2.432121', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2507.739501', '-2020.944458', '14.210101', '356.825714', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2522.252197', '-2018.651367', '14.074416', '56.987895', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2524.192626', '-1998.290405', '14.113080', '136.312988', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2508.151611', '-1998.469360', '13.902541', '174.561553', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2483.409423', '-1995.445190', '13.834321', '178.381286', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2465.153320', '-1995.854248', '14.019330', '177.556304', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2220.367919', '-2400.026123', '32.582267', '228.386230', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2239.288330', '-2423.901123', '32.707267', '226.908950', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2214.021728', '-2451.757324', '31.816270', '52.792888', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2224.536865', '-2482.647460', '31.816272', '318.309844', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2173.834228', '-2481.647949', '31.816272', '146.434234', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2193.036132', '-2510.299560', '31.816272', '318.393402', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2180.783935', '-2519.757568', '31.816270', '316.254821', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2161.268066', '-2535.559814', '31.816270', '325.145141', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2132.513916', '-2510.914062', '31.816272', '235.850097', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2101.120605', '-2532.544921', '31.066806', '47.984668', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2087.244140', '-2510.656738', '31.066806', '54.493999', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2069.433837', '-2495.105224', '31.066806', '63.379512', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2058.286132', '-2503.584472', '31.066806', '46.341201', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2045.218017', '-2522.415527', '31.066806', '134.187576', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2031.222412', '-2538.980712', '31.066806', '222.270568', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2042.591674', '-2558.860839', '30.841997', '118.119743', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2053.043212', '-2544.673583', '31.066806', '139.656997', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2067.751708', '-2536.949462', '30.841997', '150.474319', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2081.961181', '-2548.141845', '30.841997', '315.757537', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2068.873291', '-2561.605957', '31.066806', '47.778614', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2075.252197', '-2526.271972', '31.066806', '227.327133', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2655.245605', '985.885742', '64.991287', '356.003936', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2711.080322', '967.571533', '54.460937', '7.343658', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2720.968017', '924.089782', '67.593750', '89.121147', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2670.903808', '927.536071', '79.703125', '2.436543', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2662.010498', '876.434204', '79.773796', '1.165331', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2640.956542', '935.614562', '71.953125', '176.371704', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2706.638671', '864.554626', '70.703125', '356.678161', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2905.001220', '1178.876953', '13.664060', '271.783569', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2905.155761', '1171.670410', '13.664060', '279.542114', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2905.066894', '1164.805541', '13.664060', '277.491851', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2905.102783', '1154.845825', '13.664060', '272.111328', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2904.602783', '1118.819335', '27.070312', '280.938262', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2904.709472', '1111.657104', '27.070312', '270.159362', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2904.371093', '1100.965454', '27.070312', '269.138641', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2900.615478', '1080.931152', '32.132812', '265.844787', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2900.608154', '1073.827026', '32.132812', '268.906433', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2900.617431', '1067.110595', '32.132812', '266.278869', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2900.328613', '1057.099731', '32.132812', '263.141998', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2901.577392', '1033.702148', '36.828125', '286.194702', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2899.060546', '1026.799682', '36.828125', '292.302764', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2895.463623', '1016.921203', '36.828125', '290.610168', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2887.989746', '1002.005859', '40.718750', '299.658905', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2884.203857', '995.396057', '40.718750', '291.063690', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2880.858886', '989.766540', '40.718750', '308.263183', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2876.015869', '981.145812', '40.725959', '294.197448', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2860.567382', '963.486511', '44.054687', '295.996734', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2857.525390', '956.979309', '44.054687', '290.822479', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2853.140136', '947.577697', '44.054687', '298.516052', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2845.201416', '928.275878', '44.054687', '274.196655', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2844.548095', '920.877746', '44.054687', '276.470062', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2843.989013', '914.439941', '44.054687', '272.966613', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2843.121826', '904.546142', '44.054687', '276.799011', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2840.121582', '884.418945', '44.054687', '258.980163', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2840.057373', '877.296447', '44.054687', '273.225891', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2840.128662', '866.930847', '44.054687', '270.977600', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2856.583740', '841.889770', '39.687332', '242.390213', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2860.059082', '835.583984', '39.672569', '243.333633', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2863.604003', '829.715820', '39.547130', '247.474380', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2868.673339', '820.929260', '39.447650', '237.891006', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2880.656494', '797.536071', '35.174690', '257.887512', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2881.260253', '790.444519', '35.150562', '259.347412', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2882.070556', '779.931945', '35.117023', '269.377136', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2884.592773', '750.637634', '29.216014', '273.378479', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2884.064697', '743.570739', '29.229312', '275.570953', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2883.463134', '736.745239', '29.222688', '277.010162', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2882.248779', '726.730957', '29.200157', '281.978881', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2872.435058', '697.734680', '23.462587', '293.210144', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2869.383544', '691.163879', '23.462394', '293.766113', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2864.913574', '681.594726', '23.462028', '290.228057', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.706298', '218.615951', '7.859375', '88.200057', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.694824', '212.231719', '10.054685', '3.874794', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.697753', '200.539611', '7.859375', '89.689590', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.891357', '194.459243', '10.054685', '177.427078', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2789.331054', '183.578201', '10.062500', '88.962966', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.018554', '197.928283', '7.203125', '2.665940', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2678.260253', '200.478607', '7.195312', '86.738128', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2671.975341', '200.332580', '5.000000', '2.700956', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2660.631103', '200.496139', '7.195312', '271.013214', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2654.338623', '200.341033', '5.000000', '357.423675', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2634.992187', '239.701400', '4.503869', '91.543304', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2631.072509', '252.552124', '7.187500', '91.243354', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2634.688964', '261.072448', '4.705916', '82.788589', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2628.616699', '267.462799', '7.195312', '86.287307', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2632.112792', '274.334014', '4.334764', '86.970664', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2687.985351', '137.112884', '4.342576', '89.587417', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2690.569580', '123.867492', '4.709815', '90.097061', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2686.941406', '115.275535', '7.195312', '88.086082', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2690.862304', '102.242065', '4.514914', '86.800354', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.414062', '96.218544', '7.203125', '178.011489', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.779785', '74.836112', '7.203125', '358.192474', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2690.569824', '64.468299', '4.709643', '82.915657', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.555419', '56.985744', '7.203125', '180.000015', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2619.379638', '57.560214', '4.335937', '271.707244', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2619.397705', '67.934013', '4.516368', '263.507995', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.267822', '71.564537', '4.335937', '270.753540', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.935302', '96.777717', '5.000000', '274.770446', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.887695', '103.271263', '7.203125', '180.945022', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.873046', '114.712394', '5.000000', '275.120300', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2621.014892', '120.915115', '7.203125', '344.304229', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2623.341064', '131.705352', '7.203125', '269.989044', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2621.869140', '168.466156', '7.195312', '268.853973', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2627.760009', '168.806228', '5.000000', '176.232452', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2639.510498', '168.425628', '7.195312', '86.498741', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.906738', '143.173873', '10.054685', '177.750823', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.916748', '130.708175', '7.859375', '90.549591', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2790.353515', '126.698181', '7.201951', '86.498420', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2793.241455', '110.823493', '7.187500', '83.660110', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.799804', '103.697113', '10.054685', '0.000000', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.692626', '92.053291', '7.859375', '86.689361', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2792.927734', '84.997665', '7.570041', '90.144844', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.938476', '77.495643', '10.054685', '176.939758', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2790.352294', '69.709358', '7.201951', '88.002265', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2793.353759', '21.112649', '7.187500', '86.711997', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2793.220947', '11.162955', '7.379950', '88.052772', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2790.394287', '7.039267', '7.195312', '92.090293', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.688720', '-17.816661', '7.859375', '85.997787', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.972412', '-24.291246', '10.054685', '359.346282', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.694335', '-35.771442', '7.859375', '94.807342', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.588867', '-42.000179', '10.054685', '177.043670', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2789.273925', '-52.762153', '10.062500', '90.648750', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2790.369384', '-82.708625', '7.195312', '88.859176', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.790771', '-94.881935', '10.054685', '182.654403', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.687011', '-107.325073', '7.859375', '89.736755', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2790.346679', '-111.088699', '7.201951', '91.356704', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2793.251953', '-127.104202', '7.187500', '92.282485', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.766601', '-134.358779', '10.054685', '2.321022', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.719726', '-146.067001', '7.859375', '89.041412', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2792.922607', '-153.252670', '7.573616', '94.934829', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2791.986328', '-160.570297', '10.054685', '180.885818', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2790.344238', '-168.362991', '7.201951', '91.688705', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2789.271484', '-181.323638', '10.062500', '88.424125', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2724.573486', '-191.255722', '4.335937', '270.947448', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2723.117919', '-178.975006', '7.203125', '0.337460', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2723.225830', '-166.360031', '5.000000', '269.084899', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2724.571777', '-162.587844', '4.342576', '268.725219', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2721.679931', '-146.747009', '4.335937', '269.575775', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2722.894042', '-139.498382', '7.203125', '181.752014', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2723.239013', '-127.898773', '5.000000', '275.205596', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2721.989746', '-120.823921', '4.713047', '271.620330', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2723.320068', '-113.258689', '7.203125', '351.446044', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2724.577392', '-105.381477', '4.342576', '269.378326', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2725.190185', '-92.235282', '7.203125', '258.004760', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2724.704345', '-58.188808', '4.342576', '270.622558', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2722.020751', '-44.535079', '4.707430', '271.128570', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2725.543945', '-36.375476', '7.195312', '276.069702', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2721.726074', '-23.404993', '4.516530', '271.230194', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2723.268554', '-17.214000', '7.203125', '358.489105', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2722.819824', '4.383178', '7.203125', '176.485473', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2721.994384', '14.571138', '4.694495', '276.502807', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2723.336425', '22.010023', '7.203125', '353.409912', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2690.254150', '-89.502296', '4.335937', '87.607666', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.428466', '-101.712379', '7.203125', '180.118698', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.371337', '-114.352416', '5.000000', '86.291595', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2688.013183', '-118.159637', '4.342576', '92.162567', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2690.892333', '-133.914337', '4.335937', '91.947593', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.248291', '-141.187454', '7.203125', '7.774000', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.340087', '-152.753799', '5.000000', '90.672782', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2690.863037', '-159.694229', '4.335937', '89.449798', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2689.452880', '-167.389877', '7.203125', '179.719528', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2687.994384', '-175.050643', '4.342576', '89.544944', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2686.922119', '-188.404785', '7.203125', '83.793617', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.245849', '-198.427185', '4.335937', '276.727905', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2621.013427', '-185.783981', '7.203125', '356.800720', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.808105', '-172.865570', '5.000000', '270.069030', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.149414', '-169.502929', '4.342576', '269.775085', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2619.352294', '-153.589385', '4.335937', '270.304260', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.769287', '-146.321426', '7.203125', '181.193542', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.914794', '-134.333984', '5.000000', '270.578491', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2619.079101', '-127.537292', '4.335937', '268.818634', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.735351', '-120.104843', '7.203125', '2.530565', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.260986', '-112.090103', '4.342576', '270.278259', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2623.274658', '-99.172080', '7.203125', '266.897216', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2590.635253', '-95.535789', '4.320611', '95.678779', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2590.629882', '-106.255180', '4.326057', '103.351699', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2576.202392', '-118.831130', '6.605928', '182.566146', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2558.608154', '-118.825790', '10.993086', '176.987792', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.349853', '-118.963012', '16.232164', '172.770767', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2524.210693', '-118.828651', '21.777553', '175.599655', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2510.773925', '-109.623146', '25.617187', '278.595520', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2558.698242', '-79.877861', '10.879640', '12.602850', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2576.580810', '-82.804275', '6.655725', '355.926666', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2590.633789', '-158.708740', '4.324635', '92.103858', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2590.630615', '-186.178298', '4.324748', '96.454620', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2576.644287', '-198.948837', '6.626585', '177.094970', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2558.609375', '-198.925460', '10.988161', '182.422302', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.621093', '-198.896362', '16.227401', '163.002426', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2524.437011', '-198.907867', '21.741483', '176.798187', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2514.510253', '-189.519271', '25.146617', '273.720428', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2524.333251', '-145.758590', '21.846189', '0.759760', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2515.187500', '-171.110427', '25.070905', '268.504974', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2515.272705', '-154.006546', '25.061380', '262.906585', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.472412', '-145.761596', '15.680868', '359.249298', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2558.644775', '-145.764801', '9.447829', '359.305633', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2576.352539', '-145.764923', '6.645002', '359.362335', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2454.696777', '-135.792495', '26.186971', '93.001441', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2642.073486', '727.927612', '27.960937', '176.572738', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2661.694335', '722.150146', '27.961277', '183.854339', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2665.452880', '722.149353', '27.961267', '187.006317', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2678.190429', '722.150756', '28.609697', '190.042175', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2686.182128', '722.753479', '32.213626', '183.703857', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2706.823730', '722.755187', '37.539062', '177.201431', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2710.571289', '722.758056', '39.718750', '182.686279', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2723.321044', '722.757324', '41.265953', '180.405914', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2731.449951', '723.597656', '41.273437', '180.403015', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.406005', '746.466796', '49.230964', '87.707054', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.476074', '755.182312', '52.804679', '95.407020', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.429443', '758.930603', '54.382812', '85.165267', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.415039', '771.563903', '54.382812', '89.017997', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.419189', '788.997375', '54.382812', '89.622589', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.418457', '797.768798', '53.259147', '89.986999', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.425781', '801.451843', '53.062500', '93.124534', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2709.693847', '803.179382', '49.976562', '353.044281', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2698.756835', '803.184143', '49.970275', '359.780609', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2687.964355', '803.187500', '49.976562', '355.290679', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2677.162597', '803.184143', '49.976562', '5.228169', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2670.408691', '803.189208', '49.976562', '5.336524', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2660.059082', '803.188537', '49.976562', '353.367370', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2645.592285', '803.227050', '49.976562', '356.304840', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2621.578613', '802.707336', '49.984375', '278.616149', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2621.565917', '790.806701', '48.565387', '265.864257', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.419189', '782.810485', '44.859375', '275.125823', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.302490', '772.349243', '41.345390', '272.258819', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.100585', '765.436035', '36.835937', '279.337341', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.418212', '757.817321', '35.328125', '271.795196', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2622.318603', '749.814514', '31.421875', '273.919799', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2625.383300', '733.242919', '28.023448', '287.995300', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2738.853027', '866.401794', '65.119598', '92.138015', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2736.979980', '846.540954', '59.272781', '87.868812', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2737.941650', '836.895874', '56.270812', '90.085464', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2737.243164', '822.892211', '53.706111', '178.928436', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2726.906982', '822.896545', '53.707191', '172.476364', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2700.466552', '820.400329', '49.984375', '180.132720', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2685.088867', '820.413940', '49.984375', '184.233047', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2667.066162', '820.217285', '49.984375', '173.230377', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2652.631591', '820.216613', '49.984375', '175.748336', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2641.829101', '820.219543', '49.984375', '176.521759', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2618.616455', '830.781982', '49.984375', '268.180023', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2553.988525', '718.926635', '27.945312', '183.239257', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2581.272460', '718.933715', '27.945312', '182.737609', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2594.407226', '733.223083', '28.241851', '89.396461', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2594.355712', '750.843261', '33.701087', '93.705741', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2594.423828', '768.129150', '40.023597', '86.955253', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2594.298095', '785.112365', '46.221817', '87.568870', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2586.095703', '794.280578', '49.437683', '1.110473', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2569.071533', '794.347351', '49.446731', '2.449203', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2550.721679', '794.273498', '49.436721', '14.042819', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.143798', '785.356079', '46.236946', '276.013397', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2540.986083', '768.041076', '40.011123', '270.315063', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.079833', '750.994262', '33.712684', '275.198638', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.043457', '733.169433', '28.121986', '269.411773', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2594.788085', '830.848937', '49.984375', '94.938011', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2593.796142', '845.213684', '50.622726', '97.982261', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2592.833496', '854.977416', '53.601963', '87.728347', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2593.522949', '874.836242', '58.921875', '88.464408', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2593.380126', '882.964233', '63.250000', '85.960479', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2583.955322', '896.423645', '64.984375', '2.136250', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2573.150390', '896.439636', '64.984375', '4.864457', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2566.471191', '896.741394', '64.984375', '354.730468', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2556.034912', '896.742858', '64.984375', '2.985635', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.725341', '896.959228', '64.984375', '2.538367', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2540.109375', '883.219482', '63.250000', '269.084075', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2539.892822', '874.856140', '58.921875', '271.577392', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2540.586181', '855.186950', '53.179687', '280.150054', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2539.624267', '845.261047', '50.626247', '281.284027', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2538.606201', '830.332641', '49.984375', '265.793548', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2536.975585', '929.698242', '65.023223', '275.745666', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2542.385498', '942.890808', '64.000000', '265.004760', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2542.397949', '951.195129', '65.505256', '266.946624', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2542.401123', '967.582153', '73.538398', '271.339508', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.561035', '975.631896', '77.235801', '268.891540', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2541.066406', '987.863525', '78.289062', '278.531646', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2553.969970', '992.405090', '78.273437', '357.656555', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2564.366943', '992.356079', '78.273437', '5.104877', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2573.756591', '992.352966', '78.273437', '6.689938', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2584.188720', '992.491821', '78.273437', '6.729135', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2596.748535', '986.079589', '78.273437', '102.132331', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2597.426513', '979.673706', '78.273437', '87.313568', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2597.429443', '968.947021', '78.284141', '87.655448', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2591.341552', '960.696044', '78.453125', '85.052909', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2591.281250', '944.223144', '70.429687', '94.135162', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2591.353515', '935.798400', '68.929687', '82.099800', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2591.279785', '927.711730', '65.015625', '86.209640', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2580.792724', '919.984985', '64.984375', '185.723144', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2570.023681', '920.279174', '64.984375', '179.216140', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2562.394042', '920.277832', '64.984375', '180.403976', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2551.846679', '920.275573', '64.984375', '179.752120', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2545.407470', '920.244018', '64.976562', '183.274841', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2574.133544', '1151.963134', '55.726562', '156.815261', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2563.004882', '1148.924438', '55.726562', '160.151962', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2549.145996', '1145.634277', '55.726562', '166.193161', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2534.370117', '1143.659912', '55.726562', '169.308410', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2523.789794', '1142.582885', '55.726562', '175.095504', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2517.072021', '1142.311157', '55.726562', '175.775604', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2506.437011', '1141.965942', '55.726562', '173.579498', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2493.439208', '1141.873291', '55.726562', '174.002426', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2478.927734', '1141.884277', '55.726562', '176.061386', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2468.554443', '1141.926635', '55.733268', '175.554138', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2461.782226', '1141.784667', '55.726562', '170.461502', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2451.242919', '1141.597167', '55.733276', '178.024826', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2438.406982', '1140.917114', '55.726562', '179.189636', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2424.075927', '1139.344482', '55.726562', '172.321838', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2413.718505', '1137.450927', '55.726562', '173.145263', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2406.889160', '1135.737182', '55.726562', '166.491485', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2396.676513', '1132.648803', '55.733276', '163.478118', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2383.887451', '1128.067382', '55.726562', '168.048538', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2369.458984', '1122.082397', '55.733276', '155.863754', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2358.803710', '1117.930541', '55.726562', '153.373504', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.018798', '1054.014892', '65.155761', '84.263000', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.881347', '1045.567993', '65.507812', '90.456291', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.024169', '1029.098754', '73.586288', '93.367942', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.859619', '1020.929199', '77.186538', '82.011833', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.865234', '1008.674682', '78.343750', '88.125648', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.901611', '1000.445434', '78.343750', '88.153671', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.865234', '992.266479', '78.334419', '89.653984', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.873779', '987.892211', '78.343750', '85.473648', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2511.840576', '975.596679', '77.200576', '85.844581', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2510.994384', '967.557067', '73.532836', '91.373649', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2510.990234', '951.079040', '65.634803', '89.599494', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2510.995849', '942.606445', '65.289062', '87.506507', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2503.040771', '921.274719', '65.230323', '177.062667', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2471.819580', '921.327819', '63.165081', '178.525405', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2449.911865', '921.321166', '58.137554', '183.490219', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2431.361083', '921.312622', '50.578125', '182.448501', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2412.976562', '921.330932', '45.473777', '186.527786', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2402.313476', '886.088195', '45.445312', '274.081878', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2402.312744', '869.098571', '44.203125', '270.326507', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2402.241210', '849.189880', '40.593750', '272.666473', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2402.314941', '829.176757', '36.854816', '270.478546', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2409.196777', '819.869384', '35.179687', '172.650314', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2447.488525', '821.323059', '35.179687', '179.153030', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2487.309326', '821.114257', '38.382812', '180.019790', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2504.541748', '821.206787', '45.978622', '182.906784', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2513.609619', '830.838134', '49.997947', '88.121780', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2513.677246', '849.089843', '52.695312', '85.928550', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2513.605468', '867.514526', '57.742187', '81.658592', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2513.613769', '885.855163', '62.774551', '92.581596', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2502.926757', '895.339355', '65.248573', '2.528244', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2471.688232', '895.349426', '63.167388', '355.130310', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2449.791748', '895.370422', '58.137016', '359.659637', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2431.336914', '895.335754', '50.536262', '357.657836', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2412.980712', '895.328674', '45.471553', '358.420318', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-247.932678', '1001.180664', '20.939865', '359.152587', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-278.841094', '1003.186218', '20.939867', '3.105829', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-258.346588', '1044.023071', '20.939863', '92.539787', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-258.744842', '1083.090454', '20.939867', '274.786041', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-260.348175', '1119.902709', '20.939867', '89.326530', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-258.272308', '1151.106445', '20.939865', '9.653594', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-258.422424', '1168.940795', '20.939863', '82.878402', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-290.786346', '1176.572509', '20.939867', '182.696029', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-298.361053', '1115.655395', '20.939865', '96.655845', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-328.351867', '1118.925903', '20.939863', '90.896606', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-362.727600', '1110.681640', '20.939865', '267.290893', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-360.827941', '1141.553222', '20.939867', '186.573562', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-369.705291', '1169.375366', '20.271875', '238.252380', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-324.406494', '1165.561401', '20.939863', '184.353347', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-90.663978', '1229.640258', '19.742187', '199.077117', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-89.001792', '1229.634887', '19.742187', '181.826507', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-88.823905', '1229.737670', '22.440261', '268.678131', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-90.868568', '1229.517456', '22.440261', '90.680084', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-68.176086', '1221.727050', '19.662380', '97.905685', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-68.179290', '1223.567382', '19.651634', '96.651466', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-68.265548', '1223.461303', '22.440261', '89.613647', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-68.175445', '1221.852905', '22.440261', '99.822692', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-36.091102', '1215.264404', '19.352293', '182.883514', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-26.756698', '1215.312377', '19.352293', '183.382995', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-17.555511', '1215.244262', '19.352745', '182.289443', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-17.424530', '1215.314819', '22.464834', '184.557296', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-26.899608', '1215.308349', '22.464834', '174.495285', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-36.035476', '1215.304809', '22.464834', '178.369125', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('13.567204', '1229.317138', '19.341674', '91.290611', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('13.787284', '1220.068969', '19.338869', '88.731590', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('13.630116', '1210.694335', '19.345546', '86.015312', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('13.666910', '1210.699584', '22.503162', '88.319099', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('13.783280', '1220.062988', '22.503162', '89.075645', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('13.786456', '1229.218505', '22.503162', '87.213523', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('12.606774', '1113.625610', '20.939867', '91.894905', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-18.307315', '1115.567626', '20.939865', '87.572952', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-36.079998', '1115.430908', '20.939863', '177.900238', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-44.986541', '1081.180053', '20.939863', '357.653717', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1.649821', '1076.108276', '20.939865', '86.803153', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-32.416900', '1038.657836', '20.939867', '99.923889', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2027.759887', '-41.033226', '38.804687', '2.974401', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2170.551757', '244.694015', '35.320312', '92.725921', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2170.265380', '251.894378', '35.333824', '94.146369', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2170.054931', '259.106689', '35.327537', '87.044075', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2094.015625', '745.811401', '69.562500', '3.159260', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2112.558105', '744.725158', '69.562500', '355.970886', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2066.600341', '744.155761', '65.070571', '342.036193', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2048.087646', '744.486389', '57.056228', '355.530548', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2029.580444', '744.932922', '49.509319', '5.118678', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-150.153045', '2687.880126', '62.429687', '1.714064', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-168.693115', '2707.207275', '62.530364', '90.555519', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-161.353515', '2728.118408', '62.204383', '269.423461', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-155.250167', '2759.113525', '62.773303', '138.089126', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-165.664886', '2768.353515', '62.687500', '262.713470', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-165.833023', '2763.513183', '62.773303', '266.425994', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-201.794586', '2771.687500', '62.345779', '350.710357', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-219.599655', '2767.423828', '62.790626', '188.614532', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-232.318206', '2807.607910', '62.054687', '97.197715', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-258.053588', '2782.786132', '62.687500', '177.107940', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-268.861755', '2769.417724', '61.869468', '98.931404', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-287.543395', '2758.112548', '62.512119', '274.833129', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-275.291107', '2736.145507', '62.754306', '262.525177', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-279.443176', '2721.946777', '62.790626', '2.689408', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-311.376098', '2726.792236', '63.072341', '266.982299', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-582.079040', '2713.073974', '72.046737', '84.702224', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-604.143920', '2716.695312', '72.723060', '102.238273', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-624.602905', '2710.059570', '72.375000', '78.757743', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-881.404235', '1562.296752', '25.911380', '169.144012', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-884.086242', '1552.863769', '25.914062', '25.169748', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-905.730529', '1542.907348', '26.062364', '356.261535', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-879.570190', '1538.481201', '25.914062', '178.568084', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-884.363708', '1538.167602', '26.031114', '197.954452', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-881.727416', '1532.009521', '25.911380', '1.274260', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-886.423461', '1514.426513', '25.914062', '0.062555', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-881.731750', '1513.859619', '25.914062', '356.111145', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-906.338867', '1514.821289', '26.316806', '279.056610', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-905.441894', '1528.410400', '26.077989', '203.596603', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('201.502929', '-95.073730', '1.554980', '171.219497', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('189.456680', '-95.147537', '1.549077', '179.633087', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('178.307235', '-95.090965', '1.549015', '179.854614', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('166.222702', '-95.076049', '1.554918', '183.287185', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('158.738845', '-102.696228', '1.556635', '265.236297', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('158.737182', '-112.508773', '1.556637', '275.596557', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('166.268402', '-119.811950', '1.554895', '355.975189', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('178.312896', '-120.077987', '1.549013', '356.662536', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-830.604797', '1589.146118', '26.999864', '320.156646', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('189.454284', '-120.132827', '1.548498', '0.587172', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('201.369964', '-120.132240', '1.551406', '7.063136', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('208.976135', '-112.606491', '1.550804', '87.934127', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('313.077331', '-121.342315', '3.535392', '270.013092', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('312.864257', '-92.294601', '3.535392', '268.443145', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-742.869995', '1432.477661', '16.111557', '188.882003', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-715.618774', '1438.705810', '18.887119', '89.579971', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('295.019165', '-54.682098', '2.777209', '184.751068', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('267.664154', '-54.666328', '2.777209', '180.632736', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-689.961486', '1444.404663', '17.808994', '258.175872', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-658.398498', '1446.964111', '13.734238', '262.048431', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-650.866699', '1445.681884', '13.679553', '80.392936', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-636.415161', '1446.630737', '13.996495', '132.149566', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('252.549591', '-92.327774', '3.535392', '97.986244', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('252.782836', '-121.310020', '3.535392', '95.960662', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-234.179992', '1052.024414', '19.867052', '267.357757', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-91.061012', '-1592.437500', '3.004307', '29.519161', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-127.318840', '974.359863', '19.851562', '276.149658', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-89.098564', '-1564.588134', '3.004307', '315.663330', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-68.736640', '-1545.725097', '3.004307', '226.041351', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-92.483657', '970.131103', '19.978666', '9.266837', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-67.125808', '971.310302', '19.889987', '89.593353', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-56.004085', '-1555.663818', '2.610718', '51.901424', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-37.574905', '962.480773', '20.051181', '264.804473', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-64.905372', '-1574.288696', '2.610718', '185.540237', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-75.538513', '-1580.943725', '3.437500', '279.820831', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-75.436172', '-1598.481323', '2.617187', '127.575592', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-102.556228', '-1575.941894', '2.617187', '51.400035', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-44.431861', '-1563.289550', '2.597471', '142.045852', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-12.736394', '974.826354', '19.797063', '264.266632', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('22.623077', '968.245239', '19.837047', '349.316497', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('70.469009', '973.822998', '15.768651', '168.339996', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('65.035072', '1005.342468', '13.754196', '356.397979', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('300.284057', '1141.185546', '9.137483', '269.022918', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('31.504724', '923.903564', '23.600116', '292.469482', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('397.364501', '1157.795532', '8.348054', '350.256652', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('17.701721', '909.064208', '23.952573', '10.798872', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('500.856201', '1116.500000', '15.035555', '0.640717', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-15.380111', '934.284912', '21.105869', '265.695343', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-53.029636', '894.255981', '22.387119', '0.982379', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('710.075195', '1194.863159', '13.396436', '271.443359', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('710.606323', '1207.680175', '13.848055', '265.438323', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-54.668308', '918.736816', '22.371494', '86.235473', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-56.542762', '935.287475', '21.207431', '73.758216', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-83.095237', '933.025634', '20.694816', '190.319290', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('782.838439', '1937.280517', '5.577990', '348.762298', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('777.966857', '1937.721191', '5.577990', '350.311950', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-86.773612', '915.802612', '21.094913', '109.768409', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('784.341857', '1954.293945', '5.707430', '249.410629', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-92.067024', '887.233642', '21.254306', '47.783962', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('755.680541', '1958.545654', '5.335937', '167.305038', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('751.033325', '1959.214233', '5.335937', '181.279479', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-121.048614', '857.612670', '18.582431', '357.416625', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('753.688842', '1973.292480', '5.699617', '259.182434', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-123.052062', '874.834899', '18.730869', '66.486381', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-152.423690', '881.679260', '18.442966', '246.084259', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('767.354187', '1989.600341', '5.335937', '239.002990', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-153.169769', '907.062622', '19.301181', '244.078750', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('767.593383', '2007.416137', '6.066805', '162.669601', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-151.084396', '933.926574', '19.723056', '238.158096', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('793.584167', '1991.645996', '5.793367', '216.849594', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('790.076721', '1974.058593', '5.738680', '16.783592', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('743.388244', '-509.519439', '18.012922', '180.214904', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('776.782897', '-503.581970', '18.012926', '182.058914', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('795.310363', '-506.337982', '18.012922', '176.278671', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('818.302307', '-509.500427', '18.012922', '180.429794', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('766.471191', '-556.572753', '18.012924', '354.109527', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('736.747131', '-556.683044', '18.012926', '358.523162', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('745.571166', '-590.991516', '18.012922', '85.245513', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1140.608154', '-1644.671142', '13.945392', '83.251609', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2200.116210', '-37.377456', '28.153547', '266.338958', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2197.440917', '-60.632759', '28.153549', '268.668518', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2203.209960', '-89.139541', '28.153547', '269.885040', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2245.618408', '-1.839210', '28.153551', '179.108016', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2270.539062', '-7.598395', '28.153547', '177.908645', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2245.373046', '-122.182617', '28.153547', '358.755249', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2272.276855', '-118.890174', '28.153547', '358.789031', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2293.757568', '-124.644721', '28.153549', '353.361633', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2313.737304', '-124.793182', '28.153551', '355.065277', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2367.309570', '-48.996742', '28.153547', '3.366446', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2383.815917', '-54.801597', '28.153551', '2.809998', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2415.468994', '-52.105789', '28.153547', '357.906982', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2438.782226', '-54.858928', '28.153549', '5.892054', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2448.439697', '-11.123395', '27.683458', '180.773040', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2374.112304', '-8.560962', '28.441642', '270.071533', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2373.948486', '22.129037', '28.441642', '273.343963', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2373.945312', '42.259052', '28.441644', '273.065582', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2373.956542', '71.083053', '28.441642', '276.449798', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2398.465576', '111.649635', '28.441642', '177.628005', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2411.037597', '-5.629240', '27.683460', '92.190971', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2411.114257', '21.701961', '27.683460', '88.731010', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2413.574218', '61.659233', '28.441642', '182.957046', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2443.420654', '61.451580', '28.441642', '187.890274', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2446.731933', '18.924018', '27.683460', '276.005004', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2484.329833', '-28.287321', '28.441642', '359.884643', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2513.347656', '-28.300975', '28.441644', '8.685412', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2488.406494', '11.518467', '28.441642', '181.312103', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2509.462646', '11.652682', '28.441644', '186.166503', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2558.196777', '-11.134133', '27.675647', '174.045715', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2549.208984', '24.941431', '27.675647', '178.953384', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2558.335937', '62.853797', '27.675645', '4.088829', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2551.114013', '91.682945', '27.675647', '87.879272', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2518.833984', '58.315460', '27.683460', '359.685974', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2536.237060', '128.754699', '27.683460', '182.987213', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2518.417480', '128.571365', '27.675645', '181.767257', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2480.670898', '126.960517', '27.675647', '267.922393', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2479.382324', '94.498146', '27.683458', '0.892189', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2514.067382', '94.496818', '27.683460', '355.350341', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-607.584960', '-1074.062744', '23.502424', '184.168197', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-601.163513', '-1065.544189', '23.404312', '188.080856', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-594.559020', '-1057.029541', '23.355770', '186.547393', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-588.716979', '-1048.630004', '23.338151', '173.530364', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-582.490539', '-1040.296386', '23.596750', '180.399597', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-576.755126', '-1032.022583', '23.827697', '184.320388', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2363.813232', '116.173316', '28.441644', '95.979591', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2363.893554', '142.023635', '28.441642', '90.772567', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2363.894287', '166.177474', '28.441644', '94.763183', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2363.835693', '187.146591', '28.441642', '92.362762', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2324.187988', '116.039016', '28.441642', '268.486602', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2323.946533', '136.346130', '28.441642', '275.769500', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2323.947509', '162.247909', '28.441644', '276.670623', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2323.950195', '191.056228', '28.441642', '270.672149', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2269.504882', '111.663352', '28.441644', '179.980209', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2249.215576', '111.668434', '28.441642', '178.897827', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2203.947998', '62.330066', '28.441644', '271.763885', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2203.989501', '106.125488', '28.441642', '271.089019', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2236.579345', '168.203781', '28.153549', '179.893463', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2258.052734', '168.154525', '28.153551', '177.485015', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2285.844970', '161.666763', '28.441642', '176.649047', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2258.032958', '655.875305', '11.453125', '184.011871', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2123.373535', '776.004577', '11.445310', '191.004074', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2094.201904', '775.091979', '11.453125', '191.793243', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2071.753417', '776.309448', '11.460477', '175.164489', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2043.450561', '776.000793', '11.453125', '179.741302', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2014.150390', '775.090148', '11.460935', '185.019668', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2013.196044', '730.458984', '11.453125', '1.271031', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2042.515869', '731.364990', '11.460935', '2.688826', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2065.056884', '729.923583', '11.468292', '5.712679', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2093.343750', '730.463439', '11.453125', '1.765359', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2122.373291', '731.832458', '11.460935', '1.437492', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2169.256347', '772.243591', '11.460935', '95.884933', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1845.535034', '661.338562', '11.460935', '265.952545', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1844.721679', '690.481628', '11.453125', '275.049987', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1844.363525', '718.716735', '11.468292', '270.242248', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1845.782226', '741.413330', '11.460935', '270.426391', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1364.649414', '1896.837768', '11.468750', '275.758026', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1364.064819', '1931.543823', '11.468292', '272.255187', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1411.678833', '1896.983398', '11.460935', '89.416473', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1409.253417', '1919.953735', '11.468750', '93.290122', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1336.474487', '1931.354003', '11.460935', '2.335314', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1309.330688', '1931.790161', '11.460935', '10.535956', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1320.109741', '1976.012329', '11.468750', '89.683494', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1319.105468', '2005.660522', '11.460935', '92.324165', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1320.658203', '2028.074584', '11.468292', '90.103355', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1365.775146', '2027.942138', '11.460935', '270.672851', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1364.493652', '2003.806152', '11.460935', '273.830047', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1365.716064', '1974.362060', '11.460935', '265.345458', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1464.595458', '1895.085449', '11.460935', '270.262451', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1464.604248', '1920.173217', '11.460935', '268.267211', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1462.324462', '1950.005249', '11.468292', '359.397033', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1439.802978', '1951.809448', '11.460935', '2.027095', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1412.590209', '1951.355102', '11.453125', '6.303565', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1684.611816', '2046.665649', '11.468750', '272.810791', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1680.302246', '2069.131591', '11.359375', '186.011947', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1685.519653', '2093.939453', '11.460935', '276.669433', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1684.609863', '2123.455078', '11.460935', '273.276306', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1645.232543', '2127.485839', '11.203125', '4.130668', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1641.153564', '2149.676513', '11.312500', '92.920104', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1640.254150', '2102.836914', '11.312500', '73.022064', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1640.186645', '2075.698242', '11.312500', '95.516220', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1641.682983', '2044.906738', '11.319852', '88.826004', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1595.609985', '2038.304077', '11.468750', '284.745056', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1595.066406', '2071.091796', '11.319852', '269.070922', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1596.506591', '2093.762695', '11.312500', '273.355010', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1595.603881', '2123.399658', '11.460935', '275.930603', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1596.577636', '2147.348144', '11.460935', '288.796508', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1549.258666', '2125.521484', '11.460935', '91.968521', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1550.165649', '2096.304199', '11.460935', '76.892417', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1554.296752', '2074.152832', '11.359375', '0.724967', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.535278', '2003.751953', '10.820310', '178.329528', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1408.347900', '2003.653076', '10.820310', '178.818481', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1408.345214', '1996.456420', '10.820310', '0.000000', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.214965', '1996.519165', '10.820310', '357.882995', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.551391', '2003.659790', '14.739586', '178.986053', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.492309', '1996.458374', '14.739586', '358.221160', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1408.289184', '1996.459106', '14.739586', '358.722351', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1408.234619', '2003.806396', '14.739586', '178.322982', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.804443', '2027.105346', '10.820310', '267.286102', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1422.115844', '2027.012573', '10.820310', '89.825920', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.802368', '2033.100341', '10.820310', '267.114898', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1422.148681', '2033.222290', '10.820310', '88.924942', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1421.908081', '2026.935424', '14.739586', '90.105613', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.802612', '2026.959350', '14.739586', '269.303283', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1414.809448', '2033.095336', '14.739586', '269.250396', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1422.152832', '2033.257690', '14.739586', '88.439750', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1453.824707', '2027.026367', '10.820310', '267.277252', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1460.823974', '2026.929443', '10.820310', '86.343177', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1453.829589', '2033.209594', '10.820310', '269.335906', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1461.170043', '2033.088989', '10.820310', '86.602912', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1454.120117', '2033.060546', '14.739586', '269.264160', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1461.172729', '2033.063598', '14.739586', '87.670806', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1453.832397', '2026.864501', '14.739586', '268.472137', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1461.176879', '2026.918823', '14.739586', '88.424736', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1503.140869', '2027.030761', '10.820310', '88.837478', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1495.793212', '2026.951293', '10.820310', '268.885650', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1495.805664', '2033.055908', '10.820310', '268.354644', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1503.135986', '2033.138183', '10.820310', '89.090293', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1495.850219', '2033.160766', '14.739586', '269.306396', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1503.142700', '2033.127807', '14.739586', '88.341117', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1503.143920', '2027.010620', '14.739586', '89.011123', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1495.796630', '2026.908447', '14.739586', '269.319824', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2720.205322', '-318.282867', '7.843750', '225.938125', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2727.601318', '-184.256134', '7.203125', '89.416152', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2434.239746', '1338.295776', '8.511157', '270.789001', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2434.162597', '1318.582885', '13.867185', '267.948181', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2435.748779', '1281.387573', '24.430854', '275.050445', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2434.471923', '1264.220947', '28.330320', '266.882781', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2476.896484', '1244.444091', '33.609375', '87.991157', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2476.861083', '1264.154296', '28.262329', '91.897430', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2476.341552', '1301.213623', '18.433944', '87.636077', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2475.742675', '1338.194946', '8.505731', '86.570716', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2381.169677', '1226.382324', '33.142723', '89.237533', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2381.368164', '1263.041381', '26.352722', '89.592658', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2381.714599', '1299.851562', '19.563983', '48.498947', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2352.683349', '1299.847778', '19.541818', '268.228759', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2353.545898', '1263.069824', '26.350778', '262.988067', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2036.722412', '1195.846679', '46.239509', '354.669494', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1982.516113', '1188.859375', '45.445312', '356.382415', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1900.681884', '1203.079589', '42.376758', '5.992698', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1901.877197', '1239.759765', '26.129470', '279.441162', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1901.967041', '1222.666748', '33.744487', '185.879776', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1534.824218', '2026.970703', '10.820310', '270.212432', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1542.165649', '2026.764648', '10.820310', '87.102157', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1542.165161', '2033.195312', '10.820310', '88.819160', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1534.821533', '2033.206542', '10.820310', '266.762908', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1534.826171', '2033.089355', '14.739586', '268.905059', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1542.156494', '2033.041625', '14.739586', '87.907867', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1542.166137', '2026.794311', '14.739586', '87.530364', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1534.817871', '2027.031982', '14.739586', '268.279876', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1760.940063', '1175.822875', '25.125000', '180.237396', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('984.569091', '2343.650146', '11.468750', '269.235382', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('985.574707', '2314.255126', '11.460935', '261.507141', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1032.584594', '2316.543457', '11.468292', '180.728210', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('986.444274', '2271.348388', '11.460935', '4.632653', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('956.972229', '2270.373535', '11.468750', '357.416625', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('885.518188', '2047.070800', '11.460935', '268.171997', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('885.512817', '1980.447998', '11.460935', '260.684814', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('928.957519', '2006.363769', '11.460935', '91.434326', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1800.147705', '1199.765869', '25.119396', '285.425292', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('930.708129', '2027.925781', '11.468292', '89.610527', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('930.709045', '1928.138671', '11.468292', '88.413436', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1831.812011', '1167.172119', '33.591148', '177.696578', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1852.657714', '1163.558105', '40.887603', '177.341476', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1873.229858', '1124.948974', '45.445312', '298.756530', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1084.232543', '2031.669677', '11.468292', '268.763092', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1085.570068', '2000.946533', '11.460935', '270.916809', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1084.611572', '1976.761230', '11.468750', '266.466552', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1860.590209', '1113.306884', '45.445312', '6.045262', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1820.815063', '1115.921997', '45.663768', '358.332336', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1030.173706', '1976.127197', '11.468750', '90.009689', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1029.197631', '2005.621826', '11.460935', '93.404022', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1030.707275', '2027.980590', '11.468292', '88.685043', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('984.606689', '2030.082153', '11.468750', '269.677581', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('985.513732', '2000.529296', '11.460935', '276.517974', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('984.119873', '1978.468017', '11.468292', '266.041870', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2157.170898', '889.144287', '80.007812', '89.559051', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1030.705322', '1927.968750', '11.468292', '90.021156', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('985.524414', '1901.244140', '11.460935', '279.060302', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('984.803283', '1930.692382', '11.468750', '268.997558', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('984.074279', '1878.911010', '11.468292', '267.033264', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2223.885009', '819.204833', '49.448074', '358.982391', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2223.751464', '797.259399', '49.441871', '189.592803', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2213.864257', '721.773681', '49.414062', '191.266159', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2154.391357', '645.445861', '52.367187', '227.423233', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2626.270507', '2359.521484', '8.912125', '86.552894', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2599.091796', '2357.021240', '9.882993', '224.974945', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2625.853515', '2318.615234', '8.300502', '87.190513', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2077.021972', '-2311.867675', '31.131250', '238.543502', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2472.301025', '2450.711914', '17.323022', '359.882965', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2479.852783', '2449.853759', '17.323022', '191.254119', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2583.436523', '2307.916503', '7.002883', '276.469329', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2437.342529', '2354.260742', '5.199048', '13.732497', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2348.364501', '2423.470214', '7.331099', '148.047302', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2380.224121', '2442.453857', '10.169355', '336.376525', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2424.684326', '2446.910888', '13.214550', '359.488342', '0', '0', '8');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '105000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2398.056152', '2409.044433', '8.909679', '341.547637', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2421.537597', '2406.530761', '13.025651', '273.254302', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2636.203369', '2351.017822', '8.488713', '272.693389', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2634.975585', '2401.826171', '11.230509', '1.071735', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-693.035644', '937.319580', '16.828125', '171.970764', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-692.328308', '939.585327', '13.633159', '260.291778', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-683.227355', '940.799926', '16.828125', '355.348541', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-684.032836', '939.618835', '13.632810', '87.262313', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-683.233032', '937.471618', '16.828125', '166.626693', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-693.281127', '940.752502', '16.828125', '332.847106', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-671.994384', '928.714172', '12.132810', '267.394439', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2209.107177', '-2287.703613', '30.625000', '140.951293', '0', '0', '15');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '230000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2192.791748', '-2256.219970', '30.686771', '322.683837', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2192.348144', '-2255.664550', '33.320312', '320.198059', '0', '0', '17');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '30000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2179.509765', '-2258.859619', '30.631027', '42.853622', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('870.068481', '-24.823158', '64.008430', '147.568725', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2657.411376', '848.856933', '64.007812', '359.541137', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.226562', '883.299743', '63.250000', '271.542724', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.023193', '874.948791', '58.921875', '270.071868', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2620.632324', '855.235839', '53.568695', '274.893463', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2590.897705', '819.794494', '49.991027', '181.807006', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2576.225341', '819.797851', '49.984375', '186.988769', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2565.799560', '819.796386', '49.991027', '181.203674', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2619.739746', '845.510314', '50.598144', '273.471771', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2559.180175', '819.794433', '49.984375', '182.335494', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2548.723876', '819.573181', '49.984375', '177.177139', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.528564', '783.859436', '35.114933', '93.684761', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2369.053466', '763.490295', '35.136825', '84.375366', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2368.823486', '740.571411', '35.151401', '91.750503', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2368.819091', '712.192810', '35.173171', '84.453018', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.680908', '692.800231', '35.164062', '83.145500', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2358.586425', '679.961914', '35.164062', '175.748062', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2358.313476', '656.740661', '35.171875', '5.033998', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2340.135986', '679.932189', '38.389476', '180.000015', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2321.509765', '679.779479', '41.972221', '182.025070', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2339.771728', '656.740417', '38.388294', '2.648926', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2303.409667', '679.830078', '45.340961', '170.599960', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2321.940917', '656.738525', '41.979351', '0.285988', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2303.256591', '656.743957', '45.331787', '12.964381', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.527832', '643.993896', '35.171875', '86.225692', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2356.990722', '580.033325', '24.890625', '178.339630', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.526367', '632.545166', '34.259654', '75.403892', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2338.568847', '580.033386', '27.762657', '178.507980', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2320.033935', '580.026306', '31.071422', '182.123031', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.537597', '614.118713', '30.937908', '86.852432', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2301.723632', '579.821533', '34.404350', '167.251312', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.529052', '595.944885', '27.629022', '95.144226', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2358.241210', '820.034790', '38.536609', '186.132492', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2358.621826', '796.762390', '38.328144', '357.963378', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2340.159423', '796.761535', '41.989128', '355.288360', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2339.813476', '820.033630', '41.982788', '185.024078', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2321.872802', '796.757690', '45.344985', '356.373382', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2321.712158', '820.029235', '45.341865', '184.542480', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2303.267822', '796.810913', '48.688388', '3.725044', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2286.430175', '796.915161', '49.445312', '356.350036', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2303.244384', '820.032531', '48.700183', '180.323257', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2285.316650', '829.281860', '57.170230', '273.507446', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2233.262207', '830.945983', '54.363090', '87.172088', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2285.081787', '849.776611', '65.641052', '279.089721', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2233.266357', '849.288330', '61.948448', '94.837059', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.355957', '872.865722', '66.912933', '265.089782', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2233.825683', '870.249694', '66.640914', '89.968528', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.522949', '916.638549', '66.648437', '275.941986', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2233.829101', '889.081054', '66.652481', '95.753540', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2369.932373', '847.311462', '43.789062', '87.457023', '0', '0', '3');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '190000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.561035', '852.073730', '41.120735', '81.964393', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2372.562988', '872.096435', '44.509101', '88.158119', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2402.416503', '930.819458', '45.445312', '277.944580', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2325.858398', '944.257202', '55.320755', '358.829986', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2307.593017', '944.259521', '61.608718', '355.383239', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2295.160400', '969.978271', '65.335174', '182.879989', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2238.968505', '943.698181', '66.652183', '88.748001', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.245361', '978.754821', '70.637161', '278.701019', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2238.786376', '962.268981', '66.652183', '94.173767', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.418701', '999.542114', '79.269256', '270.722625', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2238.806884', '980.638916', '71.470237', '94.608192', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.418945', '1023.203735', '84.112724', '274.651031', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2238.788574', '998.854125', '79.002944', '104.382247', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2239.902587', '1037.411254', '83.849937', '94.820671', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.407958', '1046.311767', '84.119628', '272.915985', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2239.746337', '1054.212890', '82.845062', '89.764335', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.410888', '1070.015136', '81.702285', '270.554260', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2239.742675', '1070.728027', '81.023468', '81.386535', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2282.422607', '1089.079345', '80.405769', '271.012573', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2238.310791', '1117.451904', '74.819793', '94.213981', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2238.313232', '1135.845458', '67.261093', '79.870071', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2280.838134', '1112.174316', '76.984375', '266.144104', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2238.497802', '1154.105102', '59.676410', '84.346717', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2280.835205', '1131.184570', '69.226562', '268.482452', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2280.828613', '1149.380859', '61.609375', '273.494262', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2159.228271', '866.521606', '75.349540', '271.278686', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2159.223388', '830.726623', '69.522994', '268.963073', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2227.691162', '1108.046997', '80.007812', '184.026626', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2208.327392', '1108.044677', '80.007812', '174.144851', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2188.298828', '1108.037109', '80.007812', '186.823272', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2158.357666', '1148.771728', '61.848770', '269.858032', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2168.405517', '1108.046875', '80.007812', '177.904907', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2158.356689', '1117.678100', '74.486267', '266.927154', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2172.817382', '1080.000122', '80.007812', '9.184954', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2129.238769', '894.912475', '80.000000', '90.532814', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2191.538085', '1079.992187', '80.007812', '358.676757', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2209.252197', '1079.996459', '80.007812', '3.521754', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.057617', '832.886108', '69.562500', '91.310119', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2228.298339', '1079.993530', '80.007812', '3.039956', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2159.236083', '786.270629', '69.514770', '274.574188', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2159.237304', '769.968811', '69.514755', '274.157714', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.048095', '774.189208', '69.562500', '89.030715', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2159.203125', '753.626220', '69.515304', '271.529449', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2126.038085', '755.477294', '69.562500', '102.672546', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2223.401611', '744.000976', '49.434265', '176.741409', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2205.151123', '744.004760', '50.482604', '186.599807', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2293.968261', '730.937500', '49.443820', '179.201309', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2302.981933', '730.940612', '49.451644', '187.806365', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2322.898193', '730.940917', '47.197143', '178.237854', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2340.740234', '730.939025', '43.000415', '180.889129', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2359.035644', '730.931701', '38.705825', '172.887344', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2359.510742', '721.637023', '38.590003', '1.973973', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2341.158935', '721.640991', '42.898345', '359.421203', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2322.683105', '721.644104', '47.249576', '357.059478', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2172.446533', '680.148437', '55.161346', '90.214363', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2632.161865', '-191.059341', '7.203125', '93.583938', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-960.740173', '-507.440399', '26.238681', '280.428985', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-940.242431', '-491.146118', '26.363681', '340.757934', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-938.924072', '-517.903137', '26.093614', '168.254623', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-914.350036', '-528.559570', '26.077989', '95.125816', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-914.362731', '-533.335327', '26.077989', '101.224220', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-924.382873', '-536.302246', '26.140489', '21.491830', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-940.319946', '-536.790100', '26.765625', '348.109832', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-951.168090', '-530.754516', '25.953638', '2.354928', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-928.888977', '-519.102111', '26.124864', '30.723518', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-923.827636', '-496.953125', '26.765625', '167.483093', '0', '0', '18');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1068.228271', '-1205.626708', '129.756454', '93.913101', '0', '0', '1');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '160000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2173.293457', '-1512.699829', '23.913448', '185.518432', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2180.228271', '-1514.321899', '23.901784', '169.683258', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2187.723632', '-1515.648925', '23.907047', '182.988265', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2195.591064', '-1516.958374', '23.941585', '182.506561', '0', '0', '16');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '220000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2232.698974', '-1469.340454', '24.581628', '179.833297', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2247.552246', '-1469.588256', '24.149597', '185.931686', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('2264.152587', '-1469.341918', '24.370691', '189.836746', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1938.531250', '-1911.102661', '15.256795', '96.303123', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1928.291381', '-1915.909667', '15.256795', '177.602142', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2186.941162', '744.003234', '57.554763', '178.294967', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2168.743408', '744.006896', '64.975990', '180.343215', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1913.463012', '-1911.905761', '15.256795', '188.255599', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1892.098510', '-1914.396850', '15.256795', '190.280639', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1872.193603', '-1911.787475', '15.256795', '178.832138', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1854.189086', '-1914.271728', '15.256795', '181.483596', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2523.880371', '2238.883544', '5.398437', '334.390014', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2552.244140', '2266.525390', '5.475522', '334.772827', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2627.632568', '2283.525146', '8.314842', '274.029418', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2476.993652', '1318.323608', '13.851560', '260.718414', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2477.225097', '1281.522460', '23.726562', '273.498779', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2476.602050', '1310.974853', '15.516079', '255.963577', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2476.948974', '1274.394042', '25.308326', '273.632904', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2433.051269', '1301.450439', '18.382812', '86.906913', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2477.845214', '1301.327636', '18.375000', '277.205505', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2434.095947', '1311.323974', '15.441761', '88.931869', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2434.140869', '1244.559448', '33.617187', '85.153358', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2434.002685', '1273.929565', '25.312738', '83.355590', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2433.028564', '1264.187255', '28.257812', '80.930282', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2433.736572', '1281.503295', '23.742187', '89.704498', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2383.139648', '1336.406372', '12.806674', '273.311370', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2383.134277', '1318.193237', '16.239021', '282.918945', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2351.252441', '1336.483154', '12.781530', '90.540870', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2351.157470', '1318.037475', '16.224414', '95.409263', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2351.356689', '1281.214355', '22.942951', '100.094505', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2351.138671', '1263.138549', '26.317270', '84.157348', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2351.313476', '1244.870727', '29.684886', '85.256675', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2351.166748', '1226.232299', '33.031837', '81.918960', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2139.936767', '1190.380615', '55.726562', '185.881607', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2102.808837', '1159.876953', '53.265625', '359.673736', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2065.694580', '1159.831787', '46.648437', '2.011878', '0', '0', '4');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-2083.869873', '1159.834472', '49.953125', '0.717095', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1997.675903', '1190.546142', '45.445312', '169.006286', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1955.485473', '1190.546875', '45.445312', '188.847091', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1982.551635', '1190.288940', '45.445312', '186.698089', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1915.435424', '1190.252441', '45.445312', '173.144699', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1929.525878', '1190.545776', '45.445312', '185.494735', '0', '0', '6');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '120000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1872.075805', '1146.394042', '45.445312', '83.202110', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1872.245849', '1125.552124', '45.445312', '77.707031', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1842.985961', '1115.517456', '45.445312', '181.476058', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1860.553100', '1115.523315', '45.445312', '191.334503', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1821.113159', '1117.099121', '46.445312', '170.509399', '0', '0', '10');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '75000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1780.104980', '1138.604125', '38.600505', '90.301437', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1780.100830', '1158.790161', '30.447792', '90.408584', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1742.783935', '1174.038940', '25.125000', '0.821389', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1731.911254', '1115.517944', '45.445312', '180.887145', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1775.980834', '1115.521118', '45.445312', '184.478820', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1728.338012', '1159.135009', '30.426168', '273.218231', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-1728.338256', '1139.160644', '38.555034', '271.819915', '0', '0', '5');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1122.718139', '-2037.231689', '69.894233', '277.927734', '0', '0', '0');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '180000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('867.510986', '-717.583068', '105.679687', '330.778625', '0', '0', '7');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-775.937133', '1448.047851', '13.945310', '222.243484', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-773.489807', '1425.272216', '13.945310', '52.654880', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-785.895446', '1425.807128', '13.945310', '48.123134', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-799.483154', '1425.419921', '13.945310', '46.724826', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-788.283935', '1448.271240', '13.945310', '216.112594', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-813.980895', '1425.780761', '13.945310', '45.953155', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-802.894592', '1448.632568', '13.945310', '221.182144', '0', '0', '12');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '45000', '3', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-816.851013', '1448.671386', '13.945310', '215.926376', '0', '0', '14');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '135000', '6', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-828.212524', '1464.618530', '15.026165', '185.854583', '0', '0', '11');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '65000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-821.087280', '1603.694335', '27.124443', '173.040618', '0', '0', '13');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '50000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('-814.155151', '1501.617675', '20.165058', '178.992248', '0', '0', '9');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '90000', '4', '0' FROM `PROPERTY`;");

	db_query(Database, "INSERT INTO `PROPERTY` (`EXT_X`, `EXT_Y`, `EXT_Z`, `EXT_ANGLE`, `EXT_INTERIOR`, `EXT_FREEZE`, `ID_INTERIOR`) VALUES ('1014.801879', '-1955.268554', '13.101937', '269.581512', '0', '0', '2');");
	db_query(Database, "INSERT INTO `PROPERTY_INFO` (`ID_PROPERTY`, `PRICE`, `LEVEL`, `EXTRA`) SELECT MAX(`ID`), '270000', '6', '0' FROM `PROPERTY`;");
	print("[DATABASE] Propiedades insertadas ...");

	print("[DATABASE] Insertando datos de componentes en la tabla component_info ...");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1010', 'Nitro', 'Nitro x10'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1000', 'Alerones', 'Pro'              );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1001', 'Alerones', 'Win'              );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1002', 'Alerones', 'Drag'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1003', 'Alerones', 'Alpha'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1004', 'Capó', 'Champ Scoop'          );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1005', 'Capó', 'Fury Scoop'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1006', 'Techo', 'Techo Scoop'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1007', 'Faldones', 'Sideskirt'     );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1011', 'Capó', 'Race Scoop'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1012', 'Capó', 'Worx Scoop'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1013', 'Faros', 'Round Fog'          );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1014', 'Alerones', 'Champ'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1015', 'Alerones', 'Race'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1016', 'Alerones', 'Worx'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1018', 'Tubos de escape', 'Upswept'          );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1019', 'Tubos de escape', 'Twin'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1020', 'Tubos de escape', 'Large'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1021', 'Tubos de escape', 'Medium'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1022', 'Tubos de escape', 'Small'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1023', 'Alerones', 'Fury'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1024', 'Faros', 'Square Fog'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1025', 'Ruedas', 'Offroad'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1027', 'Faldones', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1028', 'Tubos de escape', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1029', 'Tubos de escape', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1030', 'Faldones', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1032', 'Techo', 'Alien Techo Vent'      );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1033', 'Techo', 'X-Flow Techo Vent'     );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1034', 'Tubos de escape', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1035', 'Techo', 'X-Flow Techo Vent'     );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1037', 'Tubos de escape', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1038', 'Techo', 'Alien Techo Vent'      );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1039', 'Faldones', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1040', 'Faldones', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1043', 'Tubos de escape', 'Slamin'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1044', 'Tubos de escape', 'Chrome'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1045', 'Tubos de escape', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1046', 'Tubos de escape', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1049', 'Alerones', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1050', 'Alerones', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1051', 'Faldones', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1052', 'Faldones', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1053', 'Techo', 'X-Flow'               );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1054', 'Techo', 'Alien'                );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1055', 'Techo', 'Alien'                );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1058', 'Alerones', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1059', 'Tubos de escape', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1060', 'Alerones', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1061', 'Techo', 'X-Flow'               );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1062', 'Faldones', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1063', 'Faldones', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1064', 'Tubos de escape', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1065', 'Tubos de escape', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1066', 'Tubos de escape', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1067', 'Techo', 'Alien'                );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1068', 'Techo', 'X-Flow'               );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1071', 'Faldones', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1072', 'Faldones', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1073', 'Ruedas', 'Shadow'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1074', 'Ruedas', 'Mega'               );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1075', 'Ruedas', 'Rimshine'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1076', 'Ruedas', 'Wires'              );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1077', 'Ruedas', 'Classic'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1078', 'Ruedas', 'Twist'              );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1079', 'Ruedas', 'Cutter'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1080', 'Ruedas', 'Switch'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1081', 'Ruedas', 'Grove'              );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1082', 'Ruedas', 'Import'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1083', 'Ruedas', 'Dollar'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1084', 'Ruedas', 'Trance'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1085', 'Ruedas', 'Atomic'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1087', 'Suspensión hidráulica', 'Suspensión hidráulica'     );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1088', 'Techo', 'Alien'                );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1089', 'Tubos de escape', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1091', 'Techo', 'X-Flow'               );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1092', 'Tubos de escape', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1094', 'Faldones', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1096', 'Ruedas', 'Ahab'               );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1097', 'Ruedas', 'Virtual'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1098', 'Ruedas', 'Access'             );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1099', 'Faldones', 'Chrome'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1100', 'Varios', 'Chrome Grill'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1101', 'Faldones', 'Chrome Flames' );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1102', 'Faldones', 'Chrome Strip'  );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1103', 'Techo', 'Covertible'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1104', 'Tubos de escape', 'Chrome'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1105', 'Tubos de escape', 'Slamin'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1107', 'Faldones', 'Chrome Strip'  );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1109', 'Protector trasero', 'Chrome'      );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1110', 'Protector trasero', 'Slamin'      );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1113', 'Tubos de escape', 'Chrome'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1114', 'Tubos de escape', 'Slamin'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1115', 'Protector delantero', 'Chrome'     );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1116', 'Protector delantero', 'Slamin'     );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1117', 'Parachoques delanteros', 'Chrome'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1120', 'Faldones', 'Chrome Trim'   );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1121', 'Faldones', 'Wheelcovers'   );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1123', 'Varios', 'Bullbar Chrome Bars'  );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1124', 'Faldones', 'Chrome Arches' );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1125', 'Varios', 'Bullbar Chrome Lights');");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1126', 'Tubos de escape', 'Chrome'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1127', 'Tubos de escape', 'Slamin'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1128', 'Techo', 'Vinyl Hardtop'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1129', 'Tubos de escape', 'Chrome'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1130', 'Techo', 'Hardtop'              );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1131', 'Techo', 'Softtop'              );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1132', 'Tubos de escape', 'Slamin'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1135', 'Tubos de escape', 'Slamin'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1136', 'Tubos de escape', 'Chrome'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1137', 'Faldones', 'Chrome Strip'  );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1138', 'Alerones', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1139', 'Alerones', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1140', 'Parachoques traseros', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1141', 'Parachoques traseros', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1143', 'Tomas de aire', 'Oval Vents'          );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1145', 'Tomas de aire', 'Square Vents'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1146', 'Alerones', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1147', 'Alerones', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1148', 'Parachoques traseros', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1149', 'Parachoques traseros', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1150', 'Parachoques traseros', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1151', 'Parachoques traseros', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1152', 'Parachoques delanteros', 'X-Flow'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1153', 'Parachoques delanteros', 'Alien'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1154', 'Parachoques traseros', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1155', 'Parachoques delanteros', 'Alien'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1156', 'Parachoques traseros', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1157', 'Parachoques delanteros', 'X-Flow'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1158', 'Alerones', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1159', 'Parachoques traseros', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1160', 'Parachoques delanteros', 'Alien'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1161', 'Parachoques traseros', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1162', 'Alerones', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1163', 'Alerones', 'X-Flow'           );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1164', 'Alerones', 'Alien'            );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1165', 'Parachoques delanteros', 'X-Flow'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1166', 'Parachoques delanteros', 'Alien'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1167', 'Parachoques traseros', 'X-Flow'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1168', 'Parachoques traseros', 'Alien'         );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1169', 'Parachoques delanteros', 'Alien'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1170', 'Parachoques delanteros', 'X-Flow'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1171', 'Parachoques delanteros', 'Alien'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1172', 'Parachoques delanteros', 'X-Flow'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1173', 'Parachoques delanteros', 'X-Flow'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1174', 'Parachoques delanteros', 'Chrome'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1175', 'Parachoques traseros', 'Slamin'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1176', 'Parachoques delanteros', 'Chrome'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1177', 'Parachoques traseros', 'Slamin'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1178', 'Parachoques traseros', 'Slamin'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1179', 'Parachoques delanteros', 'Chrome'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1180', 'Parachoques traseros', 'Chrome'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1181', 'Parachoques delanteros', 'Slamin'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1182', 'Parachoques delanteros', 'Chrome'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1183', 'Parachoques traseros', 'Slamin'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1184', 'Parachoques traseros', 'Chrome'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1185', 'Parachoques delanteros', 'Slamin'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1186', 'Parachoques traseros', 'Slamin'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1187', 'Parachoques traseros', 'Chrome'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1188', 'Parachoques delanteros', 'Slamin'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1189', 'Parachoques delanteros', 'Chrome'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1190', 'Parachoques delanteros', 'Slamin'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1191', 'Parachoques delanteros', 'Chrome'       );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1192', 'Parachoques traseros', 'Chrome'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1193', 'Parachoques traseros', 'Slamin'        );");
	db_query(Database, "INSERT INTO `COMPONENTS_INFO` (`ID`, `PART`, `NAME`) VALUES('1010', 'Nitro', 'Nitro x10'           );");
	print("[DATABASE] Información de componentes insertada ...");
	
	print("[DATABASE] Insertando componentes validos para vehiculos a tabla vehicle_components ...");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('400', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('401', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('402', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('403', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('404', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1014');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('405', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('406', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('407', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('408', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('409', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('410', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('411', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('412', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('413', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('414', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('415', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('416', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('417', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('418', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('419', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('420', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1014');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('421', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('422', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('423', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('424', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('425', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('426', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('427', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('428', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('429', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('431', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('432', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('433', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('434', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('435', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1022');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('436', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('437', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('438', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('439', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('440', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('441', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('442', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('443', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('444', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('445', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('447', '1098');");












	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('450', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('451', '1098');");
















	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('455', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('456', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('457', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('458', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('459', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('460', '1098');");
















	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('464', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('465', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('466', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('467', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('469', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('470', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('471', '1098');");












	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('474', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('475', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('476', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('477', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1012');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1022');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('478', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('479', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('480', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('482', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('483', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('485', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('486', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('487', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('488', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('489', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('490', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1014');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('491', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('492', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('494', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('495', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1011');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('496', '1143');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('497', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('498', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('499', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('500', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('501', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('502', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('503', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('504', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('505', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('506', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('507', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('508', '1098');");












	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('511', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('512', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('513', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('514', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('515', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1015');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('516', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('517', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('518', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('519', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('520', '1098');");
















	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('524', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('525', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('526', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1014');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1015');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('527', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('528', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1011');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1012');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('529', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('530', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('531', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('532', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('533', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1100');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1101');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1106');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1122');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1123');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1124');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1125');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1126');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1127');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1178');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1179');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1180');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('534', '1185');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1109');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1110');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1113');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1114');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1115');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1116');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1117');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1118');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1119');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1120');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('535', '1121');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1103');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1104');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1105');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1107');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1108');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1128');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1181');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1182');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1183');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('536', '1184');");












	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('539', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('540', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('541', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1014');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1015');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('542', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('543', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('544', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('545', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('546', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('547', '1143');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('548', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1011');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1012');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('549', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('550', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('551', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('552', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('553', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('554', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('555', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('556', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('557', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1088');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1089');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1090');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1091');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1092');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1093');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1094');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1095');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1163');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1164');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1165');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1166');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1167');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('558', '1168');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1065');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1066');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1067');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1068');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1069');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1070');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1071');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1072');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1158');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1159');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1160');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1161');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1162');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('559', '1173');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1026');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1027');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1028');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1029');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1030');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1031');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1032');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1033');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1138');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1139');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1140');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1141');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1169');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('560', '1170');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1026');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1027');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1030');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1031');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1055');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1056');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1057');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1058');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1059');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1060');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1061');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1062');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1063');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1064');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1154');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1155');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1156');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('561', '1157');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1034');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1035');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1036');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1037');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1038');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1039');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1040');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1041');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1146');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1147');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1148');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1149');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1171');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('562', '1172');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('563', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('564', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1045');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1046');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1047');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1048');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1049');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1050');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1051');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1052');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1053');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1054');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1150');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1151');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1152');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('565', '1153');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('566', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1102');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1129');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1130');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1131');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1132');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1133');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1186');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1187');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1188');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('567', '1189');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('568', '1098');");












	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('571', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('572', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('573', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('574', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1042');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1043');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1044');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1099');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1174');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1175');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1176');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('575', '1177');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1134');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1135');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1136');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1137');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1190');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1191');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1192');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('576', '1193');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('577', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('578', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('579', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('580', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('582', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('583', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('584', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1002');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1003');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1014');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1015');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1021');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1022');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('585', '1145');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('587', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('588', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1000');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1016');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('589', '1145');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('591', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('592', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('593', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('594', '1098');");








	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('596', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('597', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('598', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('599', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1004');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1005');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1013');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1022');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('600', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('601', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('602', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1001');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1006');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1007');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1017');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1018');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1019');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1020');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1023');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1024');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1098');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1142');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1143');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1144');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('603', '1145');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('604', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('605', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('606', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('607', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('608', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('609', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('610', '1098');");




	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1008');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1009');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1010');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1025');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1073');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1074');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1075');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1076');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1077');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1078');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1079');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1080');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1081');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1082');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1083');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1084');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1085');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1086');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1087');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1096');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1097');");
	db_query(Database, "INSERT INTO `VEHICLE_COMPONENTS` (`MODELID`, `COMPONENT_ID`) VALUES('611', '1098');");
	print("[DATABASE] Información de componentes válidos insertada ...");
	
	print("[DATABASE] Insertando información de zonas a la tabla sa_zones");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LA', 'LA', 'Los Santos', '44.614', '-2892.969', '-242.990', '2997.060', '-768.026', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH1a', 'Richman', '321.355', '-860.619', '-89.083', '687.802', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH1b', 'Richman', '321.355', '-768.026', '-89.083', '700.794', '-674.885', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH2', 'Richman', '321.355', '-1044.069', '-89.083', '647.557', '-860.619', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH3a', 'Richman', '72.648', '-1404.969', '-89.083', '225.164', '-1235.069', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH3b', 'Richman', '72.648', '-1235.069', '-89.083', '321.355', '-1008.150', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH4', 'Richman', '321.355', '-1235.069', '-89.083', '647.521', '-1044.069', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH5a', 'Richman', '647.557', '-1118.280', '-89.083', '787.460', '-954.661', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH5b', 'Richman', '647.557', '-954.661', '-89.083', '768.693', '-860.619', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH6a', 'Richman', '225.164', '-1369.619', '-89.083', '334.502', '-1292.069', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIH', 'RIH6b', 'Richman', '225.164', '-1292.069', '-89.083', '466.222', '-1235.069', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL1a', 'Mulholland', '687.802', '-860.619', '-89.083', '911.802', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL1b', 'Mulholland', '737.572', '-768.026', '-89.083', '1142.290', '-674.885', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL1c', 'Mulholland', '861.085', '-674.885', '-89.083', '1156.550', '-600.895', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL2a', 'Mulholland', '1281.130', '-452.424', '-89.083', '1641.130', '-290.912', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL2b', 'Mulholland', '1269.130', '-768.026', '-89.083', '1414.069', '-452.424', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL3', 'Mulholland', '1414.069', '-768.026', '-89.083', '1667.609', '-452.424', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL4', 'Mulholland', '768.693', '-954.661', '-89.083', '952.604', '-860.619', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL5a', 'Mulholland', '1096.469', '-910.169', '-89.083', '1169.130', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL5b', 'Mulholland', '952.604', '-937.184', '-89.083', '1096.469', '-860.619', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL5c', 'Mulholland', '911.802', '-860.619', '-89.083', '1096.469', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL6', 'Mulholland', '1169.130', '-910.169', '-89.083', '1318.130', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL7a', 'Mulholland', '1357.000', '-926.999', '-89.083', '1463.900', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MUL', 'MUL7b', 'Mulholland', '1318.130', '-910.169', '-89.083', '1357.000', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MULINT', 'MULINT', 'Mulholland Intersection', '1463.900', '-1150.869', '-89.083', '1812.619', '-768.026', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUN', 'SUN1', 'Temple', '952.663', '-1130.839', '-89.083', '1096.469', '-937.184', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUN', 'SUN2', 'Temple', '1096.469', '-1026.329', '-89.083', '1252.329', '-910.169', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUN', 'SUN3a', 'Temple', '1252.329', '-1130.849', '-89.083', '1378.329', '-1026.329', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUN', 'SUN3b', 'Temple', '1252.329', '-1026.329', '-89.083', '1391.050', '-926.999', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUN', 'SUN3c', 'Temple', '1252.329', '-926.999', '-89.083', '1357.000', '-910.169', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUN', 'SUN4', 'Temple', '1096.469', '-1130.839', '-89.083', '1252.329', '-1026.329', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHC', 'CHC1a', 'Las Colinas', '1994.329', '-1100.819', '-89.083', '2056.860', '-920.815', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHC', 'CHC1b', 'Las Colinas', '2056.860', '-1126.319', '-89.083', '2126.860', '-920.815', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHC', 'CHC2a', 'Las Colinas', '2126.860', '-1126.319', '-89.083', '2185.330', '-934.489', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHC', 'CHC2b', 'Las Colinas', '2185.330', '-1154.589', '-89.083', '2281.449', '-934.489', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHC', 'CHC3', 'Las Colinas', '2281.449', '-1135.040', '-89.083', '2632.739', '-945.034', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHC', 'CHC4a', 'Las Colinas', '2747.739', '-1120.040', '-89.083', '2959.350', '-945.034', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHC', 'CHC4b', 'Las Colinas', '2632.739', '-1135.040', '-89.083', '2747.739', '-945.034', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VIN', 'VIN1a', 'Vinewood', '647.711', '-1416.250', '-89.083', '787.460', '-1227.280', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VIN', 'VIN1b', 'Vinewood', '647.557', '-1227.280', '-89.083', '787.460', '-1118.280', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VIN', 'VIN2', 'Vinewood', '787.460', '-1130.839', '-89.083', '952.604', '-954.661', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VIN', 'VIN3', 'Vinewood', '787.460', '-1310.209', '-89.083', '952.663', '-1130.839', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT1a', 'Downtown Los Santos', '1370.849', '-1170.869', '-89.083', '1463.900', '-1130.849', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT1b', 'Downtown Los Santos', '1378.329', '-1130.849', '-89.083', '1463.900', '-1026.329', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT1c', 'Downtown Los Santos', '1391.050', '-1026.329', '-89.083', '1463.900', '-926.999', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT3', 'Downtown Los Santos', '1370.849', '-1384.949', '-89.083', '1463.900', '-1170.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT4', 'Downtown Los Santos', '1463.900', '-1290.869', '-89.083', '1724.760', '-1150.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT5', 'Downtown Los Santos', '1463.900', '-1430.869', '-89.083', '1724.760', '-1290.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT6', 'Downtown Los Santos', '1724.760', '-1250.900', '-89.083', '1812.619', '-1150.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT7', 'Downtown Los Santos', '1724.760', '-1430.869', '-89.083', '1812.619', '-1250.900', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDT', 'LDT8', 'Downtown Los Santos', '1507.510', '-1385.209', '110.916', '1582.550', '-1325.310', '335.915');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GLN', 'GLN1', 'Glen Park', '1812.619', '-1350.719', '-89.083', '2056.860', '-1100.819', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GLN', 'GLN1b', 'Glen Park', '1812.619', '-1100.819', '-89.083', '1994.329', '-973.380', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GLN', 'GLN2a', 'Glen Park', '1812.619', '-1449.670', '-89.083', '1996.910', '-1350.719', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LFL', 'LFL1a', 'Los Flores', '2581.729', '-1454.349', '-89.083', '2632.830', '-1393.420', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LFL', 'LFL1b', 'Los Flores', '2581.729', '-1393.420', '-89.083', '2747.739', '-1135.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MKT', 'MKT1', 'Market', '1072.660', '-1416.250', '-89.083', '1370.849', '-1130.849', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MKT', 'MKT2', 'Market', '926.921', '-1577.589', '-89.083', '1370.849', '-1416.250', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MKT', 'MKT3', 'Market', '787.460', '-1416.250', '-89.083', '1072.660', '-1310.209', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MKT', 'MKT4', 'Market', '952.663', '-1310.209', '-89.083', '1072.660', '-1130.849', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MARKST', 'MARKST', 'Market Station', '787.460', '-1410.930', '-34.126', '866.008', '-1310.209', '65.873');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JEF', 'JEF1a', 'Jefferson', '2185.330', '-1210.739', '-89.083', '2281.449', '-1154.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JEF', 'JEF1b', 'Jefferson', '2056.860', '-1210.739', '-89.083', '2185.330', '-1126.319', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JEF', 'JEF2', 'Jefferson', '2056.860', '-1372.040', '-89.083', '2281.449', '-1210.739', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JEF', 'JEF3a', 'Jefferson', '1996.910', '-1449.670', '-89.083', '2056.860', '-1350.719', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JEF', 'JEF3b', 'Jefferson', '2056.860', '-1449.670', '-89.083', '2266.209', '-1372.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JEF', 'JEF3c', 'Jefferson', '2124.659', '-1494.030', '-89.083', '2266.209', '-1449.670', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD1a', 'Rodeo', '225.164', '-1684.650', '-89.083', '312.803', '-1501.949', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD1b', 'Rodeo', '225.164', '-1501.949', '-89.083', '334.502', '-1369.619', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD1c', 'Rodeo', '334.502', '-1501.949', '-89.083', '422.679', '-1406.050', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD2a', 'Rodeo', '334.502', '-1406.050', '-89.083', '466.222', '-1292.069', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD2b', 'Rodeo', '466.222', '-1385.069', '-89.083', '647.521', '-1235.069', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD3a', 'Rodeo', '312.803', '-1684.650', '-89.083', '422.679', '-1501.949', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD3b', 'Rodeo', '422.679', '-1684.650', '-89.083', '558.098', '-1570.199', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD4a', 'Rodeo', '558.098', '-1684.650', '-89.083', '647.521', '-1384.930', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD4b', 'Rodeo', '466.222', '-1570.199', '-89.083', '558.098', '-1385.069', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD4c', 'Rodeo', '422.679', '-1570.199', '-89.083', '466.222', '-1406.050', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD5a', 'Rodeo', '72.648', '-1544.170', '-89.083', '225.164', '-1404.969', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROD', 'ROD5b', 'Rodeo', '72.648', '-1684.650', '-89.083', '225.164', '-1544.170', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MAR', 'MAR1', 'Marina', '647.711', '-1577.589', '-89.083', '807.921', '-1416.250', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MAR', 'MAR2', 'Marina', '807.921', '-1577.589', '-89.083', '926.921', '-1416.250', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MAR', 'MAR3', 'Marina', '647.711', '-1804.209', '-89.083', '851.448', '-1577.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('COM', 'THALL1', 'Commerce', '1323.900', '-1842.270', '-89.083', '1701.900', '-1722.260', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('COM', 'COM1a', 'Commerce', '1323.900', '-1722.260', '-89.083', '1440.900', '-1577.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('COM', 'COM1b', 'Commerce', '1370.849', '-1577.589', '-89.083', '1463.900', '-1384.949', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('COM', 'COM2', 'Commerce', '1463.900', '-1577.589', '-89.083', '1667.959', '-1430.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('COM', 'COM3', 'Commerce', '1667.959', '-1577.589', '-89.083', '1812.619', '-1430.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('COM', 'COM4', 'Commerce', '1583.500', '-1722.260', '-89.083', '1758.900', '-1577.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELS', 'ELS1a', 'East Los Santos', '2281.449', '-1372.040', '-89.083', '2381.679', '-1135.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELS', 'ELS1b', 'East Los Santos', '2381.679', '-1454.349', '-89.083', '2462.129', '-1135.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELS', 'ELS2', 'East Los Santos', '2462.129', '-1454.349', '-89.083', '2581.729', '-1135.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELS', 'ELS3a', 'East Los Santos', '2222.560', '-1628.530', '-89.083', '2421.030', '-1494.030', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELS', 'ELS3b', 'East Los Santos', '2266.260', '-1494.030', '-89.083', '2381.679', '-1372.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELS', 'ELS3c', 'East Los Santos', '2381.679', '-1494.030', '-89.083', '2421.030', '-1454.349', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELS', 'ELS4', 'East Los Santos', '2421.030', '-1628.530', '-89.083', '2632.830', '-1454.349', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EBE', 'EBE1', 'East Beach', '2747.739', '-1498.619', '-89.083', '2959.350', '-1120.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EBE', 'EBE2a', 'East Beach', '2632.830', '-1668.130', '-89.083', '2747.739', '-1393.420', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EBE', 'EBE2b', 'East Beach', '2747.739', '-1668.130', '-89.083', '2959.350', '-1498.619', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EBE', 'EBE3c', 'East Beach', '2632.830', '-1852.869', '-89.083', '2959.350', '-1668.130', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PER1', 'PER1', 'Pershing Square', '1440.900', '-1722.260', '-89.083', '1583.500', '-1577.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('IWD', 'IWD1', 'Idlewood', '1812.619', '-1602.310', '-89.083', '2124.659', '-1449.670', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('IWD', 'IWD2', 'Idlewood', '2124.659', '-1742.310', '-89.083', '2222.560', '-1494.030', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('IWD', 'IWD3a', 'Idlewood', '1812.619', '-1852.869', '-89.083', '1971.660', '-1742.310', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('IWD', 'IWD3b', 'Idlewood', '1812.619', '-1742.310', '-89.083', '1951.660', '-1602.310', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('IWD', 'IWD4', 'Idlewood', '1951.660', '-1742.310', '-89.083', '2124.659', '-1602.310', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('IWD', 'IWD5', 'Idlewood', '1971.660', '-1852.869', '-89.083', '2222.560', '-1742.310', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GAN', 'GAN1', 'Ganton', '2222.560', '-1722.329', '-89.083', '2632.830', '-1628.530', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GAN', 'GAN2', 'Ganton', '2222.560', '-1852.869', '-89.083', '2632.830', '-1722.329', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CONF', 'CONF1a', 'Conference Center', '1073.219', '-1842.270', '-89.083', '1323.900', '-1804.209', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CONF', 'CONF1b', 'Conference Center', '1046.150', '-1804.209', '-89.083', '1323.900', '-1722.260', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CITYS', 'CITYS', 'City Hall', '-2867.850', '277.411', '-0.000', '-2593.439', '458.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LMEX', 'LMEX1a', 'Little Mexico', '1701.900', '-1842.270', '-89.083', '1812.619', '-1722.260', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LMEX', 'LMEX1b', 'Little Mexico', '1758.900', '-1722.260', '-89.083', '1812.619', '-1577.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('UNITY', 'UNITY', 'Unity Station', '1692.619', '-1971.800', '-20.492', '1812.619', '-1932.800', '79.507');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SMB', 'SMB1', 'Santa Maria Beach', '342.648', '-2173.290', '-89.083', '647.711', '-1684.650', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SMB', 'SMB2', 'Santa Maria Beach', '72.648', '-2173.290', '-89.083', '342.648', '-1684.650', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VERO', 'VERO1', 'Verona Beach', '851.448', '-1804.209', '-89.083', '1046.150', '-1577.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VERO', 'VERO3', 'Verona Beach', '1161.520', '-1722.260', '-89.083', '1323.900', '-1577.589', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VERO', 'VERO4a', 'Verona Beach', '647.711', '-2173.290', '-89.083', '930.221', '-1804.209', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VERO', 'VERO4b', 'Verona Beach', '930.221', '-2006.780', '-89.083', '1073.219', '-1804.209', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LIND', 'LIND1a', 'Willowfield', '1970.619', '-2179.250', '-89.083', '2089.000', '-1852.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LIND', 'LIND1b', 'Willowfield', '2089.000', '-2235.840', '-89.083', '2201.820', '-1989.900', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LIND', 'LIND2a', 'Willowfield', '2089.000', '-1989.900', '-89.083', '2324.000', '-1852.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LIND', 'LIND2b', 'Willowfield', '2201.820', '-2095.000', '-89.083', '2324.000', '-1989.900', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LIND', 'LIND3', 'Willowfield', '2324.000', '-2059.229', '-89.083', '2541.699', '-1852.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LIND', 'LIND4a', 'Willowfield', '2541.699', '-2059.229', '-89.083', '2703.580', '-1941.400', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LIND', 'LIND4c', 'Willowfield', '2541.699', '-1941.400', '-89.083', '2703.580', '-1852.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELCO', 'ELCO1', 'El Corona', '1692.619', '-2179.250', '-89.083', '1812.619', '-1842.270', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELCO', 'ELCO2', 'El Corona', '1812.619', '-2179.250', '-89.083', '1970.619', '-1852.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PLS', 'PLS', 'Playa del Seville', '2703.580', '-2126.899', '-89.083', '2959.350', '-1852.869', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BLUF', 'BLUF1a', 'Verdant Bluffs', '930.221', '-2488.419', '-89.083', '1249.619', '-2006.780', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BLUF', 'BLUF1b', 'Verdant Bluffs', '1073.219', '-2006.780', '-89.083', '1249.619', '-1842.270', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BLUF', 'BLUF2', 'Verdant Bluffs', '1249.619', '-2179.250', '-89.083', '1692.619', '-1842.270', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LAIR', 'LAIR1', 'Los Santos International', '1249.619', '-2394.330', '-89.083', '1852.000', '-2179.250', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LAIR', 'LAIR2a', 'Los Santos International', '1852.000', '-2394.330', '-89.083', '2089.000', '-2179.250', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LAIR', 'LAIR2b', 'Los Santos International', '1382.729', '-2730.879', '-89.083', '2201.820', '-2394.330', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LAIR', 'LBAG1', 'Los Santos International', '1974.630', '-2394.330', '-39.083', '2089.000', '-2256.590', '60.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LAIR', 'LBAG2', 'Los Santos International', '1400.969', '-2669.260', '-39.083', '2189.820', '-2597.260', '60.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LAIR', 'LBAG3', 'Los Santos International', '2051.629', '-2597.260', '-39.083', '2152.449', '-2394.330', '60.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDOC', 'LDOC1a', 'Ocean Docks', '2089.000', '-2394.330', '-89.083', '2201.820', '-2235.840', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDOC', 'LDOC1b', 'Ocean Docks', '2201.820', '-2418.330', '-89.083', '2324.000', '-2095.000', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDOC', 'LDOC2', 'Ocean Docks', '2324.000', '-2145.100', '-89.083', '2703.580', '-2059.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDOC', 'LDOC3a', 'Ocean Docks', '2324.000', '-2302.330', '-89.083', '2703.580', '-2145.100', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDOC', 'LDOC3b', 'Ocean Docks', '2201.820', '-2730.879', '-89.083', '2324.000', '-2418.330', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDOC', 'LDOC3c', 'Ocean Docks', '2703.580', '-2302.330', '-89.083', '2959.350', '-2126.899', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDOC', 'LDOC4', 'Ocean Docks', '2373.770', '-2697.090', '-89.083', '2809.219', '-2330.459', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RED', 'RED', 'Red County', '-1213.910', '-768.026', '-242.990', '2997.060', '596.348', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MONT', 'MONT', 'Montgomery', '1119.510', '119.526', '-0.000', '1451.400', '493.322', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MONT', 'MONT1', 'Montgomery', '1451.400', '347.457', '-0.000', '1582.439', '420.802', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MONINT', 'MONINT', 'Montgomery Intersection', '1546.650', '208.164', '0.000', '1745.829', '347.457', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MONINT', 'MONINT', 'Montgomery Intersection', '1582.439', '347.457', '0.000', '1664.619', '401.750', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('HBARNS', 'HBARNS', 'Hampton Barns', '603.034', '264.312', '0.000', '761.994', '366.571', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('HANKY', 'HANKY', 'Hankypanky Point', '2576.919', '62.157', '0.000', '2759.250', '385.502', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BLUAC', 'BLUAC', 'Blueberry Acres', '-319.675', '-220.136', '0.000', '104.533', '293.324', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FERN', 'FERN', 'Fern Ridge', '508.188', '-139.259', '0.000', '1306.660', '119.526', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PANOP', 'PANOP', 'The Panopticon', '-947.979', '-304.320', '-0.000', '-319.675', '327.071', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PALO', 'PALO', 'Palomino Creek', '2160.219', '-149.003', '0.000', '2576.919', '228.322', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BLUEB', 'BLUEB', 'Blueberry', '19.607', '-404.135', '0.000', '349.606', '-220.136', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BLUEB', 'BLUEB1', 'Blueberry', '104.533', '-220.136', '0.000', '349.606', '152.235', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('TOPFA', 'TOPFA', 'Hilltop Farm', '967.382', '-450.390', '-0.000', '1176.780', '-217.899', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('NROCK', 'NROCK', 'North Rock', '2285.370', '-768.026', '0.000', '2770.590', '-269.739', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('DILLI', 'DILLI', 'Dillimore', '580.794', '-674.885', '-0.000', '861.085', '-404.790', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SF', 'SF', 'San Fierro', '-2997.469', '-1115.579', '-242.990', '-1213.910', '1659.680', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BATTP', 'BATTP', 'Battery Point', '-2741.070', '1268.410', '-0.000', '-2533.040', '1490.469', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ESPN', 'ESPN1', 'Esplanade North', '-2533.040', '1358.900', '-0.000', '-1996.660', '1501.209', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ESPN', 'ESPN2', 'Esplanade North', '-1996.660', '1358.900', '-0.000', '-1524.239', '1592.510', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ESPN', 'ESPN3', 'Esplanade North', '-1982.319', '1274.260', '-0.000', '-1524.239', '1358.900', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ESPE', 'ESPE1', 'Esplanade East', '-1620.300', '1176.520', '-0.000', '-1580.010', '1274.260', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ESPE', 'ESPE2', 'Esplanade East', '-1580.010', '1025.979', '-0.000', '-1499.890', '1274.260', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ESPE', 'ESPE3', 'Esplanade East', '-1499.890', '578.395', '-79.615', '-1339.890', '1274.260', '20.384');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JUNIHO', 'JUNIHO', 'Juniper Hollow', '-2533.040', '968.369', '-0.000', '-2274.169', '1358.900', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFDWT', 'SFDWT1', 'Downtown', '-1982.319', '744.169', '-0.000', '-1871.719', '1274.260', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFDWT', 'SFDWT2', 'Downtown', '-1871.719', '1176.420', '-0.000', '-1620.300', '1274.260', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFDWT', 'SFDWT3', 'Downtown', '-1700.010', '744.267', '-0.000', '-1580.010', '1176.520', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFDWT', 'SFDWT4', 'Downtown', '-1580.010', '744.267', '-0.000', '-1499.890', '1025.979', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFDWT', 'SFDWT5', 'Downtown', '-2078.669', '578.395', '-0.000', '-1499.890', '744.267', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFDWT', 'SFDWT6', 'Downtown', '-1993.280', '265.243', '-0.000', '-1794.920', '578.395', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PARA', 'PARA', 'Paradiso', '-2741.070', '793.411', '-0.000', '-2533.040', '1268.410', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CALT', 'CALT', 'Calton Heights', '-2274.169', '744.169', '-0.000', '-1982.319', '1358.900', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FINA', 'FINA', 'Financial', '-1871.719', '744.169', '-0.000', '-1701.300', '1176.420', '300.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BAYV', 'BAYV', 'Palisades', '-2994.489', '458.411', '-0.000', '-2741.070', '1339.609', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JUNIHI', 'JUNIHI', 'Juniper Hill', '-2533.040', '578.395', '-0.000', '-2274.169', '968.369', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CHINA', 'CHINA', 'Chinatown', '-2274.169', '578.395', '-0.000', '-2078.669', '744.169', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CIVI', 'CIVI', 'Santa Flora', '-2741.070', '458.411', '-0.000', '-2533.040', '793.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('WESTP', 'WESTP1', 'Queens', '-2533.040', '458.411', '0.000', '-2329.310', '578.395', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('WESTP', 'WESTP2', 'Queens', '-2593.439', '54.722', '0.000', '-2411.219', '458.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('WESTP', 'WESTP3', 'Queens', '-2411.219', '373.539', '0.000', '-2253.540', '458.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CITYS', 'CITYS', 'City Hall', '-2867.850', '277.411', '-0.000', '-2593.439', '458.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('THEA', 'THEA1', 'King's', '-2329.310', '458.411', '-0.000', '-1993.280', '578.395', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('THEA', 'THEA2', 'King's', '-2411.219', '265.243', '-0.000', '-1993.280', '373.539', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('THEA', 'THEA3', 'King's', '-2253.540', '373.539', '-0.000', '-1993.280', '458.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EASB', 'EASB1', 'Easter Basin', '-1794.920', '249.904', '-0.000', '-1242.979', '578.395', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EASB', 'EASB2', 'Easter Basin', '-1794.920', '-50.096', '-0.000', '-1499.890', '249.904', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GARC', 'GARC', 'Garcia', '-2411.219', '-222.589', '-0.000', '-2173.040', '265.243', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GARC', 'SFGLF3', 'Garcia', '-2395.139', '-222.589', '-0.000', '-2354.090', '-204.792', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CRANB', 'CRANB', 'Cranberry Station', '-2007.829', '56.306', '0.000', '-1922.000', '224.781', '100.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('OCEAF', 'OCEAF1', 'Ocean Flats', '-2994.489', '277.411', '-0.000', '-2867.850', '458.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('OCEAF', 'OCEAF2', 'Ocean Flats', '-2994.489', '-222.589', '-0.000', '-2593.439', '277.411', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('OCEAF', 'OCEAF3', 'Ocean Flats', '-2994.489', '-430.276', '-0.000', '-2831.889', '-222.589', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('HASH', 'HASH', 'Hashbury', '-2593.439', '-222.589', '-0.000', '-2411.219', '54.722', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('DOH', 'DOH1', 'Doherty', '-2270.040', '-324.114', '-0.000', '-1794.920', '-222.589', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('DOH', 'DOH2', 'Doherty', '-2173.040', '-222.589', '-0.000', '-1794.920', '265.243', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFBAG2', 'Easter Bay Airport', '-1315.420', '-405.388', '15.406', '-1264.400', '-209.542', '25.406');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFBAG3', 'Easter Bay Airport', '-1354.390', '-287.398', '15.406', '-1315.420', '-209.542', '25.406');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFBAG1', 'Easter Bay Airport', '-1490.329', '-209.542', '15.406', '-1264.400', '-148.388', '25.406');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFAIR1', 'Easter Bay Airport', '-1794.920', '-730.117', '-0.000', '-1213.910', '-50.096', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFAIR2', 'Easter Bay Airport', '-1242.979', '-50.096', '0.000', '-1213.910', '578.395', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFAIR3', 'Easter Bay Airport', '-1499.890', '-50.096', '-0.000', '-1242.979', '249.904', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFAIR4', 'Easter Bay Airport', '-1213.910', '-730.117', '0.000', '-1132.819', '-50.096', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SFAIR', 'SFAIR5', 'Easter Bay Airport', '-1213.910', '-50.096', '-0.000', '-947.979', '578.395', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FLINTC', 'FLINTC', 'Flint County', '-1213.910', '-2892.969', '-242.990', '44.614', '-768.026', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CUNTC', 'CUNTC1', 'Avispa Country Club', '-2470.040', '-355.493', '0.000', '-2270.040', '-318.493', '46.099');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CUNTC', 'CUNTC2', 'Avispa Country Club', '-2831.889', '-430.276', '-0.000', '-2646.399', '-222.589', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CUNTC', 'CUNTC3', 'Avispa Country Club', '-2550.040', '-355.493', '0.000', '-2470.040', '-318.493', '39.700');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CUNTC', 'SFGLF1', 'Avispa Country Club', '-2361.510', '-417.199', '0.000', '-2270.040', '-355.493', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CUNTC', 'SFGLF2', 'Avispa Country Club', '-2667.810', '-302.135', '-28.830', '-2646.399', '-262.320', '71.169');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CUNTC', 'SFGLF4', 'Avispa Country Club', '-2646.399', '-355.493', '0.000', '-2270.040', '-222.589', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('HAUL', 'HAUL', 'Fallen Tree', '-792.254', '-698.554', '-0.000', '-452.403', '-380.042', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('HILLP', 'HILLP', 'Missionary Hill', '-2994.489', '-811.276', '0.000', '-2178.689', '-430.276', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EBAY', 'EBAY', 'Easter Bay Chemical', '-1132.819', '-768.026', '0.000', '-956.476', '-578.117', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('EBAY', 'EBAY2', 'Easter Bay Chemical', '-1132.819', '-787.390', '0.000', '-956.476', '-768.026', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ETUNN', 'ETUNN', 'Easter Tunnel', '-1709.709', '-833.033', '-0.000', '-1446.010', '-730.117', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SILLY', 'SILLY1', 'Foster Valley', '-2178.689', '-1115.579', '0.000', '-1794.920', '-599.883', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SILLY', 'SILLY2', 'Foster Valley', '-2178.689', '-1250.969', '0.000', '-1794.920', '-1115.579', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SILLY', 'SILLY3', 'Foster Valley', '-2270.040', '-430.276', '-0.000', '-2178.689', '-324.114', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SILLY', 'SILLY4', 'Foster Valley', '-2178.689', '-599.883', '-0.000', '-1794.920', '-324.114', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FARM', 'FARM', 'The Farm', '-1209.670', '-1317.099', '114.981', '-908.161', '-787.390', '251.981');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BEACO', 'BEACO', 'Beacon Hill', '-399.632', '-1075.520', '-1.489', '-319.032', '-977.515', '198.511');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FLINTI', 'FLINTI', 'Flint Intersection', '-187.699', '-1596.760', '-89.083', '17.063', '-1276.599', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FLINTR', 'FLINTR', 'Flint Range', '-594.190', '-1648.550', '0.000', '-187.699', '-1276.599', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LEAFY', 'LEAFY', 'Leafy Hollow', '-1166.969', '-1856.030', '0.000', '-815.624', '-1602.069', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BACKO', 'BACKO', 'Back o Beyond', '-1166.969', '-2641.189', '0.000', '-321.743', '-1856.030', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('WHET', 'WHET', 'Whetstone', '-2997.469', '-2892.969', '-242.990', '-1213.910', '-1115.579', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MTCHI', 'MTCHI1', 'Mount Chiliad', '-2994.489', '-2189.909', '-47.916', '-2178.689', '-1115.579', '576.083');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MTCHI', 'MTCHI2', 'Mount Chiliad', '-2178.689', '-1771.660', '-47.916', '-1936.119', '-1250.969', '576.083');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MTCHI', 'MTCHI3', 'Mount Chiliad', '-2997.469', '-1115.579', '-47.916', '-2178.689', '-971.913', '576.083');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MTCHI', 'MTCHI4', 'Mount Chiliad', '-2178.689', '-2189.909', '-47.916', '-2030.119', '-1771.660', '576.083');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CREEK', 'CREEK', 'Shady Creeks', '-1820.640', '-2643.679', '-0.000', '-1226.780', '-1771.660', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CREEK', 'CREEK1', 'Shady Creeks', '-2030.119', '-2174.889', '-0.000', '-1820.640', '-1771.660', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SHACA', 'SHACA', 'Shady Cabin', '-1632.829', '-2263.439', '-0.000', '-1601.329', '-2231.790', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ANGPI', 'ANGPI', 'Angel Pine', '-2324.939', '-2584.290', '-0.000', '-1964.219', '-2212.110', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VE', 'VE', 'Las Venturas', '869.460', '596.348', '-242.990', '2997.060', '2993.870', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('YBELL', 'YBELL1', 'Yellow Bell Golf Course', '1117.400', '2723.229', '-89.083', '1457.459', '2863.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('YBELL', 'YBELL2', 'Yellow Bell Golf Course', '1457.459', '2723.229', '-89.083', '1534.560', '2863.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SPIN', 'SPIN', 'Spinybed', '2121.399', '2663.169', '-89.083', '2498.209', '2861.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('KACC', 'KACC', 'K.A.C.C. Military Fuels', '2498.209', '2626.550', '-89.083', '2749.899', '2861.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PRP', 'PRP1', 'Prickle Pine', '1534.560', '2583.229', '-89.083', '1848.400', '2863.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PRP', 'PRP2', 'Prickle Pine', '1117.400', '2507.229', '-89.083', '1534.560', '2723.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PRP', 'PRP3', 'Prickle Pine', '1848.400', '2553.489', '-89.083', '1938.800', '2863.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PRP', 'PRP4', 'Prickle Pine', '1938.800', '2624.229', '-89.083', '2121.399', '2861.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('YELLOW', 'YELLOW', 'Yellow Bell Station', '1377.479', '2600.429', '-21.926', '1492.449', '2687.360', '78.073');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN1', 'Julius Thruway North', '2498.209', '2542.550', '-89.083', '2685.159', '2626.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN2', 'Julius Thruway North', '2237.399', '2542.550', '-89.083', '2498.209', '2663.169', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN3', 'Julius Thruway North', '2121.399', '2508.229', '-89.083', '2237.399', '2663.169', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN4', 'Julius Thruway North', '1938.800', '2508.229', '-89.083', '2121.399', '2624.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN5', 'Julius Thruway North', '1534.560', '2433.229', '-89.083', '1848.400', '2583.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN6', 'Julius Thruway North', '1848.400', '2478.489', '-89.083', '1938.800', '2553.489', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN7', 'Julius Thruway North', '1377.390', '2433.229', '-89.083', '1534.560', '2507.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTN', 'JTN8', 'Julius Thruway North', '1704.589', '2342.830', '-89.083', '1848.400', '2433.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PINT', 'PINT', 'Pilson Intersection', '1098.390', '2243.229', '-89.083', '1377.390', '2507.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ISLE', 'ISLE', 'The Emerald Isle', '2011.939', '2202.760', '-89.083', '2237.399', '2508.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROCE', 'ROCE1', 'Roca Escalante', '2237.399', '2202.760', '-89.083', '2536.429', '2542.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROCE', 'ROCE2', 'Roca Escalante', '2536.429', '2202.760', '-89.083', '2625.159', '2442.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('WWE', 'WWE', 'Whitewood Estates', '883.307', '1726.219', '-89.083', '1098.310', '2507.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('WWE', 'WWE1', 'Whitewood Estates', '1098.310', '1726.219', '-89.083', '1197.390', '2243.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('OVS', 'OVS', 'Old Venturas Strip', '2162.389', '2012.180', '-89.083', '2685.159', '2202.760', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CREE', 'CREE', 'Creek', '2749.899', '1937.250', '-89.083', '2921.620', '2669.790', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REDE', 'REDE1', 'Redsands East', '1817.390', '2011.829', '-89.083', '2106.699', '2202.760', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REDE', 'REDE2', 'Redsands East', '1817.390', '2202.760', '-89.083', '2011.939', '2342.830', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REDE', 'REDE3', 'Redsands East', '1848.400', '2342.830', '-89.083', '2011.939', '2478.489', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REDW', 'REDW1', 'Redsands West', '1297.469', '2142.860', '-89.083', '1777.390', '2243.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REDW', 'REDW2', 'Redsands West', '1236.630', '1883.109', '-89.083', '1777.390', '2142.860', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REDW', 'REDW3', 'Redsands West', '1377.390', '2243.229', '-89.083', '1704.589', '2433.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REDW', 'REDW4', 'Redsands West', '1704.589', '2243.229', '-89.083', '1777.390', '2342.830', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('HGP', 'HGP', 'Harry Gold Parkway', '1777.390', '863.231', '-89.083', '1817.390', '2342.830', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('STRIP', 'STRIP1', 'The Strip', '2027.400', '863.229', '-89.083', '2087.389', '1703.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('STRIP', 'STRIP2', 'The Strip', '2106.699', '1863.229', '-89.083', '2162.389', '2202.760', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTW', 'JTW1', 'Julius Thruway West', '1197.390', '1163.390', '-89.083', '1236.630', '2243.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTW', 'JTW2', 'Julius Thruway West', '1236.630', '2142.860', '-89.083', '1297.469', '2243.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VISA', 'VISA1', 'The Visage', '1817.390', '1863.229', '-89.083', '2106.699', '2011.829', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VISA', 'VISA2', 'The Visage', '1817.390', '1703.229', '-89.083', '2027.400', '1863.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('STAR', 'STAR1', 'Starfish Casino', '2162.389', '1883.229', '-89.083', '2437.389', '2012.180', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('STAR', 'STAR2', 'Starfish Casino', '2437.389', '1783.229', '-89.083', '2685.159', '2012.180', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('STAR', 'CONST1', 'Starfish Casino', '2437.389', '1858.099', '-39.083', '2495.090', '1970.849', '60.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RING', 'RING', 'The Clown's Pocket', '2162.389', '1783.229', '-89.083', '2437.389', '1883.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SRY', 'SRY', 'Sobell Rail Yards', '2749.899', '1548.989', '-89.083', '2923.389', '1937.250', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTE', 'JTE1', 'Julius Thruway East', '2685.159', '1055.959', '-89.083', '2749.899', '2626.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTE', 'JTE2', 'Julius Thruway East', '2623.179', '943.234', '-89.083', '2749.899', '1055.959', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTE', 'JTE3', 'Julius Thruway East', '2625.159', '2202.760', '-89.083', '2685.159', '2442.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTE', 'JTE4', 'Julius Thruway East', '2536.429', '2442.550', '-89.083', '2685.159', '2542.550', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BFLD', 'BFLD1', 'Blackfield', '964.390', '1203.219', '-89.083', '1197.390', '1403.219', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BFLD', 'BFLD2', 'Blackfield', '964.390', '1403.219', '-89.083', '1197.390', '1726.219', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CALI', 'CALI1', 'Caligula's Palace', '2087.389', '1543.229', '-89.083', '2437.389', '1703.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CALI', 'CALI2', 'Caligula's Palace', '2137.399', '1703.229', '-89.083', '2437.389', '1783.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VAIR', 'VAIR1', 'Las Venturas Airport', '1236.630', '1203.280', '-89.083', '1457.369', '1883.109', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VAIR', 'VAIR2', 'Las Venturas Airport', '1457.369', '1203.280', '-89.083', '1777.390', '1883.109', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VAIR', 'VAIR3', 'Las Venturas Airport', '1457.369', '1143.209', '-89.083', '1777.400', '1203.280', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VAIR', 'LVBAG', 'Las Venturas Airport', '1515.810', '1586.400', '-12.500', '1729.949', '1714.560', '87.500');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PIRA', 'PIRA', 'Pirates in Men's Pants', '1817.390', '1469.229', '-89.083', '2027.400', '1703.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROY', 'ROY', 'Royal Casino', '2087.389', '1383.229', '-89.083', '2437.389', '1543.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PILL', 'PILL1', 'Pilgrim', '2437.389', '1383.229', '-89.083', '2624.399', '1783.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PILL', 'PILL2', 'Pilgrim', '2624.399', '1383.229', '-89.083', '2685.159', '1783.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LST', 'LST', 'Linden Station', '2749.899', '1198.989', '-89.083', '2923.389', '1548.989', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LINDEN', 'LINDEN', 'Linden Station', '2811.250', '1229.589', '-39.594', '2861.250', '1407.589', '60.405');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('HIGH', 'HIGH', 'The High Roller', '1817.390', '1283.229', '-89.083', '2027.390', '1469.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('STRIP', 'STRIP3', 'The Strip', '2027.400', '1783.229', '-89.083', '2162.389', '1863.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('STRIP', 'STRIP4', 'The Strip', '2027.400', '1703.229', '-89.083', '2137.399', '1783.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PINK', 'PINK', 'The Pink Swan', '1817.390', '1083.229', '-89.083', '2027.390', '1283.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CAM', 'CAM', 'The Camel's Toe', '2087.389', '1203.229', '-89.083', '2640.399', '1383.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GGC', 'GGC1', 'Greenglass College', '964.390', '1044.689', '-89.083', '1197.390', '1203.219', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GGC', 'GGC2', 'Greenglass College', '964.390', '930.890', '-89.083', '1166.530', '1044.689', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDS', 'LDS', 'Linden Side', '2749.899', '943.234', '-89.083', '2923.389', '1198.989', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LVA', 'LVA1', 'LVA Freight Depot', '1457.390', '863.229', '-89.083', '1777.400', '1143.209', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LVA', 'LVA2', 'LVA Freight Depot', '1375.599', '919.447', '-89.083', '1457.369', '1203.280', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LVA', 'LVA3', 'LVA Freight Depot', '1277.050', '1087.630', '-89.083', '1375.599', '1203.280', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LVA', 'LVA4', 'LVA Freight Depot', '1315.349', '1044.689', '-89.083', '1375.599', '1087.630', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LVA', 'LVA5', 'LVA Freight Depot', '1236.630', '1163.410', '-89.083', '1277.050', '1203.280', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('DRAG', 'DRAG', 'The Four Dragons Casino', '1817.390', '863.231', '-89.083', '2027.390', '1083.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LOT', 'LOT', 'Come-A-Lot', '2087.389', '943.234', '-89.083', '2623.179', '1203.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BINT', 'BINT1', 'Blackfield Intersection', '1166.530', '795.010', '-89.083', '1375.599', '1044.689', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BINT', 'BINT2', 'Blackfield Intersection', '1197.390', '1044.689', '-89.083', '1277.050', '1163.390', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BINT', 'BINT3', 'Blackfield Intersection', '1277.050', '1044.689', '-89.083', '1315.349', '1087.630', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BINT', 'BINT4', 'Blackfield Intersection', '1375.599', '823.228', '-89.083', '1457.390', '919.447', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTS', 'JTS1', 'Julius Thruway South', '1457.390', '823.228', '-89.083', '2377.389', '863.229', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('JTS', 'JTS2', 'Julius Thruway South', '2377.389', '788.893', '-89.083', '2537.389', '897.901', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BFC', 'BFC1', 'Blackfield Chapel', '1375.599', '596.348', '-89.083', '1558.089', '823.228', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BFC', 'BFC2', 'Blackfield Chapel', '1325.599', '596.348', '-89.083', '1375.599', '795.010', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RIE', 'RIE', 'Randolph Industrial Estate', '1558.089', '596.348', '-89.083', '1823.079', '823.234', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LDM', 'LDM', 'Last Dime Motel', '1823.079', '596.348', '-89.083', '1997.219', '823.228', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RSE', 'RSE', 'Rockshore East', '2537.389', '676.549', '-89.083', '2902.350', '943.234', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('RSW', 'RSW1', 'Rockshore West', '1997.219', '596.348', '-89.083', '2377.389', '823.228', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROBAD', 'ROBAD', 'Tierra Robada', '-2997.469', '1659.680', '-242.990', '-480.539', '2993.870', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROBAD', 'ROBAD1', 'Tierra Robada', '-1213.910', '596.348', '-242.990', '-480.539', '1659.680', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELQUE', 'ELQUE', 'El Quebrados', '-1645.229', '2498.520', '0.000', '-1372.140', '2777.850', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUNNN', 'SUNNN', 'Bayside', '-2741.070', '2175.149', '0.000', '-2353.169', '2722.790', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BYTUN', 'BYTUN', 'Bayside Tunnel', '-2290.189', '2548.290', '-89.083', '-1950.189', '2723.290', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ALDEA', 'ALDEA', 'Aldea Malvada', '-1372.140', '2498.520', '0.000', '-1277.589', '2615.350', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SUNMA', 'SUNMA', 'Bayside Marina', '-2353.169', '2275.790', '0.000', '-2153.169', '2475.790', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BARRA', 'BARRA', 'Las Barrancas', '-926.130', '1398.729', '-0.000', '-719.234', '1634.689', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ROBINT', 'ROBINT', 'Robada Intersection', '-1119.010', '1178.930', '-89.083', '-862.025', '1351.449', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BONE', 'BONE', 'Bone County', '-480.539', '596.348', '-242.990', '869.460', '2993.870', '900.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PAYAS', 'PAYAS', 'Las Payasadas', '-354.332', '2580.360', '0.000', '-133.625', '2816.820', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VALLE', 'VALLE', 'Valle Ocultado', '-936.668', '2611.439', '0.000', '-715.960', '2847.899', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELCA', 'ELCA', 'El Castillo del Diablo', '-464.515', '2217.679', '0.000', '-208.570', '2580.360', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELCA', 'ELCA1', 'El Castillo del Diablo', '-208.570', '2123.010', '-0.000', '114.032', '2337.179', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ELCA', 'ELCA2', 'El Castillo del Diablo', '-208.570', '2337.179', '0.000', '8.429', '2487.179', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('ARCO', 'ARCO', 'Arco del Oeste', '-901.129', '2221.860', '0.000', '-592.090', '2571.969', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MEAD', 'MEAD', 'Verdant Meadows', '37.032', '2337.179', '-0.000', '435.988', '2677.899', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BRUJA', 'BRUJA', 'Las Brujas', '-365.166', '2123.010', '-0.000', '-208.570', '2217.679', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('TOM', 'TOM', 'Regular Tom', '-405.769', '1712.859', '-0.000', '-276.718', '1892.750', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('REST', 'REST', 'Restricted Area', '-91.585', '1655.050', '-50.000', '421.234', '2123.010', '250.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('BIGE', 'BIGE', ''The Big Ear'', '-410.019', '1403.339', '-0.000', '-137.968', '1681.229', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PALMS', 'PALMS', 'Green Palms', '176.580', '1305.449', '-0.000', '338.657', '1520.719', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('OCTAN', 'OCTAN', 'Octane Springs', '338.657', '1228.510', '0.000', '664.307', '1655.050', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('PROBE', 'PROBE', 'Lil' Probe Inn', '-90.218', '1286.849', '-0.000', '153.858', '1554.119', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('CARSO', 'CARSO', 'Fort Carson', '-376.233', '826.325', '-0.000', '123.717', '1220.439', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('QUARY', 'QUARY', 'Hunter Quarry', '337.243', '710.840', '-115.238', '860.554', '1031.709', '203.761');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('LSINL', 'LSINL', 'Los Santos Inlet', '-321.743', '-2224.429', '-89.083', '44.614', '-1724.430', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FLINW', 'FLINW', 'Flint Water', '-314.425', '-753.874', '-89.083', '-106.338', '-463.072', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FISH', 'FISH', 'Fisher's Lagoon', '1916.989', '-233.322', '-100.000', '2131.719', '13.800', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SANB', 'SANB1', 'San Fierro Bay', '-2616.399', '1501.209', '-0.000', '-1996.660', '1659.680', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SANB', 'SANB2', 'San Fierro Bay', '-2616.399', '1659.680', '-0.000', '-1996.660', '2175.149', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SHERR', 'SHERR', 'Sherman Reservoir', '-789.736', '1659.680', '-89.083', '-599.505', '1929.410', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('SASO', 'SASO', 'San Andreas Sound', '2450.389', '385.502', '-100.000', '2759.250', '562.348', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GANTB', 'GANTB', 'Gant Bridge', '-2741.449', '1659.680', '-0.000', '-2616.399', '2175.149', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GANTB', 'GANTB1', 'Gant Bridge', '-2741.070', '1490.469', '-0.000', '-2616.399', '1659.680', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('DAM', 'DAM', 'The Sherman Dam', '-968.771', '1929.410', '-0.000', '-481.126', '2155.260', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GARV', 'GARV', 'Garver Bridge', '-1339.890', '828.129', '-89.083', '-1213.910', '1057.040', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GARV', 'GARV1', 'Garver Bridge', '-1213.910', '950.021', '-89.083', '-1087.930', '1178.930', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('GARV', 'GARV2', 'Garver Bridge', '-1499.890', '696.442', '-179.615', '-1339.890', '925.353', '20.384');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('KINC', 'KINC', 'Kincaid Bridge', '-1339.890', '599.218', '-89.083', '-1213.910', '828.129', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('KINC', 'KINC1', 'Kincaid Bridge', '-1213.910', '721.111', '-89.083', '-1087.930', '950.021', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('KINC', 'KINC2', 'Kincaid Bridge', '-1087.930', '855.369', '-89.083', '-961.950', '986.281', '110.916');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FALLO', 'FALLO', 'Fallow Bridge', '434.341', '366.571', '0.000', '603.034', '555.679', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MART', 'MART', 'Martin Bridge', '-222.179', '293.324', '0.000', '-122.125', '476.464', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('MAKO', 'MAKO', 'The Mako Span', '1664.619', '401.750', '0.000', '1785.140', '567.203', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('FRED', 'FRED', 'Frederick Bridge', '2759.250', '296.501', '0.000', '2774.250', '594.757', '200.000');");
	db_query(Database, "INSERT INTO `SA_ZONES` (`ZONE`, `PART`, `NAME`, `MIN_X`, `MIN_Y`, `MIN_Z`, `MAX_X`, `MAX_Y`, `MAX_Z`) VALUES ('VERO', 'VERO2', 'Verona Beach', '1046.15', '-1722.26', '-89.0839', '1161.52', '-1577.59', '110.916');");
	print("[DATABASE] Información de zonas insertada ...");
	
	print("[DATABASE] Ajustando zonas conquistables ...");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'BLUEB';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHC1a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHC1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHC2a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHC2b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHC3';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHC4a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHC4b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'EBE1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'EBE2a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'EBE2b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'EBE3c';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELCO2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELS1a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELS1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELS2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELS3a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELS3b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELS3c';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELS4';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'GAN1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'GAN2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'GLN1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'GLN1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'GLN2a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'IWD1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'IWD2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'IWD3a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'IWD3b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'IWD4';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'IWD5';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'JEF1a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'JEF1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'JEF2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'JEF3b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'JEF3c';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LDOC1a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LDOC1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LDOC2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LDOC3a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LDOC3b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LDOC3c';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LFL1a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LFL1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LIND1a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LIND1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LIND2a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LIND2b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LIND3';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LIND4a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LIND4c';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LMEX1a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LMEX1b';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'PLS';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'SUN1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'SUN3a';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'SUN4';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'VIN2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'DOH1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'DOH2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'EBAY';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'EBAY2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'EASB2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'HASH';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'THEA2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CHINA';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'THEA1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'SFDWT2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ESPN2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ESPN3';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'BATTP';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'SANB1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ALDEA';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'BARRA';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ARCO';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'BRUJA';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'TOM';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELCA';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ELCA1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'WWE';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'BFLD1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LVA1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'REDW3';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'REDW4';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'RSW1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'RSW2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'RSE';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LDS';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'LOT';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'PINK';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'DRAG';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CAM';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'HIGH';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'ROY';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'PIRA';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'RING';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'OVS';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'VISA1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'VISA2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CALI1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'CALI2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'STAR1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'STRIP1';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'STRIP2';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'STRIP3';");
	db_query(Database, "UPDATE `SA_ZONES` SET `GANG_ZONE` = '1' WHERE `PART` = 'STRIP4';");
	print("[DATABASE] Zonas conquistables ajustadas ...");
	
	print("[DATABASE] Base de datos creada, remueva la función 'CreateDatabase' y reinicie el servidor ...");
	return 1;
}